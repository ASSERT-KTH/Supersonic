#include <bits/stdc++.h>
#define FAST                                                                   \
  ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);                   \
  srand(time(NULL));
#define ll long long
#define pb push_back
#define ff first
#define ss second
using namespace std;
ll xx, yy, ax, bx, ay, by, xs, ys, t;
ll dist(pair<ll, ll> a, pair<ll, ll> b) {
  return abs(a.ff - b.ff) + abs(a.ss - b.ss);
}
pair<ll, ll> next(pair<ll, ll> temp) {
  return make_pair(ax * temp.ff + bx, ay * temp.ss + by);
}
int main() {
  cin >> xx >> yy >> ax >> ay >> bx >> by >> xs >> ys >> t;
  pair<ll, ll> temp, tx;
  vector<pair<ll, ll>> arr;
  ll vs = 0;
  temp = make_pair(xx, yy);
  tx = make_pair(xs, ys);
  ll dea = dist(temp, tx);
  if (dea <= t)
    arr.pb(temp);
  temp = next(temp);
  if (dist(tx, temp) > dea)
    vs = 2;
  else
    vs = 1;
  while (vs == 1 || (vs == 2 && dist(tx, temp) <= t)) {
    dea = dist(tx, temp);
    arr.push_back(temp);
    temp = next(temp);
    if (vs == 1 && dea < dist(tx, temp))
      vs = 2;
  }
  ll ans = 0;
  for (int i = 0; i < arr.size(); i++) {
    int j = i;
    ll dus = dist(tx, arr[i]);
    ll tx = dus;
    if (dus <= t) {
      while (j < arr.size() - 1 && dus <= t) {
        j++;
        dus += dist(arr[j], arr[j - 1]);
      }
      if (dus <= t)
        ans = max(ans, (ll)j - i + 1);
      else
        ans = max(ans, (ll)j - i);
      dus = tx;
      j = i;
      while (j > 0 && dus <= t) {
        j--;
        dus += dist(arr[j], arr[j + 1]);
      }
      if (dus <= t)
        ans = max(ans, (ll)i - j + 1);
      else
        ans = max(ans, (ll)i - j);
    }
  }
  cout << ans;
}
