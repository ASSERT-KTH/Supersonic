```cpp
#include <iostream>
#include <vector>
using namespace std;

bool dfs(vector<string>& mz, vector<vector<bool>>& vis, int x, int y) {
  int n = mz.size();
  int m = mz[0].size();

  if (x >= n || y >= m || mz[x][y] == '#' || vis[x][y]) {
    return false;
  }

  if (x == n - 1 && y == m - 1) {
    return true;
  }

  vis[x][y] = true;

  return dfs(mz, vis, x + 1, y) || dfs(mz, vis, x, y + 1);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n, m;
  cin >> n >> m;

  vector<string> mz(n);
  for (int i = 0; i < n; i++) {
    cin >> mz[i];
  }

  vector<vector<bool>> vis(n, vector<bool>(m, false));

  if (!dfs(mz, vis, 0, 0)) {
    cout << 0;
  } else {
    vis[0][0] = false;
    if (!dfs(mz, vis, 0, 0)) {
      cout << 1;
    } else {
      cout << 2;
    }
  }

  return 0;
}
```