#include <iostream>
#include <iomanip>
#include <cmath>
using namespace std;

double getAns(double c, double m, double p, double v, double dp[1005][1005]) {
    if (c <= 1e-14 && m <= 1e-14) {
        return 1.0;
    }
    if (dp[(int)(c * 1000)][(int)(m * 1000)] > -0.9) {
        return dp[(int)(c * 1000)][(int)(m * 1000)];
    }
    double ans = 0.0;
    if (c > 1e-14) {
        ans += c * getAns(c - v, m + min(c / 2.0, v / 2.0), p + min(c / 2.0, v / 2.0), v, dp);
    }
    if (m > 1e-14) {
        ans += m * getAns(c + min(m / 2.0, v / 2.0), m - v, p + min(m / 2.0, v / 2.0), v, dp);
    }
    ans += p;
    ans *= 1.0 + getAns(c - v, m + min(c / 2.0, v / 2.0), p + min(c / 2.0, v / 2.0), v, dp);
    ans += p;
    ans *= 1.0 / (1.0 - getAns(c - v, m + min(c / 2.0, v / 2.0), p + min(c / 2.0, v / 2.0), v, dp));
    return dp[(int)(c * 1000)][(int)(m * 1000)] = ans;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t;
    cin >> t;
    double dp[1005][1005];
    for (int i = 0; i < 1005; i++) {
        for (int j = 0; j < 1005; j++) {
            dp[i][j] = -1.0;
        }
    }
    while (t--) {
        double c, m, p, v;
        cin >> c >> m >> p >> v;
        cout << setprecision(15) << getAns(c, m, p, v, dp) << endl;
    }
    return 0;
}