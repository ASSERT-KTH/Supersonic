```cpp
#include <bits/stdc++.h>
using namespace std;

double getAns(int cntC, int cntM, double c, double m, double p, double v, vector<vector<double>>& dp) {
  double eps = 1e-14;
  if (c <= eps && m <= eps) {
    return (double)(cntC + cntM + 1);
  }
  double temp = 0;
  if (c > eps && m > eps) {
    temp += c * getAns(cntC + 1, cntM, c - v, m + min(c / 2, v / 2),
                       p + min(c / 2, v / 2), v, dp) +
            m * getAns(cntC, cntM + 1, c + min(m / 2, v / 2), m - v,
                       p + min(m / 2, v / 2), v, dp) +
            (cntC + cntM + 1) * p;
  } else if (c > eps) {
    temp += c * getAns(cntC + 1, cntM, c - v, m, p + min(c, v), v, dp) +
            (cntC + cntM + 1) * p;
  } else {
    temp += m * getAns(cntC, cntM + 1, c, m - v, p + min(m, v), v, dp) +
            (cntC + cntM + 1) * p;
  }
  return temp;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    double c, m, p, v;
    cin >> c >> m >> p >> v;
    int nc = c * 10000;
    int nm = m * 10000;
    int nv = v * 10000;
    int mx = (nc + nv - 1) / nv + (nc + nm + nv - 1) / nv + 1;
    int mc = (nc + nm + nv - 1) / nv;
    vector<vector<double>> dp(1005, vector<double>(1005, -1));
    cout << setprecision(15) << getAns(0, 0, c, m, p, v, dp) << endl;
  }
  return 0;
}
```