#include <bits/stdc++.h>
using namespace std;

double c, m, p, v;
double dp[1005][1005];
double eps = 1e-14;

double getAns(double c, double m, double p, double v) {
  if (c <= eps && m <= eps) {
    return 1.0;
  }
  
  if (dp[(int)(c * 10000)][(int)(m * 10000)] != -1) {
    return dp[(int)(c * 10000)][(int)(m * 10000)];
  }

  double temp = 0;
  if (c > eps && m > eps) {
    temp += c * getAns(c - v, m + min(c / 2, v / 2), p + min(c / 2, v / 2), v) +
            m * getAns(c + min(m / 2, v / 2), m - v, p + min(m / 2, v / 2), v) +
            p;
  } else if (c > eps) {
    temp += c * getAns(c - v, m, p + min(c, v), v) + p;
  } else {
    temp += m * getAns(c, m - v, p + min(m, v), v) + p;
  }

  dp[(int)(c * 10000)][(int)(m * 10000)] = temp;
  return temp;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    cin >> c >> m >> p >> v;
    for (int i = 0; i < 1000; i++) {
      for (int j = 0; j < 1000; j++) {
        dp[i][j] = -1;
      }
    }
    cout << setprecision(15) << getAns(c, m, p, v) << endl;
  }
  return 0;
}