#include <iostream>
#include <vector>
#include <deque>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n, q;
    cin >> n >> q;

    deque<int> deq;
    vector<pair<int, int>> v;
    int mx = -1;
    int pos;
    for (int i = 0; i < n; ++i) {
        int temp;
        cin >> temp;
        deq.push_back(temp);
        if (temp > mx) {
            mx = temp;
            pos = i;
        }
    }

    vector<int> finalarray;
    int cnt = 0;
    while (true) {
        if (deq.front() == mx) {
            while (!deq.empty()) {
                finalarray.push_back(deq.front());
                deq.pop_front();
            }
            break;
        }

        int a = deq.front();
        deq.pop_front();
        int b = deq.front();
        deq.pop_front();

        if (a > b) {
            deq.push_front(a);
            deq.push_back(b);
        } else {
            deq.push_front(b);
            deq.push_back(a);
        }

        v.push_back(make_pair(a, b));
        cnt++;
    }

    for (int i = 0; i < q; ++i) {
        int query;
        cin >> query;

        if (query <= cnt) {
            cout << v[query - 1].first << " " << v[query - 1].second << "\n";
        } else {
            query -= cnt + 1;
            query %= n - 1;
            cout << mx << " " << finalarray[query + 1] << "\n";
        }
    }

    return 0;
}