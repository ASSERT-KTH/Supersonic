#include <iostream>
#include <vector>
using namespace std;

typedef long long int lli;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    lli n;
    cin >> n;
    vector<lli> v(n + 1);
    vector<pair<lli, pair<lli, lli>>> pp;

    for (lli i = 1; i <= n; i++) {
        cin >> v[i];
    }

    v[0] = -1;
    
    for (lli i = n; i >= 1; i--) {
        if (v[i] > i) {
            lli rem = (v[i] - i) % (n + 1);
            pp.push_back(make_pair(1, make_pair(i, n + 1 - rem)));
            for (lli j = 1; j <= i; j++) {
                v[j] = v[j] + n + 1 - rem;
            }
        } else {
            pp.push_back(make_pair(1, make_pair(i, i - v[i])));
            for (lli j = 1; j <= i; j++) {
                v[j] = v[j] + i - v[i];
            }
        }
    }
    
    pp.push_back(make_pair(2, make_pair(n, n + 1)));
    cout << pp.size() << "\n";
    
    for (auto i : pp) {
        cout << i.first << " " << i.second.first << " " << i.second.second << "\n";
    }
}