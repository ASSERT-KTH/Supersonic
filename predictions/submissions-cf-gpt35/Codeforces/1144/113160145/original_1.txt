```cpp
#include <iostream>
#include <vector>
#include <map>
using namespace std;

typedef pair<int, int> pii;

const int MAXN = 200005;
vector<int> g[MAXN];
vector<int> vis(MAXN);
map<pii, int> u;

void dfs(int node, int pv) {
    vis[node] = 1;
    for (int child : g[node]) {
        if (vis[child] == 0) {
            u[{node, child}] = pv;
            u[{child, node}] = pv ^ 1;
            dfs(child, pv ^ 1);
        } else {
            if (u.find({node, child}) != u.end()) {
                if (u[{node, child}] != pv) {
                    return;
                }
            } else {
                u[{node, child}] = pv;
                u[{child, node}] = pv ^ 1;
            }
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
  
    int n, m;
    cin >> n >> m;
    vector<pii> v;
    for (int i = 0; i < m; i++) {
        int j, k;
        cin >> j >> k;
        g[j].push_back(k);
        g[k].push_back(j);
        v.push_back({j, k});
    }
    dfs(1, 0);
    bool M = false;
    for (int i = 0; i < m; i++) {
        if (u[v[i]] != 0) {
            M = true;
            break;
        }
    }
    if (M) {
        cout << "NO" << endl;
    } else {
        cout << "YES" << endl;
        for (int i = 0; i < m; i++) { 
            cout << u[v[i]];
        }
    }
    return 0;
}
```