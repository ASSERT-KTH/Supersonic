```cpp
#include <bits/stdc++.h>
using namespace std;
#define int long long
typedef unsigned long long ull;
typedef long double ld;
#define IOS                                                                    \
  ios::sync_with_stdio(0);                                                     \
  cin.tie(0);                                                                  \
  cout.tie(0);
#define PI 3.14159265
const int MOD = 1e9 + 7;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(a) (a).begin(), (a).end()
const int N = 400;
int sz[N];
int a[N], ans[N];
vector<int> v_i[N], v_e[N];
void initialize() {
  for (int i = 1; i <= N - 1; i++) {
    a[i] = i;
    sz[i] = 1;
  }
}
int root(int i) {
  while (a[i] != i) {
    a[i] = a[a[i]];
    i = a[i];
  }
  return i;
}
void merge(int x, int y) {
  int u = root(x);
  int v = root(y);
  if (sz[u] < sz[v]) {
    swap(u, v);
  }
  a[v] = a[u];
  sz[u] += sz[v];
}
int cnt[N];
int32_t main() {
  IOS;
  int n;
  cin >> n;
  initialize();
  int v[n + 1];
  for (int i = 1; i <= n; i++) {
    cin >> v[i];
  }
  string s[n + 1];
  for (int i = 0; i < n; i++) {
    cin >> s[i];
    for (int j = i+1; j < n; j++) { // optimized
      if (s[i][j] == '1') {
        if (root(i + 1) != root(j + 1)) {
          merge(i + 1, j + 1);
        }
      }
    }
  }
  for (int i = 1; i <= n; i++) {
    v_e[root(i)].pb(v[i]);
  }
  for (int i = 1; i <= n; i++) {
    sort(all(v_e[i]));
  }
  for (int i = 1; i <= n; i++) {
    int x = root(i);
    cout << v_e[x][cnt[x]++] << " ";
  }
  cout << endl;
}
```