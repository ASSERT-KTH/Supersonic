#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

int func(vector<int>& A, int pos, int M, int K) {
  if (A[pos] > M) return 0;
  int temp = M - A[pos];
  int cnt = pos;
  for (int i = pos + K; i < A.size(); i += K) {
    if (A[i] > temp) {
      for (int j = i - K + 1; j < A.size(); ++j) {
        if (A[j] <= temp) {
          temp -= A[j];
          ++cnt;
        } else {
          break;
        }
      }
      break;
    } else {
      temp -= A[i];
      cnt += K;
    }
  }
  return cnt;
}

void solve(int testNum) {
  int N, M, K;
  cin >> N >> M >> K;
  vector<int> A(N);
  for (int i = 0; i < N; ++i) {
    cin >> A[i];
  }
  sort(A.begin(), A.end());
  if (A.back() <= M) {
    cout << N << endl;
    return;
  }
  int cnt = 0;
  for (int i = 0; i < N; ++i) {
    cnt = max(cnt, func(A, i, M, K));
  }
  cout << cnt << endl;
}

int main() {
  int T;
  cin >> T;
  for (int t = 1; t <= T; ++t) {
    solve(t);
  }
  return 0;
}