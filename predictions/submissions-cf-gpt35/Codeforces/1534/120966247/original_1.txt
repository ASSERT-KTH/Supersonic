```cpp
#include <iostream>
#include <vector>
#include <unordered_set>
using namespace std;
#define int long long
const int N = 1e9 + 7;

int t, n;

vector<int> e[400005];
unordered_set<int> vis;

void dfs(int u) {
  vis.insert(u);
  for (int v : e[u]) {
    if (vis.find(v) == vis.end())
      dfs(v);
  }
}

int qmi(int cnt) {
  int x = 2, s = 1;
  while (cnt) {
    if (cnt & 1)
      s = (s * x) % N;
    x = (x * x) % N;
    cnt >>= 1;
  }
  return s;
}

signed main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  cin >> t;
  while (t--) {
    cin >> n;
    vis.clear();
    for (int i = 1; i <= n; i++) {
      e[i].clear();
    }
    for (int i = 1; i <= n; i++) {
      int a;
      cin >> a;
      e[i].push_back(a);
    }
    int cnt = 0;
    for (int i = 1; i <= n; i++) {
      if (vis.find(i) == vis.end()) {
        cnt++;
        dfs(i);
      }
    }
    cout << qmi(cnt) << "\n";
  }

  return 0;
}
```