```cpp
#include <iostream>
#include <vector>
#include <unordered_set>
using namespace std;

#define int long long
const int N = 1e9 + 7;

void dfs(int u, vector<bool>& vis, const vector<vector<int>>& e) {
    vis[u] = true;
    for (int v : e[u]) {
        if (!vis[v]) {
            dfs(v, vis, e);
        }
    }
}

int qmi(int cnt) {
    int x = 2, s = 1;
    while (cnt) {
        if (cnt & 1) {
            s = (s * x) % N;
        }
        x = (x * x) % N;
        cnt >>= 1;
    }
    return s % N;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;

        vector<int> a(n + 1);
        for (int i = 1; i <= n; i++) {
            cin >> a[i];
        }

        vector<vector<int>> e(n + 1);
        for (int i = 1; i <= n; i++) {
            int v;
            cin >> v;
            e[a[i]].push_back(v);
        }

        int cnt = 0;
        vector<bool> vis(n + 1, false);
        for (int i = 1; i <= n; i++) {
            if (!vis[a[i]]) {
                cnt++;
                dfs(a[i], vis, e);
            }
        }

        cout << qmi(cnt) << endl;
    }

    return 0;
}
```