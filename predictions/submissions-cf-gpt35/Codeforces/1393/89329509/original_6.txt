```cpp
#include <iostream>
#include <vector>
using namespace std;

void solve() {
    int n, m;
    cin >> n >> m;
    vector<vector<char>> kek(n, vector<char>(m));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> kek[i][j];
        }
    }
    vector<vector<int>> ul(n, vector<int>(m));
    vector<vector<int>> ur(n, vector<int>(m));
    vector<vector<int>> dl(n, vector<int>(m));
    vector<vector<int>> dr(n, vector<int>(m));
    for (int i = 1; i < n; i++) {
        for (int j = 1; j < m; j++) {
            if (kek[i][j] == kek[i - 1][j] && kek[i][j] == kek[i][j - 1]) {
                ul[i][j] = min(ul[i - 1][j], ul[i][j - 1]) + 1;
            }
        }
    }
    for (int i = 1; i < n; i++) {
        for (int j = m - 2; j >= 0; j--) {
            if (kek[i][j] == kek[i - 1][j] && kek[i][j] == kek[i][j + 1]) {
                ur[i][j] = min(ur[i - 1][j], ur[i][j + 1]) + 1;
            }
        }
    }
    for (int i = n - 2; i >= 0; i--) {
        for (int j = 1; j < m; j++) {
            if (kek[i][j] == kek[i + 1][j] && kek[i][j] == kek[i][j - 1]) {
                dl[i][j] = min(dl[i + 1][j], dl[i][j - 1]) + 1;
            }
        }
    }
    for (int i = n - 2; i >= 0; i--) {
        for (int j = m - 2; j >= 0; j--) {
            if (kek[i][j] == kek[i + 1][j] && kek[i][j] == kek[i][j + 1]) {
                dr[i][j] = min(dr[i + 1][j], dr[i][j + 1]) + 1;
            }
        }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            ans += min(ul[i][j], min(ur[i][j], min(dl[i][j], dr[i][j]))) + 1;
        }
    }
    cout << ans << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int q = 1;
    while (q--) {
        solve();
    }
    return 0;
}
```