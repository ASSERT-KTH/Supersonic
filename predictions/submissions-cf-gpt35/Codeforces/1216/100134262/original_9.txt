```cpp
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n, k;
  cin >> n >> k;
  string s;
  cin >> s;

  vector<int> dp(2 * n + 1, 1e18);
  dp[1] = 1;
  for (int i = 2; i <= n; i++) {
    dp[i] = dp[i - 1] + i;
  }

  for (int i = 1; i <= n; i++) {
    if (i <= k + 1 && s[i - 1] == '1') {
      dp[i + 1] = min(dp[i + 1], dp[i]);
      dp[i + k] = min(dp[i + k], dp[i]);
    } else if (s[i - 1] == '1' && i >= k + 2) {
      dp[i + 1] = min(dp[i + 1], dp[i] + i);
      dp[i + k] = min(dp[i + k], dp[i] + i);
    }
  }

  cout << dp[n] << endl;

  return 0;
}
```