#pragma GCC optimize("-Ofast")
#pragma GCC optimize("unroll-loops")
#include <algorithm>
#include <chrono>
#include <iostream>
#include <string>
#include <vector>
using namespace std;

void solve() {
    string s;
    cin >> s;
    int n = s.size();
    int ans = n + 1;
    vector<vector<int>> next(n, vector<int>(4, -1));
    next[n - 1][s[n - 1] - '0'] = n - 1;
    for (int i = n - 2; i >= 0; i--) {
        next[i] = next[i + 1];
        next[i][s[i] - '0'] = i;
        if (next[i][1] == -1 || next[i][2] == -1 || next[i][3] == -1) {
            continue;
        }
        int len;
        if (s[i] == '1') {
            len = max(next[i][2], next[i][3]) - i;
        } else if (s[i] == '2') {
            len = max(next[i][1], next[i][3]) - i;
        } else {
            len = max(next[i][1], next[i][2]) - i;
        }
        ans = min(ans, len);
    }
    if (ans == n + 1) {
        cout << 0 << endl;
    } else {
        cout << ans + 1 << endl;
    }
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    solve();
}