#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

const int maxn = 1e6 + 10;
vector<bool> prime(maxn, true);
vector<int> ans(maxn, 0);

void euler(int n) {
  prime[0] = prime[1] = false;
  for (int i = 2; i <= sqrt(n); ++i) {
    if (prime[i]) {
      for (int j = i * i; j <= n; j += i) {
        prime[j] = false;
      }
    }
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  euler(maxn - 9);
  for (int i = 1; i <= maxn; ++i) {
    ans[i] = ans[i - 1] + prime[i];
  }

  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    if (n <= 3) {
      cout << n << "\n";
      continue;
    }
    int l = 1, r = sqrt(n);
    while (l + 1 < r) {
      int mid = (r + l) / 2;
      if ((ll)mid * mid <= (ll)n) {
        l = mid;
      } else {
        r = mid;
      }
    }
    cout << ans[n] - ans[l] + 1 << "\n";
  }

  return 0;
}