#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

const int maxn = 1e6 + 10;

vector<int> prime;
vector<bool> vis(maxn, false);
vector<int> ans(maxn, 0);

void euler(int n) {
    for (int i = 2; i < n; ++i) {
        if (!vis[i])
            prime.push_back(i);
        for (int j = 0; j < prime.size() && i * prime[j] < n; ++j) {
            vis[i * prime[j]] = true;
            if (i % prime[j] == 0)
                break;
        }
    }
}

int main() {
    euler(maxn - 9);
    vis[1] = 1;
    for (int i = 1; i <= maxn; ++i)
        ans[i] = ans[i - 1] + (int)(!vis[i]);

    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        if (n <= 3) {
            cout << n << endl;
            continue;
        }
        int l = 0, r = prime.size();
        while (l + 1 < r) {
            int mid = (r + l) / 2;
            if ((ll)prime[mid] * prime[mid] <= (ll)n)
                l = mid;
            else
                r = mid;
        }
        cout << ans[n] - ans[prime[l]] + 1 << endl;
    }
    return 0;
}