#include <iostream>
#include <vector>
#include <algorithm>

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    
    int T;
    std::cin >> T;
    
    while (T--) {
        int N;
        std::cin >> N;
        
        std::vector<std::pair<int, int>> v(N);
        
        for (int i = 0; i < N; i++) {
            int M;
            std::cin >> M;
            
            std::vector<int> mx(M);
            
            for (int j = 0; j < M; j++) {
                std::cin >> mx[j];
                mx[j] = mx[j] - j + 1;
            }
            
            v[i] = { *std::max_element(mx.begin(), mx.end()), M + mx[0] };
        }
        
        std::sort(v.begin(), v.end());
        
        int start = 0;
        int end = 0;
        
        for (int i = 0; i < N; i++) {
            if (v[i].first >= end) {
                start += v[i].first - end;
                end = v[i].second;
            } else {
                end += v[i].second - v[i].first;
            }
        }
        
        std::cout << start << "\n";
    }
    
    return 0;
}