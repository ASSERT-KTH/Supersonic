#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <map>
#include <set>
#include <sstream>
#include <vector>
using namespace std;
#define rrep(i, N) for (int i = (N - 1); i >= 0; i--)
#define rep(i, N) for (int i = 0; i < (N); i++)
#define sqr(x) (x) * (x)
#define all(v) (v.begin(), v.end())
#define pb push_back
#define random (rand() << 16 ^ rand())
typedef pair<int, int> ii;
const int64_t inf = 1e18 + 7;
const int64_t mod = 1e9 + 7;
const int MAXN = 1000000;
int freq[MAXN];
int cfreq[MAXN];
bool isvalid(int, int, int, int);
int T;
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    fill(freq, freq + MAXN, 0);
    int t, b = -1, x;
    cin >> T;
    rep(t, T) {
        int k;
        cin >> k;
        freq[k]++;
        b = max(b, k);
    }
    rep(t, T) if (t > 0 && freq[t] != (t << 2)) break;
    x = t;
    int n, m, y;
    for (n = 1; n * n <= T; n++)
        if (T % n == 0) {
            m = T / n;
            y = n + m - b - x;
            if (isvalid(n, m, x, y)) {
                cout << n << " " << m << endl;
                cout << x << " " << y << endl;
                goto l1;
            } else if (isvalid(m, n, x, y)) {
                cout << m << " " << n << endl;
                cout << x << " " << y << endl;
                goto l1;
            }
        }
    cout << -1 << endl;
l1:
    return 0;
}

inline bool isvalid(int n, int m, int x, int y) {
    if (x < 1 || x > n || y < 1 || y > m)
        return false;
    fill(cfreq, cfreq + MAXN, 0);
    int i, j;
    x--;
    y--;
    rep(i, n) rep(j, m) cfreq[(abs(x - i) + abs(y - j))]++;
    rep(i, T) if (cfreq[i] != freq[i]) return false;
    return true;
}