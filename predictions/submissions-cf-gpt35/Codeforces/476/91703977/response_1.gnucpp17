#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;

#define int long long

void solve() {
  string a, b;
  cin >> a >> b;
  int apos = 0;
  for (auto i : a) {
    apos += i == '+';
    apos -= i == '-';
  }
  int bpos = 0, amb = 0;
  for (auto i : b)
    amb += i == '?';
  int diff = 0;
  int r = 0;
  for (auto i : b) {
    r += i == '+';
    r -= i == '-';
  }
  diff = apos - r;
  if (amb == 0 and diff == 0) {
    cout << 1 << endl;
    return;
  } else if (amb == 0 and diff != 0) {
    cout << 0 << endl;
    return;
  }
  int u = (amb + diff) / 2;
  int v = amb - u;
  if ((amb + diff) & 1 or (u < 0 or v < 0)) {
    cout << 0 << endl;
    return;
  }
  double q = pow(2, amb);
  double p = 1;
  for (int i = 0; i < u; i++) {
    p *= (double)(amb - i) / (amb - i + diff);
  }
  cout << fixed << setprecision(15) << p / q << endl;
}

int32_t main() {
  fastio
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  freopen("error.txt", "w", stderr);
#endif
  int t = 1;
  for (int i = 1; i <= t; i++) {
    solve();
  }
#ifndef ONLINE_JUDGE
  cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << endl;
#endif
  return 0;
}