```c++
#include <bits/stdc++.h>
using namespace std;

#define SPEED ios::sync_with_stdio(false); cin.tie(0); cout.tie(0)

#define pb push_back
#define mem(arr, val) memset(arr, val, sizeof(arr))
#define sf(x) scanf("%d", &x)
#define sf2(x, y) scanf("%d %d", &x, &y)
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sl(x) scanf("%lld", &x)
#define sl2(x, y) scanf("%lld %lld", &x, &y)
#define sl3(x, y, z) scanf("%lld %lld %lld", &x, &y, &z)
#define sd(x) scanf("%lf", &x)
#define mx 100005

typedef long long ll;
typedef pair<int, int> pii;

int vis[6000][600];
pii dp[6000][600];
int s, d;

int bfs() {
  queue<pii> q;
  q.push(make_pair(s, 0));
  vis[s][0] = 1;
  pii p;
  int f = 1, mul, sum;
  while (!q.empty()) {
    p = q.front();
    q.pop();
    for (int i = f; i < 10; i++) {
      sum = p.first;
      sum -= i;
      mul = p.second;
      mul *= 10;
      mul += i;
      mul %= d;
      if (sum == 0 && mul == 0) {
        dp[sum][mul] = make_pair(p.first, p.second);
        return 1;
      }
      if (sum >= 0 && !vis[sum][mul]) {
        vis[sum][mul] = 1;
        q.push(make_pair(sum, mul));
        dp[sum][mul] = make_pair(p.first, p.second);
      }
    }
    f = 0;
  }
  return 0;
}

void print(int sum, int mul) {
  if (sum == s && mul == 0) return;
  print(dp[sum][mul].first, dp[sum][mul].second);
  cout << dp[sum][mul].first - sum;
}

int main() {
  sf2(d, s);
  if (bfs() == 1) {
    print(0, 0);
  } else {
    cout << -1 << endl;
  }
  return 0;
}
```