```cpp
#include <iostream>
#include <vector>
#include <queue>
using namespace std;

typedef pair<int, int> pii;

const int mx = 6000;

int vis[mx][600];
pii dp[mx][600];

int bfs(int d, int s) {
    queue<pii> q;
    q.push(make_pair(s, 0));
    vis[s][0] = 1;
    pii p;
    int f = 1, mul, sum;
    while (!q.empty()) {
        p = q.front();
        q.pop();
        for (int i = f; i < 10; i++) {
            sum = p.first;
            sum -= i;
            mul = p.second;
            mul *= 10;
            mul += i;
            mul %= d;
            if (sum == 0 && mul == 0) {
                dp[sum][mul] = make_pair(p.first, p.second);
                return 1;
            }
            if (sum >= 0 && !vis[sum][mul]) {
                vis[sum][mul] = 1;
                q.push(make_pair(sum, mul));
                dp[sum][mul] = make_pair(p.first, p.second);
            }
        }
        f = 0;
    }
    return 0;
}

void print(int sum, int mul) {
    if (sum == 0 && mul == 0) {
        return;
    }
    print(dp[sum][mul].first, dp[sum][mul].second);
    cout << dp[sum][mul].first - sum;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int d, s;
    cin >> d >> s;
    if (bfs(d, s) == 1) {
        print(0, 0);
    } else {
        cout << -1 << endl;
    }
    return 0;
}
```