#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
const ll POSITIVE_INFINITY = 9223372036854775807;
const ll NEGATIVE_INFINITY = -9223372036854775807;
const ll MOD = 1000000007;
const ld PI = acos(-1.0);
const int N = 200005;
template <typename T> inline T bigMod(T A, T B, T M = MOD) {
  A %= M;
  T ret = 1;
  while (B) {
    if (B & 1)
      ret = (ret * A) % M;
    A = (A * A) % M;
    B = B >> 1;
  }
  return ret;
}
template <typename T> inline T invMod(T A, T M = MOD) {
  return bigMod(A, M - 2, M);
}
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int n;
  cin >> n;
  unordered_map<string, int> mp(n);
  while (n--) {
    string ar;
    cin >> ar;
    auto it = mp.find(ar);
    if (it == mp.end()) {
      cout << "OK\n";
      mp[ar] = 1;
    } else {
      cout << ar << it->second << "\n";
      it->second++;
    }
  }
  return 0;
}