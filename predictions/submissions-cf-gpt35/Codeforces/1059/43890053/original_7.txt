```cpp
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>

using namespace std;

typedef long double ld;

const int MAXN = 100010;
const ld EPS = 1e-9;

int n;
ld x[MAXN], y[MAXN];

bool isOk(ld k) {
  ld l = -1e17, r = 1e17;
  for (int i = 0; i < n; ++i) {
    if (y[i] > 2 * k + EPS) {
      return false;
    }
    ld tmp = sqrtl(k * k - (k - y[i]) * (k - y[i]));
    l = max(l, x[i] - tmp);
    r = min(r, x[i] + tmp);
  }
  return l < r + EPS;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  cin >> n;
  for (int i = 0; i < n; ++i) {
    cin >> x[i] >> y[i];
  }
  for (int i = 0; i < n; ++i) {
    if (y[i] * y[n - 1] < 0) {
      cout << "-1\n";
      return 0;
    } else {
      y[i] = abs(y[i]);
    }
  }
  ld l = 0, r = 1e17, mid;
  for (int i = 1; i <= 100; ++i) {
    mid = (l + r) / 2;
    if (isOk(mid)) {
      r = mid;
    } else {
      l = mid;
    }
  }
  cout.precision(10);
  cout << fixed << mid << "\n";

  return 0;
}
```
```