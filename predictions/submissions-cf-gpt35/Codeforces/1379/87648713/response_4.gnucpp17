#include <iostream>
#include <string>
#include <vector>
using namespace std;

const string p = "abacaba";

int countOccurrences(const string& s) {
  int count = 0;
  for (size_t i = 0; i <= s.size() - p.size(); i++) {
    bool match = true;
    for (size_t j = 0; j < p.size(); j++) {
      if (s[i + j] != p[j]) {
        match = false;
        break;
      }
    }
    if (match) {
      count++;
    }
  }
  return count;
}

bool isValid(const string& s) {
  for (size_t i = 0; i <= s.size() - p.size(); i++) {
    bool match = true;
    for (size_t j = 0; j < p.size(); j++) {
      if (s[i + j] != p[j] && s[i + j] != '?') {
        match = false;
        break;
      }
    }
    if (match && countOccurrences(s) == 1) {
      return true;
    }
  }
  return false;
}

string replaceQuestionMarks(const string& s) {
  string replaced = s;
  for (size_t i = 0; i <= s.size() - p.size(); i++) {
    bool match = true;
    for (size_t j = 0; j < p.size(); j++) {
      if (replaced[i + j] != p[j] && replaced[i + j] != '?') {
        match = false;
        break;
      } else if (replaced[i + j] == '?') {
        replaced[i + j] = p[j];
      }
    }
    if (match && countOccurrences(replaced) == 1) {
      for (size_t i = 0; i < replaced.size(); i++) {
        if (replaced[i] == '?') {
          replaced[i] = 'd';
        }
      }
      return replaced;
    }
  }
  return "";
}

string solve(int t) {
  string result;
  while (t--) {
    int n;
    cin >> n;
    string s;
    cin >> s;
    if (isValid(s)) {
      result += "YES\n";
      result += replaceQuestionMarks(s) + "\n";
    } else {
      result += "NO\n";
    }
  }
  return result;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int t;
  cin >> t;
  cout << solve(t);
  return 0;
}