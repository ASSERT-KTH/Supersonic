```cpp
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

typedef long long ll;

struct node {
  ll a, b;
};

int main() {
  int q;
  cin >> q;
  while (q--) {
    int n, m;
    cin >> n >> m;
    
    vector<node> f(m);
    vector<ll> A(m);
    
    for (int i = 0; i < m; i++) {
      cin >> f[i].a >> f[i].b;
      A[i] = f[i].a;
    }
    
    sort(A.begin(), A.end());
    
    vector<ll> suf(m+1, 0);
    for (int i = m-1; i >= 0; i--) {
      suf[i] = suf[i + 1] + A[i];
    }
    
    ll ans = 0;
    if (n <= m)
      ans = suf[m - n + 1];
    
    for (int i = 0; i < m; i++) {
      ll temp = 0;
      int pos = lower_bound(A.begin(), A.end(), f[i].b) - A.begin();
      if (pos <= m - n)
        continue;
      temp += suf[pos];
      int num = n - (m - pos);
      if (f[i].a < f[i].b)
        temp += f[i].a, num--;
      temp += num * f[i].b;
      ans = max(ans, temp);
    }
    
    cout << ans << endl;
  }
  
  return 0;
}
```