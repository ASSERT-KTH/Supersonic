```cpp
#include <iostream>
#include <vector>
using namespace std;

#define MAX 200007

int n, ans;
int init[MAX], goal[MAX];
vector<int> g[MAX], res;

void dfs(int node, int par, int pre, int ppre) {
  if (ppre) {
    init[node] ^= 1;
  }
  if (init[node] != goal[node]) {
    ans++;
    res.push_back(node);
    ppre ^= 1;
  }
  for (auto v : g[node]) {
    if (v == par)
      continue;
    dfs(v, node, ppre, pre);
  }
}

void solve() {
  cin >> n;
  for (int i = 0; i < n - 1; i++) {
    int a, b;
    cin >> a >> b;
    g[a].push_back(b);
    g[b].push_back(a);
  }
  for (int i = 0; i < n; i++) { 
    cin >> init[i + 1];
  }
  for (int i = 0; i < n; i++) { 
    cin >> goal[i + 1];
  }
  dfs(1, 0, 0, 0);
  cout << ans << endl;
  for (auto v : res) {
    cout << v << endl;
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  solve();
  return 0;
}
```