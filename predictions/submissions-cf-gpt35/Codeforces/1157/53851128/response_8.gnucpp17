#include <algorithm>
#include <iostream>
#include <vector>
#include <set>
#include <map>

typedef long long int ll;
using namespace std;

int main() {
  ll n;
  cin >> n;
  vector<ll> va(n), vb(n), vc(n);
  
  for (int i = 0; i < n; ++i) {
    cin >> va[i];
  }
  
  for (int i = 0; i < n; ++i) {
    cin >> vb[i];
    vb[i] %= n;
  }
  
  multiset<ll> stb;
  
  for (int i = 0; i < n; ++i) {
    stb.insert(vb[i]);
  }
  
  for (int i = 0; i < n; ++i) {
    auto it = stb.lower_bound((n - va[i]) % n);
    
    if (it != stb.end() && (*it + va[i]) % n < (*stb.begin() + va[i]) % n) {
      vc[i] = (*it + va[i]) % n;
      stb.erase(it);
    } else {
      vc[i] = (*stb.begin() + va[i]) % n;
      stb.erase(stb.begin());
    }
  }
  
  for (int i = 0; i < n; ++i) {
    cout << vc[i] << " ";
  }
  
  return 0;
}
