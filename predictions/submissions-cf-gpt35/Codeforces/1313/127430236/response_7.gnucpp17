#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    int n;
    cin >> n;
    
    vector<int> a(n + 1);
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
    }
    
    vector<int> l(n + 1);
    vector<int> r(n + 1);
    vector<int> res(n + 1);
    
    vector<int> st;
    st.push_back(0);
    
    for (int i = 1; i <= n; i++) {
        while (a[st.back()] >= a[i]) {
            st.pop_back();
        }
        
        l[i] = l[st.back()] + a[i] * (i - st.back());
        st.push_back(i);
    }
    
    st.clear();
    st.push_back(n + 1);
    
    for (int i = n; i >= 1; i--) {
        while (a[st.back()] >= a[i]) {
            st.pop_back();
        }
        
        r[i] = r[st.back()] + a[i] * (st.back() - i);
        st.push_back(i);
    }
    
    int sum = 0, pos;
    
    for (int i = 1; i <= n; i++) {
        if (sum < l[i] + r[i] - a[i]) {
            sum = l[i] + r[i] - a[i];
            pos = i;
        }
    }
    
    int minn = a[pos];
    res[pos] = a[pos];
    
    for (int i = pos - 1; i >= 1; i--) {
        minn = min(minn, a[i]);
        res[i] = minn;
    }
    
    minn = a[pos];
    
    for (int i = pos + 1; i <= n; i++) {
        minn = min(minn, a[i]);
        res[i] = minn;
    }
    
    for (int i = 1; i <= n; i++) {
        cout << res[i] << " ";
    }
    
    return 0;
}