#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  
  int n;
  cin >> n;
  
  vector<int> a(n + 1);
  vector<int> l(n + 1);
  vector<int> r(n + 1);
  vector<int> res(n + 1);
  
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
  }
  
  for (int i = 1; i <= n; i++) {
    l[i] = a[i] * i;
    for (int j = i - 1; j >= 1; j--) {
      if (a[j] <= a[i]) {
        l[i] += a[j] * (i - j);
        break;
      }
    }
  }
  
  reverse(a.begin() + 1, a.end());
  
  for (int i = 1; i <= n; i++) {
    r[i] = a[i] * i;
    for (int j = i - 1; j >= 1; j--) {
      if (a[j] <= a[i]) {
        r[i] += a[j] * (i - j);
        break;
      }
    }
  }
  
  reverse(a.begin() + 1, a.end());
  
  int sum = 0, pos;
  for (int i = 1; i <= n; i++) {
    int current_sum = l[i] + r[n - i + 1] - a[i];
    if (current_sum > sum) {
      sum = current_sum;
      pos = i;
    }
  }
  
  int minn = a[pos];
  res[pos] = a[pos];
  
  for (int i = pos - 1; i >= 1; i--) {
    minn = min(minn, a[i]);
    res[i] = minn;
  }
  
  minn = a[pos];
  
  for (int i = pos + 1; i <= n; i++) {
    minn = min(minn, a[i]);
    res[i] = minn;
  }
  
  for (int i = 1; i <= n; i++) {
    cout << res[i] << " ";
  }
  
  return 0;
}