```cpp
#include <bits/stdc++.h>
using namespace std;
typedef vector<int> VI;
typedef long long int ll;
typedef vector<ll> VLL;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
typedef double db;
typedef priority_queue<ll> maxheap;
typedef priority_queue<ll, vector<ll>, greater<ll>> minheap;
#define fastIO()                                                               \
  ios_base::sync_with_stdio(0);                                                \
  cin.tie(nullptr)
#define MOD 1000000007
#define pb push_back
#define mp make_pair
#define DOTEST(t)                                                              \
  ll t;                                                                        \
  cin >> t;                                                                    \
  while (t--)
#define TEST cout << "-------Executed--------\n";
#define all(x) x.begin(), x.end()
#define rep(i, a, n) for (ll i = a; i < n; i++)
#define per(i, a, n) for (ll i = n - 1; i >= a; i--)
ll gcd(ll a, ll b) {
  if (a < 0)
    a = -a;
  if (b < 0)
    b = -b;
  if (a < b)
    swap(a, b);
  if (b == 0)
    return a;
  if (a % b == 0)
    return b;
  return gcd(b, a % b);
}
ll lcm(ll a, ll b) {
  ll c = gcd(a, b);
  return a * b / c;
}
ll pow(ll n, ll k) {
  if (k < 0)
    return 0;
  ll ret = 1;
  ll now = n;
  while (k > 0) {
    if (k & 1)
      ret *= now;
    now *= now;
    k /= 2;
  }
  return ret;
}
ll modexp(ll n, ll k, ll md) {
  ll ret = 1;
  ll now = n;
  now %= md;
  while (k > 0) {
    if (k % 2 == 1) {
      ret *= now;
      ret %= md;
    }
    now *= now;
    now %= md;
    k /= 2;
  }
  return ret;
}
ll popcount(ll n) {
  ll ret = 0;
  ll u = n;
  while (u > 0) {
    ret += u % 2;
    u /= 2;
  }
  return ret;
}
int main() {
  fastIO();
  {
    ll n, t;
    cin >> n >> t;
    ll a[n];
    rep(i, 0, n) cin >> a[i];
    ll b[n + 1] = {0};
    ll sum = 0;
    rep(i, 0, n) {
      sum += a[i];
      b[i + 1] = sum;
    }
    int maxlen = 0;
    rep(i, 1, n + 1) {
      ll to = b[i - 1] + t;
      auto it = upper_bound(b, b + n + 1, to);
      int len = (it - b) - i;
      maxlen = max(maxlen, len);
    }
    cout << maxlen << " ";
  }
}
```