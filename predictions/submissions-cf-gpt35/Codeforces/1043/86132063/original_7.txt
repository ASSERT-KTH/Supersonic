```cpp
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  
  int tc = 1;
  while (tc--) {
    int a, b;
    cin >> a >> b;
    
    vector<pair<int, int>> v(a);
    for (int i = 0; i < a; i++) {
      cin >> v[i].first >> v[i].second;
    }
    
    sort(v.begin(), v.end(), [](const pair<int, int>& p1, const pair<int, int>& p2) {
      return p1.second - p1.first < p2.second - p2.first;
    });
    
    vector<int> suf(a), pre(a);
    suf[0] = v[0].second;
    for (int i = 1; i < a; i++) {
      suf[i] = suf[i - 1] + v[i].second;
    }
    
    pre[a - 1] = v[a - 1].first;
    for (int i = a - 2; i >= 0; i--) {
      pre[i] = pre[i + 1] + v[i].first;
    }
    
    vector<int> del(a + 1);
    for (int i = 0; i < b; i++) {
      int x, y;
      cin >> x >> y;
      
      int k = v[x - 1].second - v[x - 1].first;
      int m = v[y - 1].second - v[y - 1].first;
      
      if (m <= k) {
        del[x] += v[x - 1].first + v[y - 1].second;
        del[y] += v[x - 1].first + v[y - 1].second;
      } else {
        del[x] += v[x - 1].second + v[y - 1].first;
        del[y] += v[x - 1].second + v[y - 1].first;
      }
    }
    
    for (int i = 0; i < a; i++) {
      int ans = 0;
      int k = v[i].second - v[i].first;
      auto it = lower_bound(v.begin(), v.end(), make_pair(k, 0), 
                            [](const pair<int, int>& p1, const pair<int, int>& p2) {
                              return p1.second - p1.first < p2.first;
                            });
      int index = it - v.begin();
      
      if (index - 1 >= 0) {
        ans = suf[index - 1] + ((index - 1) * v[i].first) - v[i].second;
      }
      
      if (index < a) {
        ans += pre[index] + (a - index) * v[i].second;
      }
      
      ans -= del[i + 1];
      
      cout << ans << endl;
    }
  }
  
  return 0;
}
```