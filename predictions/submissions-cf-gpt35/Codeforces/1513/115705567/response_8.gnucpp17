#include <iostream>
#include <vector>
using namespace std;

const int MOD = 1e9 + 7;
const int N = 2 * 1e5 + 10;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  vector<vector<int>> dp(10, vector<int>(N, 0));
  for (int i = 0; i <= 9; i++) {
    dp[i][0] = 1;
  }

  for (int j = 1; j <= 200005; j++) {
    for (int i = 0; i <= 9; i++) {
      if (i != 9)
        dp[i][j] = dp[i + 1][j - 1];
      else
        dp[i][j] = (dp[0][j - 1] + dp[1][j - 1]) % MOD;
    }
  }

  int t;
  cin >> t;
  while (t--) {
    string s;
    int m;
    cin >> s >> m;
    int ans = 0;
    for (int i = 0; i < s.length(); i++) {
      ans = (ans + dp[s[i] - '0'][m]) % MOD;
    }
    cout << ans << endl;
  }
}