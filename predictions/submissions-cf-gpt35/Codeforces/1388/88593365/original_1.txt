```cpp
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

void solve() {
  int n;
  cin >> n;
  vector<int> a(n), b(n);
  for(int i = 0; i < n; i++) {
    cin >> a[i];
  }
  for(int i = 0; i < n; i++) {
    cin >> b[i];
  }
  vector<vector<int>> adj(n), adj2(n);
  vector<int> inDegree(n, 0);
  for(int i = 0; i < n; i++) {
    if(b[i] != -1) {
      adj[i].push_back(b[i] - 1);
      adj2[b[i] - 1].push_back(i);
      inDegree[b[i] - 1]++;
    }
  }
  queue<int> q;
  vector<int> ans;
  for(int i = 0; i < n; i++) {
    if(inDegree[i] == 0) {
      q.push(i);
    }
  }
  ll sum = 0;
  while(!q.empty()) {
    int u = q.front();
    q.pop();
    if(a[u] > 0) {
      ans.push_back(u);
      sum += a[u];
      if(b[u] != -1) {
        a[b[u] - 1] += a[u];
      }
    }
    else {
      ans.insert(ans.begin(), u);
      sum += a[u];
    }
    for(int v : adj[u]) {
      inDegree[v]--;
      if(inDegree[v] == 0) {
        q.push(v);
      }
    }
  }
  cout << sum << "\n";
  for(int x : ans) {
    cout << x + 1 << " ";
  }
  cout << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
  while(T--) {
    solve();
  }
  return 0;
}
```