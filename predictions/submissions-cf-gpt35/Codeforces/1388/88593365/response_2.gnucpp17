#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
#define vi vector
#define loop(i, a, b) for (ll i = a; i < b; i++)
#define For(i, n) for (int i = 0; i < (ll)n; i++)
#define Rev(i, n) for (int i = n - 1; i >= 0; i--)
#define Rep(i, n) for (int i = 1; i <= n; ++i)
#define F first
#define S second
#define pb push_back
#define em emplace_back
#define all(v) (v).begin(), (v).end()
#define sz(x) (int)(x).size()
#define mp(a, b) make_pair(a, b)

void solve() {
  int n;
  cin >> n;
  vi<int> a(n), b(n);
  For(i, n)
  cin >> a[i];
  For(i, n)
  cin >> b[i];
  vi<vi<int>> adj(n), adj2(n);
  vi<int> indegree(n);
  For(i, n) {
    if (b[i] != -1) {
      adj[i].pb(b[i] - 1);
      adj2[b[i] - 1].pb(i);
      indegree[b[i] - 1]++;
    }
  }

  queue<int> qu;
  For(i, n) {
    if (indegree[i] == 0)
      qu.push(i);
  }

  vi<int> ans;
  int sum = 0;
  while (!qu.empty()) {
    int u = qu.front();
    qu.pop();
    if (a[u] > 0) {
      ans.pb(u);
      sum += a[u];
      if (b[u] != -1) {
        a[b[u] - 1] += a[u];
      }
    }
    for (int v : adj[u]) {
      indegree[v]--;
      if (indegree[v] == 0)
        qu.push(v);
    }
  }

  vi<int> disconnected;
  For(i, n) {
    if (indegree[i]) {
      disconnected.pb(i);
    }
  }

  reverse(all(disconnected));
  for (int u : disconnected) {
    ans.pb(u);
    sum += a[u];
  }

  cout << sum << endl;
  For(i, n) {
    cout << ans[i] + 1 << " ";
  }
  cout << endl;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
  For(_, T) {
    solve();
  }
  return 0;
}