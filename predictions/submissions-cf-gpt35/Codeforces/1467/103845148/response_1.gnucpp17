#include <iostream>
#include <vector>

int countPeaks(const std::vector<int>& a, int ind) {
    int cnt = 0;
    if (ind - 1 >= 0 && ind + 1 < a.size()) {
        if ((a[ind] > a[ind + 1] && a[ind] > a[ind - 1]) || (a[ind] < a[ind - 1] && a[ind] < a[ind + 1])) {
            cnt++;
        }
    }
    return cnt;
}

int main() {
    int t;
    std::cin >> t;
    
    while (t--) {
        int n;
        std::cin >> n;
        std::vector<int> a(n);

        for (int i = 0; i < n; i++) {
            std::cin >> a[i];
        }

        int totalPeaks = 0;
        for (int i = 1; i < n - 1; i++) {
            if ((a[i] > a[i + 1] && a[i] > a[i - 1]) || (a[i] < a[i - 1] && a[i] < a[i + 1])) {
                totalPeaks++;
            }
        }

        int maxPeakDifference = 0;
        for (int i = 1; i < n - 1; i++) {
            int temp = countPeaks(a, i);
            int val = a[i];
            if (i - 1 >= 0) {
                a[i] = a[i - 1];
            }
            maxPeakDifference = std::max(maxPeakDifference, temp - countPeaks(a, i));
            if (i + 1 < n) {
                a[i] = a[i + 1];
            }
            maxPeakDifference = std::max(maxPeakDifference, temp - countPeaks(a, i));
            a[i] = val;
        }

        std::cout << totalPeaks - maxPeakDifference << std::endl;
    }

    return 0;
}