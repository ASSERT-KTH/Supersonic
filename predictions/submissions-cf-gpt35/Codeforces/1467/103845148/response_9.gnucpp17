#include <iostream>
#include <vector>
using namespace std;

int countPeaks(const vector<int>& a, int ind) {
  int cnt = 0;
  int n = a.size();
  for (int i = ind - 1; i <= ind + 1; i++) {
    if (i >= 0 && i < n) {
      if ((a[i] > a[i + 1] && a[i] > a[i - 1]) ||
          (a[i] < a[i - 1] && a[i] < a[i + 1]))
        cnt++;
    }
  }
  return cnt;
}

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<int> a(n);
    for (int i = 0; i < n; i++)
      cin >> a[i];
    
    int totalPeaks = 0;
    for (int i = 1; i < n - 1; i++) {
      if ((a[i] > a[i + 1] && a[i] > a[i - 1]) ||
          (a[i] < a[i - 1] && a[i] < a[i + 1]))
        totalPeaks++;
    }
    
    int maxPeakDifference = 0;
    for (int i = 1; i < n - 1; i++) {
      int temp = countPeaks(a, i);
      int val = a[i];
      if (i - 1 >= 0) {
        a[i] = a[i - 1];
      }
      maxPeakDifference = max(maxPeakDifference, temp - countPeaks(a, i));
      if (i + 1 < n)
        a[i] = a[i + 1];
      maxPeakDifference = max(maxPeakDifference, temp - countPeaks(a, i));
      a[i] = val;
    }
    
    cout << totalPeaks - maxPeakDifference << endl;
  }
  return 0;
}