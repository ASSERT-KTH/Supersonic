```c++
#include <iostream>
#include <vector>
#include <map>
#include <limits>

void solve() {
  int n;
  std::cin >> n;
  std::map<int, std::vector<int>> m;
  for (int i = 0; i < n; i++) {
    int val;
    std::cin >> val;
    m[val].push_back(i + 1);
  }
  int minres = std::numeric_limits<int>::max();
  for (const auto& x : m) {
    const std::vector<int>& v = x.second;
    if (v.size() > 1) {
      for (int i = 1; i < v.size(); i++) {
        if ((v[i] - v[i - 1]) > 0) {
          minres = std::min(minres, v[i] - v[i - 1] + 1);
        }
      }
    }
  }
  if (minres == std::numeric_limits<int>::max()) {
    std::cout << -1 << '\n';
  } else {
    std::cout << minres << '\n';
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int t;
  std::cin >> t;
  while (t--) {
    solve();
  }
}
```