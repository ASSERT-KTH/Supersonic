#include <iostream>
#include <vector>
#include <cmath>

bool ans(int arr[], int m, int n) {
  if (m == 0)
    return false;
  if (arr[0] == 1 || arr[m - 1] == n)
    return true;
  int c = 1;
  for (int i = 1; i < m; i++) {
    if (arr[i] == arr[i - 1] + 1)
      c++;
    else
      c = 1;
    if (c == 3) {
      return true;
    }
  }
  return false;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int n;
  std::cin >> n;

  if (n < 25) {
    std::cout << -1 << std::endl;
  } else {
    std::vector<std::vector<int>> v;
    for (int i = 1; i <= std::sqrt(n); i++) {
      if (n % i == 0) {
        std::vector<int> tempv;
        tempv.push_back(i);
        tempv.push_back(n / i);
        v.push_back(tempv);
      }
    }

    int vs = v.size();
    if (v[vs - 1][0] >= 5 && v[vs - 1][1] >= 5) {
      int r = v[vs - 1][0];
      int c = v[vs - 1][1];
      char vow[] = {'a', 'e', 'i', 'o', 'u'};
      int imain = 0;
      for (int i = 0; i < r; i++) {
        int icopy = imain % 5;
        for (int j = 0; j < c; j++) {
          std::cout << vow[icopy];
          icopy = (icopy + 1) % 5;
        }
        imain = (imain + 1) % 5;
      }
    } else {
      std::cout << -1 << std::endl;
    }
  }
  return 0;
}