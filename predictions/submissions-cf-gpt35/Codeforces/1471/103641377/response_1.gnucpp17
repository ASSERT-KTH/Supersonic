#include <bits/stdc++.h>
using namespace std;

#define boost ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define nl "\n"
#define ll long long
#define pb push_back
#define fr(i, a, n) for (ll i = a; i < n; ++i)
#define fr0(i, n) for (ll i = 0; i < n; ++i)
#define pii pair<ll, ll>
#define vi vector<ll>

const int N = 1e6 + 5;
vi dp(N);

void preprocess() {
  dp[1] = 1;
  for (int num = 1; num < N; ++num) {
    for (int i = 2; i * i <= num; ++i) {
      if (num % i == 0) {
        if (dp[num / i] % i)
          dp[num] = dp[num / i] * i;
        else
          dp[num] = dp[num / i] / i;
        break;
      }
    }
    if (dp[num] == 0)
      dp[num] = num;
  }
}

void solve() {
  int n;
  cin >> n;
  unordered_map<int, int> mp;
  vi a(n);
  fr0(i, n) cin >> a[i];
  int ans1 = 1;
  fr0(i, n) {
    mp[dp[a[i]]]++;
    ans1 = max(ans1, mp[dp[a[i]]]);
  }
  int ans2 = 0;
  for (auto it : mp) {
    if (it.second % 2 == 0 || it.first == 1)
      ans2 += it.second;
  }
  int q;
  cin >> q;
  while (q--) {
    int w;
    cin >> w;
    if (w == 0)
      cout << ans1 << nl;
    else
      cout << max(ans1, ans2) << nl;
  }
}

int main() {
  boost;
  preprocess();
  int t = 1;
  cin >> t;
  while (t--)
    solve();
  return 0;
}