```cpp
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

const int N = 2e2 + 10;

void solve() {
  int n;
  cin >> n;
  vector<int> a(n), b(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i] >> b[i];
  }

  double total = 0;
  for (int i = 0; i < n; i++) {
    total += b[i];
  }

  vector<vector<double>> dp(n + 1, vector<double>(n + 1, -1e18));
  dp[0][0] = 0;

  double ans = -1e18;
  int cap = 0;
  for (int i = 0; i < n; i++) {
    cap += a[i];
    for (int c = cap; c >= a[i]; c--) {
      for (int k = i; k >= 0; k--) {
        dp[c][k] = max(dp[c][k], dp[c - a[i]][k - 1] + b[i]);
      }
    }
  }

  for (int k = 1; k <= n; k++) {
    ans = -1e18;
    for (int c = 1; c <= cap; c++) {
      ans = max(ans, min(dp[c][k] + (total - dp[c][k]) / 2.0, (double)c));
    }
    cout << fixed << setprecision(20) << ans << " ";
  }
}

int main() {
  solve();
  return 0;
}
```