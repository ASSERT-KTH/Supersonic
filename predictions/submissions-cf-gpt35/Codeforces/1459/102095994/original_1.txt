```cpp
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <vector>
using namespace std;

int main() {
  int n;
  cin >> n;
  vector<int> a(n), b(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i] >> b[i];
  }
  double total = 0;
  for (int i = 0; i < n; i++) {
    total += b[i];
  }
  vector<vector<double>> dp(n + 1, vector<double>(total + 1, -1e18));
  dp[0][0] = 0;
  double ans = 0;
  for (int i = 0; i < n; i++) {
    for (int c = 0; c <= total; c++) {
      for (int k = 0; k <= i; k++) {
        if (c >= a[i]) {
          dp[i + 1][c] = max(dp[i + 1][c], dp[i][c - a[i]] + b[i]);
        }
      }
    }
  }
  for (int k = 0; k < n; k++) {
    ans = 0;
    for (int c = 0; c <= total; c++) {
      ans = max(ans, min(dp[k + 1][c] + (total - dp[k + 1][c]) / 2.0, (double)c));
    }
    cout << fixed << setprecision(20) << ans << " ";
  }
  return 0;
}
```