```cpp
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

inline int read() {
    char s;
    int k = 0, base = 1;
    while ((s = getchar()) != '-' && s != EOF && !(isdigit(s)))
        ;
    if (s == EOF)
        exit(0);
    if (s == '-')
        base = -1, s = getchar();
    while (isdigit(s)) {
        k = k * 10 + (s ^ '0');
        s = getchar();
    }
    return k * base;
}

int n, A, B, C, D;
int ans;
vector<int> P;
vector<int> p;
int xx;

int f(int x) {
    return A * x * x * x + B * x * x + C * x + D;
}

int qwq(int x) {
    return x - x / 2 - x / 3 - x / 5 + x / 6 + x / 10 + x / 15 - x / 30;
}

void sieve() {
    for (int i = 2; i * 2 <= n; i++) {
        if (i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 && !(p[(x = qwq(i)) >> 5] & (1 << (x & xx))))) {
            P.push_back(i);
            int j = i;
            int F1 = f(i);
            while (j <= n) {
                ans += (n / j) * F1;
                if (1LL * j * i > n)
                    break;
                j *= i;
            }
        }
        if (1LL * P.back() * i > n) {
            P.pop_back();
        }
        for (int j = 0; j < P.size() && 1LL * P[j] * i <= n; j++) {
            int x = P[j] * i;
            if ((x & 1) && x % 3 != 0 && x % 5 != 0) {
                x = qwq(x);
                p[x >> 5] |= (1 << (x & xx));
            }
            if (i % P[j] == 0)
                break;
        }
    }
    for (int i = P.back() + 1; i <= n; i++) {
        if (i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 && !(p[(x = qwq(i)) >> 5] & (1 << (x & xx))))) {
            int j = i;
            int F1 = f(i);
            while (j <= n) {
                ans += (n / j) * F1;
                if (1LL * j * i > n)
                    break;
                j *= i;
            }
        }
    }
}

int main() {
    ans = 0;
    n = read();
    A = read();
    B = read();
    C = read();
    D = read();
    xx = (1 << 6) - 1;
    p.resize(2500000 / 32 + 2);
    sieve();
    cout << ans;
    return 0;
}
```