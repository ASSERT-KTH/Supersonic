```cpp
#include <iostream>
#include <vector>
#define ll long long
using namespace std;

unsigned int n, A, B, C, D;
unsigned int ans;
unsigned int F;

inline unsigned int f(unsigned int x) {
  return A * x * x * x + B * x * x + C * x + D;
}

unsigned int qwq(int x) {
  return (unsigned int)(x - x / 2 - x / 3 - x / 5 + x / 6 + x / 10 + x / 15 - x / 30);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  ans = 0;
  unsigned int i, j, x, F1;
  bool flag = false;
  cin >> n;
  cin >> A >> B >> C >> D;
  int xx = (1 << 6) - 1;

  vector<bool> p(2500000 + 2, false);
  vector<unsigned int> P;
  unsigned int l = 0;

  for (i = 2; i * 2 <= n; i++) {
    if (i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 && !p[qwq(i)])) {
      if (!flag) {
        ++l;
        P.push_back(i);
      }
      j = i;
      F1 = f(i);
      while (j <= n) {
        ans += (n / j) * F1;
        if ((ll)j * (ll)i > n) break;
        j *= i;
      }
    }
    if ((ll)P[l] * i > n) {
      flag = true;
    }
    while ((ll)P[l] * i > n) l--;
    for (j = 1; j <= l && (ll)P[j] * i <= n; j++) {
      x = P[j] * i;
      if ((x & 1) && x % 3 != 0 && x % 5 != 0) {
        p[qwq(x)] = true;
      }
      if (i % P[j] == 0) break;
    }
  }
  for (; i <= n; i++) {
    if (i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 && !p[qwq(i)])) {
      j = i;
      F1 = f(i);
      while (j <= n) {
        ans += (n / j) * F1;
        if ((ll)j * i > n) break;
        j *= i;
      }
    }
  }
  cout << ans;
  return 0;
}
```