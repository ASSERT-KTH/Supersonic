```cpp
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

inline long long read() {
    char s;
    long long k = 0, base = 1;
    while ((s = getchar()) != '-' && s != EOF && !(isdigit(s)));
    if (s == EOF)
        exit(0);
    if (s == '-')
        base = -1, s = getchar();
    while (isdigit(s)) {
        k = k * 10 + (s ^ '0');
        s = getchar();
    }
    return k * base;
}

unsigned int n, A, B, C, D;
unsigned int ans;
unsigned int F;
vector<unsigned int> p;
vector<unsigned int> P;
unsigned int l;

inline unsigned int f(unsigned int x) {
    return A * x * x * x + B * x * x + C * x + D;
}

unsigned int qwq(int x) {
    return (unsigned int)(x - x / 2 - x / 3 - x / 5 + x / 6 + x / 10 + x / 15 - x / 30);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    ans = 0;
    unsigned int i, j, x, F1;
    bool flag = false;
    n = read();
    A = read(), B = read(), C = read(), D = read();
    int xx = (1 << 6) - 1;
    for (i = 2; i * 2 <= n; i++) {
        if (i == 2 || i == 3 || i == 5 ||
            ((i & 1) && i % 3 != 0 && i % 5 != 0 && !(p[(x = qwq(i)) >> 5] & ((unsigned int)1 << (x & xx))))) {
            if (!flag) {
                ++l;
                P.push_back(i);
            }
            j = i;
            F1 = f(i);
            while (j <= n) {
                ans += (n / j) * F1;
                if ((long long)j * (long long)i > n)
                    break;
                j *= i;
            }
        }
        if ((long long)P[l] * i > n) {
            flag = true;
        }
        while ((long long)P[l] * i > n)
            l--;
        for (j = 1; j <= l && (long long)P[j] * i <= n; j++) {
            x = P[j] * i;
            if ((x & 1) && x % 3 != 0 && x % 5 != 0) {
                x = qwq(x);
                p[x >> 5] |= (unsigned int)1 << (x & xx);
            }
            if (i % P[j] == 0)
                break;
        }
    }
    for (; i <= n; i++) {
        if (i == 2 || i == 3 || i == 5 ||
            ((i & 1) && i % 3 != 0 && i % 5 != 0 && !(p[(x = qwq(i)) >> 5] & ((unsigned int)1 << (x & xx))))) {
            j = i;
            F1 = f(i);
            while (j <= n) {
                ans += (n / j) * F1;
                if ((long long)j * i > n)
                    break;
                j *= i;
            }
        }
    }
    cout << ans;
    return 0;
}
```