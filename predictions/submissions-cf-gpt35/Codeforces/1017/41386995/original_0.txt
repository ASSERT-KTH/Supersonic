```cpp
#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long

using namespace std;

inline ll read() {
  char s;
  ll k = 0, base = 1;
  while ((s = getchar()) != '-' && s != EOF && !(isdigit(s)))
    ;
  if (s == EOF)
    exit(0);
  if (s == '-')
    base = -1, s = getchar();
  while (isdigit(s)) {
    k = k * 10 + (s ^ '0');
    s = getchar();
  }
  return k * base;
}

unsigned int n, A, B, C, D;
unsigned int ans;
unsigned int F;
vector<unsigned int> p;
vector<unsigned int> P;

inline unsigned int f(unsigned int x) {
  return A * x * x * x + B * x * x + C * x + D;
}

unsigned int qwq(int x) {
  return (unsigned int)(x - x / 2 - x / 3 - x / 5 + x / 6 + x / 10 + x / 15 - x / 30);
}

int main() {
  ans = 0;
  unsigned int i, j, x, F1;
  bool flag = false;
  n = read();
  A = read(), B = read(), C = read(), D = read();
  int xx = (1 << 6) - 1;
  for (i = 2; i * 2 <= n; i++) {
    if (i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 && !(p[(x = qwq(i)) >> 5] & ((unsigned int)1 << (x & xx))))) {
      if (!flag) {
        P.push_back(i);
      }
      j = i;
      F1 = f(i);
      while (j <= n) {
        ans += (n / j) * F1;
        if ((ll)j * (ll)i > n)
          break;
        j *= i;
      }
    }
    if ((ll)P[P.size() - 1] * i > n) {
      flag = true;
    }
    while ((ll)P[P.size() - 1] * i > n) {
      P.pop_back();
    }
    for (j = 0; j < P.size() && (ll)P[j] * i <= n; j++) {
      x = P[j] * i;
      if ((x & 1) && x % 3 != 0 && x % 5 != 0) {
        x = qwq(x);
        if (p.size() < x / 32 + 1) {
          p.resize(x / 32 + 1, 0);
        }
        p[x / 32] |= (unsigned int)1 << (x % 32);
      }
      if (i % P[j] == 0)
        break;
    }
  }
  for (; i <= n; i++) {
    if (i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 && !(p[(x = qwq(i)) >> 5] & ((unsigned int)1 << (x & xx))))) {
      j = i;
      F1 = f(i);
      while (j <= n) {
        ans += (n / j) * F1;
        if ((ll)j * i > n)
          break;
        j *= i;
      }
    }
  }
  cout << ans;
  return 0;
}
```