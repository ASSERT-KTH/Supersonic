```cpp
#include <iostream>
#include <unordered_set>
using namespace std;

typedef long long ll;

ll BSDK() {
  int n, m, a;
  unordered_set<int> s;
  cin >> n >> m;
  for (int j = 0; j < n; j++) {
    cin >> a;
    s.insert(a);
  }
  for (int j = 0; j < m; j++) {
    cin >> a;
    s.insert(a);
  }
  return n + m - s.size();
}

int main() {
  int t;
  cin >> t;
  for (int i = 0; i < t; i++) {
    cout << BSDK() << endl;
  }
}
```
I replaced `set<int>` with `unordered_set<int>` since unordered set has an average constant-time complexity for insertions and lookups, whereas set has a logarithmic complexity. I also changed `scanf` and `printf` to `cin` and `cout` for faster I/O.