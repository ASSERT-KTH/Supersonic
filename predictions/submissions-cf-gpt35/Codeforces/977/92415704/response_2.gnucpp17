#include <bits/stdc++.h>
using namespace std;

vector<int> v[200010];
bool vis[200010];

void bfs(int u, int& nn, int& ne) {
  vis[u] = true;
  queue<int> q;
  q.push(u);
  while (!q.empty()) {
    u = q.front();
    q.pop();
    nn++;
    if (v[u].size() == 2)
      ne++;
    vis[u] = true;
    for (int i = 0; i < v[u].size(); i++) {
      int p = v[u][i];
      if (!vis[p]) {
        vis[p] = true;
        q.push(p);
      }
    }
  }
}

int main() {
  int n, m, a, b, c = 0;
  scanf("%d %d", &n, &m);
  while (m--) {
    scanf("%d %d", &a, &b);
    v[a].push_back(b);
    v[b].push_back(a);
  }
  for (int i = 1; i <= n; i++) {
    if (!vis[i]) {
      int nn = 0, ne = 0;
      bfs(i, nn, ne);
      if (nn == ne)
        c++;
    }
  }
  printf("%d\n", c);
  return 0;
}