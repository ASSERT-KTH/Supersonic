#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;

const int N = 29;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  int n, m;
  long long k;
  cin >> n >> m >> k;

  vector<vector<long long>> grid(n + 1, vector<long long>(m + 1));
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= m; ++j) {
      cin >> grid[i][j];
    }
  }

  long long ans = 0;
  int num = (n + m - 2 + 1) / 2;

  vector<unordered_map<long long, int>> mp(n + 1, unordered_map<long long, int>());

  for (int i = 0; i < (1 << num); ++i) {
    int row = 1, col = 1;
    long long x = grid[row][col];
    for (int j = 0; j < num; ++j) {
      if (i & (1 << j)) {
        ++row;
      } else {
        ++col;
      }
      x ^= grid[row][col];
    }
    ++mp[row][x];
  }

  num = n + m - 2 - num;

  for (int i = 0; i < (1 << num); ++i) {
    int row = n, col = m;
    long long x = grid[row][col];
    for (int j = 0; j < num; ++j) {
      if (i & (1 << j)) {
        --row;
      } else {
        --col;
      }
      if (row < 1 || col < 1) {
        break;
      }
      x ^= grid[row][col];
    }
    if (row >= 1 && col >= 1) {
      x ^= grid[row][col];
      ans += mp[row][x ^ k];
    }
  }

  cout << ans << endl;

  return 0;
}