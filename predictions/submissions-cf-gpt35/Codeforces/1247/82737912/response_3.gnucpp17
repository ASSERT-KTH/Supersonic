#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pb push_back
#define mod 1000000007
#define endl "\n"
void solve() {
  int n, m;
  cin >> n >> m;
  vector<string> arr(n);
  for (int i = 0; i < n; i++) cin >> arr[i];
  vector<vector<ll>> dp(m, vector<ll>(2, 0));
  for (int i = n - 1; i >= 0; i--) {
    vector<vector<ll>> cum(m, vector<ll>(2, 0));
    for (int j = m - 1; j >= 0; j--) {
      cum[j][0] = cum[j][1] = 0;
      if (j != m - 1) {
        cum[j][0] += cum[j + 1][0];
        cum[j][1] += cum[j + 1][1];
      }
      if (arr[i][j] == 'R') cum[j][0]++;
      if (arr[i][j] == 'R') cum[j][1]++;
      if (i == n - 1 && j == m - 1) {
        if (arr[i][j] == 'R') dp[j][0] = 0;
        else dp[j][0] = 1;
        dp[j][1] = 0;
      } else if (i == n - 1) {
        if (arr[i][j] == 'R') dp[j][0] = 0;
        else dp[j][0] = dp[j + 1][0];
        dp[j][1] = 0;
      } else if (j == m - 1) {
        if (arr[i][j] == 'R') dp[j][1] = 0;
        else dp[j][1] = dp[j][0];
        dp[j][0] = 0;
      } else {
        dp[j][0] =
            (((dp[j + 1][0] + dp[j][1]) % mod) -
             ((cum[j][0] < n - i) ? dp[m - cum[j][0]][1] : 0) + mod) % mod;
        dp[j][1] =
            (((dp[j][0] + dp[j + 1][1]) % mod) -
             ((cum[j][1] < n - i) ? dp[m - cum[j][1]][0] : 0) + mod) % mod;
      }
    }
  }
  cout << dp[0][1] << endl;
}
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t = 1;
  while (t--) solve();
  return 0;
}