```cpp
#include <iostream>
#include <vector>
using namespace std;

long long int f(int i, int k, int z, const vector<int>& arr, vector<vector<long long int>>& dp) {
    if (k == 0 || i < 0)
        return 0;
    if (dp[i][z] != -1)
        return dp[i][z];
    
    long long int left = 0;
    long long int right = 0;
    if (z > 0) {
        left = f(i - 1, k - 1, z - 1, arr, dp);
    }
    right = f(i + 1, k - 1, z, arr, dp);
    dp[i][z] = arr[i] + max(left, right);
    return dp[i][z];
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    cin >> t;
    while (t--) {
        int n, k, z;
        cin >> n >> k >> z;
        
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        
        vector<vector<long long int>> dp(n, vector<long long int>(z + 1, -1));
        long long int ans = arr[0] + f(1, k, z, arr, dp);
        cout << ans << endl;
    }

    return 0;
}
```