#include <bits/stdc++.h>
using namespace std;

bool lef = true;
long long int dp[100001][6];

long long int f(int i, int k, int z, int arr[]) {
  if (k == 0 || i < 0)
    return 0;
  long long int left = 0;
  long long int right = 0;
  if (dp[i][z])
    return dp[i][z];
  if (z && lef) {
    lef = false;
    left = f(i - 1, k - 1, z - 1, arr);
  }
  lef = true;
  right = f(i + 1, k - 1, z, arr);
  dp[i][z] = arr[i] + max(left, right);
  return arr[i] + max(left, right);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int t;
  cin >> t;
  while (t--) {
    int n, k, z;
    cin >> n >> k >> z;
    long long int ans = 0;
    int arr[n];
    for (int i = 0; i < n; i++) {
      cin >> arr[i];
    }
    ans = arr[0] + f(1, k, z, arr);
    cout << ans << endl;
    memset(dp, 0, sizeof(dp));
  }

  return 0;
}