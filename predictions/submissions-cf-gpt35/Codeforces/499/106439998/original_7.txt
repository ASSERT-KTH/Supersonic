```cpp
#include <iostream>
#include <unordered_map>
#include <vector>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;

    unordered_map<string, string> mp;
    vector<string> v(m);
    
    for (int i = 0; i < m; i++) {
        string x, y;
        cin >> x >> y;
        mp[x] = (x.length() <= y.length()) ? x : y;
        v[i] = x;
    }

    for (int i = 0; i < n; i++) {
        string z;
        cin >> z;
        auto it = mp.find(z);
        if (it != mp.end()) {
            cout << it->second << " ";
        }
    }

    return 0;
}
```

Explanation:
1. Replaced `map` with `unordered_map` for faster retrieval.
2. Removed the unnecessary inclusion of `<bits/stdc++.h>`.
3. Avoided the use of `using namespace std;` to improve code clarity.
4. Removed the `continue` statement as it is not needed.
5. Use `unordered_map::find` instead of iterating over `vector v` to find the mapping for `z`.
```