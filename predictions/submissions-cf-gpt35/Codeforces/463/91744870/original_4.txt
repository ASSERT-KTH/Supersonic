```cpp
#include <iostream>
#include <vector>
#include <map>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

pll ans[2]; // Store the coordinates of the maximum sum elements
vector<ll> sum(2); // Store the maximum sums

void update(int c, int i, int j, ll val) {
  if (val > sum[c]) {
    sum[c] = val;
    ans[c].first = i;
    ans[c].second = j;
  }
}

void solve() {
  ll n;
  cin >> n;
  vector<vector<ll>> a(n, vector<ll>(n)); // Use a vector instead of an array
  sum[0] = sum[1] = -1;
  map<ll, ll> cnt, cnt1;
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      cin >> a[i][j];
      cnt[i + j] += a[i][j];
      cnt1[i - j] += a[i][j];
    }
  }
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      update((i + j) % 2, i, j, cnt[i + j] + cnt1[i - j] - a[i][j]);
    }
  }
  cout << sum[0] + sum[1] << "\n";
  for (auto it : ans) {
    cout << it.first + 1 << " " << it.second + 1 << " ";
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  solve();
  return 0;
}
```