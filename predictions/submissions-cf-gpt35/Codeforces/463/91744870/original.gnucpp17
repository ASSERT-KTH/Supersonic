#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<ll> vi;
typedef vector<bool> vb;
#define mp make_pair
#define pb push_back
#define eb emplace_back
#define sq(x) ((x) * (x))
#define fo(i, n) for (int i = 0; i < n; i++)
#define fp(i, k, n) for (int i = k; i < n; i++)
#define Fo(i, n) for (int i = 1; i <= n; i++)
#define all(x) x.begin(), x.end()
#define allr(x) x.rbegin(), x.rend()
#define deb(x) cout << #x << "=" << x << "\n"
#define deb2(x, y) cout << #x << "=" << x << " " << #y << "=" << y << "\n"
#define fi first
#define se second
const double pi = 3.14159265358979323846;
#define uni(c) (c).resize(unique(all(c)) - (c).begin())
#define fast                                                                   \
  ios_base::sync_with_stdio(0);                                                \
  cin.tie(NULL)
void cp() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}
pll ans[2];
vi sum(2);
void update(int c, int i, int j, ll val) {
  if (val > sum[c]) {
    sum[c] = val;
    ans[c].fi = i;
    ans[c].se = j;
  }
}
void solve() {
  ll n;
  cin >> n;
  ll a[n][n];
  sum[0] = sum[1] = -1;
  map<ll, ll> cnt, cnt1;
  fo(i, n) fo(j, n) cin >> a[i][j], cnt[i + j] += a[i][j],
      cnt1[i - j] += a[i][j];
  fo(i, n) {
    fo(j, n) { update((i + j) % 2, i, j, cnt[i + j] + cnt1[i - j] - a[i][j]); }
  }
  cout << sum[0] + sum[1] << "\n";
  for (auto it : ans) {
    cout << it.fi + 1 << " " << it.se + 1 << " ";
  }
}
int main() {
  fast;
  ll t = 1;
  while (t--)
    solve();
  return 0;
}
