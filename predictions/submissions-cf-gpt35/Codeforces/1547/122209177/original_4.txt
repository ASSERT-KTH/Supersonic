```cpp
#include <iostream>
#include <vector>
#include <algorithm>

int gcd(int a, int b) {
    if (b == 0)
        return a;
    return gcd(b, a % b);
}

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    int t;
    std::cin >> t;

    while (t--) {
        int n;
        std::cin >> n;

        std::vector<int> a(2 * n + 1);
        for (int i = 1; i <= n; i++) {
            std::cin >> a[i];
            a[i + n] = a[i];
        }

        std::vector<int> seg_tree(4 * n + 5, 0);
        std::vector<int> prefix_gcd(n + 1, 0);

        for (int i = 1; i <= 2 * n; i++) {
            prefix_gcd[i] = gcd(prefix_gcd[i - 1], a[i]);
        }

        for (int i = 1; i <= n; i++) {
            int r = 2 * n, l = i + 1, temp = n + 1, cnt = 0;

            if (a[i] == prefix_gcd[n]) {
                continue;
            }

            while (l <= r) {
                int mid = (l + r) / 2;
                int x = prefix_gcd[mid];
                int y = gcd(x, a[i]);

                if (y == prefix_gcd[n]) {
                    temp = std::min(temp, mid - l + 1 + cnt);
                    r = mid - 1;
                } else {
                    a[i] = gcd(a[i], x);
                    cnt += mid - l + 1;
                    l = mid + 1;
                }
            }

            ans = std::max(ans, temp);
        }

        std::cout << ans << "\n";
    }

    return 0;
}
```