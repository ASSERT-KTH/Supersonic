```cpp
#include <iostream>
#include <vector>
using namespace std;

int gcd(int a, int b) {
    if (b == 0)
        return a;
    return gcd(b, a % b);
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;

        vector<int> a(2 * n + 1);
        for (int i = 1; i <= n; i++) {
            cin >> a[i];
            a[i + n] = a[i];
        }

        vector<int> seg_tree(4 * n + 5, 0);
        for (int i = 1; i <= 2 * n; i++) {
            seg_tree[i] = a[i];
        }

        for (int i = n - 1; i >= 1; i--) {
            seg_tree[i] = gcd(seg_tree[i * 2], seg_tree[i * 2 + 1]);
        }

        int ans = 0, g = 0;
        for (int i = 1; i <= n; i++) {
            g = gcd(g, a[i]);
        }

        for (int i = 1; i <= n; i++) {
            int r = 2 * n, l = i + 1, temp = n + 1, cnt = 0;
            if (a[i] == g)
                continue;
            while (l <= r) {
                int mid = (l + r) / 2;
                int x = seg_tree[l];
                int y = gcd(x, a[i]);
                if (y == g) {
                    temp = min(temp, mid - l + 1 + cnt);
                    r = mid - 1;
                } else {
                    a[i] = gcd(a[i], x);
                    cnt += mid - l + 1;
                    l = mid + 1;
                }
            }
            ans = max(ans, temp);
        }

        cout << ans << endl;
    }

    return 0;
}
```