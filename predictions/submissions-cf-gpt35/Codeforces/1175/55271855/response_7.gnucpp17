#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    vector<int> A((1 << 19), 0);
    for (int i = 0; i < n; i++) {
        int x, y;
        cin >> x >> y;
        A[x] = max(A[x], y);
    }
    for (int i = 1; i < (1 << 19); i++) {
        A[i] = max(A[i], A[i - 1]);
    }
    vector<vector<int>> dp((1 << 19), vector<int>(19, 0));
    for (int i = 0; i < (1 << 19); i++) {
        dp[i][0] = A[i];
    }
    for (int j = 1; j < 19; j++) {
        for (int i = 0; i < (1 << 19); i++) {
            dp[i][j] = dp[dp[i][j - 1]][j - 1];
        }
    }
    while (m--) {
        int l, r, nb = 0, x;
        scanf("%d %d", &l, &r);
        for (int j = 18; j >= 0; j--) {
            if (dp[l][j] < r) {
                nb += (1 << j);
                l = dp[l][j];
            }
        }
        if (dp[l][0] >= r)
            nb++;
        else
            nb = -1;
        cout << nb << endl;
    }
    return 0;
}