#include <algorithm>
#include <climits>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <vector>
#define LSOne(S) ((S) & -(S))
const long long P = 1e9 + 7;
const double EPS = 1e-11;
using namespace std;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int n, max_value = 0;
    cin >> n;
    vector<long long> v(n), cnt(2e5 + 1, 0), dp(2e5 + 1, 0);
    for (int i = 0; i < n; i++) {
      cin >> v[i];
      cnt[v[i]]++;
      max_value = max(max_value, v[i]);
    }
    sort(v.begin(), v.end());
    dp[1] = cnt[1];
    for (int i = 2; i <= max_value; i++) {
      if (cnt[i] == 0)
        continue;
      dp[i] = max(dp[i], dp[1]);
      for (int j = 2 * i; j <= max_value; j += i) {
        dp[j] = max(dp[j], dp[i]);
      }
      dp[i] += cnt[i];
    }
    cout << n - *max_element(dp.begin(), dp.end()) << '\n';
  }
}
