```
#include <algorithm>
#include <climits>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <tuple>
#include <vector>
#define LSOne(S) ((S) & -(S))
const long long P = 1e9 + 7;
const double EPS = 1e-11;
using namespace std;

const int MAXN = 2e5 + 1;
vector<long long> cnt(MAXN, 0);
vector<long long> dp(MAXN, 0);

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    fill(cnt.begin(), cnt.end(), 0);
    fill(dp.begin(), dp.end(), 0);
    for (int i = 0, x; i < n; ++i) {
      cin >> x;
      ++cnt[x];
    }
    long long best = 0;
    for (int i = 1; i < MAXN; ++i) {
      dp[i] += cnt[i];
      for (int j = 2 * i; j < MAXN; j += i) {
        dp[j] = max(dp[j], dp[i]);
      }
      best = max(best, dp[i]);
    }
    cout << n - best << '\n';
  }
}

```