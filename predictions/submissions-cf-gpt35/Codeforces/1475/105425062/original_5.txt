```c++
#include <algorithm>
#include <climits>
#include <cmath>
#include <iostream>
#include <vector>

using namespace std;

const int MAXN = 2e5 + 1;
vector<long long> cnt(MAXN, 0);
vector<long long> dp(MAXN, 0);
const long long P = 1e9 + 7;
const double EPS = 1e-11;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<long long> v(n);
    for (int i = 0; i < n; i++) {
      cin >> v[i];
      cnt[v[i]]++;
    }
    sort(v.begin(), v.end());
    long long best = 0;
    for (int i = 1; i < MAXN; i++) {
      if (cnt[i] == 0)
        continue;
      for (int j = 2; j <= sqrt(i); j++) {
        if (i % j == 0) {
          dp[i] = max(dp[i], max(dp[j], dp[i / j]));
        }
      }
      dp[i] = max(dp[i], dp[1]);
      dp[i] += cnt[i];
      best = max(best, dp[i]);
    }
    cout << n - best << '\n';
    cnt.assign(MAXN, 0);
    dp.assign(MAXN, 0);
  }
}
```
I removed unnecessary header files, inlined macro `LSOne`, and removed unnecessary code. I also moved the initialization of `cnt` and `dp` outside the loop to avoid unnecessary memory allocation.