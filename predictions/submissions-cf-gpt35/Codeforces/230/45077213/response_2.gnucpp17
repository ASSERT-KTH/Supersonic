#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>
using namespace std;

vector<bool> flag(1000010, true);
vector<long long> primes;

void sieve();
bool isPerfectSquare(long long num);

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  
  sieve();
  
  int n;
  cin >> n;
  
  for (int i = 0; i < n; i++) {
    long long a;
    cin >> a;
    
    if (isPerfectSquare(a) && flag[sqrt(a)])
      cout << "YES\n";
    else
      cout << "NO\n";
  }
  
  return 0;
}

void sieve() {
  flag[0] = flag[1] = false;
  
  for (long long i = 2; i <= 1000000; i++) {
    if (flag[i]) {
      primes.push_back(i);
      
      for (long long j = i * i; j <= 1000000; j += i) {
        flag[j] = false;
      }
    }
  }
}

bool isPerfectSquare(long long num) {
  long long sqrtNum = sqrt(num);
  return sqrtNum * sqrtNum == num;
}