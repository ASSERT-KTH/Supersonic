```cpp
#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>
using namespace std;
bool isPrime(long long n);
int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  int n;
  long long a;
  vector<long long> primes;
  primes.reserve(80000); // Reserve memory for primes to avoid frequent reallocation
  for (long long i = 2; i <= 1000000; i++) {
    if (isPrime(i)) {
      primes.push_back(i);
    }
  }
  cin >> n;
  for (int i = 0; i < n; i++) {
    cin >> a;
    long long b = sqrt(a);
    if (b * b != a || !binary_search(primes.begin(), primes.end(), b)) {
      cout << "NO\n";
    } else {
      cout << "YES\n";
    }
  }
  return 0;
}
bool isPrime(long long n) {
  if (n < 2)
    return false;
  if (n == 2 || n == 3)
    return true;
  if (n % 2 == 0 || n % 3 == 0)
    return false;
  for (long long i = 5; i * i <= n; i += 6) {
    if (n % i == 0 || n % (i + 2) == 0)
      return false;
  }
  return true;
}
```
