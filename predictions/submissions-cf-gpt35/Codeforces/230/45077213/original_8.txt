```cpp
#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>
using namespace std;

const int MAX = 1000010;
bool flag[MAX];
vector<int> primes;

void Prem();
bool isPerfectSquare(long long n);

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);

  Prem();

  int n;
  cin >> n;
  for (int i = 0; i < n; i++) {
    long long a;
    cin >> a;

    if (isPerfectSquare(a) && binary_search(primes.begin(), primes.end(), sqrt(a))) {
      cout << "YES\n";
    } else {
      cout << "NO\n";
    }
  }

  return 0;
}

void Prem() {
  fill(flag, flag + MAX, true);
  flag[0] = flag[1] = false;

  for (int i = 2; i * i < MAX; i++) {
    if (flag[i]) {
      for (int j = i * i; j < MAX; j += i) {
        flag[j] = false;
      }
    }
  }

  for (int i = 2; i < MAX; i++) {
    if (flag[i]) {
      primes.push_back(i);
    }
  }
}

bool isPerfectSquare(long long n) {
  long long sqrtN = sqrt(n);
  return sqrtN * sqrtN == n;
}
```
