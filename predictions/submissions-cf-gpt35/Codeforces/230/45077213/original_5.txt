```cpp
#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>
using namespace std;

const int MAX_N = 1000010;
bool flag[MAX_N];
vector<int> primes;

void sieve() {
  fill(flag, flag + MAX_N, true);
  flag[0] = flag[1] = false;
  for (int i = 2; i < MAX_N; i++) {
    if (flag[i]) {
      primes.push_back(i);
      for (int j = i + i; j < MAX_N; j += i) {
        flag[j] = false;
      }
    }
  }
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);

  sieve();

  int n;
  cin >> n;
  for (int i = 0; i < n; i++) {
    long long a;
    cin >> a;
    int b = sqrt(a);
    if (b * b == a && binary_search(primes.begin(), primes.end(), b)) {
      cout << "YES\n";
    } else {
      cout << "NO\n";
    }
  }

  return 0;
}
```