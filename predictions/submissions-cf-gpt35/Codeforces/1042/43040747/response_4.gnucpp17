#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> pll;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  ll n, t;
  cin >> n >> t;
  vector<ll> v(n);
  for (int i = 0; i < n; ++i) {
    cin >> v[i];
  }

  vector<ll> prefixSum(n);
  prefixSum[0] = v[0];
  for (int i = 1; i < n; ++i) {
    prefixSum[i] = prefixSum[i - 1] + v[i];
  }

  ll ans = 0;
  vector<pll> pairs;
  for (int i = 0; i < n; ++i) {
    for (int j = i; j < n; ++j) {
      ll sum = prefixSum[j] - (i == 0 ? 0 : prefixSum[i - 1]);
      if (sum <= t) {
        ans++;
        pairs.push_back({i + 1, j + 1});
      }
    }
  }

  cout << ans << endl;
  for (const auto& p : pairs) {
    cout << p.first << " " << p.second << endl;
  }

  return 0;
}