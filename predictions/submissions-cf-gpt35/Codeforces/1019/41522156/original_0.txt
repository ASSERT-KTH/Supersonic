```cpp
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <iostream>
#include <vector>

constexpr int B = 5;
constexpr int MAXN = 2180;

std::vector<int64_t> x(MAXN), y(MAXN);
std::vector<float> nx(B, std::vector<float>(MAXN)), ny(B, std::vector<float>(MAXN));
std::vector<float> a(B, std::vector<float>(MAXN));
std::vector<int64_t> Nx(MAXN), Ny(MAXN);
std::vector<int64_t> A(MAXN);

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);

    int n;
    int64_t S;
    std::cin >> n >> S;
    S *= 2L;

    for (int i = 0; i < n; ++i) {
        std::cin >> x[i] >> y[i];
    }

    for (int s = 0; s < n; ++s) {
        for (int i = s + 1; i < n; ++i) {
            Nx[i] = x[i] - x[s];
            Ny[i] = y[i] - y[s];
        }

        for (int i = s + 1; i < n; ++i) {
            int Xi = Nx[i], Yi = Ny[i];
            int ind = 0;

            for (int j = i + 1; j < n; ++j) {
                int64_t t = Nx[j] * Yi - Ny[j] * Xi;

                if (t == S || t == -S) {
                    ind += j;
                }
            }

            if (ind > 0) {
                for (int j = i + 1; j < n; ++j) {
                    int64_t t = Nx[j] * Yi - Ny[j] * Xi;

                    if (t == S || t == -S) {
                        std::cout << "Yes\n";
                        std::cout << x[s] << " " << y[s] << "\n";
                        std::cout << x[i] << " " << y[i] << "\n";
                        std::cout << x[j] << " " << y[j] << "\n";
                        return 0;
                    }
                }
            }
        }
    }

    std::cout << "No\n";
    return 0;
}
```