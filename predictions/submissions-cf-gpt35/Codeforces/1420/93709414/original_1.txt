```c++
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ld long double
#define PB push_back
#define sz(s) (int)s.size()
const int mod = 1000000007;
const int N = 2e6 + 5;

void solve() {
  int n, q;
  cin >> n >> q;
  vector<int> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }
  int i = 0;
  int ans = 0;
  vector<int> x;
  while (i < n) {
    while (i + 1 < n and a[i] < a[i + 1])
      i++;
    x.PB(a[i]);
    while (i + 1 < n and a[i] > a[i + 1])
      i++;
    x.PB(a[i]);
    i++;
  }
  for (int i = 0; i < sz(x) - 1; i += 2) {
    ans += x[i % sz(x)] - x[(i + 1) % sz(x)];
  }
  cout << ans << endl;
}

int32_t main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  int T;
  cin >> T;
  while (T--) {
    solve();
  }
  return 0;
}
``` 

I removed unnecessary macros and functions. I replaced the `forn` and `nfor` macros with simple for loops. I also simplified the loop that calculates the answer by using modular arithmetic.