```c++
#include <iostream>
#include <unordered_set>
using namespace std;

const int base = 257;
const int mod = 1e9 + 7;
const int N = 1e6;

long long f[N];

void init() {
    f[0] = 1;
    for (int i = 1; i < N; i++)
        f[i] = (f[i - 1] * base) % mod;
}

int get_hash(const string& s) {
    int val = 0;
    for (char c : s) {
        val = (val * base + c) % mod;
    }
    return val;
}

bool check(const string& t, const unordered_set<int>& st) {
    int val = get_hash(t);
    int size = t.size();
    for (int i = 0; i < size; i++) {
        for (char j = 'a'; j <= 'c'; j++) {
            if (j != t[i]) {
                int new_val = ((j - t[i]) * f[size - i - 1] + val) % mod;
                if (st.count(new_val)) {
                    return true;
                }
            }
        }
    }
    return false;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    init();

    int n, m;
    cin >> n >> m;

    unordered_set<int> st;
    for (int i = 0; i < n; i++) {
        string s;
        cin >> s;
        st.insert(get_hash(s));
    }

    for (int i = 0; i < m; i++) {
        string t;
        cin >> t;
        cout << (check(t, st) ? "YES" : "NO") << endl;
    }

    return 0;
}
```