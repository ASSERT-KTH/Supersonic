#include <iostream>
#include <vector>
#include <cstring>
using namespace std;

const int MAX_N = 300005;
vector<int> adj[MAX_N];
bool match[MAX_N];
vector<int> matching;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  
  int t, n, m;
  cin >> t;
  while (t--) {
    cin >> n >> m;
    matching.clear();
    for (int i = 1; i <= 3 * n; i++) {
      adj[i].clear();
      match[i] = false;
    }
    for (int i = 1; i <= m; i++) {
      int x, y;
      cin >> x >> y;
      adj[x].push_back(y);
    }
    for (int i = 1; i <= 3 * n; i++) {
      if (match[i]) continue;
      for (int j : adj[i]) {
        if (!match[j]) {
          matching.push_back(j);
          match[j] = true;
          match[i] = true;
          break;
        }
      }
    }
    if (matching.size() >= n) {
      cout << "Matching" << '\n';
      for (int i = 0; i < n; i++) {
        cout << matching[i] << " ";
      }
      cout << '\n';
      continue;
    }
    vector<int> v;
    for (int i = 1; i <= 3 * n; i++) {
      if (!match[i])
        v.push_back(i);
    }
    if (v.size() >= n) {
      cout << "IndSet" << '\n';
      for (int i = 0; i < n; i++) {
        cout << v[i] << " ";
      }
    } else {
      cout << "Impossible";
    }
    cout << '\n';
    v.clear();
  }
  return 0;
}