```cpp
#include <iostream>
#include <vector>
using namespace std;

long long maxSubArraySum(vector<long long>& a, long long F) {
  long long max_so_far = INT_MIN, max_ending_here = 0;
  long long size = a.size();
  long long M = -31;
  for (long long i = 0; i < size; i++) {
    M = max(M, a[i]);
    max_ending_here = max_ending_here + a[i];
    if ((max_so_far < max_ending_here) and (M == F))
      max_so_far = max_ending_here;
    if (max_ending_here < 0 or M > F)
      max_ending_here = 0, M = -31;
  }
  return max_so_far;
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  long long n;
  cin >> n;
  vector<long long> a(n);
  for (long long i = 0; i < n; i++) {
    cin >> a[i];
  }

  long long R = 0;
  for (long long i = -30; i < 31; i++) {
    R = max(R, (maxSubArraySum(a, i) - i));
  }
  cout << R << endl;

  return 0;
}
```