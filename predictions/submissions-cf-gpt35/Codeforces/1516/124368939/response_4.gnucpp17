#include <iostream>
#include <vector>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  
  int t;
  cin >> t;
  
  while (t--) {
    int n;
    cin >> n;
    
    vector<int> v(n);
    int d = 0;
    
    for (int i = 0; i < n; i++) {
      cin >> v[i];
      d ^= v[i];
    }
    
    vector<int> pref(n + 1, 0);
    pref[0] = 0;
    
    for (int i = 1; i <= n; i++) {
      pref[i] = pref[i - 1] ^ v[i - 1];
    }
    
    vector<int> suff(n + 2, 0);
    suff[n + 1] = 0;
    
    for (int i = n; i >= 1; i--) {
      suff[i] = suff[i + 1] ^ v[i - 1];
    }
    
    bool ans = false;
    
    for (int i = 1; i <= n - 1; i++) {
      if (pref[i] == suff[i + 1]) {
        ans = true;
        break;
      }
    }
    
    if (ans) {
      cout << "YES" << endl;
      continue;
    } else if (d == 0 && !ans) {
      cout << "NO" << endl;
      continue;
    }
    
    int k = 0;
    int c = 0;
    
    for (int i = 0; i < n; i++) {
      k ^= v[i];
      
      if (k == d) {
        k = 0;
        c++;
      }
    }
    
    if (k == 0 && c >= 3) {
      cout << "YES" << endl;
    } else {
      cout << "NO" << endl;
    }
  }
  
  return 0;
}