#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using db = long double;
using pi = pair<int, int>;
using pl = pair<ll, ll>;
using pd = pair<db, db>;
using vi = vector<int>;
using vl = vector<ll>;
using vd = vector<db>;
using vpi = vector<pi>;
using vpl = vector<pl>;
using vpd = vector<pd>;
#define f first
#define s second
#define rsz resize
#define pb push_back
#define lb lower_bound
#define ub upper_bound
#define sz(x) (int)size(x)
#define all(x) begin(x), end(x)
#define rall(x) rbegin(x), rend(x)
#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define F0R(i, b) FOR(i, 0, b)
#define ROF(i, a, b) for (int i = (b)-1; i >= (a); --i)
#define R0F(i, b) ROF(i, 0, b)
#define each(i, x) for (auto &i : x)
void setIO(string S = "") {
  cin.tie(0)->sync_with_stdio(0);
  cin.exceptions(cin.failbit);
  if (sz(S)) {
    freopen((S + ".in").c_str(), "r", stdin);
    freopen((S + ".out").c_str(), "w", stdout);
  }
}
template <class T, class U> bool ckmin(T &a, U b) {
  return a > b ? a = b, 1 : 0;
}
template <class T, class U> bool ckmax(T &a, U b) {
  return a < b ? a = b, 1 : 0;
}
mt19937 rng((uint32_t)chrono::steady_clock::now().time_since_epoch().count());
constexpr int pct(int x) { return __builtin_popcount(x); }
constexpr int bits(int x) {
  assert(x >= 0);
  return x == 0 ? 0 : 31 - __builtin_clz(x);
}
constexpr ll bits(ll x) {
  assert(x >= 0);
  return x == 0 ? 0 : 63 - __builtin_clzll(x);
}
const int dx[4] = {0, 1, 0, -1}, dy[4] = {1, 0, -1, 0};
const ll OO = 1e18;
const int MOD = 1e9 + 7;
const int MX = 2005;
inline namespace IO {
#define M1(x) template <class T, class... U> void x(T &&t, U &&... u)
#define M2(x)                                                                  \
  (int[]) { (x forward<U>(u), 0)... }
M1(re) {
  cin >> forward<T>(t);
  M2(cin >>);
}
template <class T, class U> void re(pair<T, U> &x) { re(x.f, x.s); }
template <class T> void re(vector<T> &x) { each(i, x) re(i); }
M1(pr) {
  cout << forward<T>(t);
  M2(cout << " " <<);
  cout << "\n";
}
template <class T, class U> void pr(pair<T, U> &x) { pr(x.f, x.s); }
template <class T> void pr(vector<T> &x) {
  F0R(i, sz(x)) cout << x[i] << " \n"[i == sz(x) - 1];
}
#ifdef LOCAL
#define dbg(...)                                                               \
  fprintf(stderr, __VA_ARGS__);                                                \
  fflush(stderr);
#else
#define dbg(...) 0
#endif
} // namespace IO
int n, k;
vl a;
void solve(int tc) {
  re(n);
  k = 2;
  a.rsz(n);
  ll x = 0;
  each(i, a) {
    re(i);
    x ^= i;
  }
  if (x == 0) {
    pr("YES");
    return;
  }
  int cnt = 0;
  ll cur = 0;
  each(i, a) {
    cur ^= i;
    if (cur == x) {
      ++cnt;
      cur = 0;
    }
  }
  pr(cnt & 1 && cnt > k ? "YES" : "NO");
}
int main() {
  setIO();
  int TC;
  re(TC);
  FOR(i, 1, TC + 1) solve(i);
}
