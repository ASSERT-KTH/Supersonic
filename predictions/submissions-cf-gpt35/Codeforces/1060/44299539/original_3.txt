```
#include <bits/stdc++.h>
using namespace std;
const int MAX_N=2001;
long long n[MAX_N], m[MAX_N];

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  
  int N, M;
  cin >> N >> M;
  for (int i = 1; i <= N; i++) {
    cin >> n[i];
    n[i] += n[i - 1];
  }
  for (int j = 1; j <= M; j++) {
    cin >> m[j];
    m[j] += m[j - 1];
  }
  long long x;
  cin >> x;
  long long ans = 0;
  for (int n_i = 1; n_i <= N; n_i++) {
    int min_m = 1;
    int max_m = M;
    while (min_m <= max_m) {
      int mid_m = (min_m + max_m) / 2;
      long long s_n = n[N] - n[N - n_i];
      if (n_i > 1) s_n -= n[n_i - 1];
      long long s_m = m[M] - m[M - mid_m];
      if (mid_m > 1) s_m -= m[mid_m - 1];
      if (s_m * s_n <= x) {
        ans = max(ans, (long long) mid_m * n_i);
        min_m = mid_m + 1;
      } else {
        max_m = mid_m - 1;
      }
    }
  }
  cout << ans << '\n';
  return 0;
}

```