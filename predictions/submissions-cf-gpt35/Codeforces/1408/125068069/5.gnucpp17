#include <bits/stdc++.h>
#include <cstdio>
using namespace std;
#define nline "\n"
#define mp make_pair
#define pb push_back
#define ppb pop_back
#define ff first
#define ss second
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define ub upper_bound
#define lb lower_bound
#define bsrch binary_search
#define mina *min_element
#define maxa *max_element
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) (a * b / gcd(a, b))
#define rep(i, a, b) for (int i = a; i < b; i++)
typedef pair<int, int> pii;
typedef set<int> si;
typedef set<pii> spii;
typedef vector<pii> vpii;
typedef vector<int> vi;
typedef vector<vector<int>> vvi;
#define PI 3.141592653589793
#define MOD 1000000007
#define INF 1000000000000000000LL
void SHIT_HERE_WE_GO_AGAIN() {
  int n, ln;
  cin >> n >> ln;
  vi flag(n);
  for (int i = 0; i < n; i++)
    cin >> flag[i];
  int v1{1}, v2{1}, l{0}, r{n - 1};
  long long p1{0}, p2{static_cast<long long>(ln)}, ans{0};
  while (l <= r) {
    if ((flag[l] - p1) / v1 < (p2 - flag[r]) / v2) {
      long double t = (flag[l] - p1) / v1;
      p1 = flag[l];
      v1++;
      l++;
      p2 -= v2 * t;
      ans += t;
    } else if ((flag[l] - p1) / v1 > (p2 - flag[r]) / v2) {
      long double t = (p2 - flag[r]) / v2;
      p2 = flag[r];
      v2++;
      r--;
      p1 += v1 * t;
      ans += t;
    } else {
      long double t = (flag[l] - p1) / v1;
      p1 = flag[l];
      p2 = flag[r];
      v1++;
      v2++;
      l++;
      r--;
      ans += t;
    }
  }
  ans += (p2 - p1) / (v1 + v2);
  printf("%.14Lf\n", ans);
}
int32_t main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int t = 1;
  cin >> t;
  while (t--) {
    SHIT_HERE_WE_GO_AGAIN();
  }
}
