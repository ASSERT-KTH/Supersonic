```cpp
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <iostream>
#include <queue>
#include <stack>
#define LL long long
#define maxn 300010
#define M 15000010
using namespace std;

int a[maxn];
int num[M] = {0}; // Initialize the array with zeros
int vis[M] = {0}; // Initialize the array with zeros

int Gcd(int a, int b) {
  return b > 0 ? Gcd(b, a % b) : a;
}

int main() {
  int n, g;
  scanf("%d", &n);

  // Calculate GCD of all elements
  scanf("%d", &a[0]);
  g = a[0];
  for (register int i = 1; i < n; i++) {
    scanf("%d", &a[i]);
    g = Gcd(g, a[i]);
  }

  // Count the frequency of each number divided by GCD
  int maxx = 0, t;
  for (register int i = 0; i < n; i++) {
    t = a[i] / g;
    num[t]++;
    if (t > maxx) {
      maxx = t;
    }
  }

  // Count the maximum frequency of prime factors
  int cnt = 0;
  t = 0;
  for (register int i = 2; i <= maxx; i++) {
    if (vis[i] == 0) {
      t = 0;
      for (register int j = i; j <= maxx; j += i) {
        t += num[j];
        vis[j] = 1;
      }
      if (t > cnt) {
        cnt = t;
      }
    }
  }

  // Print the result
  if (cnt == 0) {
    printf("-1\n");
  } else {
    printf("%d\n", n - cnt);
  }

  return 0;
}
```