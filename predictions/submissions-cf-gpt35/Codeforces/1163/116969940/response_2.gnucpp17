#include <iostream>
#include <map>
#include <set>
#include <vector>

void solve() {
  int n;
  std::cin >> n;
  std::vector<int> a(n);
  std::map<int, int> mp;
  std::set<int> cst;
  std::multiset<int> st;
  int ans = 0;
  for (int i = 0; i < n; ++i) {
    std::cin >> a[i];
    if (mp[a[i]]) {
      auto idx = st.find(mp[a[i]]);
      st.erase(idx);
      mp[a[i]]--;
      st.insert(mp[a[i]]);
    }
    mp[a[i]]++;
    st.insert(mp[a[i]]);
    cst.insert(a[i]);
    auto f = *st.begin();
    auto sec = st.upper_bound(f);
    if (sec == st.end()) sec--;
    auto s = *sec;
    int w = 0, y = 0;
    for (auto it = st.begin(); it != st.end(); ++it) {
      if (*it == f) w++;
      if (*it == s) y++;
    }
    if (cst.size() == 1) ans = i;
    if (std::max(w, y) == i + 1 && f == 1) ans = i;
    if (f * w + s * y == i + 1) {
      if (y == 1) {
        if (s == 1 || s - 1 == f) ans = i;
      } else if (w == 1) {
        if (f == 1 || f - 1 == s) ans = i;
      } else if (y == 1 && w == 1) {
        if (std::max(f, s) - 1 == std::min(f, s) || std::min(f, s) == 1) ans = i;
      }
    }
  }
  ans++;
  std::cout << ans << std::endl;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);
  solve();
  return 0;
}