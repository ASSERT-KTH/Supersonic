#include <bits/stdc++.h>
using namespace std;

void solve() {
  int n;
  cin >> n;
  vector<int> a(n);
  for (int i = 0; i < n; ++i) {
    cin >> a[i];
  }
  vector<int> count(n + 1, 0);
  set<int> distinct;
  int ans = 0;
  for (int i = 0; i < n; ++i) {
    int x = a[i];
    if (count[x]) {
      distinct.erase(count[x]);
    }
    count[x]++;
    distinct.insert(count[x]);
    if (distinct.size() == 1) {
      ans = i;
    } else if (distinct.size() == 2) {
      auto it = distinct.begin();
      int f = *it;
      ++it;
      int s = *it;
      // Check if the most frequent count is equal to the number of elements seen so far
      if (f == i + 1) {
        ans = i;
      }
      // Check if the sum of frequencies of the two most frequent counts is equal to the number of elements seen so far
      if (f * count[f] + s * count[s] == i + 1) {
        // Check special cases where the two most frequent counts are 1
        if (s == 1 && (f == 1 || f - 1 == s)) {
          ans = i;
        } else if (f == 1 && (s == 1 || s - 1 == f)) {
          ans = i;
        } else if (f == 1 && s == 1 && (f == s + 1 || s == f + 1)) {
          ans = i;
        }
      }
    }
  }
  ans++;
  cout << ans << endl;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.precision(35);
  
  solve();
  
  return 0;
}