```cpp
#include <bits/stdc++.h>
using namespace std;

void solve() {
  int n;
  cin >> n;

  vector<int> arr(n);
  for (int i = 0; i < n; ++i) {
    cin >> arr[i];
  }

  int ans = 0;
  unordered_map<int, int> freq;
  unordered_set<int> distinct;
  vector<int> countFreq(n + 1, 0);

  for (int i = 0; i < n; ++i) {
    int x = arr[i];

    if (freq[x]) {
      distinct.erase(freq[x]);
      countFreq[freq[x]]--;

      if (countFreq[freq[x]] == 0) {
        countFreq[freq[x]] = -1;
      }
    }

    freq[x]++;
    distinct.insert(freq[x]);
    countFreq[freq[x]]++;

    if (distinct.size() == 1) {
      ans = i;
    }

    if (countFreq[1] == i + 1 && freq[x] == 1) {
      ans = i;
    }

    if (countFreq[1] + countFreq[2] == i + 1 && freq[x] == 1) {
      ans = i;
    }

    if (countFreq[1] + countFreq[2] == i + 1 && freq[x] == countFreq[2]) {
      ans = i;
    }
  }

  ans++;
  cout << ans << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);

  solve();

  return 0;
}
```