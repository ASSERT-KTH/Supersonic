```cpp
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int gcd(int a, int b) {
    if (b == 0)
        return a;
    return gcd(b, a % b);
}

pair<int, int> slope(int x1, int y1, int x2, int y2) {
    int dx = x2 - x1;
    int dy = y2 - y1;
    if (dx == 0)
        return {0, 1};
    if (dy == 0)
        return {1, 0};
    int g = gcd(abs(dx), abs(dy));
    dx /= g;
    dy /= g;
    if (dx < 0) {
        dx *= -1;
        dy *= -1;
    }
    return {dx, dy};
}

pair<int, int> cept(int x1, int y1, int x2, int y2) {
    int c = y2 * x1 - x2 * y1;
    int m = x2 - x1;
    int g = gcd(abs(c), abs(m));
    c /= g;
    m /= g;
    if (c < 0) {
        c *= -1;
        m *= -1;
    }
    return {c, m};
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int n;
    cin >> n;
    vector<pair<int, int>> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i].first >> a[i].second;
    }
    set<pair<pair<int, int>, pair<int, int>>> s;
    map<pair<int, int>, set<pair<int, int>>> mp;
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            pair<int, int> s1 = slope(a[i].first, a[i].second, a[j].first, a[j].second);
            pair<int, int> c = cept(a[i].first, a[i].second, a[j].first, a[j].second);
            s.insert({s1, c});
            mp[s1].insert(c);
        }
    }
    ll x = 0;
    for (auto i : mp) {
        int si = i.second.size();
        x += 1LL * si * (si - 1) / 2;
    }
    ll si = s.size();
    cout << si * (si - 1) / 2 - x << '\n';

    return 0;
}
```