#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#pragma GCC optimize("O3")
#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#if DEBUG && !ONLINE_JUDGE
#define debug(args...) (Debugger()), args
class Debugger {
public:
  Debugger(const std::string &_separator = ", ")
      : first(true), separator(_separator) {}
  template <typename ObjectType> Debugger &operator,(const ObjectType &v) {
    if (!first)
      std::cerr << separator;
    std::cerr << v;
    first = false;
    return *this;
  }
  ~Debugger() { std::cerr << endl; }

private:
  bool first;
  std::string separator;
};
template <typename T1, typename T2>
inline std::ostream &operator<<(std::ostream &os, const std::pair<T1, T2> &p) {
  return os << "(" << p.first << ", " << p.second << ")";
}
template <typename T>
inline std::ostream &operator<<(std::ostream &os, const std::vector<T> &v) {
  bool first = true;
  os << "[";
  for (unsigned int i = 0; i < v.size(); i++) {
    if (!first)
      os << ", ";
    os << v[i];
    first = false;
  }
  return os << "]";
}
template <typename T>
inline std::ostream &operator<<(std::ostream &os, const std::set<T> &v) {
  bool first = true;
  os << "[";
  for (typename std::set<T>::const_iterator ii = v.begin(); ii != v.end();
       ++ii) {
    if (!first)
      os << ", ";
    os << *ii;
    first = false;
  }
  return os << "]";
}
template <typename T1, typename T2>
inline std::ostream &operator<<(std::ostream &os, const std::map<T1, T2> &v) {
  bool first = true;
  os << "[";
  for (typename std::map<T1, T2>::const_iterator ii = v.begin(); ii != v.end();
       ++ii) {
    if (!first)
      os << ", ";
    os << *ii;
    first = false;
  }
  return os << "]";
}
#else
#define debug(args...)
#endif
#define mod 1000000007
#define ok order_of_key
#define fo find_by_order
#define ordered_set                                                            \
  tree<int, null_type, less<int>, rb_tree_tag,                                 \
       tree_order_statistics_node_update>
#define ll long long
#define rep(i, a, b) for (int i = (a); i < (b); i++)
#define repp(i, n) for (int i = (0); i < (n); i++)
#define repr(i, n) for (int i = (n); i >= 0; i--)
#define repl(i, a, b) for (ll i = (a); i < (b); i++)
#define newl cout << '\n'
#define inf 1000000000
#define repa(i, a) for (auto i = a.begin(); i != a.end(); ++i)
#define pb push_back
#define test cout << "test" << endl
#define start                                                                  \
  int tt;                                                                      \
  cin >> tt;                                                                   \
  while (tt--)
#define tc                                                                     \
  int tt;                                                                      \
  tt = read();                                                                 \
  while (tt--)
#define nl "\n"
#define startk                                                                 \
  int tt;                                                                      \
  cin >> tt;                                                                   \
  for (int kk = 1; kk <= tt; kk++)
#define mem(v, i) memset(v, i, sizeof(v))
#define all(x) x.begin(), x.end()
#define inf1 1e18
#define repaa(i, a) for (auto i : a)
#define X first
#define Y second
#define lb lower_bound
#define ub upper_bound
#define gcd(a, b) __gcd((a), (b))
#define lcm(a, b) ((a) * (b)) / gcd((a), (b))
#define dec(v) sort(v.begin(), v.end(), greater<int>());
#define ins insert
#define er erase
#define sz(a) (int)(a.size())
#define big cpp_int
#define ll128 int128_t
#define print(x, n, k)                                                         \
  repp(i, n) {                                                                 \
    repp(j, k) cout << x[i][j] << "  ";                                        \
    newl;                                                                      \
  }
#define mt make_tuple
#define eb emplace_back
#define p_q priority_queue
#define bp(i) __builtin_popcount(i)
#define precision(x) cout << fixed << setprecision(x);
typedef long double ld;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef vector<ll> vl;
typedef vector<pair<int, int>> vip;
typedef vector<pair<int, ll>> vil;
typedef vector<pair<ll, ll>> vll;
typedef pair<int, int> ip;
typedef pair<int, ll> il;
typedef pair<ll, ll> pll;
typedef tuple<int, int, int> state;
typedef tuple<ll, int, int> statel;
#ifdef Fading
#define gc getchar
#endif
#ifndef Fading
inline char gc() {
  static char now[1 << 16], *S, *T;
  if (T == S) {
    T = (S = now) + fread(now, 1, 1 << 16, stdin);
    if (T == S)
      return EOF;
  }
  return *S++;
}
#endif
inline ll read() {
  register ll x = 0, f = 1;
  char ch = gc();
  while (!isdigit(ch)) {
    if (ch == '-')
      f = -1;
    ch = gc();
  }
  while (isdigit(ch)) {
    x = (x << 3) + (x << 1) + ch - '0';
    ch = gc();
  }
  return (f == 1) ? x : -x;
}
template <typename T> T Min(T v) { return v; }
template <typename T, typename... Args> T Min(T first, Args... args) {
  return min(first, Min(args...));
}
template <typename T> T Max(T v) { return v; }
template <typename T, typename... Args> T Max(T first, Args... args) {
  return max(first, Max(args...));
}
template <typename T> T mult(T v) { return v; }
template <typename T, typename... Args> T mult(T first, Args... args) {
  return mult((first * mult(args...)) % mod);
}
template <typename T> T addr(T v) { return v; }
template <typename T, typename... Args> T addr(T first, Args... args) {
  return addr((first + addr(args...)) % mod);
}
template <class T> inline void remin(T &a, T b) {
  if (b < a)
    a = b;
}
template <class T> inline void remax(T &a, T b) {
  if (b > a)
    a = b;
}
template <class A, class B> void add(A &a, B b) {
  a += b;
  if (a < 0LL)
    a += mod;
  if (a >= mod)
    a -= mod;
}
inline int to_i(char c) { return c - 'a'; }
ll poww(ll a, ll b) {
  ll val = 1;
  a %= mod;
  while (b > 0) {
    if (b % 2)
      val = mult(a, val);
    a = mult(a, a);
    b >>= 1;
  }
  return val % mod;
}
ll inv(ll a) { return poww(a, mod - 2); }
string to_str(ll a) {
  string mystring;
  stringstream mystream;
  mystream << a;
  mystring = mystream.str();
  return mystring;
}
#define p make_pair
pair<int, int> slope(int x1, int y1, int x2, int y2) {
  int tmp1 = x2 - x1, tmp2 = y2 - y1;
  int tmp3 = gcd(abs(tmp1), abs(tmp2));
  if (tmp1 == 0 && tmp2 == 0)
    return p(0, 0);
  if (tmp1 == 0)
    return p(1, 0);
  if (tmp2 == 0)
    return p(0, 1);
  tmp1 /= tmp3, tmp2 /= tmp3;
  if (tmp1 < 0)
    tmp1 *= -1, tmp2 *= -1;
  return {tmp2, tmp1};
}
pair<int, int> cept(int x1, int y1, int x2, int y2) {
  int tmp1 = y2 * x1 - x2 * y1, tmp2 = x2 - x1;
  int tmp3 = gcd(abs(tmp1), abs(tmp2));
  if (tmp1 == 0 && tmp2 == 0)
    return p(0, 0);
  if (tmp1 == 0)
    return p(0, 1);
  if (tmp2 == 0)
    return p(x1, 0);
  tmp1 /= tmp3, tmp2 /= tmp3;
  if (tmp1 < 0)
    tmp1 *= -1, tmp2 *= -1;
  return {tmp1, tmp2};
}
int main() {
  ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
  int n;
  cin >> n;
  ip a[n];
  repp(i, n) cin >> a[i].X >> a[i].Y;
  set<pair<ip, ip>> s;
  map<ip, set<pair<int, int>>> mp;
  repp(i, n) {
    rep(j, i + 1, n) {
      ip s1 = slope(a[i].X, a[i].Y, a[j].X, a[j].Y);
      pair<int, int> c = cept(a[i].X, a[i].Y, a[j].X, a[j].Y);
      s.ins({s1, c});
      mp[s1].ins(c);
    }
  }
  ll x = 0;
  repaa(i, mp) {
    int si = i.Y.size();
    x += 1LL * si * (si - 1) / 2;
  }
  ll si = sz(s);
  cout << si * (si - 1) / 2 - x;
}
