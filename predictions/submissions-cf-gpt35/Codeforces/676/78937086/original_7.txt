```cpp
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll MOD = 1000000007;
const ll MODS = 1000000009;
const ll MODS1 = 37;
const ll MODS2 = 715827883;
const int MAXN = 1000005;

bool isPrime(ll p) {
  if (p <= 1) return false;
  if (p == 2 || p == 3) return true;
  if (p % 2 == 0 || p % 3 == 0) return false;

  ll i = 5, w = 2;
  while (i * i <= p) {
    if (p % i == 0) return false;
    i += w;
    w = 6 - w;
  }
  return true;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int n, k;
  cin >> n >> k;
  int played = 0;
  string p;
  vector<string> values;
  for (int i = 0; i < n + 1; i++) {
    string s;
    cin >> s;
    if (i == 0) p = s;
    if (s != "?") played++;
    values.push_back(s);
  }

  if (k == 0) {
    if (values[0] == "0" || (values[0] == "?" && played % 2 == 1))
      cout << "Yes";
    else
      cout << "No";
    return 0;
  }

  if (played == n + 1) {
    vector<ll> fv(n + 1, 0);
    vector<ll> mm1(n + 1, 1), mm2(n + 1, 1), mm3(n + 1, 1), mm4(n + 1, 1);

    for (int i = 0; i < n + 1; i++) {
      fv[i] = stoi(values[i]);
      if (i > 0) {
        mm1[i] = (mm1[i - 1] * k) % MOD;
        mm2[i] = (mm2[i - 1] * k) % MODS;
        mm3[i] = (mm3[i - 1] * k) % MODS1;
        mm4[i] = (mm4[i - 1] * k) % MODS2;
      }
    }

    ll fv1 = 0, fv2 = 0, fv3 = 0, fv4 = 0;
    for (int i = 0; i < n + 1; i++) {
      fv1 = (fv1 + (fv[i] * mm1[i]) % MOD) % MOD;
      fv2 = (fv2 + (fv[i] * mm2[i]) % MODS) % MODS;
      fv3 = (fv3 + (fv[i] * mm3[i]) % MODS1) % MODS1;
      fv4 = (fv4 + (fv[i] * mm4[i]) % MODS2) % MODS2;
    }

    if (fv4 == 0 && fv1 == 0 && fv2 == 0 && fv3 == 0)
      cout << "Yes";
    else
      cout << "No";
    return 0;
  }

  if (played % 2 == 1) {
    if ((n + 1 - played) % 2 == 1)
      cout << "Yes";
    else
      cout << "No";
  } else {
    if ((n + 1 - played) % 2 == 0)
      cout << "Yes";
    else
      cout << "No";
  }
  return 0;
}
```