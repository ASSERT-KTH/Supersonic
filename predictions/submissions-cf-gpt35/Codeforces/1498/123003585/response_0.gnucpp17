#include <algorithm>
#include <iostream>
#include <map>
#include <vector>
using namespace std;

int main() {
  int n_sets;
  scanf("%d", &n_sets);
  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    scanf("%d %d", &n, &W);
    vector<int> a(n);
    for (int i = 0; i < n; i++)
      scanf("%d", &a[i]);
    sort(a.begin(), a.end(), greater<int>());
    map<int, int> x;
    x[W] = 200000;
    for (int i : a) {
      int remain = W - i;
      int best_w = W;
      auto it = x.lower_bound(remain);
      if (it != x.end() && it->first == remain && it->second > 0) {
        best_w = it->first;
        it->second--;
        if (it->second == 0)
          x.erase(it);
      } else {
        if (it != x.begin()) {
          it--;
          best_w = it->first;
          it->second--;
          if (it->second == 0)
            x.erase(it);
          x[remain]++;
        }
      }
      x[best_w]--;
      if (x[best_w] == 0)
        x.erase(best_w);
    }
    printf("%d\n", 200000 - x[W]);
  }
  return 0;
}