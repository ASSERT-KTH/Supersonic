#include <algorithm>
#include <iostream>
#include <map>
#include <vector>

int main() {
  int n_sets;
  scanf("%d", &n_sets);
  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    scanf("%d %d", &n, &W);
    std::vector<int> a(n);
    for (int i = 0; i < n; i++)
      scanf("%d", &a[i]);
    std::sort(a.begin(), a.end(), std::greater<int>());
    std::map<int, int> x;
    x[W] = 200000;
    for (int i : a) {
      int remain = W - i;
      int best_w = W;
      for (auto it = x.begin(); it != x.end(); ++it) {
        if (it->first - i >= 0 && it->second != 0 && it->first - i < remain) {
          best_w = it->first;
          remain = it->first - i;
        }
      }
      --x[best_w];
      if (x[best_w] == 0)
        x.erase(best_w);
      ++x[remain];
    }
    printf("%d\n", 200000 - x[W]);
  }
  return 0;
}