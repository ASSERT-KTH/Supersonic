```cpp
#include <algorithm>
#include <iostream>
#include <map>
#include <vector>
using namespace std;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int n_sets;
  cin >> n_sets;
  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    cin >> n >> W;
    vector<int> a(n);
    for (int i = 0; i < n; i++)
      cin >> a[i];
    sort(a.begin(), a.end(), greater<int>());
    map<int, int> x;
    x[W] = 200000;
    for (int i : a) {
      int remain = W - i;
      int best_w = W;
      for (auto it = x.begin(); it != x.end(); ) {
        auto &[k, v] = *it;
        if (k - i >= 0 && v != 0 && k - i < remain) {
          best_w = k;
          remain = k - i;
        }
        if (v <= 1) {
          it = x.erase(it);
        } else {
          v--;
          ++it;
        }
      }
      x[remain]++;
    }
    cout << 200000 - x[W] << "\n";
  }
  return 0;
}
```
```