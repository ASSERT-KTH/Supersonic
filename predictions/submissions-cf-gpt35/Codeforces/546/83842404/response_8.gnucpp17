#include <bits/stdc++.h>
using namespace std;
const int N = 5e6 + 2;
const int to = sqrt(N) + 1;
int val[N];
bool is[N];
int cnt[N];
long long pref[N];

void precalc() {
    for (int i = 0; i < N; i++) {
        val[i] = i;
    }
    for (int i = 2; i < to; i++) {
        if (is[i])
            continue;
        int j = 2 * i;
        while (j < N) {
            is[j] = 1;
            while (val[j] % i == 0) {
                val[j] /= i;
                cnt[j]++;
            }
            j += i;
        }
    }
    for (int i = 0; i < N; i++) {
        if (val[i] != 1) {
            cnt[i]++;
        }
    }
    for (int i = 1; i < N; i++) {
        pref[i] = pref[i - 1] + cnt[i];
    }
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    precalc();
    int t;
    cin >> t;
    while (t--) {
        int a, b;
        cin >> a >> b;
        cout << pref[a] - pref[b] << '\n';
    }
    return 0;
}