```cpp
#include <bits/stdc++.h>
using namespace std;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int q;
  cin >> q;
  for (int i = 0; i < q; i++) {
    int n, f = 1;
    cin >> n;
    vector<int> v(n);
    for (int j = 0; j < n; j++)
      cin >> v[j];
    sort(v.begin(), v.end());
    for (int j = 0; j < n - 1; j++) {
      if (abs(v[j + 1] - v[j]) == 1) {
        f = 2;
        break;
      }
    }
    cout << f << '\n';
  }
}
```
Explanation: 
- We include the necessary header `<iostream>` to use `cin` and `cout` and `<vector>` to use `vector` instead of plain array.
- We add `ios_base::sync_with_stdio(false);` and `cin.tie(NULL);` to optimize input and output streams.
- We change `short` to `int` to avoid potential overflow issues.
- We change `int v[n];` to `vector<int> v(n);` to use dynamic memory allocation and avoid potential stack overflow for large `n` values.
- We change `sort(v, v + n);` to `sort(v.begin(), v.end());` to use the appropriate range.
- We change `cout << f << endl;` to `cout << f << '\n';` to optimize output.