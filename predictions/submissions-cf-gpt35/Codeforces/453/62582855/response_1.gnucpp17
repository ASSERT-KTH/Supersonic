#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define eb emplace_back
#define mp make_pair
#define mt make_tuple
#define lb lower_bound
#define ub upper_bound
#define f first
#define s second
#define resz resize
#define sz(x) int((x).size())
#define all(x) (x).begin(), (x).end()
#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define F0R(i, a) for (int i = 0; i < (a); i++)
#define FORd(i, a, b) for (int i = (b)-1; i >= (a); i--)
#define F0Rd(i, a) for (int i = (a)-1; i >= 0; i--)
#define trav(a, x) for (auto &a : x)
#define sort_by(x, y)                                                          \
  sort(all(x), [&](const auto &a, const auto &b) { return y; })
using ll = long long;
using vi = vector<int>;
using vvi = vector<vi>;
using vll = vector<ll>;
using vvll = vector<vll>;
using vb = vector<bool>;
using vd = vector<double>;
using vs = vector<string>;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using pdd = pair<double, double>;
using vpii = vector<pii>;
using vvpii = vector<vpii>;
using vpll = vector<pll>;
using vvpll = vector<vpll>;
using vpdd = vector<pdd>;
using vvpdd = vector<vpdd>;

template <typename T> void ckmin(T &a, const T &b) { a = min(a, b); }
template <typename T> void ckmax(T &a, const T &b) { a = max(a, b); }

const int MAXV = 61;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout << fixed << setprecision(15);

  int N;
  cin >> N;
  vi a(N);
  for (int i = 0; i < N; i++) {
    cin >> a[i];
  }

  vi pri;
  for (int v = 2; v < MAXV; v++) {
    bool ok = true;
    for (int p : pri) {
      if (v % p == 0) {
        ok = false;
        break;
      }
    }
    if (ok) {
      pri.pb(v);
    }
  }

  vi mask(MAXV);
  for (int v = 1; v < MAXV; v++) {
    for (int i = 0; i < sz(pri); i++) {
      if (v % pri[i] == 0) {
        mask[v] |= 1 << i;
      }
    }
  }

  vvpii dp(N + 1, vpii(1 << sz(pri), {INT_MAX, -1}));
  dp[0][0].f = -1;

  for (int i = 0; i < N; i++) {
    for (int m = 0; m < (1 << sz(pri)); m++) {
      if (dp[i][m].f < INT_MAX) {
        for (int v = 1; v < MAXV; v++) {
          if (!(mask[v] & m)) {
            ckmin(dp[i + 1][m ^ mask[v]], mp(dp[i][m].f + abs(v - a[i]), v));
          }
        }
      }
    }
  }

  vi b(N);
  int m = min_element(all(dp.back())) - dp.back().begin();
  for (int i = N - 1; i >= 0; i--) {
    b[i] = dp[i + 1][m].s;
    m ^= mask[b[i]];
  }

  for (int i = 0; i < N; i++) {
    cout << b[i] << " ";
  }
  cout << "\n";

  return 0;
}