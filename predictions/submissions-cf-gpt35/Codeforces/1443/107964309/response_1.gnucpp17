#include <iostream>
#include <vector>
#include <algorithm>
#include <map>

int main() {
    int T;
    std::cin >> T;
    while (T--) {
        int n;
        std::cin >> n;
        std::vector<std::pair<int, int>> vec(n);
        for (int i = 0; i < n; i++) {
            int a;
            std::cin >> a;
            vec[i].first = a;
        }
        for (int i = 0; i < n; i++) {
            int b;
            std::cin >> b;
            vec[i].second = b;
        }
        std::sort(vec.begin(), vec.end());
        std::map<int, int> timeSum;
        int total = 0;
        for (int i = 0; i < n; i++) {
            timeSum[vec[i].first] += vec[i].second;
            total += vec[i].second;
        }
        int ans = total;
        for (int i = 0; i < n; i++) {
            if (i > 0 && vec[i].first == vec[i - 1].first)
                continue;
            int temp = vec[i].first + std::max(0, total - timeSum[vec[i].first] - vec[i].first);
            ans = std::min(ans, temp);
            total -= timeSum[vec[i].first];
        }
        std::cout << ans << std::endl;
    }
    return 0;
}