```cpp
#include <iostream>
#include <vector>
using namespace std;

int gcd(int a, int b) {
  if (a == b)
    return a;
  if (a == 0)
    return b;
  if (b == 0)
    return a;
  if (a > b)
    return (gcd(a - b, b));
  else
    return gcd(a, b - a);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int n;
  cin >> n;
  vector<int> a(n + 1);
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
  }
  int faust = gcd(a[1], a[2]);
  for (int i = 3; i <= n; i++) {
    faust = gcd(faust, a[i]);
  }
  a.push_back(2);
  const int inf = 2e9;
  vector<vector<int>> dp(n + 3, vector<int>(2, inf));
  dp[0][1] = inf;
  dp[0][0] = 0;
  if (faust > 1) {
    cout << "YES" << endl;
    cout << 0 << endl;
    return 0;
  }
  for (int i = 1; i <= n; i++) {
    if (a[i] % 2 and a[i + 1] % 2) {
      if (dp[i - 1][1] != inf) dp[i][0] = dp[i - 1][1];
      if (dp[i - 1][0] != inf) dp[i][1] = dp[i - 1][0] + 1;
    } else if (a[i] % 2 and a[i + 1] % 2 == 0) {
      if (dp[i - 1][1] != inf) dp[i][0] = dp[i - 1][1];
      if (dp[i - 1][0] != inf) dp[i][1] = dp[i - 1][0] + 2;
    } else if (a[i] % 2 == 0 and a[i + 1] % 2) {
      if (dp[i - 1][0] != inf and dp[i - 1][1] != inf) dp[i][0] = min(dp[i - 1][0], dp[i - 1][1]);
      else if (dp[i - 1][1] != inf) dp[i][0] = dp[i - 1][1];
      else if (dp[i - 1][0] != inf) dp[i][0] = dp[i - 1][0];
      if (dp[i - 1][0] != inf and dp[i - 1][1] != inf) dp[i][1] = min(dp[i - 1][1] + 2, dp[i - 1][0] + 2);
      else if (dp[i - 1][1] != inf) dp[i][1] = dp[i - 1][1] + 2;
      else if (dp[i - 1][0] != inf) dp[i][1] = dp[i - 1][0] + 2;
    } else if (a[i] % 2 == 0 and a[i + 1] % 2 == 0) {
      if (dp[i - 1][0] != inf and dp[i - 1][1] != inf) dp[i][0] = min(dp[i - 1][0], dp[i - 1][1]);
      else if (dp[i - 1][1] != inf) dp[i][0] = dp[i - 1][1];
      else if (dp[i - 1][0] != inf) dp[i][0] = dp[i - 1][0];
      dp[i][1] = dp[i][0];
    }
  }
  cout << "YES" << endl;
  if (inf == dp[n][0]) cout << dp[n][1] << endl;
  else cout << dp[n][0] << endl;
}
```