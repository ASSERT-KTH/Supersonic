#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 50005;
const int K = 505;
vector<int> g[N];
ll ans;
int n, k;
ll dp[N][K];
void dfs(int node, int par) {
  for (auto &u : g[node]) {
    if (u == par)
      continue;
    dfs(u, node);
    for (int i = 1; i <= k; i++) {
      dp[node][i] += dp[u][i - 1];
    }
  }
  ans += dp[node][k];
  ll tot = 0;
  for (int i = 1, j = k - 1; i < k; i++, j--) {
    for (auto &u : g[node]) {
      if (u == par)
        continue;
      tot += (dp[u][i - 1]) * (dp[node][j] - dp[u][j - 1]);
    }
  }
  ans += tot >> 1;
  dp[node][0] = 1LL;
}
void work() {
  scanf("%d%d", &n, &k);
  for (int i = 0; i < n - 1; i++) {
    int u, v;
    scanf("%d%d", &u, &v);
    --u, --v;
    g[u].push_back(v), g[v].push_back(u);
  }
  dfs(0, -1);
  printf("%lld\n", ans);
}
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);
  work();
  return 0;
}