#include <algorithm>
#include <iostream>
#include <vector>
template <typename T>
std::istream &operator>>(std::istream &input, std::vector<T> &v) {
  for (T &a : v)
    input >> a;
  return input;
}
void answer(const std::vector<int> &v) {
  const char *separator = "";
  for (const int x : v) {
    std::cout << separator << x;
    separator = " ";
  }
  std::cout << '\n';
}
void solve(std::vector<int> &a, unsigned long long k) {
  const auto b = std::minmax_element(a.begin(), a.end());
  const int min = *b.first;
  const int max = *b.second;
  for (int &x : a)
    x = max - x;
  if (k % 2 == 0) {
    for (int &x : a)
      x = max - min - x;
  }
  answer(a);
}
void test_case() {
  size_t n;
  std::cin >> n;
  unsigned long long k;
  std::cin >> k;
  std::vector<int> a(n);
  std::cin >> a;
  solve(a, k);
}
int main() {
  size_t t;
  std::cin >> t;
  while (t-- > 0)
    test_case();
  return 0;
}
