#include <iostream>
#include <vector>
#include <stack>
#include <bitset>

const int MAX_N = 500001;
int n, m;
std::vector<int> graph[MAX_N];
int ans[MAX_N];
int res[MAX_N];

int num() {
  int res;
  std::cin >> res;
  return res;
}

int answer(int i) {
  if (ans[i] > 0) {
    return ans[i];
  }
  std::stack<int> s;
  s.push(i);
  int res = 0;
  while (!s.empty()) {
    int now = s.top();
    s.pop();
    res++;
    for (int next : graph[now])
      if (ans[next] == 0) {
        ans[next] = 1;
        s.push(next);
      }
  }
  return res;
}

int main() {
  std::ios_base::sync_with_stdio(0);
  std::cin.tie(NULL);
  std::cout.tie(NULL);
  n = num();
  m = num();
  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    if (l < 0)
      continue;
    int a = num();
    while (l-- > 0) {
      int b = num();
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  for (int i = 1; i <= n; i++) {
    res[i] = answer(i);
    std::cout << res[i] << " ";
  }
  std::cout << std::endl;
  return 0;
}