#include <bits/stdc++.h>
using namespace std;

const int MAXN = 500001;
vector<int> graph[MAXN];
int ans[MAXN];
bitset<MAXN> bs;

int num() {
  int res;
  cin >> res;
  return res;
}

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];

  stack<int> s;
  vector<int> list;
  bs.reset();
  bs.set(i);
  s.push(i);

  while (!s.empty()) {
    int now = s.top();
    s.pop();
    list.push_back(now);

    for (int next : graph[now]) {
      if (!bs[next]) {
        bs.set(next);
        s.push(next);
      }
    }
  }

  int res = list.size();
  for (int next : list)
    ans[next] = res;

  return res;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);

  int n, m;
  n = num();
  m = num();

  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    if (l < 0)
      continue;
    int a = num();
    while (l-- > 0) {
      int b = num();
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }

  for (int i = 1; i <= n; i++)
    cout << answer(i) << " ";
  
  cout << endl;
}