The existing code reads a string of numbers, calculates the sum of each digit in the string, and prints it. It repeats this until it encounters a string starting with '0'. 

The code can be optimized in the following ways:

1. Replace `scanf` and `printf` with `cin` and `cout` for consistency and because iostream operations are safer. 
2. The call to `strlen(num)` inside the for-loop condition leads to computing the length of the string in each iteration, which is inefficient. We can calculate the string length once before entering the loop and store it in a variable.
3. `num[0] == '0'` checks only for strings that start with '0' but we should also make sure that the length of the string is 1, to properly handle the termination condition.

Here is the optimized program:

```cpp
#include <iostream>
#include <string>
using namespace std;

int main() {
  string num;
  while (true) {
    cin >> num;
    if (num == "0")
      break;
    int sum = 0;
    int len = num.length();
    for (int i = 0; i < len; ++i) {
      sum += num[i] - '0';
    }
    cout << sum << "\n";
  }
  return 0;
}
```

This optimized code will run faster and use memory more efficiently than the original version.