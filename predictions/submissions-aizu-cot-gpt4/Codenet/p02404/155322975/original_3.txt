Here are steps to optimize the given C/C++ program:

1. Use fast input/output methods: `cin` and `cout` are slower when compared to `scanf` and `printf`. So, replacing them can make the program faster.

2. Avoid flushing the buffer unnecessarily: A new line (`endl`) in C++ not only inserts a new line but also flushes the output buffer. This makes the program slower. So, replacing `endl` with `\n` will speed up the program.

3. Reduce the number of conditional checks in the inner loop: The nested checks for `i` and `j` in the inner loop can be reduced by assigning the characters to a variable before entering the inner loop and then printing the variable.

Here is the optimized program:

```C++
#include <cstdio>

int main() {
  int H, W;
  while (1) {
    scanf("%d%d", &H, &W);
    if (H == 0 && W == 0)
      break;
    for (int i = 1; i <= H; i++) {
      char ch;
      if (i == 1 || i == H) {
        ch = '#';
      } else {
        ch = '.';
      }
      for (int j = 1; j <= W; j++) {
        if (j == 1 || j == W) {
          printf("#");
        } else {
          printf("%c", ch);
        }
      }
      printf("\n");
    }
    printf("\n");
  }
}
```

This optimized program should perform faster and use less memory than the original one.