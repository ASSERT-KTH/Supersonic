This program prints multiplication tables from 1 to 9. This program is already quite optimal. However, there is one small change that could potentially optimize it further - removing the repeated multiplication operation inside the printf function.

In the current program, the multiplication operation i * j is performed each time before its result is printed out. This multiplication operation can be avoided by storing the result in a variable before the print operation.

Here is the step by step optimization:

1. Declare an integer variable, say `product`, within the inner loop.
2. Assign the value of `i * j` to `product` before the print operation.
3. Replace `i * j` in the printf statement with `product`.

Here is the optimized code:

```c
#include <stdio.h>
int main() {
  for (int i = 1; i < 10; i++) {
    for (int j = 1; j < 10; j++) {
      int product = i * j;
      printf("%dx%d=%d\n", i, j, product);
    }
  }
  return 0;
}
```

Please note that any optimization here is likely to be minor and might not be noticeable, as modern compilers are generally pretty good at optimizing such simple code.