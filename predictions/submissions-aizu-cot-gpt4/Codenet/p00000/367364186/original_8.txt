This program is pretty optimal by itself, but there is a small room for optimization. The optimization would be to store the result of `i * j` into a variable and then output it. This saves the repeated computation of `i * j` in the `printf` function. 

Optimized Program:
```
#include <stdio.h>
int main() {
  for (int i = 1; i < 10; i++) {
    for (int j = 1; j < 10; j++) {
      int result = i * j;
      printf("%dx%d=%d\n", i, j, result);
    }
  }
  return 0;
}
```
This minor optimization will not bring a significant improvement in performance because the original code is quite efficient. The improvement is only notable when the operation inside the loop is much more complex and time-consuming.