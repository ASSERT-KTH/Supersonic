Optimization Steps:

1. Output Stream `cout` is slower. We can use printf() instead of cout which is faster as it doesn't have the overhead of the C++ streams.

2. Each call to printf() causes system call which is expensive. So, we can reduce the number of calls to printf() by accumulating the result in a string and printing it at once.

3. In the nested loop, the multiplication i*j is calculated twice. We can calculate it once, store it in a variable and use it.

Optimized Code:

```cpp
#include <cstdio>
#include <string>
#include <sstream>
using namespace std;
int main() {
  ostringstream os;
  for (int i = 1; i <= 9; i++) {
    for (int j = 1; j <= 9; j++) {
      int result = i * j;
      os << i << "x" << j << "=" << result << "\n";
    }
  }
  printf("%s", os.str().c_str());
  return 0;
}
```
This optimized version of the program should run faster and use less memory than the original. The optimizations made were minor, but they could have a significant impact on the performance of larger programs.
