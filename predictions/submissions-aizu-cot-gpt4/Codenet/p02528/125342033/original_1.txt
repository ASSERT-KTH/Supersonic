The code you have given is already quite optimized but there are still a few steps we can take to make it a bit faster and more readable. Here's the step by step optimization:

1. Don't use scanf and printf for input/output as these are slower compared to cin and cout in C++. Instead use cin and cout with ios_base::sync_with_stdio(false) and cin.tie(NULL) at the beginning of the main function. This will make cin and cout as fast as scanf and printf.

2. Instead of declaring an array of size 1000001, use a vector. A vector is a dynamic array and it can grow in size if required. So, it won't waste memory like an array of fixed size. If the input is less than 1000001, then declaring an array of size 1000001 is just a waste of memory.

3. In the second loop, you are printing a space before every number except the first one. It can be done in a better way by printing a space after every number except the last one.

Here is the optimized version of the program:

```cpp
#include <bits/stdc++.h>

using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int n;
    cin >> n;
    vector<int> A(n);
    for(int i = 0; i < n; i++)
        cin >> A[i];
    sort(A.begin(), A.end());
    for(int i = 0; i < n; i++) {
        cout << A[i];
        if(i != n - 1)
            cout << " ";
    }
    cout << "\n";
}
```
Note: In competitive programming, people often use #include<bits/stdc++.h> for convenience as it includes all standard library. But it's not recommended for production code.