This C++ program is quite optimized already. There are few potential optimizations that can be made:

1. Use a switch-case statement instead of multiple if-else statements for the operator check. The switch statement can be faster than if-else chain in some situations because it simply looks up the value in a jump table, which can be faster than sequentially going through each if condition.

2. Remove the "using namespace std;" line because it is not necessary in this case. The code does not use any standard namespace functions or classes, so there's no need to use the entire namespace. This will not optimize the execution, but it will keep the namespace cleaner.

3. Instead of using printf and scanf, which are C functions, we could use cout and cin, which are C++ functions. However, in this case, printf and scanf are actually faster, so we will keep them.

Here is the optimized code:

```cpp
#include <cstdio>

int main() {
  int x, y;
  char z;
  
  while (1) {
    scanf("%d %c %d", &x, &z, &y);
    
    switch (z) {
      case '?':
        return 0;
      case '+':
        printf("%d\n", x + y);
        break;
      case '-':
        printf("%d\n", x - y);
        break;
      case '/':
        printf("%d\n", x / y);
        break;
      case '*':
        printf("%d\n", x * y);
        break;
    }
  }
  
  return 0;
}
```

Please note that these are micro-optimizations and it is highly unlikely that they will produce any noticeable performance improvements in a program of this size. However, these are still good practices to follow when optimizing your code.