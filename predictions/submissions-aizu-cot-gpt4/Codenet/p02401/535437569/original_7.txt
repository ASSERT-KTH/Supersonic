This code can be optimized by using a switch-case instead of multiple if-else statements. This will reduce the time taken by the program when choosing the operator, as switch-case statements are generally faster than if-else statements when dealing with multiple conditions.

Switch-case statements are faster because they use a jump table in the background. This means that, instead of checking each condition sequentially (as is the case with if-else statements), it jumps directly to the correct case. This is possible because the cases are known at compile-time.

The optimized program is shown below:

```cpp
#include <cstdio>
using namespace std;
int main() {
  int x, y;
  char z;
  while (1) {
    scanf("%d %c %d", &x, &z, &y);
    switch (z) {
      case '?':
        return 0;
      case '+':
        printf("%d\n", x + y);
        break;
      case '-':
        printf("%d\n", x - y);
        break;
      case '/':
        printf("%d\n", x / y);
        break;
      case '*':
        printf("%d\n", x * y);
        break;
    }
  }
  return 0;
}
```

Please note that this optimization will be more noticeable when dealing with larger programs. For small programs like this one, the difference might not be noticeable.