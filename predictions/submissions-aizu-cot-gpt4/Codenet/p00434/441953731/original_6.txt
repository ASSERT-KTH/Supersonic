Optimization Steps:

1. Replace `#include <bits/stdc++.h>`: It includes quite a lot of files which increases the compilation time. We only need to include the libraries that we are using in the program.

2. Replace `set<int>` with `bool array`: The `set<int>` uses a lot more memory than a simple `bool` array. We know that the input numbers are between 1 and 30, so we can just declare a `bool` array of size 31 (0 to 30). Each index in the array will represent a number.

3. Use `std::ios::sync_with_stdio(0); std::cin.tie(0); std::cout.tie(0);`: Disabling the synchronization of all the C++ standard streams with their corresponding standard C streams can speed up the input and output.

Optimized program:

```
#include <iostream>
using namespace std;

int main() {

  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  bool data[31] = {false};
  int n;

  for (int i = 0; i < 28; i++) {
    cin >> n;
    data[n] = true;
  }

  for (int i = 1; i <= 30; i++) {
    if (!data[i]) {
      cout << i << "\n";
    }
  }

  return 0;
}
```
In this optimized version, the memory usage is reduced and the running time is also improved.