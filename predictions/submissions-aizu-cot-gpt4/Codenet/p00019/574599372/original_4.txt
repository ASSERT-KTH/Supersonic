This program is calculating the factorial of a user input number `n`. The variable `a` is multiplied by every number from 2 to `n` in a loop. 

To optimize the program, we have a few things to consider:

1. The data type `long long` takes more memory than `int`. However, for factorial calculations, the result can quickly exceed the maximum value that an `int` can store. So we need to keep `long long` for variable `a`.

2. The `iostream` library is slower than `cstdio` in C++. We can use `scanf` and `printf` from `cstdio` instead of `cin` and `cout` from `iostream` to reduce the running time.

3. Initialize `i` in the loop itself.

4. `main` function should return an integer value. So we need to define it as `int main()`. 

Here's the optimized version of the program:

```cpp
#include <cstdio>

int main() {
  long long a = 1;
  int n;
  scanf("%d", &n);
  for (int i = 2; i <= n; i++) {
    a = a * i;
  }
  printf("%lld\n", a);
  return 0;
}
```

Remember that this program only works for `n` values up to 20 due to the maximum value `long long` can hold. For larger `n` values, we need to use a different algorithm or library that supports big numbers.