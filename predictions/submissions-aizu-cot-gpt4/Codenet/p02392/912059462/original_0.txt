Optimization is not always about making code run faster. It is often about making code more readable, more maintainable, and more efficient in terms of memory usage. However, in this case, the existing code is already quite optimized and there is not much scope for major optimization in terms of running time or memory usage.

But there is one very minor optimization that can be made. Instead of two separate calls to `printf`, we can combine them into one.

Here is the optimized version of the program:

```c
#include <stdio.h>
int main() {
  int a, b, c;
  scanf("%d%d%d", &a, &b, &c);
  if (a < b && b < c) {
    printf("Yes\n");
  } else {
    printf("No\n");
  }
  return 0;
}
```

In the optimized version, a single call to `printf` is made in each branch of the `if` statement. This reduces the number of function calls, which can improve performance of the program slightly. It also makes the code a bit cleaner and more readable.