This is a pretty simple and straightforward program. It reads three integers from input, checks if they are sorted in ascending order, then prints "Yes" or "No". 

However, there are a few minor optimizations we can make:

1. The standard library function `scanf` returns the number of input items successfully matched and assigned, which can be less than provided, or even zero, in the event of an early matching failure. In this case, it is a good idea to check the return value of `scanf` to ensure the correct number of inputs were received.

2. The `printf("\n");` statement can be combined with the "Yes" and "No" `printf` statements to reduce the number of function calls. This will slightly improve the running time of the program.

3. Also, we can reduce the number of comparisons. In the current code, two comparisons are being made: `a < b` and `b < c`. If `a >= b`, there's no need to check `b < c`, because it's already been established that the numbers are not in ascending order.

Here is the optimized code:

```c
#include <stdio.h>

int main() {
  int a, b, c;
  if(scanf("%d%d%d", &a, &b, &c) != 3) {
    printf("Invalid input\n");
    return 1; // return non-zero to indicate failure
  }
  
  if (a < b) {
    if (b < c) {
      printf("Yes\n");
    } else {
      printf("No\n");
    }
  } else {
    printf("No\n");
  }
  
  return 0;
}
```

This code provides better input checking, reduces the number of function calls, and potentially performs fewer comparisons.