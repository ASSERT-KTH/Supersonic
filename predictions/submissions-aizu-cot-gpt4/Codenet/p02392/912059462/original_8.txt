This is a very basic program and there is not much to optimize for speed or memory usage. The program is already quite efficient in both terms. However, we can make a minor modification to the code to reduce the number of calls to `printf()` from two to one. This can technically be considered as a speed optimization because it reduces the number of system calls, which are generally expensive operations.

The modification can be done by storing the string to be printed in a variable and then printing that variable once.

Here is the optimized program:

```c
#include <stdio.h>
int main() {
  int a, b, c;
  char *result;
  scanf("%d%d%d", &a, &b, &c);
  if (a < b && b < c) {
    result = "Yes\n";
  } else {
    result = "No\n";
  }
  printf("%s", result);
  return 0;
}
```

In this optimized program, we just added a pointer variable `result` that points to the string to be printed. In the `if` and `else` blocks, we just assign the appropriate string to this variable. Finally, we print the string using `printf()` function only once. This will reduce the number of system calls and thus, can technically be considered as a speed optimization.