The code you provided is mostly optimized, but there are a few areas that could be improved:

1. The line `0 <= a, b, c <= 100;` is not doing anything meaningful in the code. It is not setting constraints on the variables as you might expect. Instead, it's using the comma operator, which evaluates its first operand and discards the result, then evaluates the second operand and returns this value. In this case, it's just wasting cycles. 

2. In a real world application, you would want to check the return value of `scanf()` to ensure that the correct number of inputs were read. This is more of an error checking improvement rather than a performance optimization.

3. The program is reading three integers but there is no constraint on the values of those integers. So, it will just check the condition and print "Yes" or "No". This is more about the logic of the program rather than the performance.

Here's the optimized code:
```
#include <stdio.h>
int main(void) {
  int a, b, c;
  if(scanf("%d %d %d", &a, &b, &c) != 3) {
    printf("Invalid input\n");
    return 1;
  }
  printf((a < b && b < c) ? "Yes\n" : "No\n");
  return 0;
}
```
In terms of performance, this version is nearly identical to the original, but it does improve error handling by checking the return value of `scanf()`. The optimized version also uses the ternary operator to simplify the if-else statement, making the code a bit cleaner and easier to read.