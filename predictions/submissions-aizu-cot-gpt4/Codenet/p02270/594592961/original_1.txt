Optimization Explanation:

1. Pass by reference: In the function `IsAllLoaded(int P, vector<int> W, int k)`, vector W is passed by value which creates a copy of the vector. This is unnecessary and could be heavy on memory for large vectors. We will pass this vector by reference to avoid creating a copy and save memory.

2. Reserve memory for vector: In the function `vector<int> Input(const int n)`, we know the number of entries in the vector at the start, so we can use `vector::reserve` to preallocate memory. This can prevent unnecessary memory reallocations as the vector grows.

3. Avoid calling `W.size()` in each loop iteration: In the for loop of `IsAllLoaded(int P, vector<int> W, int k)`, we call `W.size()`. This operation could be done once before the loop starts to avoid calling it in each iteration.

Optimized Program:

```cpp
#include <iostream>
#include <numeric>
#include <vector>
using namespace std;
vector<int> Input(const int n) {
  vector<int> W;
  W.reserve(n);
  for (int i = 0; i < n; i++) {
    int w;
    cin >> w;
    W.push_back(w);
  }
  return W;
}
bool IsAllLoaded(int P, vector<int>& W, int k) {
  int TrackIndex = 0;
  int CurrentSum = 0;
  int i = 0;
  int WSize = W.size();
  for (i = 0; i < WSize; i++) {
    if (W[i] > P) {
      return false;
    }
    if (CurrentSum + W[i] > P) {
      TrackIndex++;
      if (TrackIndex == k) {
        return false;
      }
      CurrentSum = 0;
    }
    CurrentSum += W[i];
  }
  return true;
}
int Calc(vector<int>& W, int k) {
  int Sum = accumulate(W.begin(), W.end(), 0);
  int P = (Sum + k - 1) / k;
  while (!IsAllLoaded(P, W, k)) {
    P++;
  }
  return P;
}
int main() {
  int n, k;
  cin >> n >> k;
  vector<int> W = Input(n);
  int P = Calc(W, k);
  cout << P << endl;
  return 0;
}
```
In the optimized program, functions `IsAllLoaded` and `Calc` are now taking a reference to vector `W` instead of copying it. Also, a memory reservation has been made for vector `W` in the `Input` function. Finally, the size of the vector `W` is stored in a variable before the loop starts in the `IsAllLoaded` function.