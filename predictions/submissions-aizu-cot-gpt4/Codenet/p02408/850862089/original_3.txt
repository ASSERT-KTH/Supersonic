Optimization Steps:

1. We can see that the for loops in the later part of the program are repeating. We can put them inside another for loop to reduce code duplication.

2. We don't need to scan through the array twice for each card. We can optimize this by combining the two scan operations into one using "scanf("%c %d", &Mark, &Num)" instead of having two separate scanf.

3. Use switch case instead of if else ladder. It is generally faster because it uses a lookup table or branch table and hence performs faster.

4. The Cards array is initialized with all zeros and only some of the elements are updated to 1. This means that we can avoid initializing the entire array and only set the required elements to 1.

Optimized Code:

```
#include <stdio.h>
int main(void) {
  int Cards[4][14] = {0};
  int i, j, n, Num;
  char Mark;
  scanf("%d", &n);
  for (i = 0; i < 2 * n; i++) {
    scanf("%c %d", &Mark, &Num);
    switch (Mark) {
      case 'S': Cards[0][Num - 1] = 1; break;
      case 'H': Cards[1][Num - 1] = 1; break;
      case 'C': Cards[2][Num - 1] = 1; break;
      case 'D': Cards[3][Num - 1] = 1; break;
    }
  }
  char Marks[] = {'S', 'H', 'C', 'D'};
  for (i = 0; i < 4; i++) {
    for (j = 1; j < 14; j++) {
      if (Cards[i][j - 1] != 1) {
        printf("%c %d\n", Marks[i], j);
      }
    }
  }
  return 0;
}
```
Let me know if you have any questions.