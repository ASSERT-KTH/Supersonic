The given C/C++ program is already quite optimized. However, we can still apply some minor optimizations:

1. Combine the four output loops into one loop to reduce redundancy, improving code readability and maintainability.

2. Use switch-case instead of if-else. This might improve the runtime slightly because switch-case statements are generally faster than if-else chains for multiple conditions.

3. Use `scanf(" %c", &Mark);` instead of `scanf("%c ", &Mark);` to correctly read the character input. The space before `%c` will eat up any whitespace before the actual character.

Here's the optimized code:

```c
#include <stdio.h>

int main(void) {
  int Cards[4][14] = {{}};
  int i, j, n, Num;
  char Mark;
  scanf("%d", &n);
  for (i = 0; i < 2*n; i++) {
    scanf(" %c", &Mark);
    scanf("%d", &Num);
    switch (Mark) {
      case 'S': Cards[0][Num - 1] = 1; break;
      case 'H': Cards[1][Num - 1] = 1; break;
      case 'C': Cards[2][Num - 1] = 1; break;
      case 'D': Cards[3][Num - 1] = 1; break;
    }
  }
  char Marks[4] = {'S', 'H', 'C', 'D'};
  for (i = 0; i < 4; i++) {
    for (j = 1; j < 14; j++) {
      if (Cards[i][j - 1] != 1) {
        printf("%c %d\n", Marks[i], j);
      }
    }
  }
  return 0;
}
```