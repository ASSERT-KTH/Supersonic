This code appears to be well optimized in terms of memory usage. However, there are some things we could potentially do to optimize the runtime.

First, the code is performing a redundant operation of subtracting 1 from the card number in each loop. To optimize this, we could subtract 1 from the card number when we read it from the user input, which would only need to be done once.

Second, we could combine the four loops at the end into one loop. By doing this, we could reduce the number of iterations and branches, which could potentially speed up the code.

Here is the optimized code:

```C
#include <stdio.h>

int main(void) {
  int cards[4][13] = {{0}}; // Initialize array with zeroes
  int i, n, num;
  char mark;
  char marks[] = {'S', 'H', 'C', 'D'};

  scanf("%d", &n);

  for (i = 0; i < 2 * n; i++) {
    scanf(" %c", &mark); // Add space before %c to consume any whitespace
    scanf("%d", &num);
    num--; // Subtract 1 right away

    switch(mark) {
      case 'S': cards[0][num] = 1; break;
      case 'H': cards[1][num] = 1; break;
      case 'C': cards[2][num] = 1; break;
      case 'D': cards[3][num] = 1; break;
      default: break;
    }
  }

  for (i = 0; i < 4; i++) {
    for (n = 0; n < 13; n++) {
      if (cards[i][n] != 1) {
        printf("%c %d\n", marks[i], n+1);
      }
    }
  }

  return 0;
}

```
In this optimized code, the number of iterations is reduced by combining the four loops at the end into one loop. The switch case is used instead of if else if structure which makes it more readable and efficient. Also, the redundant operation of subtracting 1 from the card number in each loop is eliminated.