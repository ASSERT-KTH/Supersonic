The given C/C++ program is not efficient in terms of both running time and memory usage. The program loops through the 'Cards' array four times, which is not necessary because we can do this in a single loop. It also uses an unnecessarily large 2D array for storing information about the cards, which can be done with a smaller 1D array.

Optimization:

1. Instead of using a 2D array 'Cards[4][14]', we can use a 1D array 'Cards[52]'. This will reduce the memory usage.

2. Instead of looping through the 'Cards' array four times, we can do this in a single loop. This will reduce the running time.

3. Instead of using separate if-else blocks for each card type, we can use a switch-case block. This will make the code cleaner and easier to read.

Here is the optimized program:

```cpp
#include <stdio.h>
int main(void) {
  int Cards[52] = {};
  int i, n, Num;
  char Mark;
  scanf("%d", &n);
  for (i = 0; i < 2 * n; i++) {
    scanf("%c ", &Mark);
    scanf("%d", &Num);
    switch (Mark) {
      case 'S':
        Cards[Num - 1] = 1;
        break;
      case 'H':
        Cards[Num + 12] = 1;
        break;
      case 'C':
        Cards[Num + 25] = 1;
        break;
      case 'D':
        Cards[Num + 38] = 1;
        break;
    }
  }
  for (i = 0; i < 52; i++) {
    if (Cards[i] != 1) {
      if (i < 13) {
        printf("S %d\n", i + 1);
      } else if (i < 26) {
        printf("H %d\n", i - 12);
      } else if (i < 39) {
        printf("C %d\n", i - 25);
      } else {
        printf("D %d\n", i - 38);
      }
    }
  }
  return 0;
}
```

This optimized program uses less memory and is faster because it only loops through the 'Cards' array once. Also, the use of a switch-case block makes the code cleaner and easier to read.