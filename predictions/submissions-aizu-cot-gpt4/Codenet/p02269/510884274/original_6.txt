The given program is checking whether a string is present or not based on the computed hash value of the string. The hashing function "h" is iterating over each character of the input string "s" to calculate the hash value. The boolean array "chk" is used to keep a record of the hash values obtained from the strings input so far.

Here are several ways to optimize this program:

1. Unnecessary casting: The casting `(int)s.size()` in the for loop of function `h` is unnecessary. The `size()` function already returns a size_t which can be implicitly cast to an int. 

2. Avoiding string comparison: The `if (ins[0] == 'i')` statement is comparing only the first character of the input command. It's more idiomatic and safer to compare the whole string. 

3. Using switch-case instead of if-else: In the hashing function "h", instead of using multiple if-else conditions for character comparison, a switch-case statement can be used. Switch-case is generally faster in execution than if-else when there are more than 2 conditions.

4. Using a bitset instead of boolean array: Bitset is a more memory-efficient data structure than a boolean array. A boolean array in C++ takes 1 byte of memory for each element while a bitset needs only 1 bit.

Here is the optimized version of the program based on the above points:

```cpp
#include <iostream>
#include <string>
#include <bitset>
using namespace std;

const int MAX = 244140624;
bitset<MAX> chk;
int n;
string ins, s;

int h(string s) {
  int ret = 0;
  for (int i = 0; i < s.size(); ++i) {
    ret *= 5;
    switch(s[i]) {
      case 'A':
        ret += 1;
        break;
      case 'C':
        ret += 2;
        break;
      case 'G':
        ret += 3;
        break;
      case 'T':
        ret += 4;
        break;
    }
  }
  return ret;
}

int main() {
  ios::sync_with_stdio(false);
  cin >> n;
  while (n--) {
    cin >> ins >> s;
    if (ins == "insert") {
      chk.set(h(s));
    } else {
      cout << (chk.test(h(s)) ? "yes" : "no") << endl;
    }
  }
  return 0;
}
```

Please note: The optimized version assumes that the insert command is "insert". If the insert command is different, please replace "insert" with the correct command.