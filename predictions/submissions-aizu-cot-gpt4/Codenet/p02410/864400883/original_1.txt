The given C/C++ program can be optimized in following ways:

1. Remove unnecessary variables: The variables `x` and `y` are unnecessary, as they are used only for immediate input storage. We can optimize this by storing the input directly in the arrays `a` and `b`.

2. Reduce the scope of variables: The variable `c` is used only for the calculation of the sum of the product of elements of `a` and `b` and printing the result. Its scope can be reduced to the internal for loop, which will make the code cleaner.

3. Use `std::ios_base::sync_with_stdio(false)`: This can significantly speed up `cin` and `cout` operations, because it disables the synchronization of all the C++ standard streams with their corresponding standard C streams if it is called before the program performs its first input or output operation.

4. Use `cin.tie(NULL)`: This unties `cin` from `cout`. Tied streams ensure that one stream is flushed automatically before each I/O operation on the other stream.

Now, let's apply these optimizations to the code:

```cpp
#include <iostream>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n, m;
  cin >> n >> m;

  int a[100][100], b[100];
  
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < m; j++) {
      cin >> a[i][j];
    }
  }
  
  for (int j = 0; j < m; j++) {
    cin >> b[j];
  }

  for (int i = 0; i < n; i++) {
    int c = 0;
    for (int j = 0; j < m; j++) {
      c += a[i][j] * b[j];
    }
    cout << c << '\n';
  }
  
  return 0;
}
```

These changes should help to optimize the given program.