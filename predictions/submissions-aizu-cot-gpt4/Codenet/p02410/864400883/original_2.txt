Step 1: Avoiding unnecessary variables
The variables x and y are not necessary. You can directly input values to the arrays.

Step 2: Reducing memory usage
The array a[100][100] is quite large and it is not necessary to store all values. We only compute the sum of a[i][j]*b[j], so we can do this computation directly in the input loop and avoid the storage of the a array.

Step 3: Reducing the number of iterations
The current program has two nested loops. The inner loop can be avoided by calculating the result during the input reading.

Step 4: Initializing variables in declaration
It's a good practice to initialize variables during declaration. It reduces the chance of bugs related to uninitialized variables.

The optimized program would look like this:

```C++
#include <iostream>
using namespace std;

int main() {
  int n, m;
  int b[100];
  cin >> n >> m;

  for (int j = 0; j < m; j++) {
    cin >> b[j];
  }

  for (int i = 0; i < n; i++) {
    int c = 0;
    for (int j = 0; j < m; j++) {
      int a;
      cin >> a;
      c += a * b[j];
    }
    cout << c << endl;
  }

  return 0;
}
```

This optimized version avoids unnecessary variables and memory usage. It also reduces the number of iterations by combining the input reading and computation.