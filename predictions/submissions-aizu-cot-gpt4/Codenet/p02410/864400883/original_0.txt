Optimization Steps:
1. The variable `x` is redundant, `cin` can directly assign values to `a[i][j]`.
2. The same applies to the variable `y`, `cin` can directly assign values to `b[j]`.
3. The variable `c` can be defined inside the second loop, there is no need to define it at the beginning of `main()`.
4. The `endl` in `cout` causes the output buffer to be flushed frequently, which can slow down the program. A possible optimization is to replace `endl` with `"\n"`.

The optimized program:

```cpp
#include <iostream>
using namespace std;
int main() {
  int n, m;
  int a[100][100], b[100];
  cin >> n >> m;
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < m; j++) {
      cin >> a[i][j];
    }
  }
  for (int j = 0; j < m; j++) {
    cin >> b[j];
  }
  for (int i = 0; i < n; i++) {
    int c = 0;
    for (int j = 0; j < m; j++) {
      c += a[i][j] * b[j];
    }
    cout << c << "\n";
  }
  return 0;
}
```