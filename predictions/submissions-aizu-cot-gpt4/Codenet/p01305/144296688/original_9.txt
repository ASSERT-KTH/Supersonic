The given code has multiple nested loops, which is computationally expensive and causes a large running time. Here are the steps to optimize this code:

1. Move the initialization of the "num" array out of the loops: This array is initialized to 0 multiple times within the nested loops, which is unnecessary. Initializing it only once will reduce memory usage and running time.

2. Combine the summation and comparison operations: Instead of first summing "geitu" and "jacky" in separate loops and then comparing them, you can sum and compare in the same loop. This will reduce the number of iterations and hence the running time.

3. Optimize the calculation of "ans" and "ans2": The current code unnecessarily multiplies and divides these variables multiple times. You can perform the operations in a more efficient order to reduce running time.

4. The deep nested for-loops are unavoidable because of the problem's nature. It's a brute-force approach to find all permutations.

Here is the optimized code:

```cpp
#include <cstdlib>
#include <iostream>
using namespace std;
int main() {
  int n;
  cin >> n;
  for (int l = 0; l < n; l++) {
    int a[2][9];
    double winrate1 = 0, winrate2 = 0;
    for (int j = 0; j < 2; j++) {
      for (int k = 0; k < 9; k++)
        cin >> a[j][k];
    }
    for (int z = 0; z < 9; z++) {
      for (int b = 0; b < 9; b++) {
        if (b == z)
          continue;
        for (int c = 0; c < 9; c++) {
          if (c == z || c == b)
            continue;
          for (int d = 0; d < 9; d++) {
            if (d == z || d == b || d == c)
              continue;
            for (int e = 0; e < 9; e++) {
              if (e == z || e == b || e == c || e == d)
                continue;
              for (int f = 0; f < 9; f++) {
                if (f == z || f == b || f == c || f == d || f == e)
                  continue;
                for (int g = 0; g < 9; g++) {
                  if (g == z || g == b || g == c || g == d || g == e || g == f)
                    continue;
                  for (int h = 0; h < 9; h++) {
                    if (h == z || h == b || h == c || h == d || h == e ||
                        h == f || h == g)
                      continue;
                    for (int i = 0; i < 9; i++) {
                      if (i == z || i == b || i == c || i == d || i == e ||
                          i == f || i == g || i == h)
                        continue;
                      int geitu = 0, jacky = 0;
                      for (int m = 0; m < 9; m++) {
                        int sum = a[0][m] + a[1][m];
                        geitu += a[0][m] > a[1][m] ? sum : 0;
                        jacky += a[1][m] > a[0][m] ? sum : 0;
                      }
                      if (geitu > jacky)
                        winrate1++;
                      else if (geitu < jacky)
                        winrate2++;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    double ans = (winrate1 / 362880) * 100000;
    ans = (int)(ans + 0.5) / 100000;
    double ans2 = (winrate2 / 362880) * 100000;
    ans2 = (int)(ans2 + 0.5) / 100000;
    cout << ans << " " << ans2 << "\n";
  }
  return 0;
}
```