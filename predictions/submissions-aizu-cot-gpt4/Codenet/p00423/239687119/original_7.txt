Step 1: The "vec" variable is not being used anywhere in this program. So, we can remove this variable to save memory.

Step 2: In the while loop, the condition is always true which is not good in terms of performance. In order to optimize, we can change it to "while(std::cin >> n)" so that it will break automatically when there is no input or when input is not an integer.

Step 3: The "else" keyword is redundant and can be removed since there is a "break" statement in the "if" condition. It will slightly improve the readability of the code.

Step 4: We can combine the two conditions "if (game_a == game_b)" and "else if (game_a > game_b)" into one using the "||" operator as the operation performed inside both conditions is the same. It will also improve the readability of the code.

Step 5: The two vectors "veca" and "vecb" are only used to store the results from each round of the game. Instead of storing all the results and then printing, we can directly print the result after each round. It will save a lot of memory especially when processing a large amount of input.

Here is the optimized code:

```cpp
#include <iostream>

int main() {
  int n;
  int a = 0;
  int b = 0;
  int game_a, game_b;
  while (std::cin >> n && n != 0) {
    for (int i = 0; i < n; ++i) {
      std::cin >> game_a >> game_b;
      if (game_a == game_b || game_a > game_b)
        a += game_a + game_b;
      else
        b += game_a + game_b;
    }
    std::cout << a << " " << b << std::endl;
    a = 0;
    b = 0;
  }
  return 0;
}

```