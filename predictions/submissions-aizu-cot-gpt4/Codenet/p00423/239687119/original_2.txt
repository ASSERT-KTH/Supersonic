This C++ program reads a series of game results from standard input, calculates the scores for each player, and prints the scores.

The scope of optimization here is not huge, but here are some changes that could be made:

1. We don't need to store all scores in vectors then print them later. We could print the scores immediately after each game ends. This will save memory usage because we won't need to store the scores. It will also slightly improve the running speed because we won't need to loop over the vectors to print the scores.

2. In the main while loop, we could use 'while(std::cin >> n && n != 0)' instead of 'while(1)'. This will avoid the need for the 'break' statement, which can make the code easier to read.

Here is the optimized code:

```c++
#include <iostream>

int main() {
  int n;
  int a = 0;
  int b = 0;
  int game_a, game_b;
  
  while (std::cin >> n && n != 0) {
    for (int i = 0; i < n; ++i) {
      std::cin >> game_a >> game_b;
      if (game_a == game_b) {
        a += game_a;
        b += game_b;
      } else if (game_a > game_b)
        a += game_a + game_b;
      else
        b += game_a + game_b;
    }
    std::cout << a << " " << b << std::endl;
    a = 0;
    b = 0;
  }
  
  return 0;
}
```
This program performs essentially the same function as the original, but it eliminates the need for the vectors and prints the scores immediately, saving memory and slightly improving runtime.