Here are some steps to optimize the given program:

1. Avoid the use of '#include <bits/stdc++.h>': This header file includes quite a lot of files, and it's not a standard library. It can slow down the compile time because it includes many unnecessary things. Instead, only include necessary header files.

2. Use 'ios_base::sync_with_stdio(false); cin.tie(NULL);': This line turns off the synchronization of all the C++ standard streams with their corresponding standard C streams if it is called before the program performs its first input or output operation. Adding 'cin.tie(NULL);' decouples cin and cout.

3. Avoid defining macros 'r' and 's': Using macros can make the code hard to debug and maintain. Instead, use conventional syntax.

Here's the optimized version of the program:

```cpp
#include <iostream>
#include <vector>

using namespace std;

int main() {
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);
  
    int n;
    cin >> n;

    int min = 2000000, t;
    vector<int> A(10001, 0);

    for (int i = 0; i < n; i++) {
        cin >> t;
        if (t < min)
            min = t;
        A[t]++;
    }
    A[min]--;
    cout << min;
    for (int i = min; i < 10001; i++) {
        for (int j = 0; j < A[i]; j++) { 
            cout << ' ' << i; 
        }
    }
    cout << '\n';
    return 0;
}
```