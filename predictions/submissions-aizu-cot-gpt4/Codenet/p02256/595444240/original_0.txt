This program calculates the greatest common divisor (GCD) of two input numbers a and b. Here are some steps to optimize it:

1. While calculating GCD, if b becomes zero, then a is the GCD. So checking whether c > 0 or not is unnecessary. Instead, we can simply check if b != 0.

2. scanf and printf are heavy IO operations. If your program is running in an environment where IO operations are costly, then you could consider reading from an input array and writing to an output array.

3. Variable 'i' is not used in the code, we can remove it.

4. Instead of an explicit assignment, 'c = 1', we can declare and initialize 'c' in the loop itself.

5. By convention, the 'main' function should return an integer value. We can add 'return 0' at the end of the program to signify successful termination.

The optimized code is:

```c
#include <stdio.h>

int main() {
  int a, b, c;
  scanf("%d%d", &a, &b);
  while (b != 0) {
    c = a % b;
    a = b;
    b = c;
  }
  printf("%d\n", a);
  return 0;
}
```

This version of the program is more efficient due to reduced number of variables, fewer operations, and a more precise loop condition.