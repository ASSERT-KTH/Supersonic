Here are some optimizations we can apply to your code:
1. We can reduce the number of array accesses by saving the values of H[b] and W[b] in local variables inside the second while loop, this will reduce the time complexity.
2. Instead of using printf() to print each character, we can create a string of '#' characters and print it once in each row. This is faster because it reduces the number of I/O operations, which are generally costly.
3. We can also replace cin and printf with scanf and printf as they are faster.
4. We can also reduce the use of the std namespace by using std:: before cin and cout. This saves memory by not importing the entire std namespace.

Here is the optimized code with above changes:
```cpp
#include <algorithm>
#include <cstdio>
#include <string>

int main() {
  int a = 0, b = 0, H[100], W[100];
  while (1) {
    scanf("%d %d", &H[a], &W[a]);
    if (H[a] == 0 && W[a] == 0)
      break;
    a++;
  }
  while (b < a) {
    int curH = H[b], curW = W[b];
    std::string line(curW, '#');
    for (int i = 0; i < curH; i++) {
      printf("%s\n", line.c_str());
    }
    b++;
    printf("\n");
  }
  return 0;
}
```