Optimization Steps:

1. The usage of `stdio.h` and `iostream` both for input and output is not necessary. We can use just `iostream` which is more C++ style.
2. The usage of `using namespace std;` is not considered a good practice. It is better to use `std::` before each standard library function.
3. Instead of using `printf` for each character printing, we can create a string of required length with '#' and print it once. This reduces the time complexity of the inner loop from O(n) to O(1).
4. Instead of using two different arrays `H` and `W`, we can use a single array of `std::pair<int, int>` to store both height and width. This reduces the memory usage.
5. Instead of using `while(1)`, we can use `for` loop until `std::cin` fails to read input. This makes the code cleaner and more readable.

Here is the optimized code:

```cpp
#include <iostream>
#include <vector>
#include <string>

int main() {
  std::vector<std::pair<int, int>> sizes;
  int height, width;

  while (std::cin >> height >> width && (height != 0 && width != 0)) {
    sizes.push_back({height, width});
  }

  for (const auto& size : sizes) {
    std::string line(size.second, '#');

    for (int i = 0; i < size.first; i++) {
      std::cout << line << "\n";
    }
    std::cout << "\n";
  }
  return 0;
}
```
