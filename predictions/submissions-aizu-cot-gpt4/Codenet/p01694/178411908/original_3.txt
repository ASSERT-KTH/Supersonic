Step 1: Avoid using `#include <bits/stdc++.h>` because it includes a lot of unnecessary headers, which increases the compilation time. Instead, include only the necessary headers.

Step 2: Remove the unused macros, typedefs, and constants. They are just occupying memory and are not being used anywhere in the code.

Step 3: Instead of using `string now = "";`, you can use `string now;` as the default constructor of string initializes it to an empty string.

Step 4: Avoid reading the input using `cin >> next;` inside the loop. It's better to read all the inputs at once into a vector and then iterate over the vector. This is because `cin` is much slower compared to iterating over the memory.

Here is the optimized code:

```cpp
#include <iostream>
#include <vector>
#include <string>

using namespace std;

int main() {
    int n;
    while (cin >> n, n) {
        vector<string> directions(n);
        for (int i = 0; i < n; ++i) {
            cin >> directions[i];
        }

        int ans = 0;
        string now;
        for (const auto& next : directions) {
            if ((now == "lu" && next == "ru") || (now == "ru" && next == "lu") ||
                (now == "ld" && next == "rd") || (now == "rd" && next == "ld")) {
                ans++;
            }
            now = next;
        }

        cout << ans << endl;
    }
    
    return 0;
}
```
In this optimized code, we've removed unnecessary headers, macros, typedefs, and constants. We read all the inputs at once into a vector and then iterated over the vector, which is faster than using cin inside the loop.