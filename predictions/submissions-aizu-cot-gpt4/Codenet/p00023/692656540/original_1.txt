Here are the optimization steps:

1. Memory Usage: You are storing the result of each computation in the array "ans". Instead of storing the result, you can print it directly which will save memory usage.

2. Running Time: You are using the pow() function to square the difference of coordinates. This function is slower in comparison to direct multiplication.

3. You're creating an array `d` to store 4 calculated values, this also could be avoided and the calculations can be done directly within the conditions.

The optimized program is as follows:

```c
#include <float.h>
#include <math.h>
#include <stdio.h>

int main(void) {
  int k, n;
  double xa, ya, ra, xb, yb, rb;
  double d0, d1, d2, d3;
  scanf("%d", &n);
  for (k = 1; k <= n; k++) {
    scanf("%lf %lf %lf %lf %lf %lf", &xa, &ya, &ra, &xb, &yb, &rb);
    d0 = sqrt((xb - xa) * (xb - xa) + (yb - ya) * (yb - ya));
    d1 = ra + rb;
    d2 = ra - rb;
    d3 = rb - ra;
    if (d0 > d1) {
      printf("%d\n", 0);
    } else if (d2 > d0) {
      printf("%d\n", 2);
    } else if (d3 > d0) {
      printf("%d\n", -2);
    } else {
      printf("%d\n", 1);
    }
  }
  return 0;
}
```

In this optimized code, the memory usage is decreased by not using the array "ans" and the running time is improved by using direct multiplication instead of pow function. The array `d` is also removed, further decreasing the memory usage.