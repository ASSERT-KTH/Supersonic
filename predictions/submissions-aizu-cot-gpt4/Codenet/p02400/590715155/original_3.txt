This program is already quite efficient, but there are a few small changes that could make it slightly more so:

1. The value of PI is a mathematical constant and will not change during the program's execution. So, it can be declared as a constant. This informs the compiler that PI's value can't be changed, which can help it optimize the code.
2. The printf function is slower than cout due to the internal buffering process that printf goes through. So, we can replace printf with cout to speed up the output.
3. Moreover, using endl causes the output buffer to flush, which can be slower than using "\n" for a newline.

After applying these optimizations, the code would look like this:

```c++
#include <iostream>
using namespace std;
int main() {
  constexpr double PI = 3.141592653589;
  double r;
  cin >> r;
  cout << PI * r * r << " " << 2 * PI * r << "\n";
  return 0;
}
```