Your program is already quite efficient, but there are some minor optimizations that can be done:

1. You can use `const` for the `PI` variable to indicate that it won't be changed.
2. Instead of using `cin` and `printf` which are from two different libraries (iostream and cstdio), you can use only iostream functions for consistency and less overhead.
3. The precision of PI can be increased to improve the accuracy of the calculations.
4. You can directly output the results using `cout` and `endl` instead of `printf` and `\n`. This is not necessarily a performance improvement, but it makes the code more consistent.

Here is the optimized code:

```cpp
#include <iostream>
using namespace std;

int main() {
  const double PI = 3.141592653589793238;
  double r;
  cin >> r;
  cout << PI * r * r << " " << 2 * PI * r << endl;
  return 0;
}
```

Note: C++ is a powerful language where performance can be dependent on a number of factors including the compiler, machine architecture, and even the specific use case. These changes are minor and may not have significant impacts on performance. For complex programs, profiling tools should be used to identify bottlenecks and areas of improvement.