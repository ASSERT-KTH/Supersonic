This program is pretty simple and doesn't use much memory or computational power. But, few optimizations can still be done to make it more efficient:

1. `std::ios::sync_with_stdio(false);` - This line will allow C++ to not synchronize with the C library's standard streams, which will make it run faster. This is because the C++ streams and the C streams are synchronized by default to keep them in order, but this takes time. Note: You should only use this if you're not mixing C and C++ IO functions.

2. `std::cin.tie(NULL);` - This line will untie cin from cout. By default, before each IO operation, all the buffers of tied streams are flushed. But since we are not using cout between cin operations, we can untie them to make it run faster.

3. `return 0;` is not necessary because if control reaches the end of the main function, the compiler will automatically insert return 0; So, we can remove this line.

Here's the optimized version of the program:

```cpp
#include <iostream>
int main() {
  std::ios::sync_with_stdio(false); 
  std::cin.tie(NULL);
  int x;
  std::cin >> x;
  std::cout << x * x * x << "\n";
}
```

Please note that these optimizations might not make a noticeable difference in this simple code, but they might be helpful in larger programs.