This is a simple program, but there are still a few things we could do to optimize it. Here's the step-by-step explanation:

1. Minimize the use of I/O operation: As I/O operations are expensive in terms of execution time, they should be minimized. Instead of passing the x value to printf function directly, we can use a variable to store the result of x * x * x and then print it out.

2. Optimize the multiplication operation: The current program has two multiplication operations. It's more efficient to use one multiplication and a single assignment. We can store the multiplication result of x * x in a variable first, then multiply it with x again.

Here's the optimized program:

```c
#include <stdio.h>
int main(void) {
  int x, cube;
  scanf("%d", &x);
  cube = x * x;
  cube = cube * x;
  printf("%d\n", cube);
  return 0;
}
```
This optimization improves the running time of the program by reducing the number of I/O and multiplication operations. However, the effect is minimal and might not be noticeable in such a small program. These types of optimizations become more important in larger, more complex programs where these operations might occur inside loops or function calls.