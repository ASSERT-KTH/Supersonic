Here are some of the small modifications that could be done to optimize this program.

1. Since the value of x is only used once, there is no need to store it in a variable. This will save memory.

2. The calculation "x * x * x" can be optimized. When you multiply x by itself twice, the compiler must perform two multiplications. This can be reduced to one multiplication by using the mathematical relation x^3 = x * x * x which is the same as x^2 * x. By storing the value of x^2 in a variable, you only need to do one multiplication operation to calculate x^3.

Here is the optimized version of the program:

```c
#include <stdio.h>

int main(void) {
    int x;
    scanf("%d", &x);
    int x_squared = x * x;
    printf("%d\n", x_squared * x);
    return 0;
}
```

However, in this case, the optimization does not provide a significant performance boost. Modern compilers are smart enough to optimize such cases automatically. Also, the memory saved by not storing 'x' is negligible. Good programming practice would be to keep the code more readable and maintainable.
If the program was performing more complex or repeated operations, the optimization would be more beneficial.