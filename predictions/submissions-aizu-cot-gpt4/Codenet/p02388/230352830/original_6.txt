The given C program is already quite simple and efficient, it takes an integer as input and prints the cube of that number. However, there are few small optimizations we can do:

1. Use multiplication assignment operator (*=) instead of multiplication operator (*): It is always recommended to use assignment operators wherever possible because it reduces the time of computation. Here, we can replace x * x * x with x *= x*x to perform the operation faster.

2. The printf statement can be optimized by using puts instead of printf. The puts function is faster than printf because it doesn't need to parse a format string.

Let's apply these optimizations to the code.

Here is the optimized C program:

```C
#include <stdio.h>

int main(void) {
  int x;
  scanf("%d", &x);
  x *= x*x;
  printf("%d\n", x);
  return 0;
}
```

Please note that the actual difference in execution time and memory usage between the original and optimized programs would be minimal, as the original code was already quite efficient.

Also, the second optimization mentioned is not applied, because changing printf to puts will change the output of the program, because puts adds a newline character at the end of the output, and we want to maintain the exact same output as the original program.