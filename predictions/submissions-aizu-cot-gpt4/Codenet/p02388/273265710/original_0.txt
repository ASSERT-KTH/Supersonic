The given program calculates the cube of a number within the range [0, 100] provided by the user. Here are some steps to optimize the program:

1. The function cubedNum() is declared to return void and also ends with a return statement which is unnecessary. We can remove the return statement at the end.

2. The program checks if the input number is in the range [0, 100] after every cin operation, which can be costly if the user enters an invalid number multiple times. We can make use of do-while loop to ask for the input until a valid number is entered.

3. In the cubing operation, the for loop is used to multiply the number with itself 3 times. This can be optimized by directly multiplying the number with itself twice.

Here is the optimized program:

```c++
#include <iostream>
using namespace std;
void cubedNum() {
  int inputNum;
  do {
    cin >> inputNum;
  } while (inputNum < 0 || inputNum > 100);
  
  int result = inputNum * inputNum * inputNum;

  cout << result << endl;
}
int main() {
  cubedNum();
  return 0;
}
```
This version of the program will execute faster and use less memory as it reduces the number of multiplications and user input validations.