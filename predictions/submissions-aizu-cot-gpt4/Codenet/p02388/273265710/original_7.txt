The program you wrote is quite efficient in terms of time complexity. However, there are a few minor areas that could be optimized.

1. Cancel the `while(1)` loop and use `do-while` loop instead. This way, we don't need to initialize `inputNum` to -1 at the beginning.

2. For the cubing operation, you used a for loop. This is unnecessary as it is a simple math operation and can be done directly.

3. Remove the unnecessary `return;` statement at the end of `cubedNum`.

4. Instead of using the `void` keyword in the function definition and declaration, you could use `int` to return the cubed number directly.

Following these steps, we get the optimized code:

```cpp
#include <iostream>
using namespace std;

int cubedNum() {
  int inputNum;
  do {
    cin >> inputNum;
  } while (inputNum < 0 || inputNum > 100);
  
  return inputNum * inputNum * inputNum;
}

int main() {
  cout << cubedNum() << endl;
  return 0;
}
```

In this optimized version, the input is checked and the cube is calculated in a more straightforward way, reducing the overhead of unnecessary looping and condition checking.