Your program seems to be pretty optimized already, however, there is one potential improvement we can make. The program currently performs a series of calculations and prints each character one by one. This can be time consuming. Instead, we can create a buffer to store the characters and print them all at once.

Here is an explanation of the steps:

1. Declare a character array, `buffer`, with a size of `H * W + 1`. This array will be used to store the characters that need to be printed.
2. Replace each `cout` operation inside the nested for loop with an assignment operation that stores the character into the corresponding position in the buffer.
3. After the nested loop, we add a newline character to the buffer.
4. After the outer loop, we add a null character to the buffer and print out the entire buffer at once using `cout`.

Here's the optimized program:

```cpp
#include <iostream>
using namespace std;
int main() {
  int H, W;
  while (cin >> H >> W && H != 0 && W != 0) {
    char buffer[H * W + H + 1];
    int pos = 0;
    for (int i = 1; i <= H; i++) {
      for (int j = 1; j <= W; j++) {
        buffer[pos++] = ".#"[(i + j) % 2 == 0];
      }
      buffer[pos++] = '\n';
    }
    buffer[pos] = '\0';
    cout << buffer << endl;
  }
  return 0;
}
```

Please note that this optimization may not have a significant effect on the running time of the program if the inputs H and W are small. However, if H and W are large, this optimization can reduce the time taken to print the output.