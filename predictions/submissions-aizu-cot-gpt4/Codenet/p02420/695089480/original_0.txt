Step 1: The global variables are not the best practice. They can be moved inside the main function to reduce the scope and improve readability.

Step 2: The usage of the main function without return type and arguments is not a good practice, we can declare it explicitly to improve code quality.

Step 3: The division of the complex for loop into simpler statements will make the code more readable and maintainable.

Step 4: We can use std::string instead of char array and std::cin, std::cout instead of printf and scanf for better practices in C++.

Here is the optimized code:

```cpp
#include <iostream>
#include <string>

int main() {
    int m, h, t, a;
    std::string s;
    while (std::cin >> s >> m, s[0] != '-') {
        a = s.size();
        for (int i = 0, t = 0; i < m; ++i) {
            std::cin >> h;
            t += h;
        }
        for (int i = 0; i < a; ++i) {
            std::cout << s[(t + i) % a];
        }
        std::cout << "\n";
    }
    return 0;
}
```
Please note that the original code is written in C style, the optimized code is written in C++ style since C++ provides more features to simplify and optimize the program.

Also, keep in mind that the proposed changes are mainly focused on improving code readability and maintainability, they might not necessarily cause the program to run faster or use less memory.