The program can be optimized in several ways:

1. Avoid multiple map lookups: The program is currently performing multiple lookups for the same key in the map. This is redundant and can be optimized by performing the lookup once and reusing the result.

2. Use references to avoid copying: When working with large data structures such as vectors, it is more efficient to use references whenever possible to avoid unnecessary copying.

3. Move variable declaration closer to usage: Moving the declaration of variables closer to where they are used can make the code more readable and can also prevent unnecessary memory allocation.

Here is the optimized code:

```cpp
#include <iostream>
#include <map>
#include <string>
#include <vector>
using namespace std;
map<pair<vector<int>, int>, int> mp;
string qes[128];

int search(vector<int> &vi, int depth, int used, int m, int n) {
  pair<vector<int>, int> key = make_pair(vi, used);
  auto it = mp.find(key);
  if (it != mp.end())
    return it->second;
  if (vi.size() > (1 << (m - depth)))
    return 100;
  if (vi.size() == 1)
    return depth;
  int res = 100;
  for (int i = 0; i < m; i++) {
    if ((used >> i) & 1)
      continue;
    vector<int> a, b;
    for (int& j : vi) {
      if (qes[j][i] == '0')
        a.push_back(j);
      else
        b.push_back(j);
    }
    if (a.empty() || b.empty())
      continue;
    res = min(res, max(search(a, depth + 1, used | (1 << i), m, n),
                       search(b, depth + 1, used | (1 << i), m, n)));
  }
  return mp[key] = res;
}

int main() {
  int m, n;
  while (cin >> m >> n, m) {
    for (int i = 0; i < n; i++)
      cin >> qes[i];
    vector<int> vi(n);
    for (int i = 0; i < n; i++)
      vi[i] = i;
    mp.clear();
    cout << search(vi, 0, 0, m, n) << endl;
  }
}
```

In this optimized code, I have created a pair called "key" to store the pair (vi, used) and used it for lookups in the map. This reduces the number of lookups in the map. I also used a reference in the for loop to avoid copying the variable "j". Finally, I moved the declaration of the variables "a" and "b" closer to where they are used.