The provided program is already quite optimized. It takes two integers as input and outputs their product and the sum of their doubles. It has a time complexity of O(1) and a space complexity of O(1), which is the best possible complexity for this task.

However, there are a few small optimizations we can make. 

1. The integer variables `a` and `b` are declared separately, which is slightly inefficient. We can declare them on the same line to make the code more concise.

2. In the output statement, the product `a * b` is calculated before the sum `a * 2 + b * 2`. This is slightly inefficient because multiplication is generally a more expensive operation than addition. We can optimize the program by calculating the sum first.

3. The `std::endl` command is used to create a new line at the end of the output. This command also flushes the output buffer, which is an expensive operation. Since the program ends immediately after this command, we don't need to flush the buffer. We can replace `std::endl` with `'\n'` to create a new line without flushing the buffer.

Here is the optimized code with these improvements:

```cpp
#include <iostream>
int main() {
  int a, b;
  std::cin >> a >> b;
  std::cout << a * 2 + b * 2 << " " << a * b << '\n';
}
```

Please note that these optimizations are very minor and are unlikely to have a noticeable impact on the performance of the program. The original code was already quite efficient.