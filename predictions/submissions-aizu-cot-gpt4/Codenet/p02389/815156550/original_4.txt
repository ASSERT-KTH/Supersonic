The given code is simple and already quite optimized. However, the only small optimization I could suggest is to reduce the number of multiplications. In the current code, multiplication operation is performed three times. As multiplication operation is more expensive in terms of CPU usage compared to addition, we can reduce one multiplication operation.

Here are the steps:
1. Calculate 'a' multiplied by 2, store it in a variable (we can call it `a_times_2`).
2. Calculate 'b' multiplied by 2, store it in another variable (we can call it `b_times_2`).
3. Then, we can add `a_times_2` and `b_times_2` to get the second part of the output. 
4. Also, to get the first part of the output (which is 'a' times 'b'), we can just add `a_times_2` and `b_times_2` and then divide the result by 2.

Here is the optimized code:

```cpp
#include <iostream>
int main() {
  int a, b;
  std::cin >> a >> b;
  int a_times_2 = a * 2;
  int b_times_2 = b * 2;
  std::cout << (a_times_2 + b_times_2) / 2 << " " << a_times_2 + b_times_2 << std::endl;
}
```

This optimized code performs one less multiplication operation than the original one. But please note that the gain in efficiency might not be noticeable in this simple code, and it would only make a difference in more complex scenarios where these operations are inside loops or being called multiple times.