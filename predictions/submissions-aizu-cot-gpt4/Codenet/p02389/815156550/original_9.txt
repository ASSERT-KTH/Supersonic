The provided C++ program is quite simple and efficient. It takes two integers as input and calculates the product and the perimeter of a rectangle with sides a and b. 

However, there is a slight optimization that can be done to reduce the number of multiplications. Here, a and b are multiplied twice, once for the area (a * b) and once for the perimeter (2*a + 2*b). 

Multiplication is a costly operation in terms of processing time. We can reduce one multiplication operation by calculating the product once, storing it in a variable, and then using the variable as needed.

Here is the step-by-step optimization:
1. Declare an integer variable, say `product`, after taking inputs a and b.
2. Multiply a and b, and store the result in `product`.
3. Use `product` to output the product of a and b.
4. Calculate the perimeter using `product` and the formula `2 * (a + b)`.

Here is the optimized code:

```cpp
#include <iostream>
int main() {
  int a;
  int b;
  std::cin >> a >> b;
  int product = a * b; // calculate the product once and store it
  std::cout << product << " " << 2 * (a + b) << std::endl; // use the product and calculate the perimeter
}
```
Although this optimization might not show a significant difference in this simple program, it's a good practice to eliminate redundant operations in more complex programs.