This code is already quite efficient and there's not much to optimize in terms of running time or memory usage. However, you could make a small modification to the computation of `c` to avoid the two multiplications. Instead, you could compute `c` as `2 * (a + b)`, which results in just one multiplication operation. 

This is a micro-optimization and the performance improvement might be negligible. Modern compilers are smart enough to optimize such things on their own. But it does make the code slightly simpler and easier to understand.

Here's the optimized code:

```
#include <stdio.h>
int main() {
  int a, b;
  scanf("%d %d", &a, &b);
  int area = a * b;
  int c = 2 * (a + b);
  printf("%d %d\n", area, c);
}
```

The input `scanf` and output `printf` statements are generally considered slow. If you really need to optimize the I/O and this is a bottleneck in your program (most likely in a competitive programming scenario), you can use faster I/O methods or buffer the input/output, but that would make the code more complex and less readable.