The program is already quite optimized since it does not contain any complex or time-consuming operations. However, it is possible to make a few minor modifications to slightly improve the performance.

1. The variables 'a' and 'b' are scanned from the user and then used to compute the area and perimeter of a rectangle. Since these are only used once, we can eliminate the need for variables 'a' and 'b' and directly scan the user input into the calculations.

2. The perimeter calculation is done as 'a * 2 + b * 2'. This can be simplified to '2 * (a + b)'. This reduces the number of multiplications from two to one. 

Here is the optimized code:

```C
#include <stdio.h>

int main() {
    int area, c;
    scanf("%d %d", &area, &c);
    area *= c;
    c = 2 * (area/c + c);
    printf("%d %d\n", area, c);
    return 0;
}
```

Please note that the handling of I/O (input/output) operations and the simplicity of the operations in this code mean that any optimization would be microscopic and not noticeable in practice. In real applications, optimization efforts would be better spent on more complex and CPU or memory-intensive parts of the code.