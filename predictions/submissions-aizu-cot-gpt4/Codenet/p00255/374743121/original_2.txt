Here are the steps to optimize the given program:

1. We can see that the second loop where you input elements to the array `j` doesn't seem to serve any purpose. You are not using the array `j` in the rest of your code. So, you can remove this loop to reduce the running time.

2. The third loop is sorting the array `j` but again, the array `j` is not used later on. So, you can remove this loop as well to save time.

3. The variable `a` is not initialized before it's used, which is not a good practice and can lead to undefined behavior.

4. It's better to declare variables `i`, `n`, `s` and `a` outside the loop. In C++, you should avoid declaring variables inside a loop as it leads to their creation and deletion in each iteration which could be a performance hit.

5. In C++, the return type of the `main` function is `int`. So, it's better to change `main()` to `int main()` and return 0 at the end of the function.

Here's the optimized code:
```cpp
#include <iostream>
using namespace std;

int main() {
  long long i, n, s, a;
  while (true) {
    cin >> n;
    if (!n)
      break;
    s = 0;
    a = 0;
    for (i = 0; i < n; i++) {
      cin >> a;
      s += a;
    }
    while (n > 0) {
      a = max(n-- * s, a);
    }
    cout << a << endl;
  }
  return 0;
}
```