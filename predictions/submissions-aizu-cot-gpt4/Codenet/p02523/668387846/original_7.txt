The optimization of your program involves two steps.

1. **Avoid unnecessary usage of complex library** : The program uses the complex library to store the coordinates of two points and calculate the distance between them. But in this case, we don't need to use complex numbers at all. We can store the coordinates of the points in four double variables and calculate the distance using the Pythagorean theorem. This will reduce the memory usage and also make the code simpler and easier to understand.

2. **Use fast I/O operations** : cin and cout are slower than scanf and printf. Since the program involves only simple I/O operations, we can use scanf and printf instead of cin and cout to speed up the program.

Here is the optimized version of the program.

```C++
#include <cstdio>
#include <cmath>
using namespace std;
int main() {
  double x1, y1, x2, y2;
  scanf("%lf%lf%lf%lf", &x1, &y1, &x2, &y2);
  printf("%.5f\n", hypot(x2-x1, y2-y1));
  return 0;
}
```

In the optimized program, I used the hypot function from the cmath library to calculate the distance between the two points. The hypot function returns sqrt(p*p + q*q), which is exactly the distance formula in two dimensions. This function is safer than manually calculating the distance, because it avoids overflow and underflow problems.