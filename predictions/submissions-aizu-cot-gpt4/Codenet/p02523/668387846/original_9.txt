The program is already quite optimized, but there are a few points we can consider to further optimize it:

1. The "cmath" library seems to be included but it's not being used in the program. We can remove it to reduce the program's footprint.

2. We can directly use the 'cout' object provided by the 'iostream' library instead of using 'printf' function. By using 'cout', we can avoid the overhead of having to parse the format string at runtime.

3. In the 'cin' line, the 'real()' and 'imag()' functions are used to input the real and imaginary parts of the complex numbers. However, these functions return a reference to the real and imaginary parts, which may not be very efficient. It's better to read the values into temporary variables and then use them to construct the complex numbers.

Here is the optimized version of the program with the above changes:

```cpp
#include <complex>
#include <iostream>
using namespace std;
int main() {
  double r1, i1, r2, i2;
  cin >> r1 >> i1 >> r2 >> i2;
  complex<double> P1(r1, i1), P2(r2, i2);
  cout.precision(5);
  cout << abs(P1 - P2) << endl;
  return 0;
}
```

In this version, we first input the real and imaginary parts into 'r1', 'i1', 'r2', and 'i2'. Then we construct the 'complex' objects 'P1' and 'P2' using these values. Finally, we use 'cout' to output the result with a precision of 5 decimal places.