Here are the optimization steps for your code:

1. The usage of std::complex class and std::abs function for complex numbers is a bit overkill for your purpose. If you need to calculate the distance between two points in a 2D space, you should be better off with using simple arithmetic operations. 

2. Using cin and cout for input/output is slower than using scanf and printf. In competitive programming, it is often recommended to use scanf and printf for faster input/output. 

3. It is a good practice to avoid using the std namespace in global scope. It is better to use std:: before each standard library function or class.

Here is your optimized code:

```cpp
#include <cstdio>
#include <cmath>

int main() {
  double x1, y1, x2, y2;
  scanf("%lf %lf %lf %lf", &x1, &y1, &x2, &y2);
  printf("%.5f\n", std::hypot(x2 - x1, y2 - y1));
  return 0;
}
```
In this optimized code, I replaced the complex numbers with four double numbers. I used the hypot function to calculate the Euclidean distance between the two points. This function is more efficient and accurate for this purpose than calculating the square root of the sum of squares manually. I also replaced the cin and cout with scanf and printf for faster input/output.