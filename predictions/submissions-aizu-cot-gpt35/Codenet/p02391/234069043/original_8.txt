The given C/C++ program can be optimized in the following steps:

1. Remove unnecessary header files: The `<algorithm>` and `<vector>` header files are not being used in the program, so we can remove them.

2. Avoid using `using namespace std`: It is considered good practice to avoid using `using namespace std` as it can lead to naming conflicts. Instead, we can use the `std::` prefix for the standard library functions and classes.

3. Use `const` for the `pai` variable: Since the value of `pai` is constant and does not change in the program, we can declare it as a `const` variable.

4. Use `cin` and `cout` instead of `scanf` and `printf`: The `cin` and `cout` stream operators are generally faster than `scanf` and `printf` in C++ programs. We can use them to read input and print output.

5. Optimize the comparison logic: Instead of using `if-else` statements to compare `a` and `b`, we can directly use the comparison operators inside `cout` to print the result.

Here is the optimized version of the program:

```cpp
#include <iostream>

int main() {
  const double pai = 3.141592653589;
  int a, b;
  std::cin >> a >> b;

  if (a > b)
    std::cout << "a > b\n";
  else if (a < b)
    std::cout << "a < b\n";
  else
    std::cout << "a == b\n";

  return 0;
}
```