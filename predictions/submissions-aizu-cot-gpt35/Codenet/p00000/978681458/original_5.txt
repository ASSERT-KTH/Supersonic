Step 1: Reduce the number of iterations in the inner loop.

In the original program, the inner loop goes from 1 to 9. However, since we already know that any number multiplied by 1 is itself, we can start the inner loop from 2 instead of 1. This will reduce the number of iterations by 1 for each value of i.

Step 2: Add a check to skip values of j where j>i.

In the original program, the inner loop iterates over all values of j from 1 to 9, even when i is less than j. However, since the multiplication of i by j is the same as the multiplication of j by i, we can skip the values of j where j>i. This will reduce the number of unnecessary calculations and print statements.

Based on these optimizations, here is the optimized program:

```c
#include <stdio.h>

int main(void) {
  int i, j;
  
  for (i = 1; i < 10; i++) {
    for (j = i; j < 10; j++) {
      printf("%dx%d=%d\n", i, j, i * j);
    }
  }
  
  return 0;
}
```

This optimized program reduces the number of iterations in the inner loop and avoids unnecessary calculations and print statements, resulting in improved running time and memory usage.