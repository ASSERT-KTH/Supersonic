The given program calculates and prints the multiplication table from 1 to 9. To optimize this program, we can make a small modification by changing the loop conditions.

Currently, the program uses nested loops with conditions `i < 10` and `j < 10`. However, since we only want to print the multiplication table from 1 to 9, we can modify the loop conditions to `i <= 9` and `j <= i`. This will eliminate unnecessary iterations and improve both the running time and memory usage of the program.

Here is the optimized program:

```c
#include <stdio.h>

int main(void) {
  int i, j;
  for (i = 1; i <= 9; i++) {
    for (j = 1; j <= i; j++) {
      printf("%dx%d=%d\n", i, j, i * j);
    }
  }
  return 0;
}
```

By modifying the loop conditions, we ensure that the inner loop only runs up to the current value of `i`, reducing the number of iterations significantly. This optimization improves the program's performance and reduces unnecessary memory usage.