The given program reads two integers and an operator from the user and performs the corresponding arithmetic operation. The program continues to execute until the operator is equal to '?'.

To optimize the program, we can make the following modifications:

1. Instead of using the `scanf` function to read input, we can use `cin` from the `iostream` library. This will improve the performance of input reading.

2. We can remove the `using namespace std;` line and fully qualify the `std::` namespace for the `cin` and `cout` objects. This will prevent any potential naming conflicts.

3. Instead of using a while loop with a constant condition `while (1)`, we can use a `do-while` loop. This will ensure that the loop executes at least once before checking the condition.

4. We can replace the series of `if-else if` statements with a `switch` statement. This will make the code more readable and potentially improve performance.

Here is the optimized version of the program:

```cpp
#include <iostream>

int main() {
  int x, y;
  char z;
  do {
    std::cin >> x >> z >> y;
    switch (z) {
      case '?':
        return 0;
      case '+':
        std::cout << x + y << std::endl;
        break;
      case '-':
        std::cout << x - y << std::endl;
        break;
      case '/':
        std::cout << x / y << std::endl;
        break;
      case '*':
        std::cout << x * y << std::endl;
        break;
    }
  } while (true);
  return 0;
}
```