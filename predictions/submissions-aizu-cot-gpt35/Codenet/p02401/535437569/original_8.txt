Step 1: Avoid repetitive calls to `printf()` and `scanf()`.
- Currently, the program is calling `printf()` and `scanf()` multiple times inside the loop. This can be optimized by using a variable to store the result and then printing it once after the loop ends.

Step 2: Use a switch statement instead of multiple if-else statements.
- Currently, the program is using multiple if-else statements to check the value of `z`. This can be optimized by using a switch statement, which can be faster in some cases.

Step 3: Combine the return statement with the conditional check.
- Instead of using a separate if statement to check if `z` is '?', the return statement can be combined with the conditional check in the while loop.

Below is the optimized version of the program:

```cpp
#include <cstdio>
using namespace std;

int main() {
  int x, y;
  char z;
  int result;
  
  while (scanf("%d %c %d", &x, &z, &y) == 3) {
    switch (z) {
      case '?':
        return 0;
      case '+':
        result = x + y;
        break;
      case '-':
        result = x - y;
        break;
      case '/':
        result = x / y;
        break;
      case '*':
        result = x * y;
        break;
    }
    printf("%d\n", result);
  }
  
  return 0;
}
```