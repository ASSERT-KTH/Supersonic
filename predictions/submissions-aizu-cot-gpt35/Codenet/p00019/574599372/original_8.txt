The given program calculates the factorial of a number 'n'. To optimize the program, we can make the following modifications:

1. Remove unnecessary header files: The program includes the `<cstdio>` header file, which is not used. We can remove it.

2. Remove the `using namespace std` directive: It is considered a bad practice to include the entire namespace. Instead, we can use the `std::` prefix for the required standard library functions.

3. Use a more efficient data type: The program uses `long long` for the variable 'a', which may be excessive for calculating the factorial of 'n'. We can use `unsigned long long` instead, as the factorial will always be a positive value.

4. Initialize 'a' with 1: Since the factorial of 0 is 1, we can initialize 'a' with 1 instead of assigning it after the loop starts.

5. Use pre-increment operator: In the `for` loop, we can use the pre-increment operator (`++i`) instead of post-increment (`i++`) as it is generally more efficient.

6. Use the `<<` operator for output: Instead of using `endl`, which flushes the output buffer, we can use the `<<` operator to output 'a' and a newline character ('\n').

Here is the optimized version of the program:

```cpp
#include <iostream>

int main() {
  unsigned long long a = 1;
  int n;
  std::cin >> n;
  for (int i = 2; i <= n; ++i) {
    a *= i;
  }
  std::cout << a << '\n';
  return 0;
}
```