To optimize the given program, I will make the following modifications:

1. Remove the `using namespace std;` line to avoid namespace pollution.
2. Change the `scanf` and `printf` functions to `cin` and `cout` respectively, for simpler and more idiomatic input/output operations.
3. Replace the `scanf("%d", &n);` line with `cin >> n;` for inputting the value of `n`.
4. Replace the `printf("%d\n", min(dp[0][n / 2][0], dp[0][n / 2][1]));` line with `cout << min(dp[0][n / 2][0], dp[0][n / 2][1]) << endl;` for outputting the result.

Here is the optimized program:

```cpp
#include <iostream>
#include <algorithm>
using std::cin;
using std::cout;
using std::endl;
using std::min;

const int INF = 1000000000;

int main() {
  int n, c;
  static int dp[2][5000 + 2][2];

  for (int i = 0; i < 2; i++)
    for (int j = 0; j < 5002; j++) {
      dp[i][j][0] = INF;
      dp[i][j][1] = INF;
    }

  dp[1][1][0] = 0;
  dp[1][0][1] = 0;

  cin >> n;

  for (int i = 2; i <= n; i++) {
    int s = i % 2, t = 1 - s;
    cin >> c;

    for (int j = 0; j <= n / 2; j++) {
      if (j == 0)
        dp[s][j][0] = INF;
      else
        dp[s][j][0] = min(dp[t][j - 1][0], dp[t][j - 1][1] + c);
      dp[s][j][1] = min(dp[t][j][0] + c, dp[t][j][1]);
    }
  }

  cout << min(dp[0][n / 2][0], dp[0][n / 2][1]) << endl;
}
```