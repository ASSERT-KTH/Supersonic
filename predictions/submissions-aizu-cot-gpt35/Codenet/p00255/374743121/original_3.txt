Optimization Steps:

1. Remove unnecessary include statements.
2. Remove the "using namespace std;" statement and explicitly specify the std namespace where needed.
3. Replace the "main()" function declaration with "int main()".
4. Use more meaningful variable names to improve code readability.
5. Remove the unnecessary "cout << a << endl;" statement.
6. Combine the two for-loops that read the input into a single loop.
7. Move the sorting of the array "j" outside the loop that reads the input.
8. Remove the unnecessary semicolon after the third for-loop.
9. Replace the "max" function with a conditional statement to find the maximum value.
10. Use a pre-increment operator instead of a post-increment operator in the second for-loop.

Here is the optimized C++ program:

```c++
#include <algorithm>
#include <iostream>

int main() {
  long long n, sum, current, max_sum;
  long long arr[99999];

  while (true) {
    std::cin >> n;
    if (n == 0)
      break;

    sum = 0;
    for (int i = 0; i < n; ++i) {
      std::cin >> current;
      sum += current;
      arr[i] = current;
    }

    std::sort(arr + 1, arr + n);

    max_sum = 0;
    for (int i = n; i > 0; --i) {
      sum += arr[i];
      max_sum = (i * sum > max_sum) ? i * sum : max_sum;
    }

    std::cout << max_sum << std::endl;
  }

  return 0;
}
```