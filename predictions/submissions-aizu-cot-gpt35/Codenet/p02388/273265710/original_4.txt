Step 1: Remove unnecessary variable

The variable "inputNum" is only used within the cubedNum() function and does not need to be a global variable. We can remove the global variable declaration and pass the inputNum as a parameter to the cubedNum() function.

Step 2: Remove unnecessary loop

The while loop in the cubedNum() function is used to validate the inputNum. However, we can use a do-while loop instead to avoid the initial check. This will eliminate the need for the break statement and simplify the code.

Step 3: Use the power operator

Instead of using a for loop to calculate the cube of the inputNum, we can use the power operator (**) to directly calculate the cube.

Step 4: Remove unnecessary return statement

The return statement at the end of the cubedNum() function is not required since the function has a void return type. We can remove it to simplify the code.

Here is the optimized C++ program:

```cpp
#include <iostream>
using namespace std;

void cubedNum() {
  int inputNum;
  do {
    cin >> inputNum;
  } while (inputNum < 0 || inputNum > 100);
  
  int result = inputNum * inputNum * inputNum;
  cout << result << endl;
}

int main() {
  cubedNum();
  return 0;
}
```