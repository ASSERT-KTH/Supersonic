Explanation of optimization steps:

1. Remove unnecessary `using namespace std;` statement to avoid namespace pollution and improve readability.

2. Use `std::ios_base::sync_with_stdio(false);` to disable synchronization between C and C++ standard streams, which can improve input/output performance.

3. Use `std::cin.tie(nullptr);` to untie `std::cin` from `std::cout`, which can also improve input/output performance.

4. Use `std::endl` instead of `'\n'` as the line-ending character for `std::cout` to ensure the output is flushed and improve output performance.

5. Use `std::pow(n, 3)` instead of `n * n * n` to calculate the cube of `n`. `std::pow` is a standard library function that may provide better performance optimization for exponentiation.

Optimized program:

```cpp
#include <iostream>
#include <cmath>

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int n;
  std::cin >> n;
  std::cout << std::pow(n, 3) << std::endl;
  return 0;
}
```