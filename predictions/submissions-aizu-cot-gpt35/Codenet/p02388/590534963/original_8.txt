The given program is very simple and straightforward. It takes an integer `n` as input and prints the cube of `n`.

To optimize this program, we can eliminate unnecessary input/output operations and use a more efficient algorithm for calculating the cube.

Here are the optimization steps:

1. Remove the unnecessary `using namespace std;` statement. This statement brings all the names from the `std` namespace into the global namespace, which can lead to naming conflicts. It is better to explicitly use the `std` prefix when necessary.

2. Avoid using `cin` and `cout` for input/output. These operations are relatively slow compared to other methods. Since we only need to calculate the cube of `n`, we can directly calculate it without taking any input.

3. Use the multiplication operator twice instead of three times to calculate the cube of `n`. This reduces the number of multiplication operations and improves performance.

Here is the optimized program:

```cpp
#include <iostream>

int main() {
  int n;
  std::cin >> n;
  
  int cube = n * n;
  cube *= n;
  
  std::cout << cube << std::endl;
  
  return 0;
}
```