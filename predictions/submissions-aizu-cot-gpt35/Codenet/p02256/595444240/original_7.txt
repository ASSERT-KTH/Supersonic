Explanation of the optimization steps:

1. Remove unnecessary variable declaration: The variable `i` is not used in the program, so we can remove it.

2. Avoid repeated calculations: In the original program, the modulus operation `a % b` is performed twice in each iteration of the while loop. We can avoid this by moving the calculation of `c` to the end of the loop and eliminating the initial assignment `c = 1`.

3. Optimize input/output operations: The original program uses `scanf` and `printf` for input and output respectively. These functions can be slow, especially when reading or writing large amounts of data. We can use the more efficient `scanf_s` and `printf_s` functions instead.

Optimized program:

```c
#include <stdio.h>

int main()
{
    int a, b, c;
    scanf_s("%d%d", &a, &b);
    
    do
    {
        c = a % b;
        a = b;
        b = c;
    } while (c > 0);
    
    printf_s("%d\n", a);
}
```