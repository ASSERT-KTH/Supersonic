The given program reads a string and an integer from the user until the string "-" is inputted. For each input, it calculates the length of the string, then reads 'm' integers and adds them up. Finally, it prints the characters of the string in a circular manner, starting from the index 't'.

To optimize this program, we can make the following modifications:

1. Remove the unused variable 'a' since it is not necessary.
2. Combine the second and third for loops into a single loop to avoid unnecessary iterations.
3. Use modulus operator to calculate the circular index instead of incrementing and checking the bounds.

Here is the optimized program:

```c++
#include <stdio.h>
#include <string.h>

int main() {
  char s[201];
  int m, t, h;
  while (scanf("%s%d", s, &m) == 2 && s[0] != '-') {
    int len = strlen(s);
    for (int i = 0, t = 0; i < len; i++, t += h) {
      scanf("%d", &h);
      printf("%c", s[(t + i) % len]);
    }
    printf("\n");
  }
  return 0;
}
```