The given program calculates and prints pairs of numbers based on the given inputs `n` and `k`. 

To optimize the program, we can make a few changes:

1. Move the declaration of the `p` array outside the while loop so that it is not recreated in each iteration.
2. Instead of using `% n` to handle wrapping around the array, we can use a single loop to iterate over the array and calculate the values of `a` and `b` without wrapping.
3. Use `puts` instead of `printf` for faster output.

Here is the optimized program:

```cpp
#include <cstdio>
#include <iostream>
using namespace std;
int main() {
  int n, k;
  int p[100005]; // Assuming maximum value of n is 100000
  while (cin >> n >> k) {
    if (n / 2 < k) {
      puts("-1");
      continue;
    }
    p[0] = 0;
    for (int i = 1; i < n; i += 2) {
      p[i] = i / 2 + 1;
      p[i + 1] = n - p[i];
    }
    for (int i = 0; i < k; i++) {
      if (i != 0)
        puts("");
      for (int j = 0; j < n - 1; j++) {
        int a = p[j] + i + 1;
        int b = p[j + 1] + i + 1;
        printf("%d %d\n", a, b);
      }
    }
  }
}
```

These optimizations should improve the running time and reduce memory usage of the program.