To optimize the given program, we can make the following modifications:

1. Remove the unnecessary `#include <cstdio>` as it is not being used in the program.

2. Replace the `using namespace std;` statement with explicit using declarations to avoid polluting the global namespace.

3. Pre-calculate the value of `n/2` outside the loop condition to avoid repeating the division operation in each iteration.

4. Instead of using an array `p` of size `n+2`, we can use two variables `a` and `b` to store the values of `a` and `b` in each iteration of the nested loop. This will save memory usage.

5. Move the `printf("\n")` statement outside the nested loop to avoid unnecessary calls to `printf` in each iteration.

Here is the optimized program:

```cpp
#include <iostream>

int main() {
  int n, k;
  while (std::cin >> n >> k) {
    int half_n = n / 2;
    if (half_n < k) {
      std::cout << "-1\n";
      continue;
    }
    for (int i = 0; i < k; i++) {
      if (i != 0)
        std::cout << "\n";
      for (int j = 0; j < n - 1; j++) {
        int a = (j / 2 + 1 + i) % n + 1;
        int b = (n - a + i) % n + 1;
        std::cout << a << " " << b << "\n";
      }
    }
  }
}
```
By making these modifications, we have optimized the program for both running time and memory usage.