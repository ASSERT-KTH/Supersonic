The given program reads a sequence of numbers from the user and performs some calculations based on those numbers. The program uses a vector to store the intermediate results and then prints them at the end.

To optimize this program, we can make the following modifications:
1. Instead of using a vector to store the intermediate results, we can calculate and print the results directly without storing them.
2. We can avoid the unnecessary variable `vec`.
3. We can remove the `else` branch after the `break` statement.

Here is the optimized version of the program:

```cpp
#include <iostream>

int main() {
  int n;
  int a = 0;
  int b = 0;
  int game_a, game_b;

  while (1) {
    std::cin >> n;
    if (n == 0)
      break;

    for (int i = 0; i < n; ++i) {
      std::cin >> game_a >> game_b;
      if (game_a == game_b) {
        a += game_a;
        b += game_b;
      } else if (game_a > game_b) {
        a += game_a + game_b;
      } else {
        b += game_a + game_b;
      }
    }

    std::cout << a << " " << b << std::endl;

    a = 0;
    b = 0;
  }

  return 0;
}
```

This optimized version of the program eliminates the need for the vector and directly prints the intermediate results. This reduces the memory usage and avoids unnecessary computations.