The given program reads a series of numbers as strings and calculates the sum of their digits until a number with the value of '0' is encountered. 

To optimize this program, we can make the following improvements:

1. Remove the unnecessary inclusion of `<iostream>` header file, as it is not used in the program.
2. Replace the usage of `scanf` with `fgets` for safer input handling.
3. Remove the unnecessary use of `strlen(num)` in the for loop condition, as the string length can be stored in a variable beforehand.
4. Avoid repeated conversions of characters to integers inside the loop by using a temporary variable to store the converted value.

Here's the optimized code:

```cpp
#include <cstdio>
#include <cstring>

int main() {
  char num[1001];
  while (1) {
    fgets(num, sizeof(num), stdin);
    if (num[0] == '0')
      break;
    int sum = 0;
    int len = strlen(num);
    for (int i = 0; i < len; i++) {
      int digit = num[i] - '0';
      sum += digit;
    }
    printf("%d\n", sum);
  }
  return 0;
}
```