The given program reads a series of numbers from the user, calculates the sum of their digits, and prints the sum. The program uses an array of characters to store each number.

To optimize the program for running time and memory usage, we can make the following modifications:

1. Remove the unnecessary inclusion of `<iostream>`. We are not using any features from this header, so it can be safely removed.

2. Instead of using `scanf` and `printf` for input/output, we can use `cin` and `cout` from the `<iostream>` library. This will provide a more convenient and efficient way of performing input/output operations.

3. Replace the `strlen` function call in the `for` loop condition with a variable to store the length of the input number. Calling `strlen` in each iteration of the loop is unnecessary and can be avoided.

4. Change the type of the `num` array from `char` to `string`. This will allow us to directly access the length of the string without the need for `strlen`.

Here is the optimized C++ program:

```cpp
#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;

int main() {
  string num;
  while (cin >> num) {
    if (num[0] == '0')
      break;
    int sum = 0;
    int len = num.length();
    for (int i = 0; i < len; i++) {
      sum += num[i] - '0';
    }
    cout << sum << endl;
  }
  return 0;
}
```

With these optimizations, we have improved the efficiency of the program by eliminating unnecessary function calls and using more efficient input/output operations.