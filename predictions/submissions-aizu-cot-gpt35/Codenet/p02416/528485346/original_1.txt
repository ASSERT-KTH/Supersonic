Explanation:

1. In the original program, the `strlen` function is being called in each iteration of the loop to check the length of the `num` string. This is an unnecessary overhead and can be avoided.

2. Instead of using the `strlen` function, we can use a separate variable to store the length of the `num` string outside the loop. This way, we only need to calculate the length once and reuse it in each iteration.

3. Additionally, we can optimize the loop by using a pointer to iterate over the characters of the `num` string instead of indexing. This can provide a slight improvement in performance.

Optimized program:

```cpp
#include <cstdio>
#include <cstring>

int main() {
  char num[1001];

  while (1) {
    scanf("%s", num);
    if (num[0] == '0')
      break;

    int len = strlen(num);
    int sum = 0;
    char* ptr = num;

    for (int i = 0; i < len; i++) {
      sum += *ptr - '0';
      ptr++;
    }

    printf("%d\n", sum);
  }

  return 0;
}
```