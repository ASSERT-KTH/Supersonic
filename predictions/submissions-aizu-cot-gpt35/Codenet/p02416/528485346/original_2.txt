Explanation of the optimization steps:

1. Remove the unnecessary inclusion of `<iostream>` header as it is not being used in the program.

2. Use `std::cin` and `std::cout` instead of `scanf` and `printf` for input and output operations respectively. This will improve the performance.

3. Avoid using `strlen` function in the for loop condition as it has linear time complexity. Instead, store the length of the `num` string in a variable before the loop.

4. Use a more appropriate data type for the `sum` variable. Since the sum of digits can be at most 9 * number of digits in the input string, we can use a `short` or `int8_t` type to save memory.

5. Use `std::string` instead of a character array (`char[]`) for the `num` variable. This will simplify the code and make it easier to handle input and string length.

Optimized program:

```cpp
#include <cstdio>
#include <cstring>
using namespace std;

int main() {
  string num;
  while (1) {
    cin >> num;
    if (num == "0")
      break;
    int sum = 0;
    int len = num.length();
    for (int i = 0; i < len; i++) {
      sum += num[i] - '0';
    }
    cout << sum << endl;
  }
  return 0;
}
```