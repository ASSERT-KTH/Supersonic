Explanation of the optimization steps:

1. Remove the unnecessary `#define` for `s`. It is not needed and can be replaced with `scanf("%d", &b)` directly.

2. Initialize the variables `a`, `b`, `d` inside the for loop initialization statement instead of separate lines. This saves a few lines of code.

3. Use a more appropriate data type for the array `c`. Since the maximum size of `c` is 999, we can use `char` instead of `int` to save memory.

4. Remove the unnecessary assignment `c[b] = 1` inside the first for loop. It is not needed as the second for loop already adds the value of `c[b]` to `d`.

5. Use a more appropriate format specifier for `printf`. Since `d` is an integer, we can use `%ld` instead of `%d` to avoid potential formatting issues.

Optimized code:

```c
#include <stdio.h>

int b, d;
char c[999];

int main() {
  for (scanf("%d", &b), int a = b; a--; )
    scanf("%*d");
  
  for (scanf("%d", &b), int a = b; a--; d += c[b])
    scanf("%*d");

  printf("%ld\n", d);
  return 0;
}
```