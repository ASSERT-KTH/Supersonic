To optimize the given program, we can make the following modifications:

1. Remove the unnecessary variable `t` as it is not used anywhere in the program.

2. Instead of subtracting 1 from `s` whenever `k` is 0, we can initialize `s` to `n` and decrement it only when `k` is 0.

3. Instead of using a flag `flg` to check if any element is greater than or equal to 2, we can directly print `s + 1` when we encounter the first element greater than or equal to 2.

4. Change the condition in the `while` loop from `while(1)` to `while(n != 0)` to make it more readable and understandable.

Here's the optimized program:

```c
#include <stdio.h>

int main(void) {
  int h, s, n, k, i;

  while (scanf("%d", &n) && n != 0) {
    s = n;

    for (i = 0; i < n; i++) {
      scanf("%d", &k);
      
      if (k == 0) {
        s--;
      } else if (k >= 2) {
        printf("%d\n", s + 1);
        break;
      }
    }
    
    if (k < 2) {
      printf("NA\n");
    }
  }

  return 0;
}
```