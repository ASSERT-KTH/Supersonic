To optimize the given program, we can make the following modifications:

1. Remove the unnecessary variable `h` as it is not being used in the program.

2. Remove the variable `t` as it is not being used in the program.

3. Instead of using a `while (1)` loop, we can use a `do-while` loop to simplify the code.

4. Remove the variable `s` and calculate the value of `s` directly in the loop.

5. Change the condition `if (flg == 1)` to `if (flg)` as `flg` is already a boolean variable.

6. Remove the statement `t = 0` as it is not needed.

Here is the optimized code:

```c
#include <stdio.h>

int main(void) {
  int n, k, i, flg;
  
  do {
    flg = 0;
    scanf("%d", &n);
    if (n == 0)
      break;
    
    for (i = 0; i < n; i++) {
      scanf("%d", &k);
      if (k == 0)
        n--;
      if (k >= 2)
        flg = 1;
    }
    
    if (flg)
      printf("%d\n", n);
    else
      printf("NA\n");
      
  } while (n != 0);
  
  return 0;
}
```

By making these optimizations, we have simplified the code and reduced unnecessary variable assignments, resulting in improved runtime and memory usage.