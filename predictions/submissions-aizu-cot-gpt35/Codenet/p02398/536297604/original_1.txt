To optimize the given program, we can make the following modifications:

1. Initialize the variable `t` to 0 before the loop starts. This ensures that the variable starts with a known value.
2. Use a more efficient algorithm to count the number of values divisible by `s` in the range from `a` to `b`. Instead of checking each value individually, we can calculate the number of divisible values using integer division. The number of values divisible by `s` in the range from `a` to `b` can be calculated using `(b/s) - ((a-1)/s)`.
3. Remove the variable `c` as it is not used in the optimized program.

Here is the optimized version of the program:

```cpp
#include <iostream>
using namespace std;

int main() {
  int a, b, s, t = 0;
  cin >> a >> b;

  for (s = a; s <= b; s++) {
    t += (b / s) - ((a - 1) / s);
  }

  cout << t << endl;
  return 0;
}
```

Explanation of the optimization steps:
1. We initialize `t` to 0 before the loop starts because it is used to count the number of values divisible by `s` in the range from `a` to `b`. By initializing it to 0, we start with a known value.
2. Instead of checking each value individually, we calculate the number of divisible values using integer division. `(b/s)` gives the number of values divisible by `s` in the range from `1` to `b`. `((a-1)/s)` gives the number of values divisible by `s` in the range from `1` to `a-1`. Subtracting these two values gives the number of values divisible by `s` in the range from `a` to `b`.
3. We can remove the variable `c` as it is not used in the optimized program.