#pragma GCC optimize("Ofast")
#pragma GCC optimization("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
#define boost                                                                  \
  ios::sync_with_stdio(false);                                                 \
  cin.tie(NULL);                                                               \
  cout.tie(NULL)
#define nl "\n"
#define ll long long
#define pb push_back
#define mpr make_pair
#define fr(i, a, n) for (ll i = a; i < n; ++i)
#define fr0(i, n) for (ll i = 0; i < n; ++i)
#define pii pair<ll, ll>
#define mem(a) memset(a, 0, sizeof(a))
#define F first
#define S second
#define sp ' '
#define vi vector<ll>
#define vii vector<pair<ll, ll>>
#define all(a) a.begin(), a.end()
void fio() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}
template <typename T> void TIME(T start, T end) {
#ifndef ONLINE_JUDGE
  double tt = chrono::duration_cast<chrono::nanoseconds>(end - start).count();
  cout << "\nExecuted in: " << fixed << tt * 1e-9 << setprecision(9) << " sec";
#endif
}
void __print(int x) { cerr << x; }
void __print(long x) { cerr << x; }
void __print(long long x) { cerr << x; }
void __print(unsigned x) { cerr << x; }
void __print(unsigned long x) { cerr << x; }
void __print(unsigned long long x) { cerr << x; }
void __print(float x) { cerr << x; }
void __print(double x) { cerr << x; }
void __print(long double x) { cerr << x; }
void __print(char x) { cerr << '\'' << x << '\''; }
void __print(const char *x) { cerr << '\"' << x << '\"'; }
void __print(const string &x) { cerr << '\"' << x << '\"'; }
void __print(bool x) { cerr << (x ? "true" : "false"); }
template <typename T, typename V> void __print(const pair<T, V> &x) {
  cerr << '{';
  __print(x.first);
  cerr << ',';
  __print(x.second);
  cerr << '}';
}
template <typename T> void __print(const T &x) {
  int f = 0;
  cerr << '{';
  for (auto &i : x)
    cerr << (f++ ? ", " : ""), __print(i);
  cerr << "}";
}
void _print() { cerr << "]\n\n"; }
template <typename T, typename... V> void _print(T t, V... v) {
  __print(t);
  if (sizeof...(v))
    cerr << ", ";
  _print(v...);
}
#ifndef ONLINE_JUDGE
#define debug(x...)                                                            \
  cerr << "[" << #x << "] = [";                                                \
  _print(x)
#else
#define debug(x...)
#endif
#define int long long
bool sortbysec(const pii &a, const pii &b) { return a.S < b.S; }
bool compBySec(const pii &a, const pii &b) {
  return a.S == b.S ? a.F < b.F : a.S < b.S;
}
const int N = 1e6 + 5;
vi dp(N);
void preprocess() {
  dp[1] = 1;
  fr(num, 1, N) {
    fr(i, 2, sqrt(num) + 1) {
      if (num % i == 0) {
        if (dp[num / i] % i)
          dp[num] = dp[num / i] * i;
        else
          dp[num] = dp[num / i] / i;
        break;
      }
    }
    if (dp[num] == 0)
      dp[num] = num;
  }
}
void solve() {
  int n;
  cin >> n;
  unordered_map<int, int> mp;
  mp.reserve(1024);
  mp.max_load_factor(0.25);
  vi a(n);
  fr0(i, n) cin >> a[i];
  int ans1 = 1;
  fr0(i, n) {
    mp[dp[a[i]]]++;
    ans1 = max(ans1, mp[dp[a[i]]]);
  }
  int ans2 = 0;
  for (auto it : mp) {
    if (it.S % 2 == 0 || it.F == 1)
      ans2 += it.S;
  }
  int q;
  cin >> q;
  while (q--) {
    int w;
    cin >> w;
    if (w == 0)
      cout << ans1 << nl;
    else
      cout << max(ans1, ans2) << nl;
  }
}
int32_t main() {
  auto start = chrono::high_resolution_clock::now();
  boost;
  fio();
  preprocess();
  int t = 1;
  cin >> t;
  while (t--)
    solve();
  auto end = chrono::high_resolution_clock::now();
  TIME(start, end);
  return 0;
}
