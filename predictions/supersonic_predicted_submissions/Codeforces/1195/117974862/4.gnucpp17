#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> V;
typedef map<int, int> mp;
#define pb push_back
#define FastIO                                                                 \
  ios_base::sync_with_stdio(false);                                            \
  cin.tie(NULL);                                                               \
  cout.tie(NULL);
#define F first
#define S second
#define debug cout << -1 << endl;
#define REP(i, a, b) for (int i = a; i < b; i++)
#define f0r(i, n) for (int i = 0; i < n; ++i)
#define r0f(i, n) for (int i = n - 1; i >= 0; i--)
#define fore(a, x) for (auto &a : x)
#define fori(i, a, b) for (int i = (a); i < (b); ++i)
#define MP make_pair
#define UB upper_bound
#define LB lower_bound
#define nw cout << "\n"
#define issq(x) (((ll)(sqrt((x)))) * ((ll)(sqrt((x)))) == (x))
#define rev(v) reverse(v.begin(), v.end())
#define asche cerr << "Ekhane asche\n";
#define rev(v) reverse(v.begin(), v.end())
#define srt(v) sort(v.begin(), v.end())
#define grtsrt(v) sort(v.begin(), v.end(), greater<ll>())
#define all(v) v.begin(), v.end()
#define mnv(v) *min_element(v.begin(), v.end())
#define mxv(v) *max_element(v.begin(), v.end())
#define valid(tx, ty) (tx >= 0 && tx < n && ty >= 0 && ty < m)
#define one(x) __builtin_popcount(x)
#define setPrec(x) cout << fixed << setprecision(x)
#define sz(a) (int)a.size()
const int INF = 1e9;
const double diff = 10e-6;
const int maxn = 100005;
const double PI = acos(-1);
using namespace std;
ll arr1[maxn], arr2[maxn];
ll dp[maxn][3];
int n;
ll dpF(int i, int last) {
  if (i == n)
    return 0LL;
  if (dp[i][last] != -1)
    return dp[i][last];
  ll op1 = 0LL, op2 = 0LL, op3 = 0LL;
  if (last != 1)
    op1 = arr1[i] + dpF(i + 1, 1);
  if (last != 2)
    op2 = arr2[i] + dpF(i + 1, 2);
  op3 = dpF(i + 1, last);
  return dp[i][last] = max({op1, op2, op3});
}
void solve() {
  memset(dp, -1, sizeof(dp));
  cin >> n;
  f0r(i, n) cin >> arr1[i];
  f0r(i, n) cin >> arr2[i];
  cout << dpF(0, 0) << "\n";
}
int main() {
  FastIO;
  int t;
  t = 1;
  f0r(i, t) { solve(); }
  return 0;
}
