#include <algorithm>
#include <chrono>
#include <cmath>
#include <iostream>
#include <vector>
using namespace std;
#define EPS 1e-9
#define INF (int)1e9
#define MOD 1000000007
#define endl '\n'
#define V vector
#define db double
#define ldb long double
#define ll long long
#define pq priority_queue
#define str string
#define uint unsigned int
#define ull unsigned long long
#define umap unordered_map
#define uset unordered_set
#define ff first
#define ss second
#define pb push_back
#define pf push_front
#define dbg(x) cout << "?" << #x << " " << (x) << endl;
#define rep(i, a, b) for (int i = (a); i < (b); i++)
#define sqr(x) ((x) * (x))
#define all(x) (x).begin(), (x).end()
#define tsc                                                                    \
  ll TC;                                                                       \
  cin >> TC;                                                                   \
  while (TC--)                                                                 \
    solve();
void solve() {
  string s;
  cin >> s;
  int n = s.size();
  int ans = INF;
  V<V<int>> next(n, V<int>(4, -1));
  next[n - 1][s[n - 1] - '0'] = n - 1;
  for (int i = n - 2; i >= 0; i--) {
    next[i] = next[i + 1];
    next[i][s[i] - '0'] = i;
    if (next[i][1] == -1 || next[i][2] == -1 || next[i][3] == -1) {
      continue;
    }
    int len;
    if (s[i] == '1') {
      len = max(next[i][2], next[i][3]) - i;
    } else if (s[i] == '2') {
      len = max(next[i][1], next[i][3]) - i;
    } else {
      len = max(next[i][1], next[i][2]) - i;
    }
    ans = min(ans, len);
  }
  if (ans == INF) {
    cout << 0 << endl;
  } else {
    cout << (ans + 1) << endl;
  }
}
int main() {
  ios::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
  srand(chrono::steady_clock::now().time_since_epoch().count());
  tsc;
}
