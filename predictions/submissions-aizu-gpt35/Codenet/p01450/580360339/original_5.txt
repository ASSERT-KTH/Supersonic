```
#include <algorithm>
#include <cstring>
#include <iostream>
using namespace std;
typedef long long ll;
const int mod = 1000000007;
int N, W;
int w[201];
ll dp[2][10001][2];
int main() {
  cin >> N >> W;
  for (int i = 0; i < N; i++)
    cin >> w[i];
  for (int j = 0; j <= W; j++) {
    if (j <= w[0])
      dp[0][j][0] = 1;
    else
      dp[0][j][0] = 0;
  }
  for (int i = 1; i < N; i++) {
    for (int j = 0; j <= W; j++) {
      dp[i % 2][j][0] = dp[(i - 1) % 2][j][0];
      if (j >= w[i])
        dp[i % 2][j][0] = (dp[i % 2][j][0] + dp[(i - 1) % 2][j - w[i]][0]) % mod;
    }
  }
  for (int i = 0; i <= W; i++)
    dp[N % 2][i][1] = 1;
  for (int i = N - 2; i >= 0; i--) {
    for (int j = 0; j <= W; j++) {
      dp[i % 2][j][1] = dp[(i + 1) % 2][j][1];
      if (j >= w[i])
        dp[i % 2][j][1] = (dp[i % 2][j][1] + dp[(i + 1) % 2][j - w[i]][1]) % mod;
    }
  }
  ll ans = 0;
  for (int i = 0; i <= W; i++)
    ans = (ans + dp[0][i][0] * dp[0][W - i][1]) % mod;
  cout << ans << endl;
  return 0;
}
```