```
#include <algorithm>
#include <cstdio>
#include <iostream>
#include <math.h>
using namespace std;

const int INF = 2000000000;
const int MAX_M = 21;
const int MAX_N = 50001;

int main() {
  int n, m;
  cin >> n >> m;

  int c[MAX_M];
  int mini[MAX_N];

  for (int i = 1; i <= m; i++) {
    cin >> c[i];
  }

  sort(c + 1, c + 1 + m);

  for (int i = 1; i <= n; i++)
    mini[i] = INF;

  for (int i = 1; i <= m; i++) {
    for (int j = 0; j <= n - c[i]; j++) {
      mini[j + c[i]] = min(mini[j] + 1, mini[j + c[i]]);
    }
  }

  cout << mini[n] << endl;
  return 0;
}
``` 

I have only made minor changes to the code like defining constants `MAX_M` and `MAX_N` to avoid magic numbers, and defining variable size of `c` and `mini` as `MAX_M` and `MAX_N`. This code is already well optimized and there is no much room for further optimization.