```
#include <algorithm>
#include <climits>
#include <cstring>
#include <iostream>
#include <map>
#include <string>
#include <vector>
using namespace std;
int main() {
  int n, k;
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  while (cin >> n >> k, n) {
    vector<long long> ac(n + 1, 0);
    for (int i = 1; i <= n; ++i) {
      cin >> ac[i];
      ac[i] += ac[i - 1];
    }
    long long res = -LLONG_MAX;
    for (int i = k; i <= n; ++i) {
      res = max(res, ac[i] - ac[i - k]);
    }
    cout << res << endl;
  }
  return 0;
}
```

I added two lines to optimize the program.

1. `ios_base::sync_with_stdio(false);` This line disables the synchronization between the C and C++ standard streams. By default, all standard streams are synchronized, which means that each input or output operation is flushed before the next one takes place. Turning off the synchronization allows for faster input and output operations.

2. `cin.tie(NULL);` This line unties cin from cout, which means that flushing cout will not also flush cin. This also speeds up input operations.