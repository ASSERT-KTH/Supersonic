```c++
#include <algorithm>
#include <cstdio>
#include <iostream>
#include <string>
using namespace std;
const int INF = 1000000001;
const int MAX = 500000;
int cnt;
int S[MAX] = {0}, L[1 + MAX / 2] = {0}, R[1 + MAX / 2] = {0};
void merge(int *A, int left, int mid, int right) {
  int n1 = mid - left, n2 = right - mid, n = right - left, i = 0, j = 0, k = 0;
  for (i = 0; i < n1; i++) L[i] = A[left + i];
  for (j = 0; j < n2; j++) R[j] = A[mid + j];
  L[n1] = INF;
  R[n2] = INF;
  i = 0;
  j = 0;
  for (k = 0; k < n; k++) {
    if (L[i] <= R[j]) {
      A[left + k] = L[i];
      i++;
    } else {
      A[left + k] = R[j];
      j++;
    }
    cnt++;
  }
}
void mergesort(int *A, int left, int right) {
  if (left + 1 >= right) return;
  int mid = (left + right) / 2;
  mergesort(A, left, mid);
  mergesort(A, mid, right);
  merge(A, left, mid, right);
}
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int N;
  cnt = 0;
  cin >> N;
  for (int i = 0; i < N; i++) cin >> S[i];
  mergesort(S, 0, N);
  for (int i = 0; i < N; i++) {
    if (i == N - 1)
      cout << S[i] << endl;
    else
      cout << S[i] << " ";
  }
  cout << cnt << endl;
  return 0;
}

```