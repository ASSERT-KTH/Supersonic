```c++
#include <stdio.h>
#include <algorithm>
typedef struct {
  char suit;
  int value;
} Card;

void BubbleSort(Card A[], int N) {
  bool flag = true;
  for (int i = 0; flag; i++) {
    flag = false;
    for (int j = N - 1; j >= i + 1; j--) {
      if (A[j].value < A[j - 1].value) {
        std::swap(A[j], A[j - 1]);
        flag = true;
      }
    }
  }
}

void SelectionSort(Card A[], int N) {
  for (int i = 0; i < N; i++) {
    int minj = i;
    for (int j = i; j < N; j++) {
      if (A[j].value < A[minj].value) {
        minj = j;
      }
    }
    std::swap(A[i], A[minj]);
  }
}

int main() {
  int N;
  scanf("%d\n", &N);
  Card BC[36];
  Card SC[36];
  for (int i = 0; i < N; i++) {
    scanf("%c%d ", &BC[i].suit, &BC[i].value);
    SC[i] = BC[i];
  }
  BubbleSort(BC, N);
  SelectionSort(SC, N);
  for (int i = 0; i < N; i++) {
    printf("%c%d ", BC[i].suit, BC[i].value);
  }
  puts("");
  puts("Stable");
  for (int i = 0; i < N; i++) {
    printf("%c%d ", SC[i].suit, SC[i].value);
  }
  puts("");
  if (std::equal(BC, BC + N, SC)) {
    puts("Stable");
  } else {
    puts("Not stable");
  }
  return 0;
}
```
