```c++
#include <iostream>
int main() {
  int x, y;
  std::ios_base::sync_with_stdio(false); //To disable synchronization between C and C++ standard streams
  std::cin.tie(NULL); //To untie input stream from output stream
  std::cout.tie(NULL); //To untie output stream from input stream
  std::cin >> x;
  y = x * x * x;
  std::cout << y << '\n'; //Using single quotes instead of double quotes for newline character to save memory
  return 0;
}
``` 

I added `std::ios_base::sync_with_stdio(false);` to disable synchronization between C and C++ standard streams, which improves performance by allowing them to work independently. Then, I added `std::cin.tie(NULL);` and `std::cout.tie(NULL);` to untie input stream from output stream and to untie output stream from input stream, respectively. This also increases the program's performance by allowing input and output operations to be performed in parallel. Finally, I replaced the double quotes with single quotes for the newline character in the `std::cout` statement to save memory.