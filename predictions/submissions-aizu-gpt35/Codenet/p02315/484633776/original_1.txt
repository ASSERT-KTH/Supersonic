```
#include <iostream>
#include <cstring>
using namespace std;

const int MAXN = 110;
const int MAXW = 10010;

int N, W;
int value[MAXN], weight[MAXN];
int dp[MAXW];

int main() {
    cin >> N >> W;
    memset(dp, 0, sizeof(dp));
    for (int i = 0; i < N; i++) {
        cin >> value[i] >> weight[i];
        for (int w = W; w >= weight[i]; w--) {
            dp[w] = max(dp[w], dp[w - weight[i]] + value[i]);
        }
    }
    cout << dp[W] << endl;
    return 0;
}
``` 

Explanation: 
- Removed the unnecessary header "bits/stdc++.h" and added appropriate headers "iostream" and "cstring".
- Changed the size of the 2D array dp from [110][10010] to [10010] because we only need to keep the last row of dp in memory.
- Reversed the order of the inner loop to go from W to weight[i] because we only need to update the values of dp[w] that can be reached by adding the current item to a smaller weight.
- Removed the else statement because it is not necessary.