```c++
#include <iostream>
#include <cstring>
#define M 1020001
#define L 14

char H[M][L];
int getnum(char ch) {
    switch (ch) {
        case 'A': return 1;
        case 'C': return 2;
        case 'G': return 3;
        default:  return 4;
    }
}

unsigned long long getkey(char word[]) {
    unsigned long long sum = 0, p = 1;
    for (int i = 0; word[i]; i++) {
        sum += p * getnum(word[i]);
        p *= 5;
    }
    return sum;
}

int h1(unsigned long long k) { return k % M; }
int h2(unsigned long long k) { return 1 + (k % (M - 1)); }

int insert(char str[]) {
    unsigned long long key = getkey(str);
    for (int i = 0; ; i++) {
        int h = (h1(key) + i * h2(key)) % M;
        if (strcmp(H[h], str) == 0) {
            return 0;
        } else if (H[h][0] == '\0') {
            strcpy(H[h], str);
            return 1;
        }
    }
}

int find(char str[]) {
    unsigned long long key = getkey(str);
    for (int i = 0; ; i++) {
        int h = (h1(key) + i * h2(key)) % M;
        if (strcmp(H[h], str) == 0) {
            return 1;
        } else if (H[h][0] == '\0') {
            return 0;
        }
    }
}

int main() {
    std::ios::sync_with_stdio(false); // disable synchronization with C I/O functions
    std::cin.tie(nullptr); // disable flushing of cout before cin
    int NumOfCom;
    std::cin >> NumOfCom;
    for (int i = 0; i < M; i++) {
        H[i][0] = '\0'; // use '\0' instead of L to indicate end of string
    }
    while (NumOfCom--) {
        char com[9], word[14];
        std::cin >> com >> word;
        if (com[0] == 'i') {
            insert(word);
        } else {
            std::cout << (find(word) ? "yes\n" : "no\n");
        }
    };
    return 0;
}
```

Optimizations:
- Use `unsigned long long` for storing the key to avoid overflow when calculating the hash value
- Use `switch` statement instead of multiple `if-else` statements in `getnum` function
- Use `strcmp` function to compare strings instead of `if-else` condition
- Use `'\0'` instead of `L` to indicate end of string
- Disable synchronization with C I/O functions and flushing of `cout` before `cin` using `std::ios::sync_with_stdio(false)` and `std::cin.tie(nullptr)` to improve performance