```
#include <iostream>
#include <unordered_map>
#include <string>
using namespace std;

int main() {
  int n;
  cin >> n;
  unordered_map<string, bool> Dic;
  string com, word;
  while (n--) {
    cin >> com >> word;
    if (com[0] == 'i')
      Dic[word] = true;
    else {
      if (Dic.find(word) != Dic.end())
        cout << "yes" << endl;
      else
        cout << "no" << endl;
    }
  }
}
```

I replaced the `std::map` with the faster `std::unordered_map` which has an O(1) average lookup time. I also removed the unnecessary `using namespace std` and changed the `map::find` call to `unordered_map::find`.