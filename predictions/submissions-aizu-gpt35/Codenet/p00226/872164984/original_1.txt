Here's the optimized version of the program:

```
char R[99];
int i = 0, h = 0, b = 0;

int main() {
    char c;
    while (read(0, &c, 1)) {
        ++i;

        if (i > 9) {
            printf("%d %d\n", h, b - h);
            fflush(stdout);
            i = h = b = 0;
            memset(R, 0, 99);
        }

        b += !!R[c];
        h += !(R[c] ^= 1 << i % 5);
    }

    return 0;
}
```

Explanation:

1. Declare variables `i`, `h`, and `b` as integers and `R` as a character array.
2. Use `char` type for variable `c` in `main`.
3. Use `while` loop instead of `for` loop and move the `read` statement inside it.
4. Use `fflush(stdout)` to flush the output buffer and ensure that the output is printed immediately.
5. Initialize variables `i`, `h`, and `b` to `0`.
6. Use `memset` to initialize `R` to `0`.
7. Remove unnecessary conditions in the `memset` statement.
8. Return `0` at the end of `main`.