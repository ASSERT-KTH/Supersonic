```
#include <stdio.h>
int main() {
    int inact[100][100];
    int act[100];
    int ans[100] = {0}; //initialize to 0
    int row, col;
    int i, j;
    scanf("%d %d", &row, &col);
    for (i = 0; i < row; i++) {
        for (j = 0; j < col; j++) {
            scanf("%d", &inact[i][j]);
        }
    }
    for (i = 0; i < col; i++) {
        scanf("%d", &act[i]);
    }
    for (i = 0; i < row; i++) {
        int sum = 0; //use a temporary variable to store sum
        for (j = 0; j < col; j++) {
            sum += inact[i][j] * act[j];
        }
        ans[i] = sum; //store the sum in ans array
    }
    for (i = 0; i < row; i++) {
        printf("%d\n", ans[i]);
    }
    return 0;
}
``` 

Explanation: 

1. We don't need to initialize all arrays to 0 because we are going to fill them later.

2. We can remove the second loop that initializes the arrays and instead use an initialization list to initialize the array ans to 0.

3. We can sum the products of inact[i][j] and act[j] in a temporary variable `sum` to avoid unnecessary access to the ans array in the inner loop.

4. We can store the sum in the ans array after the inner loop.