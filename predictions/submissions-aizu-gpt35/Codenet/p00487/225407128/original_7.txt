```
#include <algorithm>
#include <iostream>
#include <map>
#define fs first
#define sc second
using namespace std;
typedef long long ll;
const int MAXN = 300010;
int n;
pair<ll, int> p[MAXN], b[MAXN];
ll a[MAXN], sum[MAXN];
bool use[MAXN];
int main() {
  cin.tie(0);
  std::ios::sync_with_stdio(0);
  cin >> n;
  for (int i = 0; i < n; i++) {
    cin >> a[i] >> b[i].fs;
    p[i] = make_pair(a[i], i);
    b[i].sc = i;
    use[i] = false;
  }
  sort(p, p + n);
  sort(b, b + n);
  int ans = 0;
  ll s = 0;
  for (int i = 0; i < n; i++) {
    sum[b[i].sc] = s + a[b[i].sc];
    s += a[b[i].sc];
  }
  for (int i = 0; i < n; i++) {
    if (!use[b[i].sc]) {
      use[b[i].sc] = true;
      ans++;
    }
    ll cur_sum = sum[b[i].sc];
    int cnt = ans;
    while (cnt < n) {
      int j = lower_bound(p, p + n, make_pair(b[i].fs - cur_sum, -1)) - p;
      if (j == n || use[p[j].sc] || p[j].fs + cur_sum > b[i].fs * (cnt + 1))
        break;
      use[p[j].sc] = true;
      cur_sum += p[j].fs;
      cnt++;
    }
    ans = max(ans, cnt);
  }
  cout << ans << endl;
}
```