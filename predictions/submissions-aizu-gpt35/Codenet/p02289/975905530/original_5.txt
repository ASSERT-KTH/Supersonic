```c++
#include <iostream>
#include <queue>
#include <string>
#include <vector>

int pop_and_print(std::priority_queue<int, std::vector<int>, std::greater<int>> &qu) {
  std::cout << qu.top() << '\n';
  qu.pop();
  return 0;
}

int main() {
  std::string s;
  int inp;
  std::priority_queue<int, std::vector<int>, std::greater<int>> qu;
  while (std::cin >> s) {
    if (s == "end") {
      break;
    } else if (s == "insert") {
      std::cin >> inp;
      qu.push(inp);
    } else {
      pop_and_print(qu);
    }
  }
  return 0;
}
```

Changes Made:
- Removed `limits.h` header file as it is not being used.
- Removed `using namespace std;` as it is considered as a bad coding practice.
- Used `'\n'` instead of `endl` as it flushes the output and reduces the performance.
- Changed the default priority queue to min heap by using `std::greater<int>` as the third template parameter because `greater` is a function object that returns `true` if the first argument is greater than the second argument. So, it makes the `priority_queue` a min heap based on the `int` type. This makes the `pop_and_print` function simpler and faster.