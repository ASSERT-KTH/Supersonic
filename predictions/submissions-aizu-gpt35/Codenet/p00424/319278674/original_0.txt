```
#include <stdio.h>
#include <string.h>

int main() {
    int n;
    char t[1000];
    while (scanf("%d", &n) == 1) {
        memset(t, 0, sizeof(t));
        for (int i = 0; i < n; i++) {
            char c1, c2;
            scanf(" %c %c", &c1, &c2);
            t[c1] = c2;
        }
        scanf("%d", &n);
        getchar(); // consume the newline character after the integer
        for (int i = 0; i < n; i++) {
            char c = getchar();
            putchar(t[c] == 0 ? c : t[c]);
        }
        putchar('\n');
    }
    return 0;
}
``` 

I have made the following optimizations:
- Changed the type of `t` to `char` as it is holding characters.
- Initialized `i` to 0 in the for loop.
- Replaced `bzero` with `memset` which is more efficient.
- Added a `getchar` to consume the newline character after reading the integer in the second loop.
- Replaced the `putchar` condition with a ternary operator.
- Added newline character after each loop.