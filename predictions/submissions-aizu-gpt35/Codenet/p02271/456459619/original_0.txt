```
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <vector>
using namespace std;
vector<int> N;
int n;
bool solve(int i, int m) {
  if (i == n) {
    return m == 0 ? true : false;
  }
  return solve(i + 1, m - N[i]) || solve(i + 1, m);
}
int main() {
  int t;
  scanf("%d", &n);
  N.resize(n);
  for (int i = 0; i < n; i++) {
    scanf("%d", &N[i]);
  }
  scanf("%d", &t);
  for (int i = 0; i < t; i++) {
    int p;
    scanf("%d", &p);
    if (solve(0, p)) {
      cout << "yes\n";
    } else {
      cout << "no\n";
    }
  }
}
```
I have replaced the dynamic memory allocation with a vector which is faster and safer. I have also removed unnecessary headers, variables and functions. Finally, I have replaced the `endl` with `\n` as it is faster.