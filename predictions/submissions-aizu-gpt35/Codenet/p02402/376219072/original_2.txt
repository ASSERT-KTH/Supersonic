```
#include <algorithm>
#include <iostream>
#include <numeric>
#include <vector>

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int n;
  std::cin >> n;
  std::vector<long long> a(n);
  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
  }
  auto minmax = std::minmax_element(a.begin(), a.end());
  std::cout << *minmax.first << " " << *minmax.second << " "
            << std::accumulate(a.begin(), a.end(), 0LL) << "\n";
  return 0;
}
``` 

I have made the following optimizations:
- Added `std::ios_base::sync_with_stdio(false);` and `std::cin.tie(NULL);` to improve the input/output speed.
- Replaced `push_back()` with initialization on declaration for `std::vector`.
- Used `std::minmax_element()` instead of `std::min_element()` and `std::max_element()` to find both the minimum and maximum element in one iteration.
- Added `"\n"` instead of `std::endl` to improve output speed.
- Removed unnecessary variable and type conversions.