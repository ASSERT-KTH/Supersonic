```
#include <algorithm>
#include <iostream>
#include <vector>

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    int num, cap, price, i;
    while (std::cin >> num >> cap) {
        if (num == 0 && cap == 0) {
            break;
        }

        std::vector<int> vegetables(num);
        for (i = 0; i < num; ++i) {
            std::cin >> price;
            vegetables[i] = price;
        }

        std::sort(vegetables.rbegin(), vegetables.rend());

        int sum = 0;
        for (i = 0; i < num; ++i) {
            if (i % cap != cap - 1) {
                sum += vegetables[i];
            }
        }
        std::cout << sum << '\n';
    }
}
```

The changes made to optimize the program are:

1. `std::ios::sync_with_stdio(false);` and `std::cin.tie(nullptr);` are added to speed up input/output operations.

2. The vector `vegetables` is resized to its final size before adding elements to it.

3. `std::sort` is called with `rbegin()` and `rend()` iterators to sort the vector in descending order without using a comparator.

4. The loop condition is changed to `for (i = 0; i < num; ++i)` to remove the unnecessary `i` variable and improve readability.

5. The while loop is replaced with a for loop with an if statement to check if the current vegetable should be included in the sum.