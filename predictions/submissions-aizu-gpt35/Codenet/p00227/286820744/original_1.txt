```
#include <algorithm>
#include <iostream>
#include <vector>

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int num, cap, price, i;
  while (std::cin >> num >> cap) {
    if (num == 0 && cap == 0) {
      break;
    }
    std::vector<int> vegetables(num);
    for (i = 0; i < num; ++i) {
      std::cin >> price;
      vegetables[i] = price;
    }
    std::sort(vegetables.begin(), vegetables.end(), std::greater<int>());
    int sum = 0;
    for (i = 0; i < num; ++i) {
      if (i % cap != cap - 1) {
        sum += vegetables[i];
      }
    }
    std::cout << sum << '\n';
  }
}
```
Explanation:
1. `std::ios_base::sync_with_stdio(false)` turns off synchronization between `stdio` and `iostream`, which can improve performance.
2. `std::cin.tie(nullptr)` unties `cin` from `cout`, which can also improve performance.
3. Instead of pushing values one by one into the vector, we preallocate the space for the vector and then assign the values.
4. We use a `for` loop instead of a `while` loop to iterate through the vector, which can make the code easier to read and understand.
5. We simplify the condition for checking whether to add a vegetable to the sum.