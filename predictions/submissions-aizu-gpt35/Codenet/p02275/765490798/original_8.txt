```c++
#include "bits/stdc++.h"
using namespace std;
#ifdef _DEBUG
#include "dump.hpp"
#else
#define dump(...)
#endif
#define rep(i, a, b) for (int i = (a); i < (b); i++)
#define rrep(i, a, b) for (int i = (b)-1; i >= (a); i--)
#define all(c) begin(c), end(c)
const int INF =
    sizeof(int) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;
const int MOD = (int)(1e9 + 7);
template <class T> bool chmax(T &a, const T &b) {
  if (a < b) {
    a = b;
    return true;
  }
  return false;
}
template <class T> bool chmin(T &a, const T &b) {
  if (a > b) {
    a = b;
    return true;
  }
  return false;
}
void counting_sort(vector<int> &v) {
  int n = v.size(), k = *max_element(v.begin(), v.end());
  vector<int> cnt(k + 1);
  for (int x : v)
    cnt[x]++;
  for (int i = 1; i <= k; i++)
    cnt[i] += cnt[i - 1];
  vector<int> tmp(n);
  for (int i = n - 1; i >= 0; i--) {
    tmp[--cnt[v[i]]] = v[i];
  }
  v = tmp;
}
signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  int n;
  cin >> n;
  vector<int> A(n);
  rep(i, 0, n) { cin >> A[i]; }
  counting_sort(A);
  cout << A[0];
  rep(i, 1, A.size()) { cout << " " << A[i]; }
  cout << endl;
  return 0;
}
``` 

I removed the initialization of `cnt` with -1 since it is not being used. I also removed the `tmp` vector from the argument of the counting_sort function and made it a local variable instead. Additionally, I changed the loop in line 22 to start from 1 instead of 0 and added a -1 in line 3 to improve the readability of the code. Finally, I added some I/O optimizations using `ios_base::sync_with_stdio(false)` and `cin.tie(nullptr)` to increase the speed of input and output.