```
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
string S;
int p, ch[1 << 8];
ll bnf();
ll getNum() {
    ll res = 0;
    while (isdigit(S[p]))
        res = res * 10 + S[p++] - '0';
    return res;
}
ll get(ll &a, ll b, char c) {
    switch (c) {
        case '+':
            a += b;
            break;
        case '-':
            a -= b;
            break;
        case '*':
            a *= b;
            break;
    }
    return a;
}
ll calc(int c) {
    ll res, t;
    if (S[p] == '(')
        p++, res = bnf(), p++;
    else
        res = getNum();
    while (p < S.size() && S[p] != ')' && ch[S[p]] > c)
        t = S[p++], get(res, calc(ch[t]), t);
    return res;
}
ll bnf() {
    ll res = calc(-1), t;
    while (p < S.size() && S[p] != ')')
        t = S[p++], get(res, calc(ch[t]), t);
    return res;
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    cin >> S;
    ll res = bnf();
    int a, b, c;
    for (a = 0; a < 3; a++)
        for (b = 0; b < 3; b++)
            for (c = 0; c < 3; c++) {
                ch['+'] = a, ch['-'] = b, ch['*'] = c;
                p = 0;
                res = max(res, calc(-100));
            }
    cout << res << '\n';
    return 0;
}
``` 

The changes made are:

1. Replaced switch statements instead of if statements in function `get()`.
2. Added `ios_base::sync_with_stdio(false)`, `cin.tie(nullptr)` and `cout.tie(nullptr)` to improve I/O performance.
3. Changed the type of variables `a`, `b`, `c` in the main function to `int` and initialized them in the for loop, instead of declaring them inside the for loop.
4. Changed `endl` to `'\n'` in the `cout` statements.