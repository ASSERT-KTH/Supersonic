```c++
#include <iostream>
#include <unordered_map>
using namespace std;
int main() {
  int n, m, o[100];
  string b[100];
  string l;
  int ans;
  for (;;) {
    cin >> n >> m;
    if (!n && !m)
      break;
    ans = 0;
    unordered_map<string, int> mp;
    for (int i = 0; i < n; i++) {
      cin >> b[i] >> o[i];
      mp[b[i]] = o[i];
    }
    for (int i = 0; i < m; i++) {
      cin >> l;
      if (mp.find(l) != mp.end()) {
        ans += mp[l];
      }
    }
    cout << ans << endl;
  }
}
```

Explanation:
- I replaced the nested for loops with an unordered_map to store the strings and their corresponding values. This way, the program does not need to search through the entire array of strings for each input string, which can be very inefficient for large inputs.
- By using an unordered_map, the program can simply check if the input string exists in the map and retrieve its value in constant time.