```
#include <iostream>
#include <vector>
#define MAX 999999
using namespace std;

vector<int> num_prime(MAX + 1);
vector<bool> not_prime_flag(MAX + 1);

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  for (int i = 2; i < MAX + 1; ++i) {
    if (!not_prime_flag[i]) {
      for (int j = 2; i * j < MAX + 1; ++j) {
        not_prime_flag[i * j] = true;
      }
    }
    num_prime[i] = num_prime[i - 1] + !not_prime_flag[i];
  }
  int n;
  while (cin >> n) {
    cout << num_prime[n] << endl;
  }
  return 0;
}
``` 

I have used vector instead of arrays to optimize the memory usage, and used `ios_base::sync_with_stdio(false)`, `cin.tie(NULL)`, and `cout.tie(NULL)` to optimize the input/output time.