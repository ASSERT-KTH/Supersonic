```
#include <stdio.h>
int main() {
  int i, k, n, q, t, C = 0, S[100], T[100];
  scanf("%d", &n);
  for (i = 0; i < n; i++) {
    scanf("%d", &S[i]);
  }
  scanf("%d", &q);
  for (i = 0; i < q; i++) {
    scanf("%d", &T[i]);
  }
  for (i = 0; i < q; i++) {
    for (k = 0; k < n; k++) {
      if (T[i] == S[k]) {
        C++;
        break;
      }
    }
  }
  printf("%d\n", C);
  return 0;
}
```

Explanation: In the original program, the second nested loop runs for `q` times and checks each element of `S` against each element of `T`, which is not efficient. The optimized program reverses the nested loops and checks each element of `T` against each element of `S`. This avoids the need to check each element of `S` multiple times and reduces the complexity from O(nq) to O(qn).