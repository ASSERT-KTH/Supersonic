```cpp
#include <iostream>
using namespace std;

const int MAXN = 102;
int C[MAXN][MAXN];

void meiro(int W, int H, int c) {
  if (C[W][H] != c) {
    return;
  }
  C[W][H] = -1;
  meiro(W - 1, H, c);
  meiro(W, H + 1, c);
  meiro(W + 1, H, c);
  meiro(W, H - 1, c);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  while (true) {
    int w, h;
    cin >> w >> h;
    if (w == 0 && h == 0) {
      break;
    }

    for (int i = 0; i < MAXN; i++) {
      for (int j = 0; j < MAXN; j++) {
        C[i][j] = 10;
      }
    }

    int xs, ys, xg, yg;
    cin >> xs >> ys >> xg >> yg;

    int n;
    cin >> n;

    for (int i = 0; i < n; i++) {
      int c, d, x, y;
      cin >> c >> d >> x >> y;
      if (d == 0) {
        for (int j = x; j < x + 4; j++) {
          for (int k = y; k < y + 2; k++) {
            C[j][k] = c;
          }
        }
      } else {
        for (int j = x; j < x + 2; j++) {
          for (int k = y; k < y + 4; k++) {
            C[j][k] = c;
          }
        }
      }
    }

    meiro(xs, ys, C[xs][ys]);
    cout << (C[xg][yg] == -1 ? "OK" : "NG") << endl;
  }

  return 0;
}
```

Optimizations:
- Removed unnecessary headers.
- Used `const` and `MAXN` for the fixed size arrays.
- Added `ios_base::sync_with_stdio(false)` and `cin.tie(nullptr)` to speed up I/O operations.
- Moved the declaration of loop variables inside the loop.
- Removed the nested loop over `102` and instead used `MAXN`.
- Replaced `if (C[xg][yg] == -1)` with a ternary operator for cleaner code.