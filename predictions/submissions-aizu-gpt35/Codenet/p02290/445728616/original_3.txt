```
#include <bits/stdc++.h>
using namespace std;
typedef complex<double> P;

P project(P a, P b, P c) {
  b -= a, c -= a;
  return a + b * real(c / b);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int n;
  double ax, ay, bx, by, cx, cy;
  scanf("%lf%lf%lf%lf%d", &ax, &ay, &bx, &by, &n);
  while (n--) {
    scanf("%lf%lf", &cx, &cy);
    P p = project(P(ax, ay), P(bx, by), P(cx, cy));
    printf("%.8f %.8f\n", p.real(), p.imag());
  }
  return 0;
}
``` 

This is an optimized version with the following changes:
- Used `scanf` and `printf` instead of `cin` and `cout` for faster I/O.
- Added `ios_base::sync_with_stdio(false)` and `cin.tie(NULL)` to unsync C++ streams with C streams to make input and output faster.