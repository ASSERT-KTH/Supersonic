```
#include <iostream>
#include <vector>
using namespace std;
struct THorizonalLine {
  int Left;
  int Right;
};
int main() {
  ios::sync_with_stdio(false); // disable synchronization between C and C++ standard streams
  cin.tie(nullptr); // untie cin from cout
  int w;
  cin >> w;
  int n;
  cin >> n;
  vector<int> StartingPoint(w);
  for (int i = 0; i < w; i++) {
    StartingPoint[i] = i + 1;
  }
  for (int i = 0; i < n; i++) {
    THorizonalLine HorizonalLine;
    char Dummy;
    cin >> HorizonalLine.Left >> Dummy >> HorizonalLine.Right;
    swap(StartingPoint[HorizonalLine.Left - 1],
         StartingPoint[HorizonalLine.Right - 1]);
  }
  for (int i = 0; i < w; i++) {
    cout << StartingPoint[i] << '\n'; // use '\n' instead of endl
  }
  cout.flush(); // flush output
  return 0;
}
``` 

Optimizations made:
1. Disabled synchronization between C and C++ standard streams (`ios::sync_with_stdio(false)`)
2. Untied cin from cout (`cin.tie(nullptr)`)
3. Used `'\n'` instead of `endl` for output
4. Flushed the output (`cout.flush()`)