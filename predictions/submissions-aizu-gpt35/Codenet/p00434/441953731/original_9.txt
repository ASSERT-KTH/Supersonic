```
#include <iostream>
#include <unordered_set>
using namespace std;
int main() {
  unordered_set<int> data;
  int n;
  for (int i = 0; i < 28; i++) {
    cin >> n;
    data.insert(n);
  }
  for (int i = 1; i <= 30; i++) {
    if (data.find(i) == data.end())
      cout << i << endl;
  }
  return 0;
}
```

Changes Made:
- Replaced `set` with `unordered_set` as `unordered_set` has constant time complexity for searching and inserting elements, whereas `set` has logarithmic time complexity for the same.
- Replaced `count` with `find` as `find` has constant time complexity for searching elements in unordered_set, whereas `count` has logarithmic time complexity for the same.
- Removed `bits/stdc++.h` header as it is not a standard header and is not recommended to use. Instead, added necessary headers for the code. 
- Added `return 0` statement at the end of the main function.