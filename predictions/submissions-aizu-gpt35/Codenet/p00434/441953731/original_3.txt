```
#include <bits/stdc++.h>
using namespace std;
int main() {
  unordered_set<int> data;
  int n;
  for (int i = 0; i < 28; i++) {
    cin >> n;
    data.insert(n);
  }
  for (int i = 1; i <= 30; i++) {
    if (data.find(i) == data.end())
      cout << i << endl;
  }
}
```

Changes Made:
- Replaced `set` with `unordered_set` as the latter provides constant time complexity for insertion and search operations, whereas the former provides logarithmic time complexity.
- Used `find()` function instead of `count()` function for searching element in `unordered_set`. The `find()` function provides constant time complexity, whereas the `count()` function provides logarithmic time complexity.