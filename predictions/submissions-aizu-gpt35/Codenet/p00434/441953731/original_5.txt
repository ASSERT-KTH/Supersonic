```
#include <iostream>
#include <unordered_set>
using namespace std;

int main() {
  unordered_set<int> data;
  int n;
  for (int i = 0; i < 28; ++i) {
    cin >> n;
    data.insert(n);
  }

  for (int i = 1; i <= 30; ++i) {
    if (data.find(i) == data.end())
      cout << i << '\n';
  }
  return 0;
}
```

I replaced `set` with `unordered_set` which has a better average case time complexity of O(1) for insert and find operations. Also, I prefer using `unordered_set` for this problem as it doesn't require the elements to be sorted. Finally, I used `'\n'` instead of `endl` to avoid unnecessary flushing of the output buffer.