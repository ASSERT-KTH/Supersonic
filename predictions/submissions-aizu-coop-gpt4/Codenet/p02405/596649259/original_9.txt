Code Analysis:

The given code reads two integers H and W repeatedly from the standard input until both of them are not zero. For each pair of H and W, it prints a grid of H rows and W columns where alternate cells starting from the first cell contain a '#' character and the rest contain a '.' character.

Performance Bottlenecks:

1. The use of iostream for input/output operations: The C++ iostream library operations are generally slower compared to the C standard I/O functions.

2. The use of the 'endl' manipulator: The 'endl' manipulator not only inserts a new line character, but it also flushes the output stream which is a costly operation.

3. The use of the 'cout' statement inside the inner loop: The 'cout' statement is invoked for each cell of the grid, which is not efficient.

Optimization Strategy:

1. Use C standard Input/Output functions: The C standard I/O functions are generally faster than the C++ iostream library operations.

2. Replace 'endl' with '\n': Avoid using 'endl' to insert newline characters. Instead, use the '\n' character which doesn't flush the output stream.

3. Buffer the output: Instead of invoking 'cout' for each cell, we can buffer the output for each line and print the entire line in one go.

Optimized Code:

```cpp
#include <cstdio>
using namespace std;
int main() {
  int H, W;
  while (scanf("%d %d", &H, &W) && H != 0 && W != 0) {
    for (int i = 1; i <= H; i++) {
      char line[W+1];
      for (int j = 1; j <= W; j++) {
        line[j-1] = ".#"[(i + j) % 2 == 0];
      }
      line[W] = '\0';
      printf("%s\n", line);
    }
    printf("\n");
  }
  return 0;
}
```

Explanation:
1. Replaced 'cin' and 'cout' with 'scanf' and 'printf': This change optimizes the input/output operations by using the faster C standard I/O functions.

2. Replaced 'endl' with '\n': This change avoids the costly output stream flushing operation that 'endl' performs.

3. Buffered the output: Instead of invoking 'printf' for each cell, we create a buffer 'line' for each row, fill it with the appropriate characters, and print the entire line in one go. This change reduces the number of calls to 'printf', which can be a costly operation.