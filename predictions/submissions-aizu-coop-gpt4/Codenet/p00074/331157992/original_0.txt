The provided code takes three integers (hours, minutes, and seconds) as input and calculates the time remaining until two hours past noon. It then prints out this remaining time twice, first normally and then tripled. 

Here are some optimization strategies we can apply:

1. Remove unnecessary multiplication: In the statement `scanf("%d%d%d", &h, &m, &s) * -~h`, there is no need for the multiplication by -~h. The scanf function returns the number of items successfully read, which should be 3 in this case. The multiplication is unnecessary and can be removed.

2. Use better variable names: The variable names h, m, s, and t are cryptic and hard to understand. We should replace them with more descriptive names like hours, minutes, seconds, and remaining_time.

3. Reduce the number of calculations inside the printf function: We can calculate the values for hours, minutes, and seconds before the printf statement and store them in variables. This way, we avoid calculating these values twice, which saves computation time.

4. Avoid unnecessary loops: The second for loop is used to print the remaining time twice, once normally and once tripled. We can replace this loop with two separate printf statements to make the code easier to read and understand.

Here is the optimized code:

```C
#include <stdio.h>

int main() {
  int hours, minutes, seconds, remaining_time;
  int hours_remaining, minutes_remaining, seconds_remaining;

  while (scanf("%d %d %d", &hours, &minutes, &seconds) == 3) {
    // Compute remaining time in seconds
    remaining_time = (120 - hours * 60 - minutes) * 60 - seconds;

    // Compute remaining hours, minutes and seconds
    hours_remaining = remaining_time / 3600;
    minutes_remaining = (remaining_time / 60) % 60;
    seconds_remaining = remaining_time % 60;

    // Print remaining time
    printf("%02d:%02d:%02d\n", hours_remaining, minutes_remaining, seconds_remaining);

    // Triple remaining time
    remaining_time *= 3;

    // Compute remaining hours, minutes and seconds
    hours_remaining = remaining_time / 3600;
    minutes_remaining = (remaining_time / 60) % 60;
    seconds_remaining = remaining_time % 60;

    // Print remaining time tripled
    printf("%02d:%02d:%02d\n", hours_remaining, minutes_remaining, seconds_remaining);
  }

  return 0;
}
```

This optimized code is more readable, easier to understand and should perform better due to the reduced number of calculations. The changes are minimal and do not change the functionality of the original code.