The given C++ code is simple and efficient already, hence there's not much scope for optimization. However, one minor change that can be done is to replace the #include <bits/stdc++.h> with the specific libraries that are actually being used.

The #include <bits/stdc++.h> is a GCC specific library that includes most of the standard C++ libraries. This is not a good practice because it includes a lot of unnecessary headers, which can increase compilation time. Instead, you should only include the libraries that you are actually using. In this case, you are using the functions scanf() and printf(), which are in the stdio.h library. 

Here's the optimized code:

```cpp
#include <stdio.h>

int main() {
  int n, m;
  scanf("%d%d", &n, &m);
  printf("%d\n", n - m - 1);
  return 0;
}
```

This code will run faster only in terms of compilation time, not in terms of execution time. For the execution time, the code is already optimized as it only consists of a few straightforward operations.

This change will not affect the functionality of the code or its output, it will only make the program more efficient in terms of compilation time. It's also a better coding practice to only include the necessary libraries.