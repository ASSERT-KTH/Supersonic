The provided code is simple and relatively efficient. It takes three integer inputs and checks if they are in increasing order. If they are, it prints "Yes", otherwise it prints "No". However, there are still some minor improvements we can make to optimize it.

1. Code Analysis:
    - The line "0 <= a, b, c <= 100;" is not doing anything. It seems like a misused statement that intended to limit the range of a, b, and c, but in C/C++, this doesn't work as expected. We can remove this line without affecting the functionality of the program.

2. Optimization Strategy:
    - Remove the unnecessary line "0 <= a, b, c <= 100;".
    - Instead of using two print statements inside the if-else construct, we can use a ternary (conditional) operator to choose the output string. This will slightly reduce the size of the compiled code and potentially the execution time.

3. Step-by-Step Explanation:
    - Step 1: Remove the line "0 <= a, b, c <= 100;". The line is not doing anything and is a misused statement. Removing it will not affect the functionality of the code.
    - Step 2: Replace the if-else statement with a ternary operator that selects the output string. This reduces the size of the compiled code and potentially the execution time. However, the trade-off is that it might be slightly less readable for people unfamiliar with ternary operators.

4. Optimized Code:

```
#include <stdio.h>

int main(void) {
  int a, b, c;
  scanf("%d %d %d", &a, &b, &c);
  printf("%s\n", (a < b && b < c) ? "Yes" : "No");
  return 0;
}
```
In this optimized code, the unnecessary line is removed, and the if-else construct is replaced with a ternary operator. The functionality is exactly the same as the original code, but it is slightly more efficient.