The provided code is quite simple and efficient already as it just takes three integers as input, checks if they are in ascending order, and prints "Yes" or "No" accordingly. It is hard to optimize this code further in terms of time complexity as it's already O(1), which means it executes in constant time, regardless of the input size.

However, there are a few minor changes that can be done to optimize the code for readability and maintainability. Here's the optimized code:

```C
#include <stdio.h>

int main() {
  int a, b, c;
  
  // Check if scanning was successful
  if(scanf("%d%d%d", &a, &b, &c) != 3) {
    printf("Invalid input!\n");
    return 1;
  }
  
  // Use ternary operator for simplicity
  printf((a < b && b < c) ? "Yes\n" : "No\n");
  
  return 0;
}
```

Here's the explanation of the changes:

1. I've added error checking after the `scanf` function. This will check if the input was valid and formatted correctly. If not, it will print an error message and return 1 to indicate an error occurred. This doesn't necessarily optimize performance, but it is a best practice to always check the return value of `scanf` to ensure the input was read correctly.

2. I replaced the if-else statement with a ternary operator. The ternary operator can be faster than an if-else statement in some cases because it doesn't involve any branching, which can lead to pipeline stalls in the CPU. However, the performance gain from this change would be negligible in this case, and the main advantage is improved readability.

Please note that the optimizations here are very minimal as the original code was already quite well-optimized.