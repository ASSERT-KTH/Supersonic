#ifndef DBG
#define NDEBUG
#endif
#include <bits/stdc++.h>
using namespace std;
#define cn const
#define cauto cn auto
#define FOR(i, from, to) for (int i = (from); i <= (to); ++i)
#define FORN(i, n) FOR(i, 0, (n)-1)
#define endl "\n"
#define mp make_pair
#define pb push_back
#define F first
#define S second
#define X F
#define Y S
#define CONT(c) begin(c), end(c)
#define ARR(a, sz) (a), ((a) + (sz))
using ll = long long;
using ull = unsigned long long;
using uint = unsigned;
using dd = long double;
#ifdef DBG
cn bool dbg = true;
#else
cn bool dbg = false;
#endif
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
template <typename Key>
using ordered_set =
    __gnu_pbds::tree<Key, __gnu_pbds::null_type, less<Key>,
                    __gnu_pbds::rb_tree_tag,
                      __gnu_pbds::tree_order_statistics_node_update>;
template <typename Key, typename Value>
using ordered_map =
    __gnu_pbds::tree<Key, Value, less<Key>, __gnu_pbds::rb_tree_tag,
                     __gnu_pbds::tree_order_statistics_node_update>;
template <typename T> constexpr T sqr(const T &x) { return x * x; }
ll rd() {
  ll x;
  cin >>