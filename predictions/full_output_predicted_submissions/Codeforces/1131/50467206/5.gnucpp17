#include <bits/stdc++.h>
using namespace std;
#if 1
#define pv(x) std::cerr << #x << " = " << (x) << "; ", std::cerr.flush()
#define pn std::cerr << std::endl
#else
#define pv(x)
#define pn
#endif
#ifdef INFOARENA
ifstream in("bellmanford.in");
ofstream out("bellmanford.out");
#else
#define in cin
#define out cout
#endif
using ll = long long;
using ull = unsigned long long;
using uint = unsigned int;
using ld = long double;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using pld = pair<ld, ld>;
#define pb push_back
const double PI =
    3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862;
const int inf_int = 1e9 + 5;
const ll inf_ll = 1e18 + 5;
const int NMax = 1e7 + 5;
const int dx[] = {-1, 0, 0, +1}, dy[] = {0, -1, +1, 0};
const double EPS = 1e-8;
int height[NMax];
ll cost[NMax], dp[NMax];
int main() {
  int N, M;
  in >> N >> M;
  vector<vector<int>> heightsOfBlock(N + 1), costsOfBlock(N + 1);
  for (int i = 1; i <= N; ++i) {
    int K;
    cin >> K;
    for (int j = 1; j <= K; ++j) {
      int val;
      in >> val;
      heightsOfBlock[i].pb(val);
    }
    for (int j = 1; j <= K; ++j)