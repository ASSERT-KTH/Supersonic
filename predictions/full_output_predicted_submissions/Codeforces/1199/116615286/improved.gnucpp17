#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
#include <algorithm>
#include <climits>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <iostream>
#include <map>
#include <set>
#include <stack>
#include <string>
#include <string>
#include <vector>
typedef long long ll;
typedef unsigned long long ull;
int mod = 1000000007;
using namespace std;
#define pi pair<int, int>
#define pb push_back
int r[4] = {1, 0, 0, -1};
int c[4] = {0, -1, 1, 0};
char p[4] = {'D', 'L', 'R', 'U'};
int t, n, m;
vector<pair<int, int>> adj[300005];
bool match[300005];
vector<int> matching;
int main() {
  FAST;
  cin >> t;
  while (t--) {
    cin >> n >> m;
    matching.clear();
    for (int i = 1; i <= 3 * n; i++) {
      adj[i].clear();
    }
    for (int i = 1; i <= 3 * n; i++)
      match[i] = false;
    for (int i = 1; i <= m; i++) {
      int x;
      int y;
      cin >> x >> y;
      adj[x].pb(make_pair(y, i));
    }
    for (int i = 1; i <= 3 * n; i++) {
      vector<pair<int, int>>::iterator it = adj[i].begin();
      if (match[i] == true)
        continue;
      for (; it != adj[i].end(); it++) {
        int nd = (*it).first;
        int ed = (*it).second;
        if (match[nd] == false) {
          matching.pb(ed);
          match[nd] = true;
          match[i] = true;
          break;
        }
      }
    }
    if (matching.size() >= n) {
      cout << "Matching" << '\n';
      for (int i = 0; i < n; i++) {
        cout << matching[i] << " ";
      }
      cout << '\n';
      continue;
    }
    vector<int> v;
    for (int i = 1; i <= 3 * n; i++) {
      if (match[i] == false)
        v.pb(i);
    }
    if (v.size() >= n) {
      cout << "IndSet" << '\n';
      for (int i = 0; i < n; i++) {
        cout << v[i] << " ";
      }
    } else
      cout << "Impossible";
    cout << '\n';
    v.clear();
  }
}
