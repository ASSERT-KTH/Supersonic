#include <bits/stdc++.h>
using namespace std;
long long gcd(long long a, long long b) {
  if (b == 0)
    return a;
  else
    return gcd(b, a % b);
}
int bsearch(int l, int h, int a[], int key) {
  int m = (l + h) / 2;
  int ans = -1;
  while (l <= h) {
    if (a[m] == key) {
      ans = m;
      break;
    } else if (a[m] < key)
      l = m + 1;
    else
      h = m - 1;
  }
  return ans;
}
long long bin(long long a, long long b, long long m) {
  a = a % m;
  long long res = 1;
  while (b > 0) {
    if (b & 1)
      res = res * a % m;
    a = a * a % m;
    b = b >> 1;
  }
  return res;
}
int ncr(int n, int r) {
  long long res = 1;
  for (int i = 0; i < r; i++) {
    res = res * (n - i);
    res = res / (i + 1);
  }
  return res;
}
int find(int i, vector<int> p) {
  while (p[i] != i)
    i = p[i];
  return i;
}
void join(int u, int v, vector<int> &p) {
  int x = find(u, p);
  int y = find(v, p);
  p[x] = p[y];
}
void dfs(int x, vector<int> ad[], vector<int> &vis, int cat[], int m, int cc,
          vector<