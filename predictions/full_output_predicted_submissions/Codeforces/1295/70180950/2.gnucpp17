#include <algorithm>
#include <cmath>
#include <iostream>
#include <set>
#include <string>
#include <vector>
#pragma GCC optimize("O3")
using namespace std;
typedef long long ll;
typedef long double ld;
#define pll pair<ll, ll>
#define pb push_back
const ll maxn = ll(2e5) + 11;
const ll inf = ll(1e15) + 12;
const ll mod = ll(1e9) + 7;
ll n;
ll a[maxn], ps[maxn], p[maxn], pref[maxn];
struct node {
  ll l, mid, r, val, add;
  node *left, *right;
  node(ll l, ll r) : l(l), r(r) {
    add = 0;
    mid = (l + r) / 2;
    val = 0;
    left = right = nullptr;
  }
};
ll f(ll x, ll y) { return min(x, y); }
void build(node *root) {
  if (root->r - root->l == 1) {
    root->val = pref[root->l];
    if (root->l == n - 1) {
      root->val = inf;
    }
  } else {
    root->left = new node(root->l, root->mid);
    root->right = new node(root->mid, root->r);
    build(root->left);
    build(root->right);
    root->val = f(root->left->val, root->right->val);
  }
}
void push(node *root) {
  if (root->left != nullptr) {
    root->left->add += root->add;
    root->right->add += root->add;
  }
  root->val += root->add;
  root->add = 0;
}
void add_val(node