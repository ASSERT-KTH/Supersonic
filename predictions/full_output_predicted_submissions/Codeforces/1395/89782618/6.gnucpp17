#include <algorithm>
#include <bitset>
#include <iostream>
#include <limits>
#include <vector>
using namespace std;
int recurse(const vector<int> &a, const vector<int> &b, vector<vector<int>> &dp,
            int index = 0, int OR = 0) {
  if (index == a.size()) {
    return OR;
  }
  if (dp[index][OR] != -1)
    return dp[index][OR];
  int answer = numeric_limits<int>::max();
  for (int i = 0; i < b.size(); ++i) {
    int ret = recurse(a, b, dp, index + 1, OR | (a[index] & b[i]));
    answer = min(answer, ret);
  }
  return dp[index][OR] = answer;
}
int main(int argc, char const *argv[]) {
  int n, m;
  scanf("%d%d", &n, &m);
  vector<int> a(n), b(m);
  for (int i = 0; i < n; ++i)
    scanf("%d", &a[i]);
  for (int i = 0; i < m; ++i)
    scanf("%d", &b[i]);
  vector<vector<int>> dp(n, vector<int>(1 << 9, -1));
  printf("%d\n", recurse(a, b, dp));
  return 0;
}
