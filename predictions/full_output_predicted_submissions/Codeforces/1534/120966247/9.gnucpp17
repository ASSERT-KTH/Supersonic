#include <cstring>
#include <iostream>
#include <vector>
using namespace std;
const int N = 1e9 + 7;
int t, n, cnt;
int a[400005], vis[400005];
vector<int> e[400005];
void dfs(int u) {
  vis[u] = 1;
  for (int v, i = 0; i < e[u].size(); ++i) {
    v = e[u][i];
    if (!vis[v])
      dfs(v);
  }
}
int qmi(int cnt) {
  int x = 2, s = 1;
  while (cnt) {
    if (cnt & 1)
      s = s * x % N;
    x = x * x % N;
    cnt >>= 1;
  }
  return s % N;
}
signed main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  cin >> t;
  while (t--) {
    cin >> n;
    cnt = 0;
    memset(vis, 0, sizeof vis);
    for (int i = 1; i <= n; i++) {
      cin >> a[i];
      e[i].clear();
    }
    for (int v, i = 1; i <= n; i++) {
      cin >> v;
      e[a[i]].push_back(v);
    }
    for (int i = 1; i <= n; i++)
      if (!vis[a[i]])
        cnt++, dfs(a[i]);
    cout << qmi(cnt) << endl;
  }
  return 0;
}
