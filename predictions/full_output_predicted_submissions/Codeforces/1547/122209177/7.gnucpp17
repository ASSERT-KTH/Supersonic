#include <bits/stdc++.h>
using namespace std;
#define int long long int
#define pb push_back
#define ppb pop_back
#define rep(i, a, n) for (int i = a; i < n; i++)
#define repr(i, n, a) for (int i = n; i >= a; i--)
#define yes cout << "YES\n"
#define no cout << "NO\n"
#define dbg(x) cout << #x << " " << x << " "
#define F first
#define S second
#define endl "\n"
const int mod = 1e9 + 7;
const int INF = 1e18;
const int N = 4e5 + 5;
vector<int> seg_tree(4 * N + 5, 0);
int a[N];
void build_tree(int tree_index, int strt_i, int end_i) {
  if (strt_i == end_i) {
    seg_tree[tree_index] = a[strt_i];
    return;
  }
  int mid = (strt_i + end_i) / 2;
  build_tree(tree_index * 2, strt_i, mid);
  build_tree(tree_index * 2 + 1, mid + 1, end_i);
  seg_tree[tree_index] =
      __gcd(seg_tree[tree_index * 2], seg_tree[tree_index * 2 + 1]);
}
int query(int tree_index, int strt_i, int end_i, int q_strt, int q_end) {
  if (strt_i > q_end || end_i < q_strt)
    return 0;
  if (q_strt <= strt_i && q_end >= end_i)
    return seg_tree[tree_index];
  int mid = (strt_i + end_i) / 2;
  int l = query(2 * tree_index, strt_i +