#include <algorithm>
#include <chrono>
#include <cmath>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>
using namespace std;
const long long MOD = 1e9 + 7;
long long getSum(long long n) { return n * (n + 1) / 2; }
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  long long n, x;
  cin >> n >> x;
  vector<long long> v(n);
  for (long long &x : v)
    cin >> x;
  for (long long i = 0; i < n; i++) {
    v.push_back(v[i]);
  }
  vector<long long> u = v;
  n *= 2;
  vector<long long> z(n);
  for (long long i = 0; i < n; i++) {
    u[i] += u[i - 1];
  }
  for (long long i = 0; i < n; i++) {
    z[i] = v[i] * (v[i] + 1) / 2;
  }
  for (long long i = 1; i < n; i++) {
    z[i] += z[i - 1];
  }
  long long ans = 0;
  int s = 0, e = 0;
  long long days = 0, sums = 0;
  while (e < v.size()) {
    days += v[e];
    sums += getSum(v[e]);
    e++;
    while (days > x) {
      if (days - v[s] <