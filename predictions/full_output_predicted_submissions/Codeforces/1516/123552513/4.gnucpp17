#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using db = long double;
using pi = pair<int, int>;
using pl = pair<ll, ll>;
using pd = pair<db, db>;
using vi = vector<int>;
using vl = vector<ll>;
using vd = vector<db>;
using vpi = vector<pi>;
using vpl = vector<pl>;
using vpd = vector<pd>;
#define f first
#define s second
#define rsz resize
#define pb push_back
#define lb lower_bound
#define ub upper_bound
#define sz(x) (int)size(x)
#define all(x) begin(x), end(x)
#define rall(x) rbegin(x), rend(x)
#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define F0R(i, b) FOR(i, 0, b)
#define ROF(i, a, b) for (int i = (b)-1; i >= (a); --i)
#define R0F(i, b) ROF(i, 0, b)
#define each(i, x) for (auto &i : x)
void setIO(string S = "") {
  cin.tie(0)->sync_with_stdio(0);
  cin.exceptions(cin.failbit);
  if (sz(S)) {
    freopen((S + ".in").c_str(), "r", stdin);
    freopen((S + ".out").c_str(), "w", stdout);
  }
}
template <class T, class U> bool ckmin(T &a, U b) {
  return a > b ? a = b, 1 : 0;
}
template <class T, class U> bool ckmax(T &a, U b) {
  return a < b ? a = b, 1 : 0;
