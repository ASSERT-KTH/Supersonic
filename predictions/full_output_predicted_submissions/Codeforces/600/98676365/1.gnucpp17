#include <bits/stdc++.h>
using namespace std;
#define lson t[id].l
#define rson t[id].r
typedef long long ll;
template <class T> inline void read(T &x) {
  int f = 0;
  x = 0;
  char ch = getchar();
  for (; !isdigit(ch); ch = getchar())
    f |= (ch == '-');
  for (; isdigit(ch); ch = getchar())
    x = x * 10 + ch - '0';
  if (f)
    x = -x;
}
const int maxn = 1e5 + 7;
struct Seg {
  int l, r, v;
  ll num, sum;
} t[maxn << 2];
int n, tot, cor[maxn], rt[maxn];
ll ans[maxn];
vector<int> G[maxn];
void up(int id) {
  if (t[lson].num > t[rson].num) {
    t[id].num = t[lson].num;
    t[id].v = t[lson].v;
    t[id].sum = t[lson].sum;
  } else if (t[lson].num < t[rson].num) {
    t[id].num = t[rson].num;
    t[id].v = t[rson].v;
    t[id].sum = t[rson].sum;
  } else {
    t[id].num = t[lson].num;
    t[id].v = t[lson].v;
    t[id].sum = t[lson].sum + t[rson].sum;
  }
}
void modify(int &id, int l, int r, int p) {
  if (!id)
    id = ++tot;
  if (l == r) {
    t[id].num += 1;
    t