#pragma GCC target("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("-ffloat-store")
#include <bits/stdc++.h>
#include <iostream>
using namespace std;
#define fo(i, n) for (i = 0; i < (n); ++i)
#define repA(i, j, n) for (i = (j); i <= (n); ++i)
#define repD(i, j, n) for (i = (j); i >= (n); --i)
#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()
#define pb push_back
#define mp make_pair
#define X first
#define Y second
#define endl "\n"
typedef long long int lli;
typedef double mytype;
typedef pair<lli, lli> ii;
typedef vector<ii> vii;
typedef vector<lli> vi;
clock_t time_p = clock();
void aryanc403() {
#ifdef ARYANC403
  time_p = clock() - time_p;
  cerr << "Time Taken : " << (float)(time_p) / CLOCKS_PER_SEC << "\n";
#endif
}
#ifdef ARYANC403
#include "/home/aryan/codes/PastCodes/header.h"
#else
#define dbg(args...)
#endif
const lli INF = 0xFFFFFFFFFFFFFFFL;
lli seed;
mt19937 rng(seed = chrono::steady_clock::now().time_since_epoch().count());
inline lli rnd(lli l = 0, lli r = INF) {
  return uniform_int_distribution<lli>(l, r)(rng);
}
class CMP {
public:
  bool operator()(ii a, ii b) {
