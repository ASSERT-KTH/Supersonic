#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pb push_back
#define ppb pop_back
#define mp make_pair
using pi = pair<int, int>;
using vi = vector<int>;
using vvi = vector<vector<int>>;
#define ff first
#define ss second
#define all(x) x.begin(), x.end()
#define sz(x) (int)(x).size()
const int NUM = 1000030;
const int N = 1000000;
vector<int> lp, sieve;
vector<int> pr;
void primefactor();
int binpow(int a, int b);
int binpow(int a, int b, int mod);
int gcd(int a, int b);
int lcm(int a, int b);
bool comp(int a, int b);
int inversemod(int a, int mod);
void calc_sieve();
void test() {
  int n, m;
  cin >> n >> m;
  if (n == 2) {
    cout << 2 << " " << 2 << endl;
    cout << 1 << " " << 2 << " " << 2 << endl;
    return;
  }
  int total_sum = *lower_bound(all(pr), n);
  cout << 2 << " " << total_sum << endl;
  vector<pair<pi, int>> edges;
  int sum = 0;
  edges.pb(mp(mp(1, n), 2));
  sum = 2;
  for (int i = 2; i < n - 1; i++) {
    edges.pb(mp(mp(1, i), 1));
    sum++;
  }
  if (n - 1 != 1)
    edges.pb(mp(mp(1, n - 1), total_sum - sum));
  m -= sz(edges);
  for (int i = 2; i <= n; i++) {
    if (m == 0)
      continue;
  