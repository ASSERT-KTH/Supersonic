#include <bits/stdc++.h>
using namespace std;
const int maxn = 1.8e8;
bool pr[maxn + 100];
vector<long long> pint, f;
void fac(int x) {
  f.clear();
  for (auto i : pint) {
    if (x % i != 0)
      continue;
    if (i * i > x)
      break;
    f.push_back(i);
    while (x % i == 0)
      x /= i;
  }
  if (x != 1)
    f.push_back(x);
}
int solve(int val) {
  int ret = 0;
  int lim = 1 << f.size();
  for (int j = 1; j < lim; j++) {
    int tp = 1, ct = 0;
    for (int i = 0; i < (int)f.size(); i++) {
      if ((j >> i) & 1) {
        tp *= f[i];
        ct++;
      }
    }
    ret += (ct % 2 ? 1 : -1) * val / tp;
  }
  return val - ret;
}
int cas, x, p, k;
int main() {
  memset(pr, true, sizeof(pr));
  pr[0] = pr[1] = false;
  for (int i = 2; i <= maxn; i++)
    if (pr[i])
      for (int j = 2; j * i <= maxn; j++)
        pr[i * j] = false;
  for (int i = 2; i <= maxn; i++)
    if (pr[i])
      pint.push_back(i);
  cin >> cas;
  while (cas--) {
    scanf("%