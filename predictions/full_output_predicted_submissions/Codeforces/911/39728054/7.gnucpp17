#include <bits/stdc++.h>
using namespace std;
#define PI 3.14159265
#define N 200005
#define ll long long int
vector<ll> v[N], diam[N], tour, path;
ll n, h[N], first[N], stmin[2 * N][10], root;
ll vis1[N], vis2[N], vis3[N], vis4[N];
ll parent[N], dist[N], root1;
void height_initialise(ll x, ll y) {
  h[x] = y;
  vis1[x] = 1;
  for (int i = 0; i < v[x].size(); i++) {
    int node = v[x][i];
    if (vis1[node] == 0) {
      height_initialise(node, y + 1);
    }
  }
}
void distanc(ll x, ll y) {
  dist[x] = y;
  vis3[x] = 1;
  for (int i = 0; i < v[x].size(); i++) {
    int node = v[x][i];
    if (vis3[node] == 0) {
      distanc(node, y + 1);
    }
  }
}
void euler(ll x, ll y) {
  vis2[x] = 1;
  tour.push_back(x);
  for (int i = 0; i < v[x].size(); i++) {
    int node = v[x][i];
    if (vis2[node] == 0) {
      euler(node, x);
    }
  }
  if (y != 0)
    tour.push_back(y);
}
void euler_tour() {
  euler(root, 0);
  for (int i = 0; i < tour.size(); i++) {
    if (first[tour[i]] == 0) {
      first[t