```c++
#include <iostream>
#include <vector>
#include <stack>
using namespace std;
typedef pair<int, int> pii;
const int MAX = 102;
int C[MAX][MAX];

void meiro(int W, int H, int c) {
    stack<pii> stk;
    stk.push(pii(W, H));
    while(!stk.empty()){
        pii p = stk.top();
        stk.pop();
        W = p.first;
        H = p.second;
        if (C[W][H] != c) {
            continue;
        }
        C[W][H] = -1;
        if(W-1 >= 0) stk.push(pii(W - 1, H));
        if(H+1 < MAX) stk.push(pii(W, H + 1));
        if(W+1 < MAX) stk.push(pii(W + 1, H));
        if(H-1 >= 0) stk.push(pii(W, H - 1));
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    int w, h;
    while (cin >> w >> h, w || h) {
        for (int i = 0; i < MAX; i++) {
            fill(C[i], C[i] + MAX, 10);
        }
        int xs, ys, xg, yg;
        cin >> xs >> ys >> xg >> yg;
        int n;
        cin >> n;
        int c, d, x, y;
        for (int i = 0; i < n; i++) {
            cin >> c >> d >> x >> y;
            int x_lim = d ? x + 2 : x + 4;
            int y_lim = d ? y + 4 : y + 2;
            for (int j = x; j < x_lim; j++) {
              fill(C[j] + y, C[j] + y_lim, c);
            }
        }
        meiro(xs, ys, C[xs][ys]);
        cout << (C[xg][yg] == -1 ? "OK\n" : "NG\n");
    }
    return 0;
}
```