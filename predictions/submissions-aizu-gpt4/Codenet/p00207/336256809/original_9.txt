```C++
#include <iostream>
#define MAX_SIZE 102
int C[MAX_SIZE][MAX_SIZE];
inline void meiro(int W, int H, int c) {
  if (W >= 0 && W < MAX_SIZE && H >= 0 && H < MAX_SIZE && C[W][H] == c) {
    C[W][H] = -1;
    meiro(W - 1, H, c);
    meiro(W, H + 1, c);
    meiro(W + 1, H, c);
    meiro(W, H - 1, c);
  }
}
int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  while (1) {
    int w, h;
    std::cin >> w >> h;
    if (w == 0 && h == 0) {
      break;
    }
    std::fill(&C[0][0], &C[0][0] + sizeof(C) / sizeof(int), 10);
    int xs, ys, xg, yg;
    std::cin >> xs >> ys >> xg >> yg;
    int n;
    std::cin >> n;
    int c, d, x, y;
    for (int i = 0; i < n; i++) {
      std::cin >> c >> d >> x >> y;
        for (int j = x; j < x + (d == 0 ? 4 : 2); j++) {
          for (int k = y; k < y + (d == 0 ? 2 : 4); k++) {
            C[j][k] = c;
          }
        }
    }
    meiro(xs, ys, C[xs][ys]);
    std::cout << ((C[xg][yg] == -1) ? "OK\n" : "NG\n");
  }
  return 0;
}
```