```c++
#include <iostream>
#include <vector>

using namespace std;

vector<vector<int>> C(102, vector<int>(102));

void meiro(int W, int H, int c) {
    if (W < 0 || H < 0 || W >= C.size() || H >= C[0].size() || C[W][H] != c)
        return;
    C[W][H] = -1;
    meiro(W - 1, H, c);
    meiro(W, H + 1, c);
    meiro(W + 1, H, c);
    meiro(W, H - 1, c);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int w, h;
    while (cin >> w >> h && (w || h)) {
        fill(C.begin(), C.end(), vector<int>(102, 10));
        int xs, ys, xg, yg;
        cin >> xs >> ys >> xg >> yg;
        int n;
        cin >> n;
        int c, d, x, y;
        for (int i = 0; i < n; i++) {
            cin >> c >> d >> x >> y;
            if (d == 0) {
                for (int j = x; j < x + 4; j++) {
                    fill(C[j].begin() + y, C[j].begin() + y + 2, c);
                }
            } else {
                for (int j = x; j < x + 2; j++) {
                    fill(C[j].begin() + y, C[j].begin() + y + 4, c);
                }
            }
        }
        meiro(xs, ys, C[xs][ys]);
        cout << (C[xg][yg] == -1 ? "OK" : "NG") << endl;
    }
    return 0;
}
```