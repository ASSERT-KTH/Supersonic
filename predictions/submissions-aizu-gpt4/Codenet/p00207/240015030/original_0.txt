```c++
#include <iostream>
#include <vector>
#include <stack>
#define SIZE 102
using namespace std;

typedef pair<int, int> pii;
vector<vector<int>> Board(SIZE, vector<int>(SIZE));
bool isOK;
int xs, ys, xg, yg;

void DFS(int c, int x, int y) {
    stack<pii> stk;
    stk.push({x, y});

    while (!stk.empty()) {
        pii top = stk.top(); stk.pop();
        x = top.first, y = top.second;

        if (x < 0 || x >= SIZE || y < 0 || y >= SIZE || Board[x][y] != c)
            continue;
        if (x == xg && y == yg) {
            isOK = true;
            return;
        }

        Board[x][y] = 0;
        stk.push({x + 1, y});
        stk.push({x, y + 1});
        stk.push({x - 1, y});
        stk.push({x, y - 1});
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int w, h;
    while (true) {
        cin >> w >> h;
        if (w == 0 && h == 0)
            break;

        isOK = false;
        for (auto& row : Board)
            fill(row.begin(), row.end(), -1);

        cin >> xs >> ys >> xg >> yg;
        int n, c, d, x, y;
        cin >> n;
        for (int t = 0; t < n; t++) {
            cin >> c >> d >> x >> y;
            int wb = 2 + (!d * 2);
            int hb = 2 + (d * 2);
            for (int i = 0; i < hb; i++) {
                for (int j = 0; j < wb; j++)
                    Board[x + j][y + i] = c;
            }
        }
        DFS(Board[xs][ys], xs, ys);
        cout << (isOK ? "OK\n" : "NG\n");
    }

    return 0;
}
```