```C++
#include <vector>
#include <iostream>
using namespace std;

class Stack {
public:
  Stack(size_t n) : s_(n), top_(0){};
  bool isEmpty() const { return top_ == 0; }
  bool isFull() const { return top_ == s_.size(); }
  void push(int x) {
    if (!isFull()) {
      s_[top_++] = x;
    }
  }
  int pop() {
    return isEmpty() ? -1 : s_[--top_];
  }

private:
  vector<int> s_;
  size_t top_;
};

int main() {
  string s;
  Stack stack(110);
  while (cin >> s) {
    if (s[0] == '+') {
      int rhs = stack.pop();
      int lhs = stack.pop();
      stack.push(lhs + rhs);
    } else if (s[0] == '-') {
      int rhs = stack.pop();
      int lhs = stack.pop();
      stack.push(lhs - rhs);
    } else if (s[0] == '*') {
      int rhs = stack.pop();
      int lhs = stack.pop();
      stack.push(lhs * rhs);
    } else {
      stack.push(stoi(s));
    }
  }
  cout << stack.pop() << '\n';
  return 0;
}
```