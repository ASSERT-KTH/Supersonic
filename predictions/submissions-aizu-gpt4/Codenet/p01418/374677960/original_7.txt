```cpp
#include <iostream>
#include <cmath>

int K, R, L;
double P, E, T;

double dfs(int d, double l, double r) {
    double mid = l + ((r - l) / 2);
    if (d == 0)
        return (std::abs(mid - T) <= E) ? 1 : 0;
    if (r < T - E || T + E < l)
        return 0;
    double p1 = P * dfs(d - 1, l, mid);
    double p2 = (1.0 - P) * dfs(d - 1, mid, r);
    if (mid >= T)
        return p2 + p1;
    return p1 + p2;
}

int main() {
    std::cin >> K >> L >> R >> P >> E >> T;
    std::cout.precision(9);
    std::cout << dfs(K, L, R) << std::endl;
    return 0;
}
```