```cpp
#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>
using namespace std;
void sieve(int n, vector<bool> &primes) {
  fill(primes.begin(), primes.end(), true);
  primes[0] = primes[1] = false;
  for (int i = 4; i <= n; i += 2)
    primes[i] = false;
  for (int i = 3, end = sqrt(n); i <= end; i += 2) {
    if (!primes[i])
      continue;
    for (int j = i * i; j <= n; j += i * 2)
      primes[j] = false;
  }
}
int main() {
  vector<int> inputs;
  for (int x; cin >> x;)
    inputs.push_back(x);
  int max_input = *max_element(inputs.begin(), inputs.end());
  vector<bool> primes(max_input + 1);
  sieve(max_input, primes);
  for (auto x : inputs) {
    int count = 0;
    for (int i = 2; i <= x; ++i)
      count += primes[i];
    cout << count << endl;
  }
  return 0;
}
```