```cpp
#include <iostream>
#include <vector>
#include <algorithm>
#define MAX 150
#define rep(i, n) for(int i = 0; i < n; ++i)
using namespace std;

bool dp[MAX][MAX][2];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); 
    int T;
    cin >> T;
    while (T--) {
        int N;
        cin >> N;
        vector<int> input(N);
        for(auto &in: input) cin >> in;
        if(N <= 2){
            cout << input.back() << "\n";
            continue;
        }
        int ans = input.back();
        fill(&dp[0][0][0], &dp[0][0][0] + sizeof(dp), false);
        for(int cur = 1; cur < N - 1; ++cur){
            dp[input[cur - 1]][input[cur]][cur & 1] = true;
            int R = input[cur + 1];
            for(int L = 0; L < MAX; ++L){
                for(int M = 0; M < MAX; ++M){
                    if(!dp[L][M][cur & 1]) continue;
                    if(M == 0){
                        if(cur + 2 < N){
                            dp[M][R][(cur + 1) & 1] = true;
                        } else ans = max(ans, R);
                    } else {
                        if(cur + 2 < N){
                            dp[M][R][(cur + 1) & 1] = true;
                            dp[M - 1][R + L][(cur + 1) & 1] = true;
                        } else ans = max(ans, R + L);
                    }
                }
            }
            fill(&dp[0][0][cur & 1], &dp[0][0][cur & 1] + sizeof(dp[0][0][0])*MAX*MAX, false);
        }
        cout << ans << "\n";
    }
    return 0;
}
```