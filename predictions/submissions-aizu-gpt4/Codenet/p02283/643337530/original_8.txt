```cpp
#include <iostream>
#include <vector>
#include <string>

using namespace std;

struct Node {
  int key;
  Node *right, *left;
};

Node* new_node(int item)
{
    Node* temp =  new Node;
    temp->key = item;
    temp->left = temp->right = nullptr;
    return temp;
}

Node* insert(Node* node, int key)
{
    if (node == nullptr) return new_node(key);
    if (key < node->key)
        node->left  = insert(node->left, key);
    else if (key > node->key)
        node->right = insert(node->right, key);   
    return node;
}

void inorder(Node *root)
{
    if (root != nullptr)
    {
        inorder(root->left);
        cout << " " << root->key;
        inorder(root->right);
    }
}

void preorder(Node *root)
{
    if (root != nullptr)
    {
        cout << " " << root->key;
        preorder(root->left);
        preorder(root->right);
    }
}

int main() 
{
    Node *root = nullptr;
    int n;
    cin >> n;
    string command;
    for (int i = 0; i < n; i++) 
    {
        cin >> command;
        if (command == "insert") 
        {
            int x;
            cin >> x;
            root = insert(root, x);
        } 
        else if (command == "print") 
        {
            inorder(root);
            cout << "\n";
            preorder(root);
            cout << "\n";
        }
    }
    return 0;
}
```