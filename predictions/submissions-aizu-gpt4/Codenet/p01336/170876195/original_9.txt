```c++
#include <iostream>
#include <string>
#include <algorithm>
#include <cstring>
using namespace std;

#define rep(i, n) for (int i = 0; i < n; ++i)
#define max_swap(a, b) a = max(a, b)
#define CLEAR(arr, val) memset(arr, val, sizeof(arr))

int n, m;
int dpru(int *c, int *v) {
    int dp[333][333];
    CLEAR(dp, 0);
    for (int i = 0; i < n; ++i)
        for (int j = m; j >= c[i]; --j)
            max_swap(dp[i + 1][j], dp[i][j - c[i]] + v[i]);
    return dp[n][m];
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    while (cin >> n >> m) {
        int c[333], v[3][333], res = 0;
        rep(i, n) {
            string s;
            int t;
            getline(cin, s);
            getline(cin, s);
            cin >> t;
            c[i] = t;
            rep(j, 3) cin >> v[j][i];
        }
        rep(i, 3) max_swap(res, dpru(c, v[i]));
        cout << res << '\n';
    }
}
```