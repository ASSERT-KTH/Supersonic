```cpp
#include <iostream>
#include <algorithm>
using namespace std;
#define r(i,n) for(int i=0;i<n;i++)
const int INF = 1e9;
int dp[20001][256];
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n, m;
    while(cin >> n >> m, n) {
        int b[m];
        int a[n+1];
        r(i,m) cin >> b[i];
        r(i,n) cin >> a[i+1];
        fill(&dp[0][0], &dp[0][0] + sizeof(dp) / sizeof(int), INF);
        dp[0][128] = 0;
        r(i,n) r(j,256) if(dp[i][j] != INF) r(k,m) {
            int p = min(max(j + b[k], 0), 255);
            dp[i+1][p] = min(dp[i+1][p], dp[i][j] + (a[i+1] - p) * (a[i+1] - p));
        }
        cout << *min_element(dp[n], dp[n] + 256) << '\n';
    }
    return 0;
}
```