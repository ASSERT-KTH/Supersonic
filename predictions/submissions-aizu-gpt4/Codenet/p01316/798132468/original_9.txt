```cpp
#include <iostream>
#include <algorithm>

#define r(i, n) for (int i = 0; i < n; i++)
#define INF 0x3f3f3f3f

int dp[2][256];

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int n, m;
  while (std::cin >> n >> m, n) {
    int b[m];
    int a[n + 1];
    r(i, m) std::cin >> b[i];
    r(i, n) std::cin >> a[i + 1];

    r(i, 256) dp[0][i] = INF;
    dp[0][128] = 0;
    int cur = 1, pre = 0;

    r(i, n) {
      r(j, 256) dp[cur][j] = INF;
      r(j, 256) if (dp[pre][j] != INF) r(k, m) {
        int p = std::min(255, std::max(j + b[k], 0));
        dp[cur][p] = std::min(dp[cur][p], dp[pre][j] + (a[i + 1] - p) * (a[i + 1] - p));
      }
      std::swap(cur, pre);
    }

    int p = *std::min_element(dp[pre], dp[pre] + 256);
    std::cout << p << '\n';
  }
  return 0;
}
```