```cpp
#include <iostream>
#include <vector>
using namespace std;
typedef long long ll;
struct S { ll y, m, d; };
struct Ma { ll b, ka, t, w, ki; };
const ll M[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
const ll leapYearCorrection = 4*100*400;
inline bool check(ll y) { return (y % 4 == 0 && (y % 100 != 0 || y % 400 == 0)); }
S M2S(ll b, ll ka, ll t, ll w, ll ki) {
  ka += b * 20;
  t += ka * 20;
  w += t * 18;
  ki += w * 20;
  S res = {2012, 12, 21 + ki};
  while (res.d > 365 + check(res.y)) res.y++, res.d -= (365 + check(res.y));
  if (res.d == 0) res.m--, res.d = M[res.m - 1] + (check(res.y) && res.m == 2);
  while (res.d > M[res.m - 1] + (check(res.y) && res.m == 2)) {
    res.d -= (M[res.m - 1] + (check(res.y) && res.m == 2));
    res.m++;
  }
  if (res.d == 0) res.m--, res.d = M[res.m - 1] + (check(res.y) && res.m == 2);
  return res;
}
Ma S2M(ll y, ll m, ll d) {
  y -= 2012;
  if (y) d += 10;
  else d -= 21;
  for (ll i = 0; i < m - 1 && y; i++)
    d += (M[i] + (i == 1 && check(y + 2012)));
  while (y > 0) d += (365 + check(y + 2012)), y--;
  ll mod = 13 * 20 * 20 * 18 * 20;
  d %= mod;
  Ma res = {d / (20 * 20 * 18 * 20), (d / (20 * 18 * 20)) % 20, (d / (18 * 20)) % 20, (d / 20) % 18, d % 20};
  return res;
}
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  string str;
  while (cin >> str && str != "#") {
    vector<int> a;
    int num = 0;
    for (char c : str) {
      if (c == '.') a.push_back(num), num = 0;
      else num = num * 10 + c - '0';
    }
    a.push_back(num);
    if (a.size() == 5) {
      S ans = M2S(a[0], a[1], a[2], a[3], a[4]);
      cout << ans.y << "." << ans.m << "." << ans.d << "\n";
    } else {
      Ma ans = S2M(a[0], a[1], a[2]);
      cout << ans.b << "." << ans.ka << "." << ans.t << "." << ans.w << "." << ans.ki << "\n";
    }
  }
  return 0;
}
```