```cpp
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
constexpr array<int, 12> M = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
struct S {
  ll y, m, d;
};
struct Ma {
  ll b, ka, t, w, ki;
};
inline bool check(ll y) { return (y % 4 == 0 && (y % 100 != 0 || y % 400 == 0)); }
S M2S(ll b, ll ka, ll t, ll w, ll ki) {
  ka += b * 20;
  t += ka * 20;
  w += t * 18;
  ki += w * 20;
  S res{2012, 12, 21 + ki};
  while (res.d > 365 + check(res.y)) {
    res.d -= (365 + check(res.y));
    res.y++;
  }
  while (res.d > M[res.m - 1] + (check(res.y) && res.m == 2)) {
    res.d -= (M[res.m - 1] + (check(res.y) && res.m == 2));
    res.m++;
  }
  if (res.m == 13) {
    res.y++;
    res.m = 1;
  }
  return res;
}
Ma S2M(ll y, ll m, ll d) {
  ll y_orig = y;
  y -= 2012;
  d = (y ? d + 10 : d - 21);
  for (int i = 0; i < m - 1 && y; i++)
    d += (M[i] + (i == 1 && check(y_orig)));
  while (--y > 0)
    d += (365 + check(y + 2012));
  Ma res;
  d %= 13 * 20 * 20 * 18 * 20;
  res.ki = d % 20;
  res.w = (d /= 20) % 18;
  res.t = (d /= 18) % 20;
  res.ka = (d /= 20) % 20;
  res.b = d / 20;
  return res;
}
int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  string str;
  while (cin >> str, str != "#") {
    vector<int> a;
    stringstream ss(str);
    for (int num; ss >> num; ss.ignore())
      a.push_back(num);
    if (a.size() == 5) {
      S ans = M2S(a[0], a[1], a[2], a[3], a[4]);
      cout << ans.y << "." << ans.m << "." << ans.d << '\n';
    } else {
      Ma ans = S2M(a[0], a[1], a[2]);
      cout << ans.b << "." << ans.ka << "." << ans.t << "." << ans.w << "."
           << ans.ki << '\n';
    }
  }
}
```