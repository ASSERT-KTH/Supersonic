```
#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

#define rep(i, a, b) for (uint32_t i = (a); i < (b); ++i)

using namespace std;

const int MAXN = 100000;
const int LOGN = 20;

uint32_t sp[MAXN][LOGN];

uint32_t RMQ(int i, int j) {
    int k = log2(j - i + 1);
    return min(sp[i][k], sp[j - (1 << k) + 1][k]);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    uint32_t n, l;
    cin >> n >> l;

    vector<uint32_t> a(n);

    rep(i, 0, n) {
        cin >> a[i];
        sp[i][0] = a[i];
    }

    for (int j = 1; j <= LOGN; ++j) {
        for (int i = 0; i + (1 << j) <= n; ++i) {
            sp[i][j] = min(sp[i][j - 1], sp[i + (1 << (j - 1))][j - 1]);
        }
    }

    cout << RMQ(0, l - 1);

    rep(i, 1, n - l + 1) {
        cout << " " << RMQ(i, i + l - 1);
    }

    cout << "\n";

    return 0;
}
```