```C++
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void merge(vector<int>& arr, int start, int mid, int end, int& cnt) {
    vector<int> temp(end - start + 1);
    int i = start, j = mid+1, k = 0;

    while(i <= mid && j <= end) {
        if(arr[i] <= arr[j]) {
            temp[k++] = arr[i++];
        } else {
            temp[k++] = arr[j++];
            cnt += (mid - i + 1);
        }
    }

    while(i <= mid) {
        temp[k++] = arr[i++];
    }

    while(j <= end) {
        temp[k++] = arr[j++];
    }

    for(int i = start; i <= end; i++) {
        arr[i] = temp[i - start];
    }
}

void mergeSort(vector<int>& arr, int start, int end, int& cnt) {
    if(start < end) {
        int mid = start + (end - start) / 2;
        mergeSort(arr, start, mid, cnt);
        mergeSort(arr, mid+1, end, cnt);
        merge(arr, start, mid, end, cnt);
    }
}

int main() {
    int N, cnt = 0;
    cin >> N;
    vector<int> arr(N);
    for(int& num : arr) {
        cin >> num;
    }
    mergeSort(arr, 0, N - 1, cnt);
    for(const int& num : arr) {
        cout << num << " ";
    }
    cout << "\n" << cnt << "\n";
    return 0;
}
```