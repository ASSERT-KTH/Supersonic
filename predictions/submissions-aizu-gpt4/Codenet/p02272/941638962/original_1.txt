```c++
#include <cstdio>
#include <algorithm>
#include <vector>

int count = 0;

void merge_sort(std::vector<int>& numbers, int left, int right) {
    if (right - left <= 1) return;

    int mid = (left + right) / 2;
    merge_sort(numbers, left, mid);
    merge_sort(numbers, mid, right);

    std::vector<int> buffer(right - left);
    std::merge(numbers.begin() + left, numbers.begin() + mid, numbers.begin() + mid, numbers.begin() + right, buffer.begin());
    std::copy(buffer.begin(), buffer.end(), numbers.begin() + left);

    count += right - left;
}

int main() {
    int n;
    scanf("%d", &n);

    std::vector<int> numbers(n);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &numbers[i]);
    }

    merge_sort(numbers, 0, n);

    for (int i = 0; i < n; ++i) {
        if (i != 0) printf(" ");
        printf("%d", numbers[i]);
    }
    printf("\n%d\n", count);

    return 0;
}
```