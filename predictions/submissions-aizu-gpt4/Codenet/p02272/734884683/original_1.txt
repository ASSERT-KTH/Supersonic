```cpp
#include <cstdint>
#include <iostream>
#include <vector>
using namespace std;

void inputArray(vector<uint32_t>& A) {
  for (auto& ele : A) {
    cin >> ele;
  }
}

void printArray(const vector<uint32_t>& A) {
  for (int i = 0; i < A.size(); ++i) {
    if(i != 0) cout << " ";
    cout << A[i];
  }
  cout << "\n";
}

uint32_t merge(vector<uint32_t>& A, uint32_t left, uint32_t mid, uint32_t right) {
  vector<uint32_t> L(A.begin()+left, A.begin()+mid);
  vector<uint32_t> R(A.begin()+mid, A.begin()+right);
  L.push_back(UINT32_MAX);
  R.push_back(UINT32_MAX);
  uint32_t compared = 0;
  uint32_t i = 0, j = 0;
  for (uint32_t k = left; k < right; k++) {
    compared++;
    if (L[i] <= R[j]) {
      A[k] = L[i++];
    } else {
      A[k] = R[j++];
    }
  }
  return compared;
}

uint32_t mergeSort(vector<uint32_t>& A, uint32_t left, uint32_t right) {
  if (left + 1 < right) {
    uint32_t mid = (left + right) / 2;
    return mergeSort(A, left, mid) + mergeSort(A, mid, right) + merge(A, left, mid, right);
  }
  return 0;
}

int main() {
  int n;
  cin >> n;
  vector<uint32_t> A(n);
  inputArray(A);
  uint32_t compared = mergeSort(A, 0, n);
  printArray(A);
  cout << compared << "\n";
  return 0;
}
```