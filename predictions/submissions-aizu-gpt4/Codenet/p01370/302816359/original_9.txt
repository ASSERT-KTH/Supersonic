```cpp
#include <iostream>
#include <vector>
#include <queue>
using namespace std;
constexpr int m_t = 60;
constexpr int max = 3 * m_t * (m_t + 1) + 1;
constexpr int zero = max / 2;
constexpr int dx[6] = {0, 1, -1, 1, -1, 0};
constexpr int dy[6] = {1, 1, 0, 0, -1, -1};
int t, n;
vector<int> field(max);

inline int calculateY(int y){
    return y * (m_t * 2 + m_t * 2 + 1 - abs(y)) / 2;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    while (cin >> t >> n, t) {
        fill(field.begin(), field.end(), 1);
        int x, y;
        for (int i = 0; i < n; i++) {
            cin >> x >> y;
            field[zero + x + calculateY(y)] = 0;
        }
        cin >> x >> y;
        field[zero + x + calculateY(y)] = 0;
        queue<pair<int, int>> rt;
        rt.push({x, y});
        int ans = 0;
        while (!rt.empty()) {
            ans++;
            auto [cx, cy] = rt.front();
            rt.pop();
            if (ans < t) {
                for (int i = 0; i < 6; i++) {
                    int nx = cx + dx[i];
                    int ny = calculateY(cy + dy[i]);
                    if (field[zero + nx + ny]) {
                        field[zero + nx + ny] = 0;
                        rt.push({nx, cy + dy[i]});
                    }
                }
            }
        }
        cout << ans << "\n";
    }
}
```