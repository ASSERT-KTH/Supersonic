```c++
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

int main() {
    const int limit = 51000;
    vector<bool> isPrime(limit + 1, true);
    isPrime[0] = isPrime[1] = false;

    for (int i = 2; i <= sqrt(limit); ++i) {
        if (isPrime[i]) {
            for (int j = i * i; j <= limit; j += i) {
                isPrime[j] = false;
            }
        }
    }

    vector<int> primes;
    for (int i = 2; i <= limit; ++i) {
        if (isPrime[i]) {
            primes.push_back(i);
        }
    }

    int n;
    while (cin >> n && n != 0) {
        int kotae = 0;
        for (int i = 0; i < primes.size() && primes[i] <= n / 2; ++i) {
            if (isPrime[n - primes[i]]) {
                ++kotae;
            }
        }
        cout << kotae << '\n';
    }
    return 0;
}
```
