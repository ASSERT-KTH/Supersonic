```
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int MAX = 5002;
int n;
int t[MAX * 2];
int dp[MAX][2], tmp[MAX][2];

int solve() {
  fill(&tmp[0][0], &tmp[MAX - 1][2], -1);
  tmp[1][0] = tmp[0][1] = 0;
  for (int i = 1; i < n; i++) {
    fill(&dp[0][0], &dp[MAX - 1][2], -1);
    for (int j = 0; j <= n / 2; j++) {
      for (int pre = 0; pre < 2; pre++) {
        if (tmp[j][pre] == -1)
          continue;
        for (int next = 0; next < 2; next++) {
          if (pre == next) {
            dp[j + (next == 0)][next] = min(dp[j + (next == 0)][next] == -1 ? INT32_MAX : dp[j + (next == 0)][next], tmp[j][pre]);
          } else {
            dp[j + (next == 0)][next] = min(dp[j + (next == 0)][next] == -1 ? INT32_MAX : dp[j + (next == 0)][next], tmp[j][pre] + t[i - 1]);
          }
        }
      }
    }
    copy(&dp[0][0], &dp[MAX - 1][2], &tmp[0][0]);
  }
  return min(dp[n / 2][0] == -1 ? INT32_MAX : dp[n / 2][0], dp[n / 2][1] == -1 ? INT32_MAX : dp[n / 2][1]);
}
int main() {
  scanf("%d", &n);
  for (int i = 0; i < n - 1; i++) {
    scanf("%d", &t[i]);
  }
  printf("%d\n", solve());
}
```