```C++
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int MAXN = 10002;
const int INF = 1e9+7;
int n, t[MAXN], dp[MAXN>>1][2];

int solve() {
  for (int i = 0; i <= n / 2; i++) dp[i][0] = dp[i][1] = INF;
  dp[0][0] = dp[0][1] = 0;
  for (int i = 1; i < n; i++) {
    for (int j = i / 2; j >= 0; j--) {
      dp[j + 1][0] = min(dp[j + 1][0], dp[j][1]);
      dp[j + 1][1] = min(dp[j + 1][1], dp[j][0] + t[i - 1]);
      dp[j][0] = min(dp[j][0], dp[j][1]);
      dp[j][1] = min(dp[j][1], dp[j][0] + t[i - 1]);
    }
  }
  return min(dp[n / 2][0], dp[n / 2][1]);
}

int main() {
  scanf("%d", &n);
  for (int i = 0; i < n - 1; i++) scanf("%d", &t[i]);
  printf("%d\n", solve());
  return 0;
}
```