```C++
#include <iostream>
#include <string>
#include <stack>

using namespace std;

int N;

struct elem {
    int repeats;
    string str;
};

string dfs(string &s) {
    stack<elem> stk;
    int i = 0, n = 0;
    while (i < s.size()) {
        if (isdigit(s[i])) {
            n = n * 10 + (s[i++] - '0');
        } else if (s[i] == '(') {
            stk.push({max(1, n), ""});
            n = 0;
            ++i;
        } else if (s[i] == ')') {
            elem top = stk.top();
            stk.pop();
            string str = top.str;
            if(!stk.empty()) {
                for(int j = 0; j < top.repeats; ++j) {
                    stk.top().str += str;
                    if(stk.top().str.size() > N) {
                        return stk.top().str;
                    }
                }
            } else {
                for(int j = 0; j < top.repeats; ++j) {
                    str += top.str;
                    if(str.size() > N) {
                        return str;
                    }
                }
                return str;
            }
            ++i;
        } else {
            stk.top().str += string(max(1, n), s[i]);
            n = 0;
            ++i;
        }
    }
    return stk.top().str;
}

int main() {
    for (;;) {
        string s;
        cin >> s >> N;
        if (s == "0") break;
        string r = dfs(s);
        printf("%c\n", r.size() > N ? r[N] : '0');
    }
}
```