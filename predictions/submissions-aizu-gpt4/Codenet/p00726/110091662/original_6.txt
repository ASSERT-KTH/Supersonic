```cpp
#include <iostream>
#include <string>
using namespace std;

string dfs(string::iterator &it, const string::iterator &end, size_t &N) {
    string r;
    long long n = -1;
    while (it != end) {
        if (isdigit(*it)) {
            if (n < 0)
                n = *it - '0';
            else
                n = n * 10 + *it - '0';
            ++it;
        } else if (*it == '(') {
            if (n < 0) n = 1;
            string::iterator j = ++it;
            int cnt = 1;
            while (cnt) {
                if (*j == '(')
                    cnt++;
                else if (*j == ')')
                    cnt--;
                ++j;
            }
            string r0 = dfs(it, j - 1, N);
            for (int _ = 0; _ < n; _++) {
                r += r0;
                if (r.size() > N)
                    return r;
            }
            n = -1;
            it = j;
        } else {
            if (n < 0) n = 1;
            r += string(n, *it);
            n = -1;
            ++it;
        }
    }
    return r;
}

int main() {
    for (;;) {
        string s;
        size_t N;
        cin >> s >> N;
        if (s == "0")
            break;
        string::iterator it = s.begin();
        string r = dfs(it, s.end(), N);
        cout << (r.size() > N ? r[N] : '0') << endl;
    }
    return 0;
}
```