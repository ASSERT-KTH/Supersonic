```C++
#include <iostream>
#include <vector>
#include <string>

inline int cket(const std::string &str, int i) {
  int n = 1;
  while(n && ++i < str.size()) {
    n += str[i] == '(' ? 1 : str[i] == ')' ? -1 : 0;
  }
  return i;
}

int n;
inline char expand(const std::string &str) {
  std::vector<char> res;
  for (int i = 0; i < str.size(); ++i) {
    if (isdigit(str[i])) {
      int num = 0;
      while (isdigit(str[i])) {
        num = num * 10 + (str[i++] - '0');
      }
      int s, e;
      if (str[i] == '(') {
        s = i + 1;
        e = cket(str, s);
        i = e;
      } else {
        s = i;
        e = i + 1;
      }
      for (int l = 0; l < num; ++l) {
        char a = expand(str.substr(s, e - s));
        if (a != '0') {
          return a;
        }
      }
    } else {
      if (n == 0) {
        return str[i];
      }
      n--;
    }
  }
  return '0';
}

int main(void) {
  while (true) {
    std::string str;
    std::cin >> str >> n;
    if (str == "0" && n == 0)
      break;
    std::cout << expand(str) << std::endl;
  }
  return 0;
}
```