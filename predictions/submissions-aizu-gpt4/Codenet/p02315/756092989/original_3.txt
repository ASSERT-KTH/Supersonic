```cpp
#include <iostream>
#include <algorithm>
#define rep(i, n) for (int(i) = 0; (i) < (n); ++(i))

const int MAX_N = 110;
const int MAX_W = 10010;

int n, W;
int weight[MAX_N], value[MAX_N];
int dp[MAX_N][MAX_W];

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  std::cin >> n >> W;
  rep(i, n) std::cin >> value[i] >> weight[i];
  std::fill(&dp[0][0], &dp[MAX_N][0], 0);
  for (int i = 0; i < n; i++) {
    for (int w = 0; w <= W; w++) {
      if (w >= weight[i]) {
        dp[i + 1][w] = std::max(dp[i][w - weight[i]] + value[i], dp[i][w]);
      } else {
        dp[i + 1][w] = dp[i][w];
      }
    }
  }
  std::cout << dp[n][W] << "\n";
  return 0;
}
```