```C++
#include <iostream>
#include <vector>
#define N 15
using namespace std;
vector<vector<int>> data(N, vector<int>(N, 0)), memo(N, vector<int>(N, 0));
int X, Y;

void func(int y, int x) {
  if (y == Y - 1) {
    memo[y][x] = 1;
    return;
  }
  if (x - 1 >= 0 && data[y + 1][x - 1] == 0 && memo[y + 1][x - 1] == 0)
    func(y + 1, x - 1);
  memo[y][x] += memo[y + 1][x - 1];

  if (x + 1 < X && data[y + 1][x + 1] == 0 && memo[y + 1][x + 1] == 0)
    func(y + 1, x + 1);
  memo[y][x] += memo[y + 1][x + 1];

  if (data[y + 1][x] == 0 && memo[y + 1][x] == 0)
    func(y + 1, x);
  memo[y][x] += memo[y + 1][x];
}

int main() {
  while (cin >> X >> Y && (X || Y)) {
    for (int i = 0; i < X; i++)
      for (int j = 0; j < Y; j++)
        cin >> data[j][i], memo[j][i] = 0;
    for (int i = 0; i < X; i++)
      if (data[0][i] == 0)
        func(0, i);
    cout << accumulate(memo[0].begin(), memo[0].begin() + X, 0) << endl;
  }
  return 0;
}
```