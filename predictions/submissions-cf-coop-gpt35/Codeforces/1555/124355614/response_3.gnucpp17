#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main() {
  ios_base ::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int n, m;
  cin >> n >> m;

  multiset<int> values;
  for (int i = 1; i < m; i++) {
    values.insert(0);
  }

  vector<pair<int, pair<int, int>>> s;
  vector<int> diff(n, 0);
  for (int i = 0; i < n; i++) {
    int l, r, w;
    cin >> l >> r >> w;
    s.push_back({w, {l, r - 1}});
    if (i > 0) {
      diff[i] = w - s[i - 1].first;
    }
  }

  sort(diff.begin(), diff.end());

  int ptr = -1, ans = INT_MAX;
  for (int i = 0; i < n; i++) {
    if (i > 0) {
      (*values.begin())--;
      values.erase(values.begin());
    }
    while (ptr + 1 < n && (*values.begin()) == 0) {
      ++ptr;
      (*values.begin())++;
      values.erase(values.begin());
    }
    if ((*values.begin()) != 0) {
      ans = min(ans, diff[ptr]);
    }
  }

  cout << ans;
}