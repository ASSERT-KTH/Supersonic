#include <bits/stdc++.h>
#pragma GCC optimize(2)
using namespace std;
#define ll long long

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int n, m;
  cin >> n >> m;
  string s;
  cin >> s;
  string k[6] = {"abc", "acb", "bac", "bca", "cab", "cba"};
  int dp[6] = {0}; // 1D array to store cumulative mismatches

  // Calculate cumulative mismatches for each element in k
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < 6; j++) {
      if (k[j][i % 3] != s[i])
        dp[j]++;
    }
  }

  while (m--) {
    int l, r;
    cin >> l >> r;
    l--;
    int ans = r - l;

    // Find minimum number of mismatches between indices l and r for each element in k
    for (int i = 0; i < 6; i++) {
      int mismatches = dp[i + (r - l) % 3] - dp[i + l % 3];
      ans = min(ans, mismatches);
    }
    cout << ans << endl;
  }
  return 0;
}