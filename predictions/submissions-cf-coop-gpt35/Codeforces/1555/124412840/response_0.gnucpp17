#include <iostream>
#include <string>
#pragma GCC optimize(2)

using namespace std;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);

  int n, m;
  cin >> n >> m;

  string s;
  cin >> s;

  string k[6] = {"abc", "acb", "bac", "bca", "cab", "cba"};
  int pp[6] = {0};
  int diff_pos[6][n] = {0};

  for (int i = 0; i < 6; i++) {
    for (int j = 0; j < n; j++) {
      if (k[i][j % 3] != s[j]) {
        pp[i]++;
        diff_pos[i][j] = 1;
      }
    }
  }

  while (m--) {
    int l, r;
    cin >> l >> r;
    l--;

    int ans = r - l;
    for (int i = 0; i < 6; i++) {
      int diff_count = pp[i];
      if (l > 0) {
        diff_count -= pp[i] - pp[i - 1];
      }
      if (r < n) {
        diff_count -= pp[i] - pp[i + 1];
      }
      ans = min(ans, diff_count);
    }

    cout << ans << endl;
  }

  return 0;
}