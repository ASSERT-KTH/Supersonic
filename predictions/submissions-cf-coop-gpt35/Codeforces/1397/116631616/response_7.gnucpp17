#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
using ll = long long;

ll calculatePower(ll base, ll exponent) {
    ll result = 1;
    for (ll i = 0; i < exponent; i++) {
        result *= base;
    }
    return result;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;
    vector<int> arr(n);
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    sort(arr.begin(), arr.end());

    ll ans = 1e18;
    ll maxExponent = 1;
    while (calculatePower(2, maxExponent) < arr[n-1]) {
        maxExponent++;
    }

    ll dont = 0;
    for (ll i = 0; i < maxExponent; i++) {
        ll sum = 0;
        for (int j = 0; j < n; j++) {
            ll power = calculatePower(i, j);
            if (power > arr[j]) {
                dont = 1;
                break;
            }
            sum += abs(arr[j] - power);
        }
        if (!dont) {
            ans = min(ans, sum);
        }
    }
    cout << ans << endl;
    return 0;
}