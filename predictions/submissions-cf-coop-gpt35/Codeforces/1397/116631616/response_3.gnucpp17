#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

#define speedUP()                                                              \
  ios_base::sync_with_stdio(false);                                            \
  cin.tie(nullptr);

long long int customPow(int base, int exp) {
  long long int result = 1;
  while (exp > 0) {
    if (exp & 1)
      result *= base;
    base *= base;
    exp >>= 1;
  }
  return result;
}

int main() {
  speedUP();
  int n;
  cin >> n;
  vector<int> arr(n);
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
  }
  sort(arr.begin(), arr.end());
  long long int ans = 1e18;
  for (int i = 0; i < 1e5; i++) {
    long long int sum = 0;
    int dont = 0;
    for (int j = 0; j < n; j++) {
      long long int pow_i_j = customPow(i, j);
      if (pow_i_j > 1e18 || sum > 1e18) {
        dont = 1;
        break;
      }
      sum += arr[j] - pow_i_j;
    }
    if (!dont) {
      ans = min(ans, sum);
    }
    if (sum > 1e18) {
      break;
    }
  }
  cout << ans << endl;
}