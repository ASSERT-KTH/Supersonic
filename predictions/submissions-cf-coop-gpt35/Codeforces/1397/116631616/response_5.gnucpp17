#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

typedef long long ll;

ll minSumOfDifferences(vector<int>& arr) {
    int n = arr.size();
    sort(arr.begin(), arr.end());

    int minElement = arr.front();
    int maxElement = arr.back();

    ll ans = 1e18;

    for (int i = minElement; i <= maxElement; i++) {
        ll sum = 0;
        ll powValue = 1;

        for (int j = 0; j < n; j++) {
            if (powValue > 1e18 || sum > 1e18) {
                sum = -1;
                break;
            }

            sum += abs(arr[j] - powValue);
            powValue *= i;
        }

        if (sum != -1) {
            ans = min(ans, sum);
        }
    }

    return ans;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;

    vector<int> arr(n);
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    ll ans = minSumOfDifferences(arr);
    cout << ans << endl;

    return 0;
}