#include <iostream>
#include <cmath>
#include <algorithm>
using namespace std;

const long long int mod = 1e9 + 7;

long long power(long long a, long long b) {
  long long res = 1;
  while (b > 0) {
    if (b & 1)
      res *= a;
    a *= a;
    b >>= 1;
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int n;
  cin >> n;

  int arr[n];
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
  }

  long long ans = 1e18;
  for (int i = 0; i < 1e5; i++) {
    long long sum = 0;
    bool dont = false;
    for (int j = 0; j < n; j++) {
      long long pow_ij = power(i, j);
      if (pow_ij > 1e18 || sum > 1e18 || pow_ij < 0 || sum < 0) {
        dont = true;
        break;
      }
      sum += abs(arr[j] - pow_ij);
    }
    if (!dont) {
      ans = min(ans, sum);
    }
  }

  cout << ans << endl;
}