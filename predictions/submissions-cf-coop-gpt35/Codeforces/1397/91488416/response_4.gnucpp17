#include <iostream>
#include <algorithm>
#include <cmath>

using namespace std;

const int MAX_N = 100000;

void testcase();

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    
    int t = 1;
    while (t--) {
        testcase();
    }
    
    return 0;
}

void testcase() {
    int n;
    cin >> n;
    
    long long arr[MAX_N];
    long long sum = 0;
    
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
        sum += arr[i];
    }
    
    sort(arr, arr + n);
    
    long long count = sum;
    long long counter = pow(arr[n - 1], 1.0 / (n - 1)) + n + 1;
    
    for (long long c = 2; c < counter && count > 0; c++) {
        long long newcount = 0;
        long long xx = 1;
        
        for (int i = 0; i < n; i++) {
            newcount += abs(xx - arr[i]);
            xx *= c;
            
            if (newcount > count) {
                break;
            }
        }
        
        if (newcount < count) {
            count = newcount;
        }
    }
    
    if (sum - n < count) {
        count = n;
    }
    
    cout << count << endl;
}