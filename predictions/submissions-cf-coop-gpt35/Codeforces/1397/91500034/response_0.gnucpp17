#include <iostream>
#include <algorithm>
#include <cstring>

using namespace std;

const int maxn = 1e5 + 5;
typedef long long ll;

inline int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

template <typename T>
T lcm(T a, T b) {
    return a * b / gcd(a, b);
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int n;
    cin >> n;

    ll a[maxn];
    ll ans = 0;
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        ans += a[i];
    }

    sort(a, a + n);

    ll sum, pow_c_i = 1;
    ll c = 1;
    while (c <= 1000000) {
        sum = 0;
        for (int i = 0; i < n; i++) {
            sum += abs(pow_c_i - a[i]);
            pow_c_i *= c;
            if (sum >= ans)
                break;
        }
        ans = min(ans, sum);
        c++;
    }

    cout << ans << endl;

    return 0;
}