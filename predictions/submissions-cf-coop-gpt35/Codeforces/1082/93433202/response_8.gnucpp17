#include <iostream>
#include <vector>
using namespace std;

int main() {
  cin.tie(0);
  cout.tie(0);
  ios::sync_with_stdio(0);
  int n;
  cin >> n;
  int* t = new int[n];
  for (int i = 0; i < n; i++) {
    cin >> t[i];
  }
  if (n < 2 || t[0] != 1 || t[1] != 2) {
    cout << "NO";
    delete[] t;
    return 0;
  }
  vector<int> one, two;
  for (int i = 0; i < n; i++) {
    if (t[i] == 1)
      one.push_back(i);
    else if (t[i] == 2)
      two.push_back(i);
  }
  int* remainingCounts = new int[two.size()];
  int remainingCountsSize = 0;
  for (auto x : two) {
    remainingCounts[remainingCountsSize++] = t[x];
  }
  vector<pair<int, int>> ans;
  for (int i = 1; i < two.size(); i++) {
    ans.push_back({two[i - 1], two[i]});
    remainingCounts[i - 1]--, remainingCounts[i]--;
  }
  int f2 = min(2, static_cast<int>(one.size()));
  for (int i = 0; i < f2; i++) {
    if (i == 0)
      ans.push_back({one[i], two[0]}), remainingCounts[0]--;
    else
      ans.push_back({one[i], two[two.size() - 1]}), remainingCounts[two.size() - 1]--;
  }
  for (int i = f2; i < one.size(); i++) {
    int x = -1, maxCount = -1;
    for (int j = 0; j < two.size(); j++) {
      if (remainingCounts[j] > maxCount) {
        x = j;
        maxCount = remainingCounts[j];
      }
    }
    if (x == -1 || maxCount == 0) {
      cout << "NO";
      delete[] t;
      delete[] remainingCounts;
      return 0;
    }
    ans.push_back({one[i], two[x]});
    remainingCounts[x]--;
  }
  cout << "YES" << " " << two.size() + f2 - 1 << endl;
  cout << ans.size() << endl;
  for (auto x : ans)
    cout << x.first + 1 << " " << x.second + 1 << " " << endl;

  delete[] t;
  delete[] remainingCounts;
}