#include <cstdio>
#include <algorithm>
#include <vector>
#include <utility>

const int md = 1e9 + 7;

int main() {
  int n;
  scanf("%d", &n);
  int t[n];
  int sum = 0;
  for (int i = 0; i < n; i++) {
    scanf("%d", &t[i]);
    sum += t[i];
  }
  if (sum > 2 * n * (n - 1) || sum < 2 * n - 2) {
    printf("NO");
    return 0;
  }
  std::vector<int> one, two;
  for (int i = 0; i < n; i++) {
    if (t[i] == 1)
      one.push_back(i);
    else
      two.push_back(i);
  }
  std::vector<std::pair<int, int>> ans;
  for (int i = 1; i < two.size(); i++) {
    ans.push_back({two[i - 1], two[i]});
    t[two[i - 1]]--, t[two[i]]--;
  }
  int f2 = std::min(2, static_cast<int>(one.size()));
  for (int i = 0; i < f2; i++) {
    if (i == 0)
      ans.push_back({one[i], two[0]}), t[two[0]]--;
    else
      ans.push_back({one[i], two[two.size() - 1]}), t[two[two.size() - 1]]--;
  }
  std::sort(two.begin(), two.end(), [&](int i, int j) {
    return t[i] > t[j];
  });
  for (int i = f2; i < one.size(); i++) {
    int x = two[i - f2];
    if (t[x] == 0) {
      printf("NO");
      return 0;
    }
    ans.push_back({one[i], x});
    t[x]--;
  }
  printf("YES %d\n", static_cast<int>(two.size()) + f2 - 1);
  printf("%d\n", static_cast<int>(ans.size()));
  for (auto x : ans)
    printf("%d %d\n", x.first + 1, x.second + 1);
}