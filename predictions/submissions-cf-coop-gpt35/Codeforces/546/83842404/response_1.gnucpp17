#include <iostream>
#include <vector>
#include <bitset>

const int N = 5e6 + 2;
const int to = static_cast<int>(sqrt(N)) + 1;

std::vector<int> val(N);
std::vector<int> cnt(N);
std::vector<long long> pref(N);
std::bitset<N> is;

void precalc() {
  for (int i = 0; i < N; i++) {
    val[i] = i;
  }
  
  for (int i = 2; i < to; i++) {
    if (!is[i]) {
      for (int j = 2 * i; j < N; j += i) {
        is[j] = true;
        while (val[j] % i == 0) {
          val[j] /= i;
          cnt[j]++;
        }
      }
    }
  }
  
  for (int i = 0; i < N; i++) {
    if (val[i] != 1) {
      cnt[i]++;
    }
  }
  
  for (int i = 1; i < N; i++) {
    pref[i] = pref[i - 1] + cnt[i];
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  
  precalc();
  
  int t;
  std::cin >> t;
  
  while (t--) {
    int a, b;
    std::cin >> a >> b;
    std::cout << pref[b] - pref[a - 1] << '\n';
  }
  
  return 0;
}