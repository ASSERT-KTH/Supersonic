#include <iostream>
#include <numeric>
#include <bitset>

const int N = 5e6 + 2;

int val[N];
std::bitset<N> is;
std::bitset<N> cnt;
long long pref[N];

void precalc() {
  std::iota(val, val + N, 0);
  
  for (int i = 2; i * i < N; i++) {
    if (is[i]) continue;
    for (int j = i * i; j < N; j += i) {
      is[j] = true;
    }
  }
  
  for (int i = 2; i < N; i++) {
    if (!is[i]) {
      cnt[i]++;
      for (int j = 2 * i; j < N; j += i) {
        is[j] = true;
        cnt[j]++;
      }
    }
    pref[i] = pref[i - 1] + cnt[i];
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);
  
  precalc();
  
  int t;
  std::cin >> t;
  
  while (t--) {
    int a, b;
    std::cin >> a >> b;
    std::cout << pref[a] - pref[b] << '\n';
  }
  
  return 0;
}