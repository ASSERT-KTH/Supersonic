#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

const int N = 5e6 + 2;

vector<int> val;
vector<bool> is;
vector<int> cnt;
vector<long long> pref;

void precalc() {
  val.resize(N, 0);
  is.resize(sqrt(N) + 1, false);
  cnt.resize(N, 0);
  pref.resize(N, 0);

  for (int i = 2; i * i < N; i++) {
    if (!is[i]) {
      for (int j = i * i; j < N; j += i) {
        is[j] = true;
      }
    }
  }

  for (int i = 2; i < N; i++) {
    if (!is[i]) {
      for (int j = i; j < N; j += i) {
        val[j]++;
      }
    }
  }

  for (int i = 1; i < N; i++) {
    pref[i] = pref[i - 1] + val[i];
  }
}

inline int getPrimeFactors(int n) {
  return val[n];
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);

  precalc();

  int t;
  cin >> t;

  while (t--) {
    int a, b;
    cin >> a >> b;
    cout << pref[a] - pref[b] << '\n';
  }

  return 0;
}