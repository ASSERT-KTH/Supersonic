#include <iostream>
#include <cmath>
#include <vector>

class PrimeCalculator {
public:
    void precalc() {
        for (int i = 0; i < N; i++) {
            val[i] = i;
        }
        for (int i = 2; i < to; i++) {
            if (is[i])
                continue;
            int j = 2 * i;
            while (j < N) {
                is[j] = 1;
                while (val[j] % i == 0) {
                    val[j] /= i;
                    cnt[j]++;
                }
                j += i;
            }
        }
        for (int i = 0; i < N; i++) {
            cnt[i] += (val[i] != 1);
        }
        for (int i = 1; i < N; i++) {
            pref[i] = pref[i - 1] + cnt[i];
        }
    }

private:
    const int N = 5e6 + 2;
    const int M = 1e8;
    const int tox[4] = {1, -1, 0, 0};
    const long long inf = 1e18;
    const int toy[4] = {0, 0, 1, -1};
    std::vector<int> val;
    std::vector<bool> is;
    std::vector<int> cnt;
    std::vector<long long> pref;
    const int to = std::sqrt(N) + 1;
};

int main() {
    std::ios_base::sync_with_stdio(0);
    std::cin.tie(0);
    std::cout.tie(0);

    PrimeCalculator primeCalculator;
    primeCalculator.precalc();

    int t;
    std::scanf("%d", &t);
    while (t--) {
        int a, b;
        std::scanf("%d %d", &a, &b);
        std::printf("%lld\n", primeCalculator.pref[a] - primeCalculator.pref[b]);
    }

    return 0;
}