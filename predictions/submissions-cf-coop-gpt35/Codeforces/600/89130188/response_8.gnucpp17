#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define lll long long
#define llf __float128
#define lld long double
using namespace std;
const lll NR = 5e5 + 10, oo = 1e18 + 10, MOD = 1e9 + 7;
const long double pi = 2 * acos(0.0);
vector<lll> v[NR];
lll n, m, c[NR];

void dfs1(lll nod, lll prt) {
  lll sz = 1;
  for (auto it : v[nod]) {
    if (it == prt)
      continue;
    dfs1(it, nod);
    sz += sz;
    big = max(big, sz);
  }
}

void dfs2(lll nod, lll prt, lll ans[], lll &l_max) {
  lll nod_boss = -1, l = 0, max_ = 0, sum = 0;
  for (auto it : v[nod]) {
    if (it == prt)
      continue;
    if (big == sz[it]) {
      nod_boss = it;
      dfs2(it, nod, ans, l);
      sum = ans[it];
      max_ = l;
      break;
    }
  }
  lll freq[NR] = {0};
  freq[c[nod]] = freq[c[nod]] + 1;
  if (freq[c[nod]] == max_) {
    sum += c[nod];
  }
  if (freq[c[nod]] > max_) {
    max_ = freq[c[nod]];
    sum = c[nod];
  }
  for (auto it : v[nod]) {
    if (it == prt || it == nod_boss)
      continue;
    lll temp[NR] = {0};
    dfs2(it, nod, temp, l);
    for (lll i = 1; i < NR; ++i) {
      freq[i] += temp[i];
      if (freq[i] == max_) {
        sum += i;
      }
      if (freq[i] > max_) {
        max_ = freq[i];
        sum = i;
      }
    }
  }
  l_max = max_;
  ans[nod] = sum;
}

signed main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  v.reserve(NR);
  cin >> n;
  for (lll i = 1; i <= n; ++i) {
    cin >> c[i];
  }
  for (lll i = 1; i < n; ++i) {
    lll x, y;
    cin >> x >> y;
    v[x].pb(y);
    v[y].pb(x);
  }
  lll ans[NR] = {0};
  dfs1(1, 0);
  dfs2(1, 0, ans, x);
  for (lll i = 1; i <= n; ++i)
    cout << ans[i] << ' ';
  cout << '\n';
  return 0;
}