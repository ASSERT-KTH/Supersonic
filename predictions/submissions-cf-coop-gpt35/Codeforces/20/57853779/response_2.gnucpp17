#include <bits/stdc++.h>
using namespace std;
#define int long long
const int INF = 1e18;
const int maxn = 100005;

int32_t main() {
  int n, m;
  cin >> n >> m;

  vector<vector<pair<int, int>>> adj(maxn);
  for (int i = 0; i < m; i++) {
    int a, b, w;
    cin >> a >> b >> w;
    adj[a].emplace_back(b, w);
    adj[b].emplace_back(a, w);
  }

  int x = 1;
  vector<int> distance(maxn, INF);
  vector<int> p(maxn, -1);
  distance[x] = 0;

  set<pair<int, int>> q;
  q.insert({0, x});

  while (!q.empty()) {
    int a = q.begin()->second;
    q.erase(q.begin());

    for (auto u : adj[a]) {
      int b = u.first, w = u.second;

      if (distance[a] + w < distance[b]) {
        q.erase({distance[b], b});
        distance[b] = distance[a] + w;
        p[b] = a;
        q.insert({distance[b], b});
      }
    }
  }

  if (p[n] == -1) {
    cout << "-1" << endl;
    return 0;
  }

  vector<int> path;
  for (int v = n; v != x; v = p[v]) {
    path.push_back(v);
  }
  path.push_back(x);
  reverse(path.begin(), path.end());

  for (auto i : path)
    cout << i << ' ';
  cout << endl;
}