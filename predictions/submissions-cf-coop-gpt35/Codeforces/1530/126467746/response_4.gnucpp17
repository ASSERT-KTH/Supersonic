#include <cstdio>
#include <map>
using namespace std;

const int MAXN = 2e5 + 12;

int solve(int n, int ans[], int a[], int m[]) {
  bool check[MAXN] = {false};
  int c = 0;
  for (int i = 1; i <= n; i++) {
    if (!check[a[i]]) {
      ans[i] = a[i];
      m[a[i]] = i;
      check[a[i]] = true;
      c++;
    }
  }
  int k[MAXN];
  int h = 0;
  for (int i = 1; i <= n; i++) {
    if (!check[i]) {
      ans[h+1] = i;
      k[h] = i;
      h++;
    }
  }
  for (int i = 1; i <= n; i++) {
    if (ans[i] == 0) {
      ans[i] = k[h - 1];
      h--;
    }
  }
  return c;
}

void print(int ans[], int c, int n) {
  printf("%d\n", c);
  for (int i = 1; i <= n; i++)
    printf("%d ", ans[i]);
  printf("\n");
}

int main() {
  int t;
  scanf("%d", &t);
  while (t--) {
    int n;
    scanf("%d", &n);
    int a[n + 1];
    for (int i = 1; i <= n; i++)
      scanf("%d", &a[i]);
    int ans[n + 1] = {0};
    int m[MAXN] = {0};
    int number = solve(n, ans, a, m);
    map<int, int> k;
    for (int i = 1; i <= n; i++)
      k[i] = a[i];
    for (int i = 1; i <= n; i++) {
      if (ans[i] == i) {
        ans[i] = k[i];
        ans[m[a[i]]] = i;
      }
    }
    print(ans, number, n);
  }
  return 0;
}