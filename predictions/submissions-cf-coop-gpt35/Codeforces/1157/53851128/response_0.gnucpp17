#include <algorithm>
#include <iostream>
#include <vector>
#include <set>
#include <map>

typedef long long int ll;
using namespace std;

int main() {
  ll n;
  cin >> n;

  vector<ll> va(n), vb(n), vc(n);
  for (ll i = 0; i < n; ++i) {
    cin >> va[i];
  }
  for (ll i = 0; i < n; ++i) {
    cin >> vb[i];
  }

  multiset<ll> stb;
  for (ll i = 0; i < n; ++i) {
    stb.insert(vb[i] % n);
  }

  ll bg = *stb.begin();
  ll ed = *stb.rbegin();

  for (ll i = 0; i < n; ++i) {
    ll curr = va[i];
    ll target = (n - curr) % n;

    auto it = stb.lower_bound(target);
    if (it != stb.end() && (*it + curr) % n < (bg + curr) % n) {
      vc[i] = (*it + curr) % n;
      stb.erase(it);
    } else {
      vc[i] = (bg + curr) % n;
      stb.erase(stb.begin());
    }
  }

  for (ll i = 0; i < n; ++i) {
    cout << vc[i] << " ";
  }
  cout << endl;

  return 0;
}