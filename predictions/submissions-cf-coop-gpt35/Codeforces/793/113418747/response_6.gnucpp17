#include <bits/stdc++.h>
using namespace std;
const int INF = 1000000007;
const int N = 81;
int n, m, p;
int c[N][N], f[N][N][2];
int main() {
  cin >> n >> p >> m;
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= n; ++j)
      c[i][j] = INF;
  }
  for (int i = 1, x, y, dis; i <= m; ++i) {
    scanf("%d%d", &x, &y);
    scanf("%d", &dis);
    c[x][y] = min(dis, c[x][y]);
  }
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= n; ++j) {
      f[i][j][0] = f[i][j][1] = INF;
    }
  }
  for (int i = 1; i <= n; ++i) {
    f[i][i][0] = f[i][i][1] = 0;
  }
  for (int d = 1; d < n; ++d) {
    for (int i = 1; i + d <= n; ++i) {
      int j = i + d;
      int fi0 = INF, fi1 = INF;
      int fj0 = INF, fj1 = INF;
      for (int k = 2; k <= p; ++k) {
        fi0 = min(fi0, f[i][j][0] + c[i][i + 1]);
        fi0 = min(fi0, f[i][j][1] + c[i][j]);
        fi1 = min(fi1, f[i][j][0] + c[i][i + 1]);
        fi1 = min(fi1, f[i][j][1] + c[i][j]);
        
        f[i][j][0] = min(f[i][j][0], fi0 + c[i][i + 1]);
        f[i][j][0] = min(f[i][j][0], fi1 + c[i][j]);
        
        fj0 = min(fj0, f[i][j][1] + c[j - 1][j]);
        fj0 = min(fj0, f[i][j][0] + c[i][j]);
        fj1 = min(fj1, f[i][j][1] + c[j - 1][j]);
        fj1 = min(fj1, f[i][j][0] + c[i][j]);
        
        f[i][j][1] = min(f[i][j][1], fj1 + c[j - 1][j]);
        f[i][j][1] = min(f[i][j][1], fj0 + c[i][j]);
      }
    }
  }
  int ans = INF;
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= n; ++j) {
      ans = min(ans, f[i][j][0]);
      ans = min(ans, f[i][j][1]);
    }
  }
  cout << (ans == INF ? -1 : ans) << endl;
}