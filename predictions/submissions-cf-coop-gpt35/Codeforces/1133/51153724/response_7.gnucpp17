#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;
using ull = unsigned long long;

int main() {
  ull n;
  cin >> n;

  // Use std::vector instead of C-style array for dynamic memory management
  vector<ull> a(n);
  for (ull i = 0; i < n; ++i) {
    cin >> a[i];
  }

  // Sort the array using a modified counting sort algorithm
  const ull MAX_VALUE = pow(10, 9) + 10;
  vector<ull> count(MAX_VALUE + 1, 0);
  for (ull i = 0; i < n; ++i) {
    ++count[a[i]];
  }

  ull max_count = 0;
  ull current_count = 0;
  ull last = 0;

  for (ull i = 0; i <= MAX_VALUE; ++i) {
    current_count += count[i];

    // Check if the difference between current element and last element is greater than 5
    if (i - a[last] > 5) {
      max_count = max(max_count, current_count);
      current_count -= count[a[last]];
      ++last;
    }
  }

  cout << max_count << endl;
  return 0;
}