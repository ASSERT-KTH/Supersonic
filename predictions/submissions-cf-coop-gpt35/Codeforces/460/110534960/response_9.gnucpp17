#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int N = 1e5 + 70;
const int M = 1e9 + 7;

bool check(const vector<int>& h, int n, int m, int w, int x) {
  vector<long long> s(n, 0);
  long long cur = 0, mm = 0;
  for (int i = 0; i < n; ++i) {
    if (i - w >= 0)
      cur -= s[i - w];
    if (h[i] >= x)
      continue;
    if (h[i] + cur < x) {
      s[i] = x - h[i] - cur;
      cur += s[i];
      mm += s[i];
    }
    if (mm > m)
      return false;
  }
  return true;
}

int solve() {
  int n, m, w;
  cin >> n >> m >> w;
  vector<int> h(n);
  int mn = 1e9;
  for (int i = 0; i < n; ++i) {
    cin >> h[i];
    mn = min(mn, h[i]);
  }
  int l = 0, r = mn + m, ans = 0;
  while (l <= r) {
    int md = (l + r) / 2;
    if (check(h, n, m, w, md)) {
      ans = max(ans, md);
      l = md + 1;
    } else {
      r = md - 1;
    }
  }
  cout << ans << endl;
  return 0;
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);
  
  int t = 1;
  for (int tt = 1; tt <= t; ++tt) {
    solve();
  }

  return 0;
}