#include <bits/stdc++.h>
using namespace std;

const long long mxn = 32 * 3e5;

struct TrieNode {
  long long child[2];
  long long count;
};

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);

  long long n;
  cin >> n;

  vector<long long> a(n);
  for (long long i = 0; i < n; ++i) {
    cin >> a[i];
  }

  vector<TrieNode> tr(mxn);
  long long tot = 1;

  auto ins = [&](long long x) {
    long long p = 1;
    ++tr[p].count;
    for (long long i = 30; i >= 0; --i) {
      long long b = (x >> i) & 1;
      if (!tr[p].child[b]) {
        tr[p].child[b] = ++tot;
      }
      p = tr[p].child[b];
      ++tr[p].count;
    }
    ++tr[p].count;
  };

  auto qry = [&](long long x) {
    long long p = 1;
    --tr[p].count;
    long long res = 0;
    for (long long i = 30; i >= 0; --i) {
      long long b = (x >> i) & 1;
      if (tr[tr[p].child[b]].count > 0) {
        p = tr[p].child[b];
      } else {
        p = tr[p].child[!b];
        res += (1 << i);
      }
      --tr[p].count;
    }
    --tr[p].count;
    return res;
  };

  for (long long i = 0; i < n; ++i) {
    long long b;
    cin >> b;
    ins(b);
  }

  for (long long i = 0; i < n; ++i) {
    cout << qry(a[i]) << ' ';
  }
  cout << '\n';

  return 0;
}