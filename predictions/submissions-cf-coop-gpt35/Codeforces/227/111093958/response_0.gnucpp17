#include <iostream>
#include <vector>
using namespace std;
#define int long long

int n, m;
vector<int> a;

int main() {
  ios_base::sync_with_stdio(0);
  cin >> n;
  
  // Step 1: Use a vector instead of an array for dynamic memory allocation
  a.resize(n);
  
  for (int i = 0; i < n; ++i)
    cin >> a[i];
  
  cin >> m;
  
  int first = 0, second = 0;

  // Step 3: Optimize the calculation of sums
  for (int i = 0; i < n; ++i) {
    first += i + 1; // Calculate the sum of all indices
    second += n - i; // Calculate the sum of all remaining indices
  }

  while (m--) {
    int x;
    cin >> x;
    
    // Step 3: Adjust the sums based on the input value
    first -= a[x-1]; // Subtract the index of x from the sum of all indices
    second += a[x-1] - n; // Add the remaining indices after x to the sum of all remaining indices
  }
  
  cout << first << ' ' << second;
  return 0;
}