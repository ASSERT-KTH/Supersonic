#include <cstdio>
#include <algorithm>
#include <vector>
#include <map>
using namespace std;

#define int long long
int inf = 1e9 + 7;

vector<bool> b;
int m, p;
int cnt = 0;

bool check(int x) {
  printf("%lld\n", x);
  fflush(stdout);
  scanf("%lld", &x);
  if (x == 0)
    exit(0);
  return (x == -1) ^ b[(cnt++) % p];
}

signed main() {
  int n;
  scanf("%lld", &n);
  
  vector<int> x(n, 0), ans(n, 0);
  vector<pair<int, int>> v(n, {0, 0});

  for (int i = 2; i <= n; i++) {
    printf("XOR 1 %lld\n", i);
    fflush(stdout);
    scanf("%lld", &x[i - 1]);
    v[i - 1] = {x[i - 1], i - 1};
  }
  
  map<int, int> valueIndexMap;
  int index1, index2;
  bool bFound = false;

  for (int i = 0; i < n - 1; i++) {
    int value = v[i].first;
    int index = v[i].second;

    if (valueIndexMap.find(value) != valueIndexMap.end()) {
      bFound = true;
      index1 = valueIndexMap[value];
      index2 = index;
      break;
    }

    valueIndexMap[value] = index;
  }
  
  if (bFound) {
    printf("AND %lld %lld\n", index1 + 1, index2 + 1);
    fflush(stdout);
    int a;
    scanf("%lld", &a);
    ans[0] = a ^ x[index1];
    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }
    printf("!");
    for (int i = 0; i < n; i++) {
      printf(" %lld", ans[i]);
    }
    printf("\n");
    fflush(stdout);
  } else {
    printf("AND 1 %lld\n", v[1].second + 1);
    fflush(stdout);
    int a;
    scanf("%lld", &a);
    ans[0] = a;
    printf("AND 1 %lld\n", v[n - 2].second + 1);
    fflush(stdout);
    scanf("%lld", &a);
    ans[0] |= a;
    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }
    printf("!");
    for (int i = 0; i < n; i++) {
      printf(" %lld", ans[i]);
    }
    printf("\n");
    fflush(stdout);
  }
}