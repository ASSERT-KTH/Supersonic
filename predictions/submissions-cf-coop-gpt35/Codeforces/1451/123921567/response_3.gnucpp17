#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

#define int long long

int inf = 1e9 + 7;

vector<char> b;
int m, p;
int cnt = 0;

bool check(int x) {
  cout << x << '\n';
  cout.flush();
  cin >> x;
  if (x == 0)
    exit(0);
  return (x == -1) ^ b[(++cnt) % p];
}

signed main() {
  cin.tie(0);
  cout.tie(0);
  ios::ios_base::sync_with_stdio(false);

  int n;
  cin >> n;

  vector<int> x(n-1, 0), ans(n-1, 0);
  vector<pair<int, int>> v(n-1, {0, 0});

  for (int i = 2; i <= n; i++) {
    cout << "XOR " << 1 << " " << i << "\n";
    cout.flush();
    cin >> x[i - 2];
    v[i - 2] = {x[i - 2], i - 2};
  }

  bool b = false;
  int index1, index2;

  sort(v.begin(), v.end());

  for (int i = 0; i < n - 2 && !b; i++) {
    if (v[i].first == v[i + 1].first) {
      b = true;
      index1 = v[i].second;
      index2 = v[i + 1].second;
    }
  }

  if (b) {
    cout << "AND " << index1 + 2 << " " << index2 + 2 << "\n";
    cout.flush();
    int a;
    cin >> a;
    ans[0] = a ^ x[index1];

    for (int i = 1; i < n-1; i++) {
      ans[i] = ans[0] ^ x[i];
    }

    cout << "! ";
    copy(ans.begin(), ans.end(), ostream_iterator<int>(cout, " "));
    cout << '\n';
    cout.flush();
  } else {
    cout << "AND " << 1 << " " << v[0].second + 2 << "\n";
    cout.flush();
    int a;
    cin >> a;
    ans[0] = a;

    cout << "AND " << 1 << " " << v[n - 3].second + 2 << "\n";
    cout.flush();
    cin >> a;
    ans[0] |= a;

    for (int i = 1; i < n-1; i++) {
      ans[i] = ans[0] ^ x[i];
    }

    cout << "! ";
    copy(ans.begin(), ans.end(), ostream_iterator<int>(cout, " "));
    cout << '\n';
    cout.flush();
  }
}