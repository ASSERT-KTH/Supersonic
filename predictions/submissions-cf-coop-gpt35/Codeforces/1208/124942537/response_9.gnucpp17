#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

void solve() {
  unordered_map<int, int> m;
  int n;
  cin >> n;
  vector<int> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i];
    m[a[i]]++;
  }
  if (m.size() == n) {
    cout << 0 << "\n";
    return;
  }
  int mi = INT_MAX;
  unordered_map<int, int> &temp = m;
  for (int i = 0; i < n; i++) {
    temp = m;
    int c = 0;
    int temp_size = temp.size();
    for (int j = i; j < n && temp_size > (n - c); j++) {
      if (temp.count(a[j])) {
        temp[a[j]]--;
        if (temp[a[j]] == 0)
          temp.erase(a[j]);
        c++;
        temp_size--;
        if (temp_size == (n - c)) {
          mi = min(mi, c);
          break;
        }
      }
    }
  }
  cout << mi << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif

  int t = 1;
  while (t--)
    solve();

  cerr << "Time elapsed :" << clock() * 1000.0 / CLOCKS_PER_SEC << " ms\n";
  return 0;
}