#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_set>

template <typename T>
inline void iterate(T& a, const T& b, const T& c) {
  for (auto a = b; a < c; a++);
}

void solve() {
  std::unordered_set<int> s;
  int n;
  std::cin >> n;
  std::vector<int> a(n);
  for (auto& num : a) {
    std::cin >> num;
    s.insert(num);
  }
  if (s.size() == n) {
    std::cout << 0 << "\n";
    return;
  }
  int mi = INT_MAX;
  int start = 0;
  std::unordered_set<int> temp;
  iterate(i, 0, n) {
    temp.clear();
    int c = 0;
    iterate(j, i, n) {
      temp.insert(a[j]);
      c++;
      if (temp.size() == c) {
        mi = std::min(mi, c);
      } else {
        break;
      }
    }
  }
  std::cout << mi << "\n";
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  int t = 1;
  while (t--)
    solve();
  std::cerr << "Time elapsed: " << clock() * 1000.0 / CLOCKS_PER_SEC << " ms\n";
  return 0;
}