#include <iostream>
#include <vector>
#include <algorithm>

void solve() {
  int n;
  std::cin >> n;
  
  std::vector<int> a(n);
  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
  }
  
  // Count the frequency of each element using an array
  std::vector<int> freq(n + 1, 0);
  int distinct = 0;
  
  int mi = n; // Initialize the minimum length to the maximum possible value
  
  for (int i = 0, j = 0; i < n; i++) {
    if (freq[a[i]] == 0) {
      distinct++;
    }
    freq[a[i]]++;
    
    // If removing the subarray [j, i] makes all elements distinct,
    // update the minimum length and move the left pointer j
    while (distinct < i - j + 1) {
      freq[a[j]]--;
      if (freq[a[j]] == 0) {
        distinct--;
      }
      j++;
    }
    
    // Update the minimum length if all remaining elements are distinct
    if (distinct == n - (i - j + 1)) {
      mi = std::min(mi, i - j + 1);
    }
  }
  
  std::cout << mi << '\n';
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  
  int t = 1;
  while (t--)
    solve();
  
  return 0;
}