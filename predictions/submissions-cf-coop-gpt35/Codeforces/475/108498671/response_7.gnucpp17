#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <unordered_map>
using namespace std;

int gcd(int a, int b) {
  while (b != 0) {
    int temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}

int main() {
  int n;
  scanf("%d", &n);

  int* a = new int[n];
  for (int i = 0; i < n; i++) {
    scanf("%d", &a[i]);
  }

  int** st = new int*[n];
  for (int i = 0; i < n; i++) {
    st[i] = new int[20];
    st[i][0] = a[i];
  }

  for (int nowP = 1; nowP < 20; nowP++) {
    for (int i = 0; i + (1LL << nowP) <= n; i++) {
      st[i][nowP] = gcd(st[i][nowP - 1], st[i + (1LL << (nowP - 1))][nowP - 1]);
    }
  }

  unordered_map<int, long long> ans;

  for (int L = 0; L < n; L++) {
    int prev_ind = L;
    int now_ind = L;
    while (now_ind < n) {
      int now_gcd = st[L][0];
      int l = now_ind;
      int r = n;
      while (r - l > 1) {
        int m = (l + r) / 2;
        int x = gcd(st[L][0], st[m][0]);
        if (x < now_gcd)
          r = m;
        else
          l = m;
      }
      ans[now_gcd] += r - prev_ind;
      now_ind = r;
      prev_ind = r;
    }
  }

  int q;
  scanf("%d", &q);

  while (q--) {
    int x;
    scanf("%d", &x);
    printf("%lld\n", ans[x]);
  }

  // Clean up dynamically allocated memory
  delete[] a;
  for (int i = 0; i < n; i++) {
    delete[] st[i];
  }
  delete[] st;

  return 0;
}