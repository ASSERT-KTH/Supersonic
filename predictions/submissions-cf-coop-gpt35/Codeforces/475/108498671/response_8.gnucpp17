#include <cstdio>
#include <cstdlib>
#include <iostream>
using namespace std;

int gcd(int a, int b) {
  if (b == 0) {
    return a;
  }
  return gcd(b, a % b);
}

const int MAXN = 100100;
const int MAXGCD = 200100;

int n;
int q;
int a[MAXN];
int st[MAXN];
long long ans[MAXGCD];

int get(int l, int r) {
  int sz = __builtin_clz(r - l) - __builtin_clz(1);
  return gcd(st[l], st[r - (1 << sz)]);
}

signed main() {
  scanf("%d", &n);
  for (int i = 0; i < n; i++) {
    scanf("%d", &a[i]);
  }

  for (int i = 0; i < n; i++) {
    st[i] = a[i];
  }

  for (int nowP = 1; nowP < 20; nowP++) {
    for (int i = 0; i + (1 << nowP) <= n; i++) {
      st[i] = gcd(st[i], st[i + (1 << (nowP - 1))]);
    }
  }

  for (int L = 0; L < n; L++) {
    int now_gcd = a[L];
    int l = L;
    int r = n;
    while (l < r) {
      int m = (l + r) >> 1;
      int x = get(L, m + 1);
      if (x < now_gcd)
        r = m;
      else
        l = m + 1;
    }
    for (int i = now_gcd; i < MAXGCD; i += now_gcd) {
      ans[i] += r - L;
    }
  }

  scanf("%d", &q);
  while (q--) {
    int x;
    scanf("%d", &x);
    printf("%lld\n", ans[x]);
  }
  return 0;
}