#include <iostream>
#include <vector>
#include <array>
#include <algorithm>
#include <random>

typedef long long ll;
typedef unsigned long long ull;

void solve() {
  int n, m;
  std::cin >> n >> m;
  std::vector<int> v(n);
  for (auto &x : v)
    std::cin >> x;

  std::vector<ll> d(2e6 + 5, -1);
  std::vector<int> q;
  for (int i = 0; i < n; i++) {
    d[v[i]] = 0LL;
    q.push_back(v[i]);
  }

  std::vector<int> res;
  ll mini_sum = 0LL;
  for (int i = 0; i < q.size(); i++) {
    if ((int)res.size() == m)
      break;
    int cur = q[i];
    if (d[cur] != 0) {
      res.push_back(cur);
      mini_sum += d[cur];
    }
    if (cur - 1 >= 0 && d[cur - 1] == -1) {
      d[cur - 1] = d[cur] + 1;
      q.push_back(cur - 1);
    }
    if (cur + 1 <= 2e6 && d[cur + 1] == -1) {
      d[cur + 1] = d[cur] + 1;
      q.push_back(cur + 1);
    }
  }

  std::cout << mini_sum << "\n";
  for (auto x : res)
    std::cout << x << " ";
  std::cout << "\n";
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);

  int t = 1;
  while (t--) {
    solve();
  }

  return 0;
}