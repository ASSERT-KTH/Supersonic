#include <iostream>
#include <vector>
#include <unordered_map>
#include <deque>
#include <random>
#include <chrono>
#include <algorithm>

using namespace std;

typedef pair<int, int> pii;
typedef pair<long long, long long> pll;
typedef vector<int> vi;
typedef vector<long long> vll;
typedef vector<unsigned long long> vull;
typedef vector<pii> vpii;
typedef vector<pll> vpll;
typedef vector<vi> vvi;
typedef vector<vll> vvll;
typedef vector<vull> vvull;

const int INF = 0x3f3f3f3f;
const int mod = 1e9 + 7;

mt19937 rng(time(0));

void solve() {
  int n, m;
  cin >> n >> m;
  vi v(n);
  for (auto &x : v)
    cin >> x;
  unordered_map<long long, long long> d;
  deque<long long> q;
  for (int i = 0; i < n; i++) {
    d[v[i]] = 0LL;
    q.push_back(v[i]);
  }
  vll res;
  long long mini_sum = 0LL;
  while (!q.empty()) {
    if ((int)res.size() == m)
      break;
    long long cur = q.front();
    q.pop_front();
    if (d[cur] != 0) {
      res.push_back(cur);
      mini_sum += d[cur];
    }
    if (!d.count(cur - 1)) {
      d[cur - 1] = d[cur] + 1;
      q.push_back(cur - 1);
    }
    if (!d.count(cur + 1)) {
      d[cur + 1] = d[cur] + 1;
      q.push_back(cur + 1);
    }
  }
  shuffle(res.begin(), res.end(), rng);
  string output = to_string(mini_sum) + "\n";
  for (auto x : res)
    output += to_string(x) + " ";
  output += "\n";
  cout << output;
  cout.flush();
}

int main() {
  ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
  int t = 1;
  while (t--) {
    solve();
  }
  return 0;
}