#include <iostream>
#include <vector>
using namespace std;

const int MAX = 1000001;

vector<int> primes;

void sieveOfEratosthenes() {
  vector<bool> isPrime(MAX, true);
  isPrime[0] = isPrime[1] = false;

  for (int i = 2; i * i <= MAX; i++) {
    if (isPrime[i]) {
      for (int j = i * i; j <= MAX; j += i) {
        isPrime[j] = false;
      }
    }
  }

  for (int i = 2; i <= MAX; i++) {
    if (isPrime[i]) {
      primes.push_back(i);
    }
  }
}

int main() {
  int t;
  cin >> t;

  sieveOfEratosthenes();

  while (t--) {
    int n;
    cin >> n;

    vector<int> a(n);
    vector<int> freq(MAX, 0);

    for (int i = 0; i < n; i++) {
      cin >> a[i];
      freq[a[i]]++;
    }

    int uniqueIndex = -1;
    for (int i = 0; i < n; i++) {
      if (freq[a[i]] == 1) {
        uniqueIndex = i + 1;
        break;
      }
    }

    cout << uniqueIndex << endl;
  }

  return 0;
}