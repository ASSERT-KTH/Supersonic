#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);

    int n, m;
    std::cin >> n >> m;

    std::vector<std::vector<int>> tasks(m, std::vector<int>(3));
    std::unordered_map<int, int> assignedTasks;

    for (int i = 0; i < m; i++) {
        std::cin >> tasks[i][1] >> tasks[i][0] >> tasks[i][2];
    }

    std::sort(tasks.begin(), tasks.end());

    for (const auto& task : tasks) {
        int cnt = task[2];
        for (int j = task[1]; j < task[0]; j++) {
            if (assignedTasks.find(j) == assignedTasks.end()) {
                cnt--;
                assignedTasks[j] = task[2];
                if (cnt == 0)
                    break;
            }
        }
        if (cnt != 0) {
            std::cout << -1;
            return 0;
        }
    }

    for (int i = 1; i <= n; i++)
        std::cout << assignedTasks[i] << " ";

    return 0;
}