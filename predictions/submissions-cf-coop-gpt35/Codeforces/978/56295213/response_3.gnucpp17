#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n, m;
    cin >> n >> m;

    vector<vector<int>> a(m, vector<int>(3));

    vector<int> sch(n+1, 0);
    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;

    for (int i = 0; i < m; i++) {
        cin >> a[i][1] >> a[i][0] >> a[i][2];
        a[i][0]++; // Adjust end time to be exclusive

        pq.push({a[i][0], i}); // Store end time and index in priority queue
    }

    while (!pq.empty()) {
        int idx = pq.top().second;
        pq.pop();

        int cnt = a[idx][2];
        for (int j = a[idx][1]; j < a[idx][0]; j++) {
            if (!sch[j]) {
                cnt--;
                sch[j] = idx + 1;
                if (cnt == 0)
                    break;
            }
        }

        if (cnt != 0) {
            cout << -1;
            return 0;
        }
    }

    for (int i = 1; i <= n; i++)
        cout << sch[i] << " ";

    return 0;
}