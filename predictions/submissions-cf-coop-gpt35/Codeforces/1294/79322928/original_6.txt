Code Analysis:
- The code is using unnecessary includes such as `<algorithm>`, `<bits/stdc++.h>`, and `<vector>`. These should be removed to improve compilation time.
- The `sortbysec` function is not used in the code and can be removed.
- The `ll`, `M`, `D`, and `PI` macros are not used in the code and can be removed.
- The `tests` variable is not necessary since the loop will only execute once. It can be removed.
- The `a` array is initialized with `{0}`, but its size is not specified. This is not valid C++. Instead, it should be initialized with `int a[x] = {};` to initialize all elements to 0.
- The set `s` is initialized with a range of values from 0 to `max(2*q, q+100)`, but it is not necessary to insert all these values. It can be simplified to `set<int> s;`.
- The loop `while (q-- > 0)` can be simplified to `for (int i = 0; i < q; i++)` since the number of iterations is known.
- The expression `a[y % x] * x + y % x` can be simplified to `(a[y % x] + 1) * x + y % x` to avoid redundant calculations.
- The line `cout << *(s.begin()) << endl;` can be replaced with `cout << *s.begin() << '\n';` for better performance.

Optimization Strategy:
1. Remove unnecessary includes such as `<algorithm>`, `<bits/stdc++.h>`, and `<vector>`.
2. Remove the unused `sortbysec` function and macro definitions.
3. Remove the unnecessary `tests` variable.
4. Initialize the `a` array with `int a[x] = {};` to initialize all elements to 0.
5. Simplify the initialization of the set `s` to `set<int> s;`.
6. Change the loop `while (q-- > 0)` to `for (int i = 0; i < q; i++)`.
7. Simplify the expression `a[y % x] * x + y % x` to `(a[y % x] + 1) * x + y % x`.
8. Replace `cout << *(s.begin()) << endl;` with `cout << *s.begin() << '\n';`.

Step-by-Step Explanation:
1. Remove unnecessary includes:
```cpp
#include <iostream>
#include <set>
```
2. Remove unused function and macros:
```cpp
bool sortbysec(const pair<int, int> &a, const pair<int, int> &b) {
  return (a.second < b.second);
}

#define ll long long int
#define M 1000000007
#define D 998244353
#define PI 3.14159265
```
3. Remove unnecessary variable:
```cpp
int tests = 1;
```
4. Initialize `a` array with all elements set to 0:
```cpp
int a[x] = {};
```
5. Simplify initialization of `s` set:
```cpp
set<int> s;
```
6. Change loop to a for loop:
```cpp
for (int i = 0; i < q; i++) {
  int y;
  cin >> y;
  int z = (a[y % x] + 1) * x + y % x;
  s.erase(z);
  a[y % x]++;
  cout << *s.begin() << '\n';
}
```
7. Replace `cout << *(s.begin()) << endl;` with `cout << *s.begin() << '\n';`:
```cpp
cout << *s.begin() << '\n';
```

Optimized Code:
```cpp
#include <iostream>
#include <set>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int q, x;
  cin >> q >> x;

  int a[x] = {};

  set<int> s;

  for (int i = 0; i < q; i++) {
    int y;
    cin >> y;
    int z = (a[y % x] + 1) * x + y % x;
    s.erase(z);
    a[y % x]++;
    cout << *s.begin() << '\n';
  }

  return 0;
}
```
Note: This optimized code removes unnecessary includes, unused functions and macros, simplifies the code logic, and improves the performance by reducing redundant calculations and using newline character instead of `endl`.