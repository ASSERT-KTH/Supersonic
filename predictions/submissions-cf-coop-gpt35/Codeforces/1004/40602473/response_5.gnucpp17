#include <iostream>
using namespace std;

const int MAXN = 1000000;
int freq[MAXN];
int cfreq[MAXN];

inline bool isvalid(int n, int m, int x, int y, int* freq, int* cfreq);
inline void rrep(int& i, int N);
inline void rep(int& i, int N);

int main() {
  int T;
  cin >> T;

  fill(freq, freq + MAXN, 0);

  int t;
  rep(t, T) {
    int k;
    cin >> k;
    freq[k]++;
  }

  int x = 0;
  rep(t, T) {
    if (t > 0 && (freq[t] != (t << 2))) {
      break;
    }
    x = t;
  }

  int n, m, y;
  for (n = 1; n * n <= T; n++) {
    if (T % n == 0) {
      m = T / n;
      y = n + m - x - 1;
      if (isvalid(n, m, x, y, freq, cfreq)) {
        cout << n << " " << m << endl;
        cout << x << " " << y << endl;
        break;
      } else if (isvalid(m, n, x, y, freq, cfreq)) {
        cout << m << " " << n << endl;
        cout << x << " " << y << endl;
        break;
      }
    }
  }

  if (n * n > T) {
    cout << -1 << endl;
  }

  return 0;
}

inline bool isvalid(int n, int m, int x, int y, int* freq, int* cfreq) {
  if (x < 1 || x > n || y < 1 || y > m) {
    return false;
  }

  int i, j;
  fill(cfreq, cfreq + MAXN, 0);
  x--;
  y--;
  rep(i, n) {
    rep(j, m) {
      cfreq[(abs(x - i) + abs(y - j))]++;
    }
  }

  rep(i, MAXN) {
    if (cfreq[i] != freq[i]) {
      return false;
    }
  }

  return true;
}

inline void rrep(int& i, int N) {
  for (i = (N - 1); i >= 0; i--) {
  }
}

inline void rep(int& i, int N) {
  for (i = 0; i < N; i++) {
  }
}