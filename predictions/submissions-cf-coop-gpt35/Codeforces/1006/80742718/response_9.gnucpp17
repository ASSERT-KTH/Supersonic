#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
using namespace std;

const int N = 29;
typedef long long ll;

int main() {
  // freopen("in.txt", "r", stdin);

  ios_base::sync_with_stdio(0);
  cin.tie(NULL);

  int n, m;
  ll k;
  cin >> n >> m >> k;

  vector<vector<ll>> grid(n + 1, vector<ll>(m + 1));

  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= m; j++) {
      cin >> grid[i][j];
    }
  }

  ll ans = 0;
  int num = min(n, m) - 1;

  vector<vector<vector<int>>> mp(n + 1, vector<vector<int>>(m + 1, vector<int>(n * m)));

  for (int i = 0; i < (1 << (n + m - 2)); i++) {
    int row = 1, col = 1;
    ll x = grid[row][col];
    mp[row][col][x] = 1;

    for (int j = 0; j < num; j++) {
      if (i & (1 << j)) {
        row++;
      } else {
        col++;
      }
      x ^= grid[row][col];
      mp[row][col][x] = 1;
    }
  }

  num = n + m - 2 - num;

  for (int i = 0; i < (1 << (n + m - 2 - num)); i++) {
    int row = n, col = m;
    ll x = grid[row][col];

    for (int j = 0; j < num; j++) {
      if (i & (1 << j)) {
        row--;
      } else {
        col--;
      }
      x ^= grid[row][col];
      if (row < 1 || col < 1) {
        break;
      }
    }

    if (row >= 1 && col >= 1) {
      x ^= grid[row][col];
      ans += (mp[row][col][x ^ k] > 0 ? 1 : 0);
    }
  }

  cout << ans << endl;
  return 0;
}