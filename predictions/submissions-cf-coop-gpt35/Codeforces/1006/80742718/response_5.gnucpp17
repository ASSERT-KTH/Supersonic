#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <unordered_map>

void file() {
#ifndef ONLINE_JUDGE
  freopen("in.txt", "r", stdin);
#else
#endif
}

void fast() {
  std::ios_base::sync_with_stdio(0);
  std::cin.tie(NULL);
}

const int N = 29;

int main() {
  file();
  fast();

  int n, m;
  long long k;
  std::cin >> n >> m >> k;

  std::vector<std::vector<long long>> grid(n, std::vector<long long>(m));
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < m; j++) {
      std::cin >> grid[i][j];
    }
  }

  long long ans = 0;
  int num = (n + m - 2 + 1) / 2;
  std::unordered_map<long long, int> mp;

  for (int i = 0; i < (1 << num); i++) {
    int row = 0, col = 0;
    long long x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j)) {
        row++;
      } else {
        col++;
      }
      x ^= grid[row][col];
    }
    mp[x]++;
  }

  num = n + m - 2 - num;
  for (int i = 0; i < (1 << num); i++) {
    int row = n - 1, col = m - 1;
    long long x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j)) {
        row--;
      } else {
        col--;
      }
      if (row < 0 || col < 0) {
        break;
      }
      x ^= grid[row][col];
    }
    if (row >= 0 && col >= 0) {
      x ^= grid[row][col];
      ans += mp[x ^ k];
    }
  }

  std::cout << ans << '\n';
  return 0;
}