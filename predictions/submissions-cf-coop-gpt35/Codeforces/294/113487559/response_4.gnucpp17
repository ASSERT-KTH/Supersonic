#include <iostream>
#include <algorithm>
#include <vector>

const int MOD = 1000000007;

long long power(long long x, long long y) {
  long long res = 1;
  x = x % MOD;
  if (x == 0) {
    return 0;
  }
  while (y > 0) {
    if (y % 2 == 1) {
      res = (res * x) % MOD;
    }
    y /= 2;
    x = (x * x) % MOD;
  }
  return res;
}

int main() {
  int n, m;
  std::cin >> n >> m;

  std::vector<long long> a(n);
  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
  }
  std::sort(a.begin(), a.end());

  long long sum = 1;
  int d = n - m;
  for (int i = 1; i <= m; i++) {
    sum = (sum * (power(2, a[i] - a[i - 1] - 1) - 1)) % MOD;
    sum = (sum * power(a[i] - a[i - 1], d)) % MOD;
    d -= a[i] - a[i - 1];
  }
  std::cout << sum << "\n";

  return 0;
}