#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  int T;
  std::cin >> T;
  while (T--) {
    int N;
    std::cin >> N;
    std::vector<std::pair<int, int>> v;
    for (int i = 0; i < N; i++) {
      int M;
      std::cin >> M;
      int start = 0;
      int j;
      std::vector<int> mx;
      for (j = 0; j < M; j++) {
        int x;
        std::cin >> x;
        mx.push_back(x);
      }
      start = *std::max_element(mx.begin(), mx.end()) - j + 1;
      int end = M + start;
      v.push_back({start, end});
    }
    std::sort(v.begin(), v.end());
    int start = 0;
    int end = 0;
    for (int i = 0; i < N; i++) {
      if (v[i].first >= end) {
        int diff = v[i].first - end;
        start += diff;
        end = v[i].second;
      } else {
        int diff = end - v[i].first;
        end = v[i].second + diff;
      }
    }
    std::cout << start << "\n";
  }
}