#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  int T;
  std::cin >> T;
  while (T--) {
    int N;
    std::cin >> N;
    std::vector<int> start(N);
    std::vector<int> end(N);
    int max_start = 0;
    for (int i = 0; i < N; i++) {
      int M;
      std::cin >> M;
      std::vector<int> mx(M);
      for (int& x : mx) {
        std::cin >> x;
        x -= i + 1;
      }
      start[i] = *std::max_element(mx.begin(), mx.end());
      end[i] = M + start[i];
      max_start = std::max(max_start, start[i]);
    }
    int total_start = 0;
    int total_end = 0;
    for (int i = 0; i < N; i++) {
      if (start[i] >= total_end) {
        total_start += start[i] - total_end;
        total_end = end[i];
      } else {
        total_end += end[i] - start[i];
      }
    }
    std::cout << total_start << "\n";
  }
  return 0;
}