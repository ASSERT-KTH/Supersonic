#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int T;
  std::cin >> T;
  while (T--) {
    int N;
    std::cin >> N;
    std::vector<std::pair<int, int>> v(N);
    for (int i = 0; i < N; i++) {
      int M;
      std::cin >> M;
      int start = 0;
      int end = 0;
      for (int j = 0; j < M; j++) {
        int x;
        std::cin >> x;
        start = std::max(start, x - j + 1);
        end = std::max(end, x - j + 1 + M);
      }
      v[i] = {start, end};
    }
    
    // Counting sort
    const int MAX_VALUE = 1e6;
    std::vector<int> count(MAX_VALUE + 1, 0);
    for (const auto& p : v) {
      count[p.first]++;
    }
    int index = 0;
    for (int i = 0; i <= MAX_VALUE; i++) {
      while (count[i] > 0) {
        v[index++] = {i, v[index].second};
        count[i]--;
      }
    }
    
    int total_start = 0;
    int end = 0;
    for (const auto& p : v) {
      if (p.first >= end) {
        int diff = p.first - end;
        total_start += diff;
        end = p.second;
      } else {
        int diff = end - p.first;
        end = p.second + diff;
      }
    }
    std::cout << total_start << "\n";
  }
  
  return 0;
}