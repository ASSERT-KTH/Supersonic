#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int base = 257;
const int mod = 1e9 + 7;
set<ll> st;

ll get_hash(const string& s) {
    ll val = 0;
    ll power = 1;
    for (int i = 0; i < s.size(); i++) {
        val = (val + (s[i] * power) % mod) % mod;
        power = (power * base) % mod;
    }
    return val;
}

bool check(const string& t) {
    ll val = get_hash(t);
    ll power = 1;
    for (int i = 0; i < t.size(); i++) {
        for (int j = 'a'; j <= 'c'; j++) {
            if (j != t[i]) {
                ll modified_hash = (val + (j - t[i]) * power) % mod;
                if (st.count(modified_hash) > 0)
                    return true;
            }
        }
        power = (power * base) % mod;
    }
    return false;
}

int main() {
#ifdef DEBUG
    freopen("F:\\data.in", "r", stdin);
    freopen("F:\\data.out", "w", stdout);
#endif
#ifdef CANCEL
    std::ios::sync_with_stdio(false);
    std::cin.tie(0);
#endif

    int n, m;
    scanf("%d %d", &n, &m);

    for (int i = 0; i < n; i++) {
        char s[1000001];
        scanf("%s", s);
        st.insert(get_hash(string(s)));
    }

    for (int i = 0; i < m; i++) {
        char t[1000001];
        scanf("%s", t);
        printf("%s\n", check(string(t)) ? "YES" : "NO");
    }

#ifdef DEBUG
    fclose(stdin);
    fclose(stdout);
#endif
    return 0;
}