#include <iostream>
#include <vector>
#include <map>
#include <bitset>

using namespace std;

const int MX = 100005;
const int BLOCK = 1000;
const int NUM = MX / BLOCK + 1;

int N;
int cnt[NUM][2 * MX], CNT[NUM][MX], a[MX], A[MX];
bitset<MX> in[NUM];
vector<int> con[NUM];
map<int, int> m;

int get(int x) {
    if (!m.count(x)) {
        int sz = m.size();
        m[x] = sz;
    }
    return m[x];
}

void upd(int p, int inc) {
    int v = a[p];
    for (int i = (p + BLOCK - 1) / BLOCK; i <= N / BLOCK; i++) {
        CNT[i][cnt[i][v]]--;