#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long

ll xx, yy, ax, bx, ay, by, xs, ys, t;

ll dist(ll a, ll b) {
  return (a < b) ? (b - a) : (a - b);
}

ll next(ll temp) {
  return ax * temp + bx;
}

int main() {
  std::cin >> xx >> yy >> ax >> ay >> bx >> by >> xs >> ys >> t;

  ll temp = xx;
  ll tx = xs;
  std::vector<ll> arr;
  
  ll dea = dist(temp, tx);
  if (dea <= t)
    arr.push_back(temp);
    
  temp = next(temp);
  
  if (dist(tx, temp) > dea) {
    vs = 2;
  } else {
    vs = 1;
  }
  
  while (vs == 1 || (vs == 2 && dist(tx, temp) <= t)) {
    dea = dist(tx, temp);
    arr.push_back(temp);
    temp = next(temp);
    if (vs == 1 && dea < dist(tx, temp)) {
      vs = 2;
    }
  }
  
  ll ans = 0;
  for (int i = 0; i < arr.size(); i++) {
    ll dus = dist(tx, arr[i]);
    ll tx = dus;
    
    if (dus <= t) {
      int j = i;
      
      while (j < arr.size() - 1 && dus <= t) {
        j++;
        dus += dist(arr[j], arr[j - 1]);
      }
      
      ll tmp = (dus <= t) ? (ll)j - i + 1 : (ll)j - i;
      ans = std::max(ans, tmp);
      
      dus = tx;
      j = i;
      
      while (j > 0 && dus <= t) {
        j--;
        dus += dist(arr[j], arr[j + 1]);
      }
      
      tmp = (dus <= t) ? (ll)i - j + 1 : (ll)i - j;
      ans = std::max(ans, tmp);
    }
  }
  
  std::cout << ans;
  
  return 0;
}