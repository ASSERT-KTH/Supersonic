#include <iostream>
#include <vector>
#include <cmath>

struct Point {
  int64_t x;
  int64_t y;
};

struct Triangle {
  Point p1;
  Point p2;
  Point p3;
};

bool checkTriangle(const Point& p1, const Point& p2, const Point& p3, int64_t S) {
  int64_t Nx = p2.x - p1.x;
  int64_t Ny = p2.y - p1.y;
  int64_t Xi = p3.x - p1.x;
  int64_t Yi = p3.y - p1.y;
  int64_t t = Nx * Yi - Ny * Xi;
  if (std::abs(t) == S) {
    std::cout << "Yes\n";
    std::cout << p1.x << " " << p1.y << "\n";
    std::cout << p2.x << " " << p2.y << "\n";
    std::cout << p3.x << " " << p3.y << "\n";
    return true;
  }
  return false;
}

int main() {
  int n;
  int64_t S;
  std::cin >> n >> S;
  S *= 2L;
  std::vector<Point> points(n);
  for (int i = 0; i < n; ++i) {
    std::cin >> points[i].x >> points[i].y;
  }
  for (int s = 0; s < n; ++s) {
    for (int i = s + 1; i < n; ++i) {
      for (int j = i + 1; j < n; ++j) {
        if (checkTriangle(points[s], points[i], points[j], S)) {
          return 0;
        }
      }
    }
  }
  std::cout << "No\n";
  return 0;
}