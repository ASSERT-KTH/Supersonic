#include "bits/stdc++.h"
using namespace std;
const int N = 1234;
long long prev[N];
int v1, v2, t, d;

long long f(int tt, int speed) {
  if (tt == t) {
    return speed == v2 ? v2 : -1e10;
  }
  if (prev[speed] != -1) {
    return prev[speed];
  }
  long long x = -1e9;
  
  int start = max(0, v1 - (t - tt) * d); // Calculate the minimum possible speed for current time
  int end = min(v1 + (t - tt) * d, v1 + d); // Calculate the maximum possible speed for current time
  for (int i = start; i <= end; ++i) {
    x = max(x, f(tt + 1, i));
  }
  
  return prev[speed] = speed + x;
}

int main() {
  scanf("%d %d %d %d", &v1, &v2, &t, &d);
  memset(prev, -1, sizeof prev);
  printf("%lld\n", f(1, v1));
  return 0;
}