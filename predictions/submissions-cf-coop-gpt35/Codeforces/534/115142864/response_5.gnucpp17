#include <iostream>
#include <cstring>
#include <climits>

using namespace std;

const int N = 1234;

long long dp[N][N];
int v1, v2, t, d;

long long f(int tt, int speed) {
  if (tt == t) {
    return speed == v2 ? v2 : LLONG_MIN;
  }
  if (dp[tt][speed] != LLONG_MIN) {
    return dp[tt][speed];
  }
  long long x = LLONG_MIN;
  int start = max(0, v1 - (t - tt) * d);
  int end = min(v1 + (t - tt) * d, v1 + d);
  for (int i = start; i <= end; ++i) {
    x = max(x, f(tt + 1, i));
    if (speed - i >= 0) {
      x = max(x, f(tt + 1, speed - i));
    }
  }
  return dp[tt][speed] = speed + x;
}

int main() {
  scanf("%d %d %d %d", &v1, &v2, &t, &d);
  memset(dp, -1, sizeof dp);
  printf("%lld\n", f(1, v1));
  return 0;
}