#include <iostream>
#include <vector>
using namespace std;

const int MAX_T = 1234;

int v1, v2, t, d;
vector<vector<long long>> dp(MAX_T, vector<long long>(2 * MAX_T, -1));

long long f(int tt, int speed, bool increasing) {
  if (tt == t) {
    return speed == v2 ? v2 : -1e10;
  }
  if (dp[tt][speed] != -1) {
    return dp[tt][speed];
  }
  long long x = -1e9;
  
  if (increasing) {
    for (int i = 0; i <= d; ++i) {
      x = max(x, f(tt + 1, speed + i, true));
    }
  } else {
    for (int i = 0; i <= d; ++i) {
      if (speed - i >= 0) {
        x = max(x, f(tt + 1, speed - i, false));
      }
    }
  }
  
  return dp[tt][speed] = speed + x;
}

int main() {
  cin >> v1 >> v2 >> t >> d;
  cout << f(1, v1, true) << endl;
  return 0;
}