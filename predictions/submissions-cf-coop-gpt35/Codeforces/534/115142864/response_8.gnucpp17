#include <stdio.h>
#include <string.h>

const int N = 1234;
long long dp[N];
int v1, v2, t, d;

long long f(int tt, int speed) {
  if (tt == t) {
    return speed == v2 ? v2 : -1e10;
  }
  if (dp[speed] != -1) {
    return dp[speed];
  }
  long long x = -1e9;
  for (int i = -d; i <= d; i += 2) {
    int new_speed = speed + i;
    if (new_speed >= 0 && new_speed <= v1 + (t - tt) * d) {
      x = std::max(x, f(tt + 1, new_speed));
    }
  }
  return dp[speed] = speed + x;
}

int main() {
  scanf("%d %d %d %d", &v1, &v2, &t, &d);
  memset(dp, -1, sizeof dp);
  printf("%lld\n", f(1, v1));
  return 0;
}