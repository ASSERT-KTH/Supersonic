#include <iostream>
#include <cstring>
using namespace std;

const int N = 1234;
long long dp[N][N];
int v1, v2, t, d;

long long f(int tt, int speed) {
  if (tt == t) {
    return speed == v2 ? v2 : -1e10;
  }
  if (dp[tt][speed] != -1) {
    return dp[tt][speed];
  }
  long long x = -1e9;
  
  // Optimize loop range and remove unnecessary condition
  for (int i = 0; i <= d; ++i) {
    // Call the function directly with tt + 1 and speed + d
    x = max(x, f(tt + 1, speed + d));
  }
  
  // Store the result in dp array
  return dp[tt][speed] = speed + x;
}

int main() {
  scanf("%d %d %d %d", &v1, &v2, &t, &d);
  
  // Initialize dp array with -1
  memset(dp, -1, sizeof dp);
  
  printf("%lld\n", f(1, v1));
  return 0;
}