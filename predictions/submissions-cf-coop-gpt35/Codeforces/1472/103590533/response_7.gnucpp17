#include <iostream>
#include <algorithm>
#include <tuple>
#include <vector>

void solve() {
  int t, n, x, y;
  std::scanf("%d", &t);
  while (t--) {
    std::scanf("%d", &n);
    std::vector<std::tuple<int, int, int>> a;
    for (int i = 0; i < n; i++) {
      std::scanf("%d %d", &x, &y);
      a.emplace_back(std::max(x, y), std::min(x, y), i);
    }
    auto prev = a[0];
    auto best = prev;
    std::vector<int> res(n);
    for (const auto& person : a) {
      int h, w, i;
      std::tie(h, w, i) = person;
      if (std::get<0>(prev) == h) {
        if (std::get<1>(best) < w && std::get<0>(best) < h)
          res[i] = std::get<2>(best) + 1;
        else {
          res[i] = -1;
        }
      } else {
        if (std::get<1>(best) > std::get<1>(prev))
          best = prev;
        if (std::get<1>(best) < w && std::get<0>(best) < h)
          res[i] = std::get<2>(best) + 1;
        else
          res[i] = -1;
        prev = person;
      }
    }
    for (const auto& p : res)
      std::printf("%d ", p);
    std::printf("\n");
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);
  solve();
  return 0;
}