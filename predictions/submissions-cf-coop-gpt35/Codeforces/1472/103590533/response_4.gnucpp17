#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

struct Person {
    int height;
    int weight;
    int index;
};

void solve() {
    int t, n, x, y;
    cin >> t;
    while (t--) {
        cin >> n;
        vector<Person> people(n);
        for (int i = 0; i < n; i++) {
            cin >> x >> y;
            people[i] = {x, y, i};
        }
        sort(people.begin(), people.end(), [](const Person& p1, const Person& p2) {
            return p1.height > p2.height;
        });

        int maxHeight = people[0].height;
        int maxWeight = people[0].weight;
        int bestPerson = people[0].index;
        vector<int> res(n);

        for (int i = 0; i < n; i++) {
            if (people[i].height < maxHeight) {
                maxHeight = people[i].height;
                maxWeight = people[i].weight;
                bestPerson = people[i].index;
            }
            if (people[i].weight < maxWeight && people[i].height < maxHeight) {
                res[people[i].index] = bestPerson + 1;
            } else {
                res[people[i].index] = -1;
            }
        }

        for (auto p : res) {
            cout << p << " ";
        }
        cout << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    solve();
    return 0;
}