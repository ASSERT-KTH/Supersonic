#include <iostream>
#include <vector>
#include <unordered_map>
#include <set>
#include <climits>

typedef long long ll;
typedef long double ld;
typedef std::pair<int, int> pii;
typedef std::vector<int> vi;

int main() {
  std::ios_base::sync_with_stdio(0);
  std::cin.tie(0);
  std::cout.tie(0);

  int n, m;
  std::cin >> n >> m;

  std::vector<int> a(n + 1);
  std::unordered_map<int, std::set<int>> vk;

  for (int i = 1; i <= n; i++) {
    std::cin >> a[i];
    vk[a[i]].insert(i);
  }

  std::vector<std::vector<int>> ad(n + 1);

  while (m--) {
    int u, v;
    std::cin >> u >> v;
    ad[u].push_back(v);
    ad[v].push_back(u);
  }

  int mx = 0, mxColor = INT_MAX;

  for (auto& color : vk) {
    std::set<int> mp;
    for (auto& member : color.second) {
      for (auto& neighbour : ad[member]) {
        if (a[neighbour] != a[member]) {
          mp.insert(a[neighbour]);
        }
      }
    }
    if (mp.size() == mx && color.first < mxColor) {
      mxColor = color.first;
    } else if (mp.size() > mx) {
      mx = mp.size();
      mxColor = color.first;
    }
  }

  std::cout << mxColor;

  return 0;
}