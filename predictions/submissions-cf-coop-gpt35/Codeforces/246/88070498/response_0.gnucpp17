#include <iostream>
#include <vector>
#include <unordered_map>
#include <climits>
using namespace std;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int n, m;
  cin >> n >> m;

  int a[n + 1];
  vector<vector<int>> vk(n + 1);

  for (int i = 1; i <= n; i++) {
    cin >> a[i];
    vk[a[i]].push_back(i);
  }

  vector<vector<int>> ad(n + 1);

  while (m--) {
    int u, v;
    cin >> u >> v;
    ad[u].push_back(v);
    ad[v].push_back(u);
  }

  int mx = 0, mxColor = INT_MAX;

  vector<int> distinctColors(n + 1, 0);

  for (auto color : vk) {
    for (auto member : color) {
      for (auto &neighbour : ad[member]) {
        if (a[neighbour] != a[member]) {
          distinctColors[a[neighbour]] = 1;
        }
      }
    }

    int count = 0;
    for (int i = 1; i <= n; i++) {
      count += distinctColors[i];
      distinctColors[i] = 0;
    }

    if (count == mx && color < mxColor) {
      mxColor = color;
    } else if (count > mx) {
      mx = count;
      mxColor = color;
    }
  }

  cout << mxColor;

  return 0;
}