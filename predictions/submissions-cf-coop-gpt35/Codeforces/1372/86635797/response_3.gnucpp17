#include <iostream>
#include <vector>
using namespace std;

inline long long binpow(long long a, long long b) {
  long long res = 1;
  while (b > 0) {
    if (b & 1)
      res = res * a;
    a = a * a;
    b >>= 1;
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  
  long long T;
  cin >> T;
  
  while (T--) {
    long long n;
    cin >> n;
    
    vector<long long> a(n);
    for (long long i = 0; i < n; ++i) {
      cin >> a[i];
    }
    
    bool fg = false;
    vector<char> rng(n, 0);
    
    for (long long i = 0; i < n; ++i) {
      if (a[i] != (i + 1)) {
        rng[i] = 1;
      }
    }
    
    long long cng = 0;
    for (long long i = 0; i < n - 2; ++i) {
      if (rng[i] != rng[i + 1]) {
        cng++;
      }
    }
    
    long long result = 0;
    if ((cng == 0) && (rng[0] == 0)) {
      result = 0;
    } else if (cng == 0) {
      result = 1;
    } else if ((cng <= 2) && ((rng[0] == 0) || (rng[n - 1] == 0))) {
      result = 1;
    } else {
      result = 2;
    }
    
    cout << result << endl;
  }
  
  return 0;
}