#include <iostream>
#include <vector>
#include <queue>
using namespace std;

const int maxn = 100005;
vector<vector<pair<int, int>>> adj(maxn);

int main() {
  int n;
  cin >> n;
  
  for (int i = 0; i < n - 1; i++) {
    int x, y, w;
    cin >> x >> y >> w;
    adj[x - 1].push_back({y - 1, w});
    adj[y - 1].push_back({x - 1, w});
  }
  
  queue<pair<int, int>> q;
  vector<bool> seen(n + 1, false);
  q.push({0, 0});
  seen[0] = true;
  int big = -1;
  
  while (!q.empty()) {
    pair<int, int> s = q.front();
    q.pop();
    big = max(big, s.second);
    
    for (auto t : adj[s.first]) {
      if (!seen[t.first]) {
        seen[t.first] = true;
        q.push({t.first, s.second + t.second});
      }
    }
  }
  
  cout << (2 * (n - 1)) - big << endl;
}