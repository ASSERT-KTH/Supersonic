#include <bits/stdc++.h>
using namespace std;

#define int long long

const int maxn = 100005;

vector<vector<int>> adj;
vector<int> weights;

signed main() {
  int n;
  cin >> n;
  
  int sum = 0;
  
  adj.resize(n);
  weights.resize(n);
  
  for (int i = 0; i < n - 1; i++) {
    int x, y, w;
    cin >> x >> y >> w;
    x--, y--; // Adjusting indices to zero-based
    
    adj[x].push_back(y);
    adj[y].push_back(x);
    
    weights[x] = w;
    weights[y] = w;
    
    sum += w;
  }
  
  queue<int> q;
  q.push(0);
  
  int big = -1;
  
  while (!q.empty()) {
    int s = q.front();
    q.pop();
    big = max(big, weights[s]);
    
    for (auto t : adj[s]) {
      if (adj[t].size() > 0) {
        adj[t].clear(); // Mark the node as visited by emptying its adjacency list
        q.push(t);
      }
    }
  }
  
  cout << (2 * sum) - big << endl;
}