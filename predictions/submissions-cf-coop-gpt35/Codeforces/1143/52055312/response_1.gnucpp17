#include <iostream>
#include <vector>
#define N 100005
using namespace std;

int n, x, y, t;
vector<int> tree[N];
int c[N], par[N], h[N], ve[N];
bool ans[N], yes;

void buildTree() {
    for (int i = 1; i <= n; i++) {
        ve[i] = i;
        cin >> x >> y;
        if (x == -1)
            t = i, par[i] = i;
        else
            par[i] = x;
        c[i] = y;
        if (x != -1)
            tree[x].push_back(i);
    }
}

void calculateHeight() {
    h[t] = 1;
    for (int i = 1; i <= n; i++) {
        int node = ve[i];
        h[node] = h[par[node]] + 1;
    }
}

int main() {
    cin >> n;
    buildTree();
    calculateHeight();

    for (int i = n; i >= 1; i--) {
        int node = ve[i];
        bool ok = false;
        for (int j = 0; j < tree[node].size(); j++) {
            int child = tree[node][j];
            if (!c[child]) {
                ok = true;
                break;
            }
        }
        if (!c[node])
            ok = true;
        if (!ok)
            ans[node] = true, yes = true;
    }

    if (!yes)
        cout << -1;
    else
        for (int i = 1; i <= n; i++)
            if (ans[i])
                cout << i << " ";

    return 0;
}