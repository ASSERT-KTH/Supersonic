#include <bits/stdc++.h>
#define N 100005
using namespace std;
int n, x, y, t;
vector<int> tree[N];
int c[N], par[N], h[N], ve[N];
bool ans[N], yes;
int main() {
  cin >> n;
  for (int i = 1; i <= n; i++) {
    ve[i] = i;
    cin >> x >> y;
    if (x == -1)
      t = i, par[i] = i;
    else
      par[i] = x;
    c[i] = y;
    if (x != -1)
      tree[x].push_back(i);
  }
  stack<int> s;
  h[t] = 1;
  s.push(t);
  while (!s.empty()) {
    int curr = s.top();
    s.pop();
    for (int i = 0; i < tree[curr].size(); i++) {
      int child = tree[curr][i];
      h[child] = h[curr] + 1;
      s.push(child);
    }
  }
  sort(ve + 1, ve + n + 1, [&](int a, int b) { return h[a] > h[b]; });
  for (int i = 1; i <= n; i++) {
    bool ok = false;
    for (int j = 0; j < tree[ve[i]].size(); j++)
      if (!c[tree[ve[i]][j]]) {
        ok = true;
        break;
      }
    if (!c[ve[i]])
      ok = true;
    if (!ok)
      ans[ve[i]] = true, yes = true;
  }
  if (!yes)
    cout << -1;
  else
    for (int i = 1; i <= n; i++)
      if (ans[i])
        cout << i << " ";
}