#include <iostream>
#include <vector>
#include <set>
#include <algorithm>
using namespace std;

void test_cases() {
    int n, m;
    cin >> n >> m;
    vector<pair<int, set<int>>> a(m);
    vector<int> fr(n + 1, 0);

    for (int i = 0; i < m; i++) {
        a[i].first = i;
        int x;
        cin >> x;
        a[i].second.clear();
        for (int j = 0; j < x; j++) {
            int y;
            cin >> y;
            a[i].second.insert(y);
            fr[y]++;
            fr[y] = min(fr[y], (m + 1) / 2);
        }
    }

    stable_sort(a.begin(), a.end(), [&](const pair<int, set<int>>& a, const pair<int, set<int>>& b) {
        return a.second.size() < b.second.size();
    });

    vector<int> res(m, -1);
    int minFreq = m + 1;
    for (int i = 0; i < m; i++) {
        int idx = a[i].first;
        const set<int>& v = a[i].second;
        int mn = m + 1;
        for (int x : v) {
            if (fr[x] > 0) {
                mn = min(mn, fr[x]);
            }
        }
        if (mn == m + 1) {
            cout << "NO" << endl;
            return;
        }
        int per = -1;
        for (int x : v) {
            if (mn == fr[x]) {
                per = x;
                break;
            }
        }
        res[idx] = per;
        fr[per]--;
        minFreq = min(minFreq, fr[per]);
    }

    if (minFreq < (m + 1) / 2) {
        cout << "NO" << endl;
        return;
    }

    cout << "YES" << endl;
    for (int i = 0; i < m; i++) {
        cout << res[i] << " ";
    }
    cout << endl;
}

int main() {
    int tt = 1;
    cin >> tt;
    for (int T = 1; T <= tt; T++) {
        cout << endl << "Case #" << T << ": " << endl;
        test_cases();
    }
    return 0;
}