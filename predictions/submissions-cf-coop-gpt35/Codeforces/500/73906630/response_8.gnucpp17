#include <bits/stdc++.h>
using namespace std;

#define int long long

const int N = 400;

int sz[N];
int a[N];

void initialize() {
    for (int i = 1; i <= N - 1; i++) {
        a[i] = i;
        sz[i] = 1;
    }
}

int root(int i) {
    while (a[i] != i) {
        a[i] = a[a[i]];
        i = a[i];
    }
    return i;
}

void merge(int x, int y) {
    int u = root(x);
    int v = root(y);
    if (sz[u] < sz[v]) {
        swap(u, v);
    }
    a[v] = a[u];
    sz[u] += sz[v];
}

int32_t main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int n;
    cin >> n;

    initialize();

    int v[n + 1];
    for (int i = 1; i <= n; i++) {
        cin >> v[i];
    }

    string s[n + 1];
    for (int i = 0; i < n; i++) {
        cin >> s[i];
        for (int j = 0; j < n; j++) {
            if (s[i][j] == '1') {
                if (root(i + 1) != root(j + 1)) {
                    merge(i + 1, j + 1);
                }
            }
        }
    }

    vector<vector<int>> v_e(n + 1);
    for (int i = 1; i <= n; i++) {
        v_e[root(i)].push_back(v[i]);
    }

    for (int i = 1; i <= n; i++) {
        int x = root(i);
        cout << v_e[x][0] << " ";
        v_e[x].erase(v_e[x].begin());
    }
    cout << endl;

    return 0;
}