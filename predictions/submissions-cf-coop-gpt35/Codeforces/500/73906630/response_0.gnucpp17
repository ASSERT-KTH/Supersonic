#include <iostream>
#include <vector>
#include <algorithm>

typedef long long ll;

void initialize(std::vector<int>& a, std::vector<int>& rank, std::vector<int>& sz) {
    for (int i = 1; i < a.size(); i++) {
        a[i] = i;
        rank[i] = 0;
        sz[i] = 1;
    }
}

int root(std::vector<int>& a, int i) {
    while (a[i] != i) {
        a[i] = a[a[i]];
        i = a[i];
    }
    return i;
}

void merge(std::vector<int>& a, std::vector<int>& rank, std::vector<int>& sz, int x, int y) {
    int u = root(a, x);
    int v = root(a, y);
    if (u == v) return;
    if (rank[u] < rank[v]) {
        a[u] = v;
        sz[v] += sz[u];
    } else if (rank[u] > rank[v]) {
        a[v] = u;
        sz[u] += sz[v];
    } else {
        a[v] = u;
        sz[u] += sz[v];
        rank[u]++;
    }
}

void countingSort(std::vector<int>& v, std::vector<int>& output, std::vector<int>& count, int rootIdx) {
    for (int i = 0; i < v.size(); i++) {
        count[v[i]]++;
    }
    for (int i = 1; i < count.size(); i++) {
        count[i] += count[i - 1];
    }
    for (int i = v.size() - 1; i >= 0; i--) {
        output[count[v[i]] - 1] = v[i];
        count[v[i]]--;
    }
}

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);
    
    int n;
    std::cin >> n;
    
    std::vector<int> a(n + 1), rank(n + 1), sz(n + 1);
    std::vector<int> v(n + 1);
    for (int i = 1; i <= n; i++) {
        std::cin >> v[i];
    }
    
    std::vector<std::string> s(n);
    for (int i = 0; i < n; i++) {
        std::cin >> s[i];
        for (int j = 0; j < n; j++) {
            if (s[i][j] == '1') {
                merge(a, rank, sz, i + 1, j + 1);
            }
        }
    }
    
    std::vector<int> v_e(n + 1);
    for (int i = 1; i <= n; i++) {
        v_e[root(a, i)].push_back(v[i]);
    }
    
    std::vector<int> count(n + 1, 0);
    std::vector<int> output(n + 1);
    
    for (int i = 1; i <= n; i++) {
        countingSort(v_e[i], output, count, i);
    }
    
    std::vector<int> cnt(n + 1, 0);
    for (int i = 1; i <= n; i++) {
        int x = root(a, i);
        std::cout << output[cnt[x]] << " ";
        cnt[x]++;
    }
    std::cout << "\n";
    
    return 0;
}