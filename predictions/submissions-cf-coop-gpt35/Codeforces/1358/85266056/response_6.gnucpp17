#include <iostream>
#include <vector>
#include <numeric>
using namespace std;

long long getSum(long long n) {
  return n * (n + 1) / 2;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  long long n, x;
  cin >> n >> x;
  
  vector<long long> v(n);
  for (long long &x : v)
    cin >> x;
  
  vector<long long> z(n);
  partial_sum(v.begin(), v.end(), z.begin());
  partial_sum(z.begin(), z.end(), z.begin());

  long long ans = 0;
  long long days = 0, sums = 0;
  
  for (int s = 0, e = 0; e < n; e++) {
    days += v[e];
    sums += getSum(v[e]);
    
    while (days > x) {
      if (days - v[s] < x) {
        break;
      }
      days -= v[s];
      sums -= getSum(v[s]);
      s++;
    }
    
    long long diff = max(days - x, 0LL);
    ans = max(ans, sums - getSum(diff));
  }
  
  cout << ans;
  return 0;
}