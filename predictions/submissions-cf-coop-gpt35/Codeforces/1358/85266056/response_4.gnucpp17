#include <iostream>
#include <vector>

constexpr long long getSum(long long n) {
  return n * (n + 1) >> 1;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  long long n, x;
  std::cin >> n >> x;

  std::vector<long long> v(n);
  for (long long& x : v) {
    std::cin >> x;
  }

  std::vector<long long> u(v);
  std::partial_sum(u.begin(), u.end(), u.begin());

  long long ans = 0;
  for (int e = 0; e < v.size(); e++) {
    long long days = v[e];
    long long sums = getSum(v[e]);

    for (int s = 0; s < e; s++) {
      if (days - v[s] < x) {
        break;
      }
      days -= v[s];
      sums -= getSum(v[s]);
    }

    ans = std::max(ans, sums - getSum(std::max(days - x, 0LL)));
  }

  std::cout << ans << std::endl;

  return 0;
}