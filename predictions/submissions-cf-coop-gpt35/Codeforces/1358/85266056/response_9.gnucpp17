#include <iostream>
#include <vector>
using std::cin;
using std::cout;

long long getSum(long long n) { return n * (n + 1) / 2; }

int main() {
  std::ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  long long n, x;
  cin >> n >> x;

  std::vector<long long> v(n);
  for (long long i = 0; i < n; i++)
    cin >> v[i];

  n *= 2;

  std::vector<long long> prefixSum(n + 1, 0);
  for (long long i = 0; i < n; i++)
    prefixSum[i + 1] = prefixSum[i] + v[i % n];

  long long ans = 0;
  int s = 0, e = 0;
  long long days = 0, sums = 0;

  while (e < n) {
    days += v[e % n];
    sums += prefixSum[e + 1];
    e++;

    while (days > x) {
      if (days - v[s % n] < x) {
        break;
      }
      days -= v[s % n];
      sums -= prefixSum[s + 1];
      s++;
    }

    long long diff = std::max(days - x, 0LL);
    ans = std::max(ans, sums - getSum(diff));
  }

  cout << ans;

  return 0;
}