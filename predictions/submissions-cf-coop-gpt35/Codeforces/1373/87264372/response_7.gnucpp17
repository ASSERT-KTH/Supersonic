#include <iostream>
#include <vector>
using namespace std;

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<int> ar(n);
    for (int i = 0; i < n; ++i) {
      cin >> ar[i];
    }
    vector<long long> dp(n + 1, 0ll);
    int iMod2, iPlus1, iPlus2;
    for (int i = 0; i < n; ++i) {
      iMod2 = i & 1;
      iPlus1 = i + 1;
      iPlus2 = i + 2;
      dp[iPlus1] = dp[i] + (iMod2 ? 0 : ar[i]);
      if (iPlus2 <= n)
        dp[iPlus2] = max(dp[i], dp[iPlus1]) + ar[(iMod2 == 0 ? iPlus1 : i)];
      dp[iPlus1] =
          max({dp[i], dp[iPlus1], dp[iPlus2], dp[iPlus1]}) + (iMod2 ? 0 : ar[i]);
    }
    long long result = max({dp[n], dp[n - 1], dp[n - 2]});
    cout << result << endl;
  }
}