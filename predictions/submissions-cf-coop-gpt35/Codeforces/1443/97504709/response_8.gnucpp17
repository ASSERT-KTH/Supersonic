#include <iostream>

template <typename T>
std::istream& operator>>(std::istream& input, T* a) {
    input >> *a;
    return input;
}

#define answer(v) std::cout << ((v) ? "YES\n" : "NO\n");

void solve(unsigned* a, size_t n) {
    unsigned min_val = a[0];
    size_t min_index = 0;

    for (size_t i = 1; i < n; ++i) {
        if (a[i] < min_val) {
            min_val = a[i];
            min_index = i;
        }
    }

    for (size_t i = 0; i < n; ++i) {
        if (i != min_index && a[i] < min_val) {
            answer(false);
            return;
        }
        a[i] -= min_val;
    }

    answer(true);
}

void test_case() {
    size_t n;
    std::cin >> n;

    unsigned* a = new unsigned[n];
    for (size_t i = 0; i < n; ++i) {
        std::cin >> a[i];
    }

    solve(a, n);

    delete[] a;
}

int main() {
    size_t t;
    std::cin >> t;

    while (t-- > 0) {
        test_case();
    }

    return 0;
}