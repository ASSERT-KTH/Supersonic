#include <iostream>
#include <vector>

template <typename T>
std::istream &operator>>(std::istream &input, std::vector<T> &v) {
  for (T &a : v)
    input >> a;
  return input;
}

void solve(std::vector<unsigned> &a) {
  const size_t n = a.size();
  unsigned maxDiff = 0;
  bool subtractionPerformed = false;

  for (size_t i = 1; i < n; ++i) {
    if (a[i - 1] < a[i]) {
      unsigned diff = a[i] - a[i - 1];
      maxDiff = std::max(maxDiff, diff);
      subtractionPerformed = true;
    }
  }

  if (subtractionPerformed) {
    for (size_t i = 0; i < n; ++i) {
      a[i] -= maxDiff;
    }
    std::cout << "YES\n";
  } else {
    std::cout << "NO\n";
  }
}

void test_case() {
  size_t n;
  std::cin >> n;
  std::vector<unsigned> a(n);
  std::cin >> a;
  solve(a);
}

int main() {
  size_t t;
  std::cin >> t;
  while (t-- > 0)
    test_case();
  return 0;
}