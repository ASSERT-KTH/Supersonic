#include <iostream>
#include <vector>

#pragma GCC optimize("O3")

template <typename T>
std::istream &operator>>(std::istream &input, std::vector<T> &v) {
  for (auto &a : v)
    input >> a;
  return input;
}

void answer(bool v) {
  constexpr const char *s[2] = {"NO", "YES"};
  std::cout << s[v] << '\n';
}

void solve(unsigned *a) {
  for (size_t i = 1; a[i] != '\0'; ++i) {
    if (a[i - 1] < a[i]) {
      const unsigned d = a[i] - a[i - 1];
      for (size_t j = i; a[j] != '\0'; ++j) {
        a[j] = a[j] > d ? a[j] - d : 0;
      }
    }
  }
  answer(true);
}

void test_case() {
  size_t n;
  std::cin >> n;
  unsigned a[n];
  std::cin >> a;
  solve(a);
}

int main() {
  size_t t;
  std::cin >> t;
  while (t-- > 0)
    test_case();
  return 0;
}