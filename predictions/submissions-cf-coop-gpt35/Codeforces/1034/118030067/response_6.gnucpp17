#include <iostream>
#include <vector>
#include <unordered_map>
#include <cmath>
using namespace std;

inline bool isPowOfTwo(int x) {
    return (x && (!(x & (x - 1))));
}

void solve() {
    const int maxN = 15000007;
    vector<bool> primes(maxN, true);
    vector<int> spf(maxN);
    primes[0] = primes[1] = false;
  
    for (int i = 2; i < maxN; i++)
        spf[i] = i;
  
    for (int i = 4; i < maxN; i += 2) {
        if (i != 2)
            primes[i] = false;
        spf[i] = 2;
    }
  
    for (int i = 3; i < maxN; i++) {
        if (primes[i]) {
            for (int j = i * i; j < maxN; j += i) {
                primes[j] = false;
                spf[j] = i;
            }
        }
    }
  
    unordered_map<int, int> countOfFactors;
    int n;
    cin >> n;
    vector<int> v(n);
    int gcdIs = 0;
  
    for (int i = 0; i < n; i++) {
        cin >> v[i];
        gcdIs = gcd(gcdIs, v[i]);
    }
  
    for (int i = 0; i < n; i++) {
        v[i] /= gcdIs;
    }
  
    for (int eleInArray : v) {
        while (eleInArray != 1) {
            countOfFactors[spf[eleInArray]]++;
            eleInArray /= spf[eleInArray];
        }
    }
  
    int keep = 0;
    for (auto i : countOfFactors) {
        keep = max(keep, i.second);
    }
  
    keep ? (cout << n - keep) : (cout << "-1");
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
  
    solve();
  
    return 0;
}