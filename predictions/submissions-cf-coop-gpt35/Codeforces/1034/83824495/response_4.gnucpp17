#include <iostream>
#include <unordered_map>
using namespace std;

int gcd(int a, int b) {
  while (b != 0) {
    int temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}

int main() {
  #pragma GCC optimize("O3")

  int n;
  cin >> n;

  int arr[n];
  int mcd = 0;
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
    mcd = gcd(mcd, arr[i]);
  }

  for (int i = 0; i < n; i++)
    arr[i] /= mcd;

  int maxi = 0;
  unordered_map<int, int> cont;
  for (int i = 0; i < n; i++) {
    int num = arr[i];
    while (num > 1) {
      int f = lpf[num];
      cont[f]++;
      while (num % f == 0)
        num /= f;
    }
  }
  for (const auto& pair : cont)
    maxi = max(maxi, pair.second);

  if (maxi == 0)
    cout << -1 << '\n';
  else
    cout << n - maxi << '\n';

  return 0;
}