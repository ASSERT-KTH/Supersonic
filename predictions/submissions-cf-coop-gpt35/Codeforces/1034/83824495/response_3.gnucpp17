#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define N 17000005

#pragma GCC optimize("O2")

unordered_map<int, int> cont;
int lpf[N];

void sieve() {
  for (int i = 2; i < N; i++) {
    if (lpf[i] == 0) {
      lpf[i] = i;
      for (ll j = 1LL * i * i; j < N; j += i) {
        if (lpf[j] == 0)
          lpf[j] = i;
      }
      i += lpf[i] - 1;
    }
  }
}

int main() {
  sieve();

  int n;
  cin >> n;

  int arr[n];
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
  }

  int mcd = arr[0];
  for (int i = 1; i < n; i++) {
    mcd = __gcd(mcd, arr[i]);
  }

  for (int i = 0; i < n; i++) {
    arr[i] /= mcd;
    while (arr[i] > 1) {
      int f = lpf[arr[i]];
      cont[f]++;
      while (arr[i] % f == 0)
        arr[i] /= f;
    }
  }

  int maxi = 0;
  for (const auto& entry : cont) {
    maxi = max(maxi, entry.second);
  }

  if (maxi == 0)
    cout << -1 << '\n';
  else
    cout << n - maxi << '\n';

  return 0;
}