#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define N 17000005

int lpf[N];
int cont[N];

void sieve() {
  memset(lpf, 0, sizeof(lpf));
  bool is_prime[N];
  memset(is_prime, true, sizeof(is_prime));

  for (int i = 2; i < N; ++i) {
    if (is_prime[i]) {
      lpf[i] = i;
      for (ll j = 1LL * i * i; j < N; j += i) {
        is_prime[j] = false;
        if (lpf[j] == 0)
          lpf[j] = i;
      }
    }
  }
}

int gcd(int a, int b) {
  while (b != 0) {
    int temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}

int main() {
  sieve();

  int n;
  cin >> n;
  int arr[n];
  
  int mcd = 0;
  for (int i = 0; i < n; ++i) {
    cin >> arr[i];
    mcd = gcd(mcd, arr[i]);
  }
  
  for (int i = 0; i < n; ++i)
    arr[i] /= mcd;
  
  memset(cont, 0, sizeof(cont));
  for (int i = 0; i < n; ++i) {
    int num = arr[i];
    while (num > 1) {
      int f = lpf[num];
      cont[f]++;
      num /= f;
    }
  }
  
  int maxi = 0;
  for (int i = 0; i < N; ++i)
    maxi = max(maxi, cont[i]);
  
  if (maxi == 0)
    cout << -1 << '\n';
  else
    cout << n - maxi << '\n';
  
  return 0;
}