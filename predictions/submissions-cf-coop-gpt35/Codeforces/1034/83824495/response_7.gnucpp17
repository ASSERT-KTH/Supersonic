#include <bits/stdc++.h>
using namespace std;
using ll = long long;

const int MAX_N = 1000005;

vector<int> lpf(MAX_N);
vector<int> cont(MAX_N);

void sieve(int max_val) {
  for (int i = 2; i <= max_val; i++) {
    if (lpf[i] == 0) {
      lpf[i] = i;
      for (ll j = 1LL * i * i; j <= max_val; j += i) {
        if (lpf[j] == 0)
          lpf[j] = i;
      }
    }
  }
}

int main() {
  int n;
  cin >> n;
  vector<int> arr(n);
  int mcd = arr[0];
  for (int i = 1; i < n; i++) {
    cin >> arr[i];
    mcd = gcd(mcd, arr[i]);
  }
  for (int i = 1; i < n; i++)
    arr[i] /= mcd;
  int max_val = *max_element(arr.begin(), arr.end());
  sieve(max_val);
  for (int i = 1; i < n; i++) {
    while (arr[i] > lpf[arr[i]]) {
      int f = lpf[arr[i]];
      arr[i] /= f;
      cont[f]++;
    }
  }
  int maxi = 0;
  for (int i = 2; i <= max_val; i++)
    maxi = max(maxi, cont[i]);
  if (maxi == 0)
    cout << -1 << '\n';
  else
    cout << n - maxi << '\n';
  return 0;
}