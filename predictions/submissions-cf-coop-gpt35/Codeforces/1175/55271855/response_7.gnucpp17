#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;

ll lcm(ll a, ll b) {
  return a * b / __gcd(a, b);
}

int main() {
  int n, m;
  cin >> n >> m;
  
  int* A = new int[1 << 19];
  int** dp = new int*[1 << 19];
  
  for (int i = 0; i < (1 << 19); i++) {
    A[i] = i;
    dp[i] = new int[19];
  }
  
  for (int i = 0; i < n; i++) {
    int x, y;
    cin >> x >> y;
    A[x] = max(A[x], y);
  }
  
  dp[0][0] = A[0];
  for (int i = 1; i < (1 << 19); i++) {
    dp[i][0] = A[i] = max(A[i], A[i - 1]);
  }
  
  for (int j = 1; j < 19; j++) {
    for (int i = 0; i < (1 << 19); i++) {
      dp[i][j] = dp[dp[i][j - 1]][j - 1];
    }
  }
  
  while (m--) {
    int l, r, nb = 0, x;
    cin >> l >> r;
    
    for (int j = 18; j >= 0; j--) {
      if (dp[l][j] < r) {
        nb += 1 << j;
        l = dp[l][j];
      }
    }
    
    if (dp[l][0] >= r) {
      nb++;
    } else {
      nb = -1;
    }
    
    cout << nb << endl;
  }
  
  delete[] A;
  for (int i = 0; i < (1 << 19); i++) {
    delete[] dp[i];
  }
  delete[] dp;
  
  return 0;
}