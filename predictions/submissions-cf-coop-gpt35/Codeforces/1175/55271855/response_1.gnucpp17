#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
#include <cstring>

typedef long long ll;

ll lcm(ll a, ll b) { return a * b / std::__gcd(a, b); }

const int MAX = (1 << 19);

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int n, m;
  std::cin >> n >> m;

  std::unordered_map<int, int> A;
  for (int i = 0; i < n; i++) {
    int x, y;
    std::cin >> x >> y;
    A[x] = std::max(A[x], y);
  }

  std::vector<std::vector<int>> dp(MAX, std::vector<int>(19, 0));

  for (int i = 0; i < MAX; i++) {
    dp[i][0] = A[i] = std::max(A[i], A[i - 1]);
  }

  for (int j = 1; j < 19; j++) {
    for (int i = 0; i < MAX; i++) {
      dp[i][j] = dp[dp[i][j - 1]][j - 1];
    }
  }

  while (m--) {
    int l, r, nb = 0, x;
    std::cin >> l >> r;
    for (int j = 18; j >= 0; j--) {
      if (dp[l][j] < r) {
        nb += 1 << j;
        l = dp[l][j];
      }
    }
    if (dp[l][0] >= r)
      nb++;
    else
      nb = -1;
    std::cout << nb << '\n';
  }

  return 0;
}