#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

int fun(int m, int n, vector<vector<int>>& memo) {
    if (n == 1) {
        return 1;
    }
    if (memo[m][n] != -1) {
        return memo[m][n];
    }
    if (n > m) {
        return memo[m][n] = 0;
    }
    return memo[m][n] = fun(m - 1, n, memo) + fun(m / 2, n - 1, memo);
}

void solve() {
    int n;
    cin >> n;
    vector<int> arr(n);
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
        arr[i] -= i;
        if (arr[i] <= 0) {
            cout << i + 1 << endl;
            return;
        }
        arr[i] = ceil(double(arr[i]) / n);
    }
    vector<vector<int>> memo(n + 1, vector<int>(n + 1, -1));
    int mn = INT_MAX, mni;
    for (int i = 0; i < n; i++) {
        if (mn > arr[i]) {
            mn = arr[i];
            mni = i;
        }
    }
    cout << mni + 1 << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    solve();
    return 0;
}