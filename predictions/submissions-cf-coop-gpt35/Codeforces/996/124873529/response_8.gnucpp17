#include <iostream>
#include <vector>
#include <cmath>
#include <climits>

int power(int n, int k, int mod) {
  int ans = 1;
  while (k) {
    if (k & 1) {
      ans = (ans * n) % mod;
      k--;
    }
    n = (n * n) % mod;
    k >>= 2;
  }
  return ans;
}

int mod(int n, int k) {
  int ans = n % k;
  if (n < 0) {
    ans += k;
  }
  return ans;
}

int main() {
  int n;
  std::cin >> n;
  std::vector<int> arr(n);
  for (int i = 0; i < n; i++) {
    std::cin >> arr[i];
    arr[i] -= i;
    if (arr[i] <= 0) {
      std::cout << i + 1 << std::endl;
      return 0;
    }
    arr[i] = std::ceil(static_cast<double>(arr[i]) / n);
  }
  int mn = INT_MAX, mni;
  for (int i = 0; i < n; i++) {
    if (mn > arr[i]) {
      mn = arr[i];
      mni = i;
    }
  }
  std::cout << mni + 1 << std::endl;

  return 0;
}