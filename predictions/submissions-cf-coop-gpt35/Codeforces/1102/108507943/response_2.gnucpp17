#include <iostream>
#include <vector>
using namespace std;

void optimizeString(string& s) {
    int n = s.size();
    vector<int> count(3);
    for (char c : s) {
        count[c - '0']++;
    }

    int targetCount = n / 3;
    int left = 0, right = n - 1;

    while (left <= right) {
        if (s[left] == '0' && count[0] > targetCount) {
            if (s[right] == '2' && count[2] < targetCount) {
                s[left] = '2';
                s[right] = '0';
                count[0]++;
                count[2]++;
            } else if (s[right] == '1' && count[1] < targetCount) {
                s[left] = '1';
                s[right] = '0';
                count[0]++;
                count[1]++;
            }
        } else if (s[left] == '1' && count[1] > targetCount) {
            if (s[right] == '2' && count[2] < targetCount) {
                s[left] = '2';
                s[right] = '1';
                count[1]++;
                count[2]++;
            }
        }

        left++;
        right--;
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    int n;
    cin >> n;

    string s;
    cin >> s;

    optimizeString(s);

    cout << s;

    return 0;
}