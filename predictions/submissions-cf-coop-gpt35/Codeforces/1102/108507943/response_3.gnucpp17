#include <iostream>
#include <vector>
using namespace std;

#define int long long

void forward(string &s, int x, int n, int count[]) {
  int replacements = 0;
  for (int i = 0; i < n && replacements < n/3; i++) {
    int digit = s[i] - '0';
    if (digit > x && count[x] < n / 3 && count[digit] > n / 3) {
      count[x]++;
      count[digit]--;
      s[i] = x + '0';
      replacements++;
    }
  }
}

void backward(string &s, int x, int n, int count[]) {
  int replacements = 0;
  for (int i = n - 1; i >= 0 && replacements < n/3; i--) {
    int digit = s[i] - '0';
    if (digit < x && count[x] < n / 3 && count[digit] > n / 3) {
      count[x]++;
      count[digit]--;
      s[i] = x + '0';
      replacements++;
    }
  }
}

int32_t main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int n;
  cin >> n;

  string s;
  cin >> s;

  int count[3] = {0};

  for (int i = 0; i < n; i++) {
    count[s[i] - '0']++;
  }

  forward(s, 0, n, count);
  forward(s, 1, n, count);
  backward(s, 2, n, count);
  backward(s, 1, n, count);

  cout << s;
}