To optimize the given code, we can focus on the following areas:

1. Memory Usage: There are multiple data structures being used in the code, such as vectors, maps, sets, and priority queues. We can analyze these data structures and propose more memory-efficient alternatives, if possible.

2. Redundant Computations: There are certain computations being repeated unnecessarily in the code. We can identify these computations and optimize them to reduce redundant operations.

3. Loop Optimization: There are loops being used in the code, such as the loop in the `query` function and the loop in the `Simulate` function. We can optimize these loops to improve their efficiency.

4. Compiler Optimizations: We can suggest specific compiler optimizations or pragma directives that can hint the compiler to optimize certain parts of the code.

Let's go step-by-step and optimize the code accordingly.