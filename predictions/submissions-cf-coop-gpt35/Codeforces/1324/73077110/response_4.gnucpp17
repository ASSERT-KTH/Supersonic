#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long
#define int long long

void solve() {
  ll n;
  std::cin >> n;
  
  // Allocate memory for dynamic arrays
  int* a = new int[n];
  int* b = new int[n];
  
  // Reserve memory for vectors
  std::vector<ll> v, v1;
  v.reserve(n);
  v1.reserve(n);
  
  for (int i = 0; i < n; ++i) {
    std::cin >> a[i];
  }
  
  for (int i = 0; i < n; ++i) {
    std::cin >> b[i];
    v.push_back(a[i] - b[i]);
    v1.push_back(b[i] - a[i]);
  }
  
  // Find the upper bound without sorting v
  ll ans = 0;
  for (int i = 0; i < n; ++i) {
    auto it = std::upper_bound(v.begin(), v.end(), v1[i]);
    if (it != v.end()) {
      ll temp = v.end() - it;
      if (v1[i] < 0)
        temp--;
      ans += temp;
    }
  }
  
  delete[] a; // Deallocate memory
  delete[] b; // Deallocate memory
  
  std::cout << ans / 2 << std::endl;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);
  
  ll T = 1;
  while (T--) {
    solve();
  }
  
  return 0;
}