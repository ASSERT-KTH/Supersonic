#include <iostream>
#include <vector>
#include <array>
using namespace std;

typedef long long ll;

const ll oo = 0x3f3f3f3f;
const ll OO = 0x3f3f3f3f3f3f3f3f;
const ll mod = 1e9 + 7;
const int N = 1.5e5 + 500;

template <class T>
void sort(vector<T> &a) {
    sort(a.begin(), a.end());
}

void sort(string &s) {
    sort(s.begin(), s.end());
}

void run_case() {
    int n;
    cin >> n;
    string s;
    cin >> s;
    s = " " + s;

    array<int, N> mp; // Replace map<ll, int> with array
    fill(mp.begin(), mp.end(), 0); // Initialize array with 0
    ll sum = 0;
    mp[0] = 1;

    int l = -1, r = -1; // Initialize l and r to -1
    int ans = oo; // Initialize ans to a large value

    for (int i = 1; i <= n; i++) {
        ll val = 0; // Store the value to be added or subtracted from sum

        if (s[i] == 'L')
            val = 1e9;
        else if (s[i] == 'R')
            val = -1e9;
        else if (s[i] == 'U')
            val = 7;
        else if (s[i] == 'D')
            val = -7;

        sum += val;
        
        if (mp[sum] != 0) {
            int left = mp[sum];
            int right = i;
            if ((right - left + 1) < ans) {
                ans = right - left + 1;
                l = left;
                r = right;
            }
        }
        
        mp[sum] = i + 1;
    }

    if (ans == oo) {
        cout << "-1\n";
    } else {
        cout << l << " " << r << "\n";
    }
}

int main() {
    ios::sync_with_stdio(false), cin.tie(nullptr);

    run_case();
}