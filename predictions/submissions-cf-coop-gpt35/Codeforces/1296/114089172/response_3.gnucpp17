#include <iostream>
#include <vector>
#include <map>
using namespace std;

typedef long long ll;
const ll oo = 0x3f3f3f3f;
const ll OO = 0x3f3f3f3f3f3f3f3f;
const ll mod = 1e9 + 7;
const int N = 1.5e5 + 500;

const ll LEFT_VALUE = 1e9;
const ll UP_VALUE = 7;

void run_case() {
    int n;
    cin >> n;
    
    char* s = new char[n+1];
    cin >> s;
    
    vector<ll> prefixSum(n+1, 0);
    prefixSum[0] = 0;
    
    int l = 0, r = 0, ans = 1e9;
  
    for (int i = 1; i <= n; i++) {
        prefixSum[i] = prefixSum[i-1];
        switch (s[i-1]) {
            case 'L':
                prefixSum[i] += LEFT_VALUE;
                break;
            case 'R':
                prefixSum[i] -= LEFT_VALUE;
                break;
            case 'U':
                prefixSum[i] += UP_VALUE;
                break;
            case 'D':
                prefixSum[i] -= UP_VALUE;
                break;
        }
        
        if (prefixSum[i] != 0) {
            if (prefixSum[i] == prefixSum[i-l]) {
                l = i - r;
            } else if (prefixSum[i] == prefixSum[i-r]) {
                r = i - l;
            }
            
            if ((r - l + 1) < ans) {
                ans = r - l + 1;
            }
        }
    }
  
    if (ans == 1e9) {
        cout << "-1\n";
    } else {
        cout << l << " " << r << "\n";
    }
    
    delete[] s;
}

int main() {
    ios::sync_with_stdio(false), cin.tie(nullptr);
    int tc = 1;
    cin >> tc;
    while (tc--)
        run_case();
    return 0;
}