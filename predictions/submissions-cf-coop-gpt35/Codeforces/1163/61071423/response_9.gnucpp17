#include <iostream>
#include <vector>
#include <unordered_set>
#include <map>
#include <algorithm>

using namespace std;

typedef pair<int, int> ip;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int n;
  cin >> n;
  vector<ip> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i].first >> a[i].second;
  }

  unordered_set<pair<int, int>> s;
  map<pair<int, int>, unordered_set<pair<int, int>>> mp;

  for (int i = 0; i < n; i++) {
    for (int j = i + 1; j < n; j++) {
      int tmp1 = a[j].first - a[i].first;
      int tmp2 = a[j].second - a[i].second;
      int tmp3 = __gcd(abs(tmp1), abs(tmp2));
      pair<int, int> s1 = {tmp2 / tmp3, tmp1 / tmp3};
      pair<int, int> c = {a[j].second * a[i].first - a[j].first * a[i].second, a[j].first - a[i].first};
      s.insert({s1, c});
      mp[s1].insert(c);
    }
  }

  long long x = 0;
  for (auto it = mp.begin(); it != mp.end(); ++it) {
    int si = it->second.size();
    x += 1LL * si * (si - 1) / 2;
  }

  long long si = s.size();
  cout << si * (si - 1) / 2 - x;

  return 0;
}