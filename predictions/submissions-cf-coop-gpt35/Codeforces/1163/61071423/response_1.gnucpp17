#include <iostream>
#include <vector>
#include <map>
#include <set>
using namespace std;

typedef pair<int, int> Point;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int n;
  cin >> n;
  vector<Point> points(n);
  for (int i = 0; i < n; i++) {
    cin >> points[i].first >> points[i].second;
  }

  int count = 0;
  map<pair<int, int>, int> slopes;

  for (int i = 0; i < n; i++) {
    slopes.clear();
    int duplicate = 0;

    for (int j = i + 1; j < n; j++) {
      int dx = points[j].first - points[i].first;
      int dy = points[j].second - points[i].second;

      if (dx == 0) {
        dy = 1;
      } else if (dy == 0) {
        dx = 1;
      } else {
        int gcd = __gcd(abs(dx), abs(dy));
        dx /= gcd;
        dy /= gcd;
      }

      if (slopes.count({dx, dy})) {
        duplicate += slopes[{dx, dy}];
      }

      slopes[{dx, dy}]++;
    }

    count += (n - i - 1) * (n - i - 2) / 2 - duplicate;
  }

  cout << count << endl;

  return 0;
}