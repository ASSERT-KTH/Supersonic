#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <set>

using namespace std;

clock_t time_p = clock();

void Time() {
  time_p = clock() - time_p;
  cerr << "Time Taken : " << (float)(time_p) / CLOCKS_PER_SEC << "\n";
}

const int INF = 1e9 + 7;
const lld pi = 3.1415926535897932;
const ll INF64 = 9e18;
const ll mod = 1e9 + 7;
const int mxN = 1e9 + 5;

void solve() {
  int n;
  cin >> n;

  vector<int> st;
  int mp[100005];
  fill(mp, mp + 100005, 0);
  int ans = 0;
  vector<int> cnt(n + 1, 0);
  vector<int> cst;

  for (int i = 0; i < n; ++i) {
    int x;
    cin >> x;

    if (mp[x]) {
      auto it = find(st.begin(), st.end(), mp[x]);
      cnt[mp[x]]--;
      st.erase(it);
    }

    mp[x]++;
    cnt[mp[x]]++;
    cst.push_back(x);

    sort(st.begin(), st.end());
    sort(cst.begin(), cst.end());
    cst.erase(unique(cst.begin(), cst.end()), cst.end());

    st.push_back(mp[x]);

    auto f = st[0];
    auto sec = st.begin() + 1;
    if (sec == st.end()) sec--;
    auto s = *sec;

    int w = cnt[f], y = cnt[s];
    
    if (i == 0) ans = i;
    if (w == i + 1 && f == 1) ans = i;
    if (w * f + y * s == i + 1) {
      if ((y == 1 && (s == 1 || s - 1 == f)) || (w == 1 && (f == 1 || f - 1 == s))) ans = i;
    }
  }

  ans++;
  cout << ans << endl;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
  cout.precision(35);

  solve();

  Time();

  return 0;
}