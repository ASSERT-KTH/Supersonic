#include <iostream>
#include <vector>
#include <unordered_map>
#include <unordered_set>

using namespace std;

void solve() {
    int n;
    cin >> n;
    
    vector<int> st(100005, 0);
    unordered_map<int, int> mp;
    int ans = 0;
    unordered_set<int> cst;
    
    for (int i = 0; i < n; ++i) {
        int x;
        cin >> x;
        
        if (mp.count(x)) {
            int idx = mp[x];
            mp[x]--;
            
            if (st[idx] == 1) {
                st[idx] = 0;
            }
        }
        
        mp[x]++;
        st[mp[x]]++;
        cst.insert(x);
        
        int f = 0, s = 0;
        
        for (int j = 1; j <= n; j++) {
            if (st[j] > 0) {
                if (f == 0) {
                    f = j;
                } else {
                    s = j;
                    break;
                }
            }
        }
        
        int w = st[f], y = st[s];
        
        if (cst.size() == 1) {
            ans = i;
        } else if (max(w, y) == i + 1 && f == 1) {
            ans = i;
        } else if (f * w + s * y == i + 1) {
            if (y == 1) {
                if (s == 1 || s - 1 == f) {
                    ans = i;
                }
            } else if (w == 1) {
                if (f == 1 || f - 1 == s) {
                    ans = i;
                }
            } else if (y == 1 && w == 1) {
                if (max(f, s) - 1 == min(f, s) || min(f, s) == 1) {
                    ans = i;
                }
            }
        }
    }
    
    ans++;
    cout << ans << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    solve();
    
    return 0;
}