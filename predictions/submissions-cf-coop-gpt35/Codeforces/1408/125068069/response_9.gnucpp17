#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

double SHIT_HERE_WE_GO_AGAIN() {
    int n, ln;
    cin >> n >> ln;
    vector<int> flag(n);
    for (int i = 0; i < n; i++)
        cin >> flag[i];
    int v1 = 1, v2 = 1, l = 0, r = n - 1;
    double p1 = 0, p2 = static_cast<double>(ln), ans = 0;
    while (l <= r) {
        if ((flag[l] - p1) / v1 < (p2 - flag[r]) / v2) {
            double t = (flag[l] - p1) / v1;
            p1 = flag[l];
            v1++;
            l++;
            p2 -= v2 * t;
            ans += t;
        } else if ((flag[l] - p1) / v1 > (p2 - flag[r]) / v2) {
            double t = (p2 - flag[r]) / v2;
            p2 = flag[r];
            v2++;
            r--;
            p1 += v1 * t;
            ans += t;
        } else {
            double t = (flag[l] - p1) / v1;
            p1 = flag[l];
            p2 = flag[r];
            v1++;
            v2++;
            l++;
            r--;
            ans += t;
        }
    }
    ans += (p2 - p1) / (v1 + v2);
    return ans;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--) {
        double result = SHIT_HERE_WE_GO_AGAIN();
        printf("%.14lf\n", result);
    }
    return 0;
}