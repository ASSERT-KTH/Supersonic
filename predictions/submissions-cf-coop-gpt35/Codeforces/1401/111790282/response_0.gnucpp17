Upon analyzing the given code, I have identified several potential areas for optimization:

1. Use more efficient data types: The code currently uses `int` for all variables, which may consume more memory than necessary. We can use smaller data types like `short` or `char` where appropriate to reduce memory usage.

2. Reduce unnecessary computations: The code performs unnecessary calculations in the `if` statement. Instead of calculating `mn` twice, we can calculate it once and store the value in a variable.

3. Avoid repeated input/output operations: The code currently performs input and output operations for each test case. We can optimize this by performing input and output operations outside the loop, reducing the overhead of these operations.

4. Use compiler optimizations: We can use compiler optimizations to improve the performance of the code. For example, we can enable compiler optimizations that inline functions, unroll loops, or optimize arithmetic expressions.
