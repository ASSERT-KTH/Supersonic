#include <iostream>
#include <algorithm>
using namespace std;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int t;
  cin >> t;

  while (t--) {
    int n;
    cin >> n;

    int* a = new int[n];
    int* b = new int[n];
    int* c = new int[n];

    int m = INT_MAX;
    int minIdx = 0;

    for (int i = 0; i < n; i++) {
      cin >> a[i];
      if (a[i] < m) {
        m = a[i];
        minIdx = i;
      }
    }

    int k = 0;
    for (int i = 0; i < n; i++) {
      if (a[i] % m == 0) {
        b[k] = i;
        c[k] = a[i];
        k++;
      }
    }

    // Use insertion sort to sort array c
    for (int i = 1; i < k; i++) {
      int key = c[i];
      int j = i - 1;
      while (j >= 0 && c[j] > key) {
        c[j + 1] = c[j];
        j--;
      }
      c[j + 1] = key;
    }

    // Update array a with sorted values from array c
    for (int i = 0; i < k; i++) {
      a[b[i]] = c[i];
    }

    // Check if the updated array a is sorted
    bool sorted = true;
    for (int i = minIdx + 1; i < n; i++) {
      if (a[i] < a[i - 1]) {
        sorted = false;
        break;
      }
    }

    if (sorted) {
      cout << "YES\n";
    } else {
      cout << "NO\n";
    }

    delete[] a;
    delete[] b;
    delete[] c;
  }

  return 0;
}