#include <bitset>
#include <iostream>
#include <vector>
using namespace std;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr), cout.tie(nullptr);
  int _;
  cin >> _;
  while (_--) {
    int n, k;
    cin >> n >> k;
    vector<int> a(n);
    int maxVal = 0;
    for (int i = 0; i < n; ++i) {
      cin >> a[i];
      maxVal = max(maxVal, a[i]);
    }

    vector<vector<int>> primeFactors(maxVal + 1);
    for (int i = 2; i <= maxVal; ++i) {
      if (primeFactors[i].empty()) {
        for (int j = i; j <= maxVal; j += i) {
          primeFactors[j].push_back(i);
        }
      }
    }

    bitset<1000001> s;
    int duplicates = 0;
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < primeFactors[a[i]].size(); ++j) {
        int factor = primeFactors[a[i]][j];
        if (s[factor]) {
          s &= 0;
          ++duplicates;
          break;
        }
        s |= factor;
      }
    }

    cout << duplicates + 1 << '\n';
  }
  return 0;
}