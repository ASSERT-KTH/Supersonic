#include <iostream>
#include <vector>
#include <cmath>

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);

    int t;
    std::cin >> t;
    while (t--) {
        int n, k;
        std::cin >> n >> k;
        std::vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            std::cin >> a[i];
            int limit = std::sqrt(a[i]);
            for (int j = 2; j <= limit; ++j) {
                while (a[i] % (j * j) == 0)
                    a[i] /= (j * j);
            }
        }
        std::vector<int> uniqueValues;
        int ans = 1;
        for (int i = 0; i < n; ++i) {
            bool isUnique = true;
            for (int j = 0; j < uniqueValues.size(); ++j) {
                if (uniqueValues[j] == a[i]) {
                    isUnique = false;
                    break;
                }
            }
            if (isUnique) {
                uniqueValues.push_back(a[i]);
            } else {
                uniqueValues.clear();
                ans++;
            }
        }
        std::cout << ans << std::endl;
    }

    return 0;
}