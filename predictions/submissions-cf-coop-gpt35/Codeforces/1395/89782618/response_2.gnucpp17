#include <algorithm>
#include <bitset>
#include <iostream>
#include <limits>
#include <vector>
using namespace std;

int recurse(const vector<int> &a, const vector<int> &b, vector<vector<int>> &dp) {
  int n = a.size();
  int m = b.size();

  for (int i = n - 1; i >= 0; --i) {
    for (int j = 0; j < 512; ++j) {
      if (i == n - 1) {
        dp[i][j] = a[i] & b[j];
      } else {
        int min_or = numeric_limits<int>::max();
        for (int k = 0; k < 9; ++k) {
          if ((a[i] >> k) & 1) {
            int new_or = dp[i + 1][j | (1 << k)];
            min_or = min(min_or, new_or);
          }
        }
        dp[i][j] = min_or;
      }
    }
  }

  return dp[0][0];
}

int main(int argc, char const *argv[]) {
  int n, m;
  cin >> n >> m;
  vector<int> a(n), b(m);
  for (int i = 0; i < n; ++i)
    cin >> a[i];
  for (int i = 0; i < m; ++i)
    cin >> b[i];
  vector<vector<int>> dp(n, vector<int>(512, -1));
  cout << recurse(a, b, dp) << '\n';
  return 0;
}