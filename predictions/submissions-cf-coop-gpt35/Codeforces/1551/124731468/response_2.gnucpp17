#include <iostream>
#include <vector>
#include <unordered_map>

int main() {
  int t;
  std::cin >> t;

  while (t--) {
    int n, k;
    std::cin >> n >> k;

    std::vector<int> arr(n + 1);
    std::vector<int> ans(n + 1);

    std::unordered_map<int, std::vector<int>> m1;

    for (int i = 1; i <= n; i++) {
      std::cin >> arr[i];
      m1[arr[i]].push_back(i);
    }

    int color = 0;
    int cnt = 0;

    for (const auto& x : m1) {
      if (x.second.size() >= k) {
        int len = x.second.size();
        for (int i = 0; i < len; i++) {
          if (i >= k) {
            ans[x.second[i]] = -1;
          } else {
            ans[x.second[i]] = ++color;
            color %= k;
          }
        }
      } else {
        cnt += x.second.size();
      }
    }

    cnt -= cnt % k;

    for (const auto& s : m1) {
      for (const auto& x : s.second) {
        if (cnt <= 0) {
          break;
        }
        if (ans[x] == 0) {
          ans[x] = ++color;
          color %= k;
          if (--cnt <= 0) {
            break;
          }
        }
      }
    }

    for (int i = 1; i <= n; i++) {
      if (ans[i] == -1) {
        ans[i] = 0;
      }
    }

    for (int i = 1; i <= n; i++) {
      std::cout << ans[i] << " ";
    }
    std::cout << "\n";
  }

  return 0;
}