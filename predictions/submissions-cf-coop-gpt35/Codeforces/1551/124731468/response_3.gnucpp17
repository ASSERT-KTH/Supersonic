#include <bits/stdc++.h>
using namespace std;

int main() {
  int t;
  scanf("%d", &t);
  while (t--) {
    int n, k;
    scanf("%d%d", &n, &k);
    
    // Dynamically allocate memory for arr and ans arrays
    int* arr = new int[n+1];
    int* ans = new int[n+1]();
    
    // Use a vector of vectors to store the indices of each element
    vector<vector<int>> m1(n+1);
    
    for (int i = 1; i <= n; i++) {
      scanf("%d", arr + i);
      m1[arr[i]].push_back(i);
    }
    
    int cnt = 0;
    int color = 0;
    for (auto& x : m1) {
      if (x.size() >= k) {
        int len = x.size();
        for (int i = 0; i < len; i++) {
          if (i >= k) {
            ans[x[i]] = -1;
          } else {
            ans[x[i]] = ++color;
            color %= k;
          }
        }
      } else {
        cnt += x.size();
      }
    }
    
    cnt -= cnt % k;
    for (auto& s : m1) {
      for (auto& x : s) {
        if (cnt <= 0)
          goto _out;
        if (ans[x] == 0) {
          ans[x] = ++color;
          color %= k;
          if (--cnt <= 0)
            goto _out;
        }
      }
    }
    
  _out:
    delete[] arr;
    
    for (int i = 1; i <= n; i++) {
      if (ans[i] == -1) {
        ans[i] = 0;
      }
    }
    
    for (int i = 1; i <= n; i++) {
      printf("%d ", ans[i]);
    }
    printf("\n");
    
    delete[] ans;
  }
  return 0;
}