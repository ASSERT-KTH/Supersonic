#include <iostream>
#include <vector>
#include <algorithm>

void solve() {
  std::string s;
  std::cin >> s;
  int n = s.size();
  int k = 2;

  std::vector<int> a(n);
  for (int i = 0; i < n; ++i) {
    a[i] = i;
  }

  std::sort(a.begin(), a.end(), [&s](int i, int j) {
    return s[i] < s[j];
  });

  std::vector<int> res(n, 0);
  std::vector<std::vector<int>> g(k + 1, std::vector<int>());

  for (int i = 0, p = 0; i < n; ++i, ++p) {
    int pos = p % k + 1;
    if (g[pos].empty() || s[a[i - k]] != s[a[i]]) {
      g[pos].push_back(a[i]);
    } else {
      --p;
    }
  }

  int mn = g[k].size();
  for (int i = 1; i <= k; ++i) {
    for (int j = 0; j < mn; ++j) {
      res[g[i][j]] = i;
    }
  }

  int ans = std::count(res.begin(), res.end(), 0);
  std::cout << ans / 2 << '\n';
}

int main() {
  int t = 1;
  std::cin >> t;
  while (t--) {
    solve();
  }
  return 0;
}