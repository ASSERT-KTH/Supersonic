#include <iostream>
#include <vector>
#include <algorithm>

void solve() {
  std::string s;
  std::cin >> s;
  int n = s.size();
  int k = 2;
  std::vector<std::pair<char, int>> a(n);
  for (int i = 0; i < n; ++i) {
    a[i].second = i;
    a[i].first = s[i];
  }
  
  std::vector<int> res(n);
  std::vector<std::vector<int>> g(k + 1);
  for (int i = 0, p = 0; i < n; ++i, ++p) {
    int pos = p % k + 1;
    if (g[pos].empty())
      g[pos].push_back(a[i].second);
    else if (a[i - k].first != a[i].first)
      g[pos].push_back(a[i].second);
    else
      --p;
  }
  
  int mn = g[k].size();
  for (int i = 1; i <= k; ++i) {
    for (int j = 0; j < mn; ++j)
      res[g[i][j]] = i;
  }
  
  int ans = 0;
  for (int i = 0; i < n; ++i)
    ans += (res[i] != 0);
  
  std::cout << ans / 2 << '\n';
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  
  int t;
  std::cin >> t;
  while (t--)
    solve();
  
  return 0;
}