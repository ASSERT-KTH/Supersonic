#include <iostream>
#include <vector>

void answer(bool v) {
  constexpr const char *s[2] = {"No", "Yes"};
  std::cout << s[v] << '\n';
}

void solve(const std::vector<size_t>& parent, const std::vector<size_t>& childlessCount) {
  const size_t n = parent.size();
  for (size_t i = 0; i < n; ++i) {
    if (parent[i] == -1)
      continue;
    unsigned k = childlessCount[i];
    if (k < 3)
      return answer(false);
  }
  answer(true);
}

int main() {
  size_t n;
  std::cin >> n;

  std::vector<size_t> parent(n, -1);
  std::vector<size_t> childlessCount(n, 0);

  for (size_t i = 1; i < n; ++i) {
    unsigned p;
    std::cin >> p;
    parent[i] = p - 1;
    childlessCount[p - 1] += childlessCount[i] == 0;
  }

  solve(parent, childlessCount);

  return 0;
}