#include <iostream>
#include <vector>

bool solve(const std::vector<std::vector<size_t>>& g) {
    const size_t n = g.size();
    for (size_t i = 0; i < n; ++i) {
        if (g[i].empty())
            continue;
        size_t counter = 0;
        for (const size_t x : g[i]) {
            if (g[x].empty())
                counter++;
        }
        if (counter < 3)
            return false;
    }
    return true;
}

void answer(bool v) {
    constexpr const char* s[2] = { "No", "Yes" };
    std::cout << s[v] << '\n';
}

int main() {
    size_t n;
    std::cin >> n;
    std::vector<std::vector<size_t>> g(n);
    for (size_t i = 1; i < n; ++i) {
        unsigned p;
        std::cin >> p;
        g[p - 1].push_back(i);
    }
    answer(solve(g));
    return 0;
}