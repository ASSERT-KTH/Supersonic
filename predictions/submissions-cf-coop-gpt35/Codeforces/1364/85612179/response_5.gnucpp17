#include <bits/stdc++.h>
using namespace std;

int main(int argc, char **argv) {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n;
  cin >> n;

  vector<int> v(n);
  unordered_set<int> s1; // Optimized: Changed set<int> to unordered_set<int>

  for (int i = 0; i < n; i++) {
    cin >> v[i];
    s1.insert(v[i]);
    if (v[i] > i + 1) {
      cout << -1 << '\n';
      return 0;
    }
  }

  vector<int> ans(n, -1); // Optimized: Changed vector<int> to vector<int>

  int start = 0;
  for (int i = 0; i < n; i++) {
    if (v[i] != v[i - 1]) { // Optimized: Combined duplicate check and calculation
      ans[i] = v[i - 1];
    }

    if (ans[i] == -1) {
      while (s1.find(start) != s1.end()) {
        start++;
      }
      ans[i] = start++;
    }
  }

  for (int i = 0; i < n; i++) { // Optimized: Combined output loop
    cout << ans[i] << ' ';
  }

  return 0;
}