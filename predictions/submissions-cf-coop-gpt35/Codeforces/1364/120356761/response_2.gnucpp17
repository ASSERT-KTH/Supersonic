#include <iostream>
#pragma GCC optimize("O3")
#pragma GCC target("avx,avx2,fma")

using namespace std;
#define ll long long int
#define pb push_back
#define fon for (i = 0; i < n; i++)
#define JSM ios_base::sync_with_stdio(false);

int main() {
  JSM
  int t, n, m, x, i, j, k, answer = 0;
  cin >> t;
  while (t--) {
    cin >> n >> x;
    int a[100000];
    int firstNonZero = -1;
    int lastNonZero = -1;
    int sum = 0;
    bool divisible = true;
    for (i = 0; i < n; i++) {
      cin >> a[i];
      a[i] %= x;
      sum += a[i];
      if (sum % x != 0) {
        divisible = false;
      }
      if (a[i] != 0) {
        if (firstNonZero == -1) {
          firstNonZero = i;
        }
        lastNonZero = i;
      }
    }
    if (divisible) {
      answer = n;
    } else {
      int pos = min(firstNonZero + 1, n - lastNonZero);
      answer = n - pos;
    }
    cout << answer << endl;
  }
  return 0;
}