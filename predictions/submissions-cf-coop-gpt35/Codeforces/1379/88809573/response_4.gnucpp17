#include <algorithm>
#include <iostream>

typedef long long ll;

const int maxn = 2e5 + 10;

struct node {
  ll a, b;
} f[maxn];

ll suf[maxn];

int main() {
  int q;
  std::cin >> q;

  while (q--) {
    int n, m;
    std::cin >> n >> m;

    for (int i = 1; i <= m; i++) {
      std::cin >> f[i].a >> f[i].b;
    }

    std::sort(f + 1, f + 1 + m, [](const node& lhs, const node& rhs) {
      return lhs.a > rhs.a;
    });

    ll ans = 0;
    for (int i = 1; i <= m; i++) {
      suf[i] = suf[i - 1] + f[i].a;
    }

    if (n <= m)
      ans = suf[m - n];

    for (int i = 1; i <= m; i++) {
      ll temp = suf[m] - suf[i - 1];
      int num = n - (m - i);
      temp += num * f[i].b;
      ans = std::max(ans, temp);
    }

    std::cout << ans << std::endl;
  }

  return 0;
}