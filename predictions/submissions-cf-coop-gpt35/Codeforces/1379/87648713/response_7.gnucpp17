#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define all(v) v.begin(), v.end()
#define endll "\n"
string p = "abacaba";

// Function to compute the failure function for the pattern
vector<int> computeFailureFunction() {
    int m = p.size();
    vector<int> failure(m, 0);
    int j = 0;
    for (int i = 1; i < m; i++) {
        if (p[i] == p[j]) {
            failure[i] = j + 1;
            j++;
        } else {
            if (j != 0) {
                j = failure[j - 1];
                i--;
            } else {
                failure[i] = 0;
            }
        }
    }
    return failure;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;
        string s;
        cin >> s;

        int patternCount = 0;
        vector<int> failure = computeFailureFunction();

        for (int i = 0; i <= n - p.size(); i++) {
            bool ck = true;
            for (int j = 0; j < p.size(); j++) {
                if (s[i + j] != p[j] && s[i + j] != '?') {
                    ck = false;
                    break;
                }
                if (s[i + j] == '?') {
                    s[i + j] = p[j];
                }
            }
            if (ck) {
                int count = 0;
                for (int k = 0; k <= n - p.size(); k++) {
                    bool match = true;
                    for (int j = 0; j < p.size(); j++) {
                        if (s[k + j] != p[j]) {
                            match = false;
                            break;
                        }
                    }
                    if (match) {
                        count++;
                    }
                }
                if (count == 1) {
                    patternCount++;
                    if (patternCount == 1) {
                        cout << "YES" << endl;
                        cout << s << endl;
                    } else {
                        cout << "NO" << endl;
                    }
                    break;
                }
            }
        }

        if (patternCount == 0) {
            cout << "NO" << endl;
        }
    }
    return 0;
}