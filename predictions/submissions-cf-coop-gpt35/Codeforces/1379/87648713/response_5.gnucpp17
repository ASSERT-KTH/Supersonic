#include <iostream>
#include <cstring>
#include <vector>

using namespace std;

const string p = "abacaba";

bool isPatternMatch(const string& s, int start) {
    int n = s.size();
    if (start + p.size() > n) {
        return false;
    }

    for (int i = 0; i < p.size(); i++) {
        if (s[start + i] != p[i] && s[start + i] != '?') {
            return false;
        }
    }

    return true;
}

bool hasSinglePatternMatch(const string& s) {
    int count = 0;
    for (int i = 0; i < s.size(); i++) {
        if (isPatternMatch(s, i)) {
            count++;
            if (count > 1) {
                return false;
            }
        }
    }

    return count == 1;
}

void solveTest() {
    int n;
    cin >> n;

    string s;
    cin >> s;

    vector<int> indices;

    for (int i = 0; i < n; i++) {
        if (isPatternMatch(s, i)) {
            indices.push_back(i);
        }
    }

    if (indices.empty()) {
        cout << "NO" << endl;
    } else if (indices.size() == 1) {
        string ss = s;
        for (int i = 0; i < p.size(); i++) {
            if (ss[indices[0] + i] == '?') {
                ss[indices[0] + i] = p[i];
            }
        }

        for (int i = 0; i < n; i++) {
            if (ss[i] == '?') {
                ss[i] = 'd';
            }
        }

        if (hasSinglePatternMatch(ss)) {
            cout << "YES" << endl;
            cout << ss << endl;
        } else {
            cout << "NO" << endl;
        }
    } else {
        cout << "NO" << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    cin >> t;

    while (t--) {
        solveTest();
    }

    return 0;
}