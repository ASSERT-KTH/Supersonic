#include <bits/stdc++.h>
using namespace std;

#define ll long long

string p = "abacaba";

int countSubstrings(string s) {
  int c = 0;
  for (int i = 0; i + p.size() <= s.size(); i++) {
    bool ck = true;
    for (int j = 0; j < p.size(); j++) {
      if (s[i + j] != p[j] && s[i + j] != '?') {
        ck = false;
        break;
      }
    }
    if (ck)
      c++;
  }
  return c;
}

string replaceSubstrings(string s) {
  string modified = s;
  for (int i = 0; i + p.size() <= s.size(); i++) {
    bool ck = true;
    for (int j = 0; j < p.size(); j++) {
      if (modified[i + j] != p[j] && modified[i + j] != '?') {
        ck = false;
        break;
      }
      modified[i + j] = p[j];
    }
    if (ck && countSubstrings(modified) == 1) {
      for (int i = 0; i < modified.size(); i++) {
        if (modified[i] == '?')
          modified[i] = 'd';
      }
      return modified;
    }
  }
  return "";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    string s;
    cin >> s;
    bool found = false;
    for (int i = 0; i + p.size() <= n; i++) {
      string substring = s.substr(i, p.size());
      if (countSubstrings(substring) == 1) {
        string modified = s;
        for (int j = 0; j < p.size(); j++) {
          if (modified[i + j] == '?')
            modified[i + j] = p[j];
        }
        if (countSubstrings(modified) == 1) {
          found = true;
          cout << "YES" << endl;
          for (int j = 0; j < n; j++) {
            if (modified[j] == '?')
              modified[j] = 'd';
          }
          cout << modified << endl;
          break;
        }
      }
    }
    if (!found)
      cout << "NO" << endl;
  }
  return 0;
}