#include <iostream>
#include <vector>
#include <string>

using namespace std;

string p = "abacaba";

vector<int> computeLPS(const string& pattern) {
    vector<int> lps(pattern.size(), 0);

    int len = 0;
    int i = 1;
    while (i < pattern.size()) {
        if (pattern[i] == pattern[len]) {
            len++;
            lps[i] = len;
            i++;
        } else {
            if (len != 0) {
                len = lps[len - 1];
            } else {
                lps[i] = 0;
                i++;
            }
        }
    }

    return lps;
}

int kmpCount(const string& s) {
    vector<int> lps = computeLPS(p);

    int i = 0;
    int j = 0;
    int count = 0;

    while (i < s.size()) {
        if (s[i] == p[j]) {
            i++;
            j++;
        }

        if (j == p.size()) {
            count++;
            j = lps[j - 1];
        } else if (i < s.size() && s[i] != p[j]) {
            if (j != 0) {
                j = lps[j - 1];
            } else {
                i++;
            }
        }
    }

    return count;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;

        string s;
        cin >> s;

        bool validModification = false;
        int occurrences = 0;

        for (int i = 0; i <= n - p.size(); i++) {
            bool match = true;
            for (int j = 0; j < p.size(); j++) {
                if (s[i + j] != p[j] && s[i + j] != '?') {
                    match = false;
                    break;
                }
            }

            if (match) {
                validModification = true;

                for (int j = 0; j < p.size(); j++) {
                    if (s[i + j] == '?') {
                        s[i + j] = p[j];
                    }
                }

                occurrences = kmpCount(s);

                if (occurrences == 1) {
                    for (int j = 0; j < n; j++) {
                        if (s[j] == '?') {
                            s[j] = 'd';
                        }
                    }

                    cout << "YES" << endl;
                    cout << s << endl;
                    break;
                }
            }
        }

        if (!validModification || occurrences != 1) {
            cout << "NO" << endl;
        }
    }

    return 0;
}