#include <iostream>
#include <string>
using namespace std;

const string p = "abacaba";

int countOccurrences(const string& s) {
    int count = 0;
    for (size_t i = 0; i < s.size(); i++) {
        if (s.substr(i, p.size()) == p) {
            count++;
        }
    }
    return count;
}

string replaceQuestionMarks(const string& s) {
    string modified = s;
    for (size_t i = 0; i < modified.size(); i++) {
        if (modified[i] == '?' || modified[i] == 'a') {
            bool valid = true;
            for (size_t j = 0; j < p.size(); j++) {
                if (modified[i + j] != p[j] && modified[i + j] != '?') {
                    valid = false;
                    break;
                }
                modified[i + j] = p[j];
            }
            if (valid && countOccurrences(modified) == 1) {
                for (size_t k = 0; k < modified.size(); k++) {
                    if (modified[k] == '?') {
                        modified[k] = 'd';
                    }
                }
                return modified;
            }
        }
    }
    return "";
}

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        string s;
        cin >> s;
        bool found = false;
        for (size_t i = 0; i <= n - p.size(); i++) {
            if (s[i] == '?' || s[i] == 'a') {
                string modified = replaceQuestionMarks(s.substr(i, p.size()));
                if (!modified.empty()) {
                    cout << "YES" << endl;
                    for (size_t j = 0; j < i; j++) {
                        if (s[j] == '?') {
                            cout << 'd';
                        } else {
                            cout << s[j];
                        }
                    }
                    cout << modified;
                    for (size_t j = i + p.size(); j < n; j++) {
                        if (s[j] == '?') {
                            cout << 'd';
                        } else {
                            cout << s[j];
                        }
                    }
                    cout << endl;
                    found = true;
                    break;
                }
            }
        }
        if (!found) {
            cout << "NO" << endl;
        }
    }
    return 0;
}