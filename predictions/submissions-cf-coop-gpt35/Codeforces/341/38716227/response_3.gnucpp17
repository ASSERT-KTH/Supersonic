#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int mxn = 1010;
ll multree[mxn][mxn], addtree[mxn][mxn];
ll yo(ll x) { return (x % 2); }
ll query2(ll tree[mxn][mxn], ll x, ll y) {
  ll sum = 0;
  for (ll i = x; i > 0; i -= i & -i) {
    for (ll j = y; j > 0; j -= j & -j) {
      sum ^= tree[i][j];
    }
  }
  return sum;
}
ll query1(ll x, ll y) {
  ll mul = 0, add = 0;
  for (ll i = x; i > 0; i -= i & -i) {
    mul ^= query2(multree, i, y);
    add ^= query2(addtree, i, y);
  }
  return (mul * yo(x)) ^ add;
}
ll query(ll x1, ll y1, ll x2, ll y2) {
  return (query1(x2, y2) ^ query1(x1 - 1, y2) ^ query1(x2, y1 - 1) ^
          query1(x1 - 1, y1 - 1));
}
void upd2(ll tree[mxn][mxn], ll x, ll y, ll val) {
  for (ll i = x; i < mxn; i += i & -i) {
    for (ll j = y; j < mxn; j += j & -j) {
      tree[i][j] ^= val;
    }
  }
}
void upd1(ll x, ll y1, ll y2, ll val) {
  upd2(multree, x, y1, val);
  upd2(multree, x, y2, val);
  upd2(addtree, x, y1, val * yo(y1 - 1));
  upd2(addtree, x, y2, val * yo(y2));
}
void upd(ll x1, ll y1, ll x2, ll y2, ll val) {
  upd1(x1, y1, y2, val);
  upd1(x2, y1, y2, val);
}
int main() {
  ll n, q, tt, x1, y1, x2, y2, val;
  scanf("%lld", &n);
  scanf("%lld", &q);
  while (q--) {
    scanf("%lld", &tt);
    if (tt == 2) {
      scanf("%lld %lld %lld %lld %lld", &x1, &y1, &x2, &y2, &val);
      upd(x1, y1, x2, y2, val);
    } else {
      scanf("%lld %lld %lld %lld", &x1, &y1, &x2, &y2);
      printf("%lld\n", query(x1, y1, x2, y2));
    }
  }
  return 0;
}