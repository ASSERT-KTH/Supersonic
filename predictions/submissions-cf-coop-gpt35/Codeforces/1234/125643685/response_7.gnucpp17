#include <iostream>
#include <vector>
#define bbn 200005
#define mod 1000000007
typedef long long int LL;
using namespace std;

vector<vector<int>> indices(26); // Use vector of vectors instead of set of ints

char s[bbn];

int main() {
  cin >> s + 1;
  int q;
  cin >> q;
  int len = strlen(s + 1); // Use len directly instead of calling strlen

  // Populate the vector of vectors with indices
  for (int i = 1; i <= len; i++) {
    indices[s[i] - 'a'].push_back(i);
  }

  while (q--) {
    int x;
    cin >> x;
    if (x == 1) {
      int p;
      char c;
      cin >> p >> c;

      // Remove the index from the old character's vector
      auto& oldCharIndices = indices[s[p] - 'a'];
      oldCharIndices.erase(find(oldCharIndices.begin(), oldCharIndices.end(), p));

      // Add the index to the new character's vector
      auto& newCharIndices = indices[c - 'a'];
      newCharIndices.push_back(p);

      s[p] = c;
    } else if (x == 2) {
      int l, r, sum = 0;
      cin >> l >> r;

      // Calculate the sum by directly accessing the vector of vectors
      for (int i = 0; i < 26; i++) {
        auto& charIndices = indices[i];
        if (!charIndices.empty() && charIndices.front() <= r && charIndices.back() >= l) {
          sum++;
        }
      }

      cout << sum << endl;
    }
  }
}