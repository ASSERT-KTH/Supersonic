#include <algorithm>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <stack>
#include <stdio.h>
#include <string>
#include <vector>
using namespace std;
#define ll long long
typedef pair<int, int> pii;
const int maxn = 1e6 + 5;
int n, m, ans;
char grid[maxn][maxn];
stack<pii> stk;
bool dfs() {
  stk.push(make_pair(0, 0));
  while (!stk.empty()) {
    pii cur = stk.top();
    stk.pop();
    int x = cur.first, y = cur.second;
    if (x >= n || y >= m || grid[x][y] == '#')
      continue;
    if (x == n - 1 && y == m - 1)
      return true;
    grid[x][y] = '#';
    stk.push(make_pair(x + 1, y));
    stk.push(make_pair(x, y + 1));
  }
  return false;
}
int main() {
  #pragma GCC optimize("O3")
  cin.sync_with_stdio(false);
  scanf("%d %d", &n, &m);
  for (int i = 0; i < n; i++) {
    scanf("%s", grid[i]);
  }
  if (!dfs())
    cout << 0;
  else {
    grid[0][0] = '.';
    if (!dfs())
      cout << 1;
    else
      cout << 2;
  }
  return 0;
}