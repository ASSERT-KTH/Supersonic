#include <algorithm>
#include <bitset>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef pair<int, int> pii;

const int maxn = 1e6 + 5;
int n, m;

vector<string> mz;
stack<pii> st;
bitset<maxn> vis;

bool dfs() {
  st.push({0, 0});

  while (!st.empty()) {
    pii curr = st.top();
    st.pop();

    int x = curr.first;
    int y = curr.second;

    if (x == n - 1 && y == m - 1) {
      return true;
    }

    if (x < 0 || y < 0 || x >= n || y >= m || mz[x][y] == '#' || vis.test(x * m + y)) {
      continue;
    }

    vis.set(x * m + y);

    st.push({x + 1, y});
    st.push({x, y + 1});
  }

  return false;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  cin >> n >> m;
  cin.ignore();

  string line;
  while (getline(cin, line)) {
    mz.push_back(line);
  }

  if (!dfs()) {
    cout << 0;
  } else {
    vis.reset(0);
    if (!dfs()) {
      cout << 1;
    } else {
      cout << 2;
    }
  }

  return 0;
}