#include <iostream>
#include <vector>
#include <map>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> pll;
typedef vector<ll> vi;

inline ll square(ll x) {
  return x * x;
}

inline void removeDuplicates(vector<ll>& c) {
  c.resize(unique(c.begin(), c.end()) - c.begin());
}

void solve() {
  ll n;
  cin >> n;
  vi a(n * n);
  vi sum(2, -1);
  pll ans[2] = {make_pair(-1, -1), make_pair(-1, -1)};
  
  for (ll i = 0; i < n * n; i++) {
    cin >> a[i];
  }
  
  for (ll i = 0; i < n; i++) {
    for (ll j = 0; j < n; j++) {
      ll sum_ij = a[i * n + j] + a[(n - 1 - i) * n + (n - 1 - j)];
      ll parity = (i + j) % 2;
      
      if (sum_ij > sum[parity]) {
        sum[parity] = sum_ij;
        ans[parity] = make_pair(i, j);
      }
    }
  }
  
  cout << sum[0] + sum[1] << endl;
  for (ll i = 0; i < 2; i++) {
    cout << ans[i].first + 1 << " " << ans[i].second + 1 << " ";
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  
  solve();
  
  return 0;
}