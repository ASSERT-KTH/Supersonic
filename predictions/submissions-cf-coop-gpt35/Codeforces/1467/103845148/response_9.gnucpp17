#include <iostream>
#define MAX_SIZE 100000
typedef long long ll;

int kitne(int* a, int ind) {
  int cnt = 0;
  // Check if element at ind is a peak or valley
  if ((a[ind] > a[ind + 1] && a[ind] > a[ind - 1]) ||
      (a[ind] < a[ind - 1] && a[ind] < a[ind + 1]))
    cnt++;
  return cnt;
}

void hn_bhai() {
  int n;
  std::cin >> n;
  int a[MAX_SIZE];
  for (int i = 0; i < n; i++)
    std::cin >> a[i];
  int tot = 0;
  for (int i = 1; i < n - 1; i++) {
    if ((a[i] > a[i + 1] && a[i] > a[i - 1]) ||
        (a[i] < a[i - 1] && a[i] < a[i + 1]))
      tot++;
  }
  int p = 0;
  // Initialize count of peaks and valleys within window of three elements
  for (int i = 1; i <= 3; i++)
    p += kitne(a, i);

  for (int i = 1; i < n - 2; i++) {
    // Update count by removing first element in window and adding next element
    p -= kitne(a, i);
    p += kitne(a, i + 3);
    std::cout << tot - p << std::endl;
  }
}

int main() {
  int t;
  std::cin >> t;
  while (t--)
    hn_bhai();
  return 0;
}