#include <iostream>
#include <vector>
using namespace std;

int countSubarrays(const vector<int>& arr, int index) {
  int count = 0;
  int n = arr.size();
  
  if ((arr[index] > arr[index + 1] && arr[index] > arr[index - 1]) ||
      (arr[index] < arr[index - 1] && arr[index] < arr[index + 1])) {
    count++;
  }
  
  return count;
}

void hn_bhai() {
  int n;
  cin >> n;
  
  vector<int> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }
  
  int total = 0;
  int maxDifference = 0;
  
  // Calculate initial counts
  for (int i = 1; i < n - 1; i++) {
    total += countSubarrays(a, i);
  }
  
  // Calculate counts after modifying array
  for (int i = 1; i < n - 1; i++) {
    int temp = countSubarrays(a, i);
    int val = a[i];
    
    // Modify left neighbor
    a[i] = a[i - 1];
    maxDifference = max(maxDifference, temp - countSubarrays(a, i));
    
    // Modify right neighbor
    a[i] = a[i + 1];
    maxDifference = max(maxDifference, temp - countSubarrays(a, i));
    
    // Restore original value
    a[i] = val;
  }
  
  cout << total - maxDifference << endl;
}

int main() {
  int t;
  cin >> t;
  
  while (t--) {
    hn_bhai();
  }
  
  return 0;
}