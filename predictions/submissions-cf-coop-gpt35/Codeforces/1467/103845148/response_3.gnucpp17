#include <iostream>
#include <vector>
using namespace std;

vector<int> a;

int kitne(long long ind) {
  int cnt = 0;
  for (long long i = ind - 1; i <= ind + 1; i++) {
    if ((a[i] > a[i + 1] && a[i] > a[i - 1]) ||
        (a[i] < a[i - 1] && a[i] < a[i + 1]))
      cnt++;
  }
  return cnt;
}

void hn_bhai() {
  long long n;
  cin >> n;
  a.resize(n);
  for (long long i = 0; i < n; i++)
    cin >> a[i];

  long long tot = 0;
  int p = 0;
  for (long long i = 1; i < n - 1; i++) {
    int cnt = 0;
    if ((a[i] > a[i + 1] && a[i] > a[i - 1]) ||
        (a[i] < a[i - 1] && a[i] < a[i + 1]))
      cnt++;
    long long val = a[i];
    if (i - 1 >= 0) {
      a[i] = a[i - 1];
      p = max(p, cnt - kitne(i));
    }
    if (i + 1 < n) {
      a[i] = a[i + 1];
      p = max(p, cnt - kitne(i));
    }
    a[i] = val;
    tot += cnt;
  }
  cout << tot - p << endl;
}

#pragma GCC optimize("O3")
int main() {
  int t;
  cin >> t;
  while (t--)
    hn_bhai();
}