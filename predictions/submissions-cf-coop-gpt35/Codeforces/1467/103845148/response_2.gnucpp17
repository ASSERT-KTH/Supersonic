#include <iostream>
#include <vector>

std::vector<int> a;

int countPeaksAndValleys(int ind) {
  int cnt = 0;
  int n = a.size();
  
  if (ind > 0 && ind < n - 1) {
    if ((a[ind] > a[ind + 1] && a[ind] > a[ind - 1]) ||
        (a[ind] < a[ind - 1] && a[ind] < a[ind + 1])) {
      cnt++;
    }
  }
  
  return cnt;
}

void hn_bhai() {
  int n;
  std::cin >> n;
  a.resize(n);
  
  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
  }
  
  int totalCnt = 0;
  
  for (int i = 1; i < n - 1; i++) {
    totalCnt += countPeaksAndValleys(i);
  }
  
  int maxCntChange = 0;
  
  for (int i = 1; i < n - 1; i++) {
    int temp = countPeaksAndValleys(i);
    int val = a[i];
    
    if (i - 1 >= 0) {
      a[i] = a[i - 1];
    }
    
    maxCntChange = std::max(maxCntChange, temp - countPeaksAndValleys(i));
    
    if (i + 1 < n) {
      a[i] = a[i + 1];
    }
    
    maxCntChange = std::max(maxCntChange, temp - countPeaksAndValleys(i));
    
    a[i] = val;
  }
  
  std::cout << totalCnt - maxCntChange << std::endl;
}

int main() {
  int t;
  std::cin >> t;
  
  while (t--) {
    hn_bhai();
  }
  
  return 0;
}