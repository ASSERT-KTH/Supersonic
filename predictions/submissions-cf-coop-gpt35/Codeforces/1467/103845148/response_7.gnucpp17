#include <bits/stdc++.h>
using namespace std;

int kitne(const vector<int>& a, size_t ind) {
    size_t n = a.size();
    int cnt = 0;
    int ai = a[ind];
    int ai_minus_1 = (ind > 0) ? a[ind - 1] : INT_MIN;
    int ai_plus_1 = (ind + 1 < n) ? a[ind + 1] : INT_MIN;
    if ((ai > ai_plus_1 && ai > ai_minus_1) || (ai < ai_minus_1 && ai < ai_plus_1)) {
        cnt++;
    }
    return cnt;
}

void hn_bhai() {
    size_t n;
    cin >> n;
    vector<int> a;
    a.reserve(n);
    for (size_t i = 0; i < n; ++i) {
        int val;
        cin >> val;
        a.push_back(val);
    }
    int tot = 0;
    for (size_t i = 1; i < n; ++i) {
        if ((a[i] > a[i + 1] && a[i] > a[i - 1]) || (a[i] < a[i - 1] && a[i] < a[i + 1])) {
            tot++;
        }
    }
    int p = INT_MIN;
    for (size_t i = 1; i < n; ++i) {
        int temp = kitne(a, i);
        int val = a[i];
        a[i] = a[i - 1];
        p = max(p, temp - kitne(a, i));
        a[i] = a[i + 1];
        p = max(p, temp - kitne(a, i));
        a[i] = val;
    }
    cout << tot - p << endl;
}

int main() {
    int t;
    cin >> t;
    while (t--) {
        hn_bhai();
    }
    return 0;
}