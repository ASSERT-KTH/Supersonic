#include <algorithm>
#include <cstdio>

const int MAXN = 2e5 + 5;

int N, M, K;
int A[MAXN];

int func(int pos) {
  if (pos > N || A[pos] > M)
    return 0;
  
  int sum = 0;
  int cnt = pos;
  
  for (int i = pos + K; i <= N; i += K) {
    if (A[i] > M - sum) {
      for (int j = i - K + 1; j <= N; ++j) {
        if (A[j] <= M - sum) {
          sum += A[j];
          ++cnt;
        } else {
          break;
        }
      }
      break;
    } else {
      sum += A[i];
      cnt += K;
    }
  }
  
  return cnt;
}

void solve() {
  scanf("%d%d%d", &N, &M, &K);
  for (int i = 1; i <= N; ++i) {
    scanf("%d", &A[i]);
  }
  
  std::partial_sort(A + 1, A + 1 + K, A + 1 + N);
  
  int cnt = 0;
  for (int i = 0; i <= N; ++i) {
    cnt = std::max(cnt, func(i));
  }
  
  printf("%d\n", cnt);
}

int main() {
  int T;
  scanf("%d", &T);
  
  for (int t = 1; t <= T; ++t) {
    solve();
  }
  
  return 0;
}