#include <algorithm>
#include <cstdio>

const int MAXN = 2e5 + 5;

void solve(int& N, int& M, int& K) {
  int A[MAXN];
  int psum[MAXN];

  for (int i = 1; i <= N; ++i) {
    scanf("%d", &A[i]);
  }

  std::sort(A + 1, A + 1 + N);

  for (int i = 1; i <= N; ++i)
    psum[i] = psum[i - 1] + A[i];

  if (psum[N] <= M) {
    printf("%d\n", N);
    return;
  }

  int cnt = 0;

  for (int i = 0; i <= N; ++i) {
    int temp = M - psum[i];
    int candies_eaten = i;

    for (int j = i + K; j <= N; j += K) {
      if (A[j] > temp) {
        for (int k = j - K + 1; k <= N; ++k) {
          if (A[k] <= temp) {
            temp -= A[k];
            ++candies_eaten;
          } else {
            break;
          }
        }
        break;
      } else {
        temp -= A[j];
        candies_eaten += K;
      }
    }

    cnt = std::max(cnt, candies_eaten);
  }

  printf("%d\n", cnt);
}

int main() {
  int T;
  scanf("%d", &T);

  for (int t = 1; t <= T; ++t) {
    int N, M, K;
    scanf("%d%d%d", &N, &M, &K);
    solve(N, M, K);
  }

  return 0;
}