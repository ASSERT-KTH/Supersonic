#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int MAX_N = 1e5 + 1;
const int MAX_VALUE = 30;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    
    int n;
    cin >> n;
    
    vector<int> a(n);
    for (auto& z : a)
        cin >> z;
    
    vector<vector<long long>> dp(n + 1, vector<long long>(2 * MAX_VALUE + 1));
    
    for (int i = 0; i < n; i++) {
        for (int j = a[i]; j <= MAX_VALUE; j++) {
            dp[i + 1][j] = max(dp[i + 1][j], dp[i][j - a[i]] + a[i]);
        }
    }
    
    long long ans = 0;
    for (int i = 0; i <= n; i++) {
        for (int j = 1; j <= MAX_VALUE; j++) {
            ans = max(ans, dp[i][j] - j);
        }
    }
    
    cout << ans;
    
    return 0;
}