#include <iostream>
#include <vector>
#include <stack>
#include <bitset>
using namespace std;

const int MAX_NODES = 500001;

int n, m;
vector<int> graph[MAX_NODES];
int ans[MAX_NODES];

int num() {
  int res;
  cin >> res;
  return res;
}

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  stack<int> s;
  s.push(i);
  int res = 0;
  bool visited[MAX_NODES] = {false};
  visited[i] = true;
  while (!s.empty()) {
    int now = s.top();
    s.pop();
    res++;
    for (int next : graph[now]) {
      if (!visited[next]) {
        visited[next] = true;
        s.push(next);
      }
    }
  }
  for (int next = 1; next <= n; next++) {
    if (visited[next])
      ans[next] = res;
  }
  return res;
}

int main() {
  // n and m remain the same
  n = num();
  m = num();
  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    if (l < 0)
      continue;
    int a = num();
    while (l-- > 0) {
      int b = num();
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  for (int i = 1; i <= n; i++)
    cout << answer(i) << " ";
  cout << endl;
}