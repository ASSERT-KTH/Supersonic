#include <iostream>
#include <vector>
#include <stack>
#include <bitset>

const int MAX_N = 500001;
std::vector<int> graph[MAX_N];
int ans[MAX_N];

int num() {
  int res;
  std::cin >> res;
  return res;
}

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  std::stack<int> s;
  s.push(i);
  std::stack<int> list;
  std::bitset<MAX_N> bs;
  bs.set(i);
  while (!s.empty()) {
    int now = s.top();
    s.pop();
    list.push(now);
    for (int next : graph[now])
      if (!bs[next]) {
        bs.set(next);
        s.push(next);
      }
  }
  int res = list.size();
  while (!list.empty()) {
    int next = list.top();
    list.pop();
    ans[next] = res;
  }
  return res;
}

int main() {
  int n, m;
  std::cin >> n;
  std::cin >> m;
  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    if (l < 0)
      continue;
    int a = num();
    while (l-- > 0) {
      int b = num();
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  for (int i = 1; i <= n; i++)
    std::cout << answer(i) << " ";
  std::cout << std::endl;
}