#include <iostream>
#include <vector>
#include <stack>

using namespace std;

int n, m;
vector<vector<int>> graph;
vector<bool> visited;
vector<int> ans;

int num() {
  int res;
  scanf("%d", &res);
  return res;
}

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  
  stack<int> s;
  s.push(i);
  int res = 0;
  
  while (!s.empty()) {
    int now = s.top();
    s.pop();
    res++;
    
    for (const auto& next : graph[now]) {
      if (!visited[next]) {
        visited[next] = true;
        s.push(next);
      }
    }
  }
  
  for (const auto& next : graph[i])
    ans[next] = res;
  
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
  
  n = num();
  m = num();
  
  graph.resize(n + 1);
  visited.resize(n + 1, false);
  ans.resize(n + 1, 0);
  
  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    
    if (l < 0)
      continue;
    
    int a = num();
    
    while (l-- > 0) {
      int b = num();
      graph[a].emplace_back(b);
      graph[b].emplace_back(a);
      a = b;
    }
  }
  
  for (int i = 1; i <= n; i++) {
    printf("%d ", answer(i));
  }
  
  printf("\n");
  
  return 0;
}