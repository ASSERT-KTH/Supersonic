#include <bits/stdc++.h>
using namespace std;

vector<vector<int>> v;
vector<bool> vis;
int nn, ne;

void bfs(int u) {
  nn = 0;
  ne = 0;
  vis[u] = true;
  queue<int> q;
  q.push(u);
  while (!q.empty()) {
    u = q.front();
    q.pop();
    nn++;
    if (v[u].size() == 2) {
      ne++;
    }
    for (int i = 0; i < v[u].size(); ++i) {
      int p = v[u][i];
      if (!vis[p]) {
        vis[p] = true;
        q.push(p);
      }
    }
  }
}

int main() {
  const int MAX_NODES = 200010;
  int n, m, a, b, c = 0;
  scanf("%d %d", &n, &m);

  v.resize(MAX_NODES);
  vis.resize(MAX_NODES, false);

  while (m--) {
    scanf("%d %d", &a, &b);
    v[a].emplace_back(b);
    v[b].emplace_back(a);
  }

  for (int i = 1; i <= n; ++i) {
    if (!vis[i]) {
      bfs(i);
      if (nn == ne) {
        c++;
      }
    }
  }

  printf("%d\n", c);
  return 0;
}