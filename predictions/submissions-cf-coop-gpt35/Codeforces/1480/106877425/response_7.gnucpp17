#include <iostream>
#include <vector>

struct Enemy {
    int attack;
    int health;
};

void solve() {
    int a, b, n;
    int res = 0;
    std::cin >> a >> b >> n;
    std::vector<Enemy> enemies(n);

    int maxAttack = 0;
    int maxAttackIndex = 0;

    for (int i = 0; i < n; i++) {
        std::cin >> enemies[i].attack;
        if (enemies[i].attack > maxAttack) {
            maxAttack = enemies[i].attack;
            maxAttackIndex = i;
        }
    }

    for (int i = 0; i < n; i++) {
        std::cin >> enemies[i].health;
    }

    for (int i = 0; i < n; i++) {
        if (i == maxAttackIndex)
            continue;
        int d = (enemies[i].health + a - 1) / a;
        d = d * enemies[i].attack;
        res += d;
    }

    if (res >= b) {
        std::cout << "NO" << "\n";
        return;
    }

    b = b - res;
    int x = (b + enemies[maxAttackIndex].attack - 1) / enemies[maxAttackIndex].attack;
    int y = (enemies[maxAttackIndex].health + a - 1) / a;

    if (x >= y)
        std::cout << "YES" << "\n";
    else
        std::cout << "NO" << "\n";
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    
    int tt = 1;
    std::cin >> tt;

    while (tt--) {
        solve();
    }

    return 0;
}