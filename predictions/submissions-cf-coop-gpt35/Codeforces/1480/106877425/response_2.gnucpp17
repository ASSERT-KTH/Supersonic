#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long

void solve() {
    ll a, b, n;
    ll res = 0;
    std::cin >> a >> b >> n;

    std::vector<ll> attack(n);
    std::vector<ll> health(n);

    auto max_attack = attack.begin();
    for (auto it = attack.begin(); it != attack.end(); ++it) {
        std::cin >> *it;
        if (*it > *max_attack) {
            max_attack = it;
        }
    }

    for (auto& h : health) {
        std::cin >> h;
    }

    for (auto it = attack.begin(); it != attack.end(); ++it) {
        if (it == max_attack) {
            continue;
        }
        ll d = (health[it - attack.begin()] + a - 1) / a;
        d = d * (*it);
        res += d;
    }

    if (res >= b) {
        std::cout << "NO" << "\n";
        return;
    }

    b = b - res;
    ll x = (b + (*max_attack) - 1) / (*max_attack);
    ll y = (health[max_attack - attack.begin()] + a - 1) / a;

    if (x >= y) {
        std::cout << "YES" << "\n";
    } else {
        std::cout << "NO" << "\n";
    }
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);

    int tt = 1;
    std::cin >> tt;

    while (tt--) {
        solve();
    }

    return 0;
}