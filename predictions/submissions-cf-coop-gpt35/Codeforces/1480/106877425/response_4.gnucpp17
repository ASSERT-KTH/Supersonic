#include <iostream>
#include <algorithm>

void solve() {
  int a, b, n;
  int res = 0;
  std::cin >> a >> b >> n;
  
  int attack[n], health[n];
  int k = 0, mm = 0;
  
  for (int i = 0; i < n; i++) {
    std::cin >> attack[i];
    if (mm < attack[i]) {
      k = i;
      mm = attack[i];
    }
  }
  
  for (int i = 0; i < n; i++) {
    std::cin >> health[i];
  }
  
  int d = (health[k] + a - 1) >> __builtin_ctz(a);
  
  for (int i = 0; i < n; i++) {
    if (i == k)
      continue;
    res += ((health[i] + a - 1) >> __builtin_ctz(a)) * attack[i];
  }
  
  if (res >= b) {
    std::cout << "NO" << std::endl;
    return;
  }
  
  b = b - res;
  int x = (b + attack[k] - 1) / attack[k];
  int y = (health[k] + a - 1) >> __builtin_ctz(a);
  
  if (x >= y)
    std::cout << "YES" << std::endl;
  else
    std::cout << "NO" << std::endl;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(0);
  
  int tt = 1;
  std::cin >> tt;
  
  while (tt--)
    solve();
}