#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>

const int N = 2e2 + 10;

void solve() {
  int n;
  std::cin >> n;

  std::vector<int> a(n + 1);
  std::vector<int> b(n + 1);
  for (int i = 1; i <= n; i++) {
    std::cin >> a[i] >> b[i];
  }

  double total = 0;
  for (int i = 1; i <= n; i++) {
    total += b[i];
  }

  std::vector<std::vector<double>> dp(n + 1, std::vector<double>(n + 1, -1e18));
  dp[0][0] = 0;

  double ans = -1e18;
  int cap = 0;
  for (int i = 1; i <= n; i++) {
    cap += a[i];
    for (int c = cap; c >= a[i]; c--) {
      for (int k = 1; k <= i; k++) {
        dp[c][k] = std::max(dp[c - a[i]][k - 1] + b[i], dp[c][k]);
      }
    }
  }

  std::cout << std::fixed << std::setprecision(20);
  for (int k = 1; k <= n; k++) {
    ans = -1e18;
    for (int c = 1; c <= cap; c++) {
      ans = std::max(std::min(dp[c][k] + (total - dp[c][k]) / 2.0, (double)c), ans);
    }
    std::cout << ans << " ";
  }
}

int main() {
  solve();
  return 0;
}