#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>

using namespace std;

void solve() {
    int n;
    cin >> n;
    vector<int> a(n), b(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i] >> b[i];
    }
    double total = 0;
    for (int i = 0; i < n; i++) {
        total += b[i];
    }
    vector<double> dp(100 * 100 + 10, -1e18);
    dp[0] = 0;
    double ans = -1e18;
    int cap = 0;
    for (int i = 0; i < n; i++) {
        cap += a[i];
        for (int c = 100 * 100 + 10; c >= a[i]; c--) {
            for (int k = n; k >= 1; k--) {
                dp[c] = max(dp[c - a[i]] + (double)b[i], dp[c]);
            }
        }
    }
    for (int k = 1; k <= n; k++) {
        ans = -1e18;
        for (int c = 1; c <= 100 * 100 + 10; c++) {
            ans = max(min(dp[c] + (total - dp[c]) / 2.0, (double)c), ans);
        }
        cout << fixed << setprecision(20) << ans << " ";
    }
}

int main() {
    solve();
    return 0;
}