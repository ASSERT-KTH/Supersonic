#include <algorithm>
#include <iostream>
#include <vector>
#include <iomanip>

#define double long double
#define int long long int

using namespace std;

const int N = 2e2 + 10;
const int inf = 1e18 + 10;

int n, a[N], b[N], pos[N];

void solve() {
    cin >> n;
    for(int i = 1; i <= n; i++) 
        cin >> a[i] >> b[i];
    
    double total = 0;
    for(int i = 1; i <= n; i++) 
        total += b[i];
    
    vector<double> dp((N * N) * N, -inf);
    dp[0] = 0;
    double ans = -inf;
    int cap = 0;
    for(int i = 1; i <= n; i++) {
        cap += a[i];
        for(int c = 100 * 100 + 10; c >= a[i]; c--) 
            for(int k = n; k >= 1; k--) 
                dp[c * N + k] = max(dp[(c - a[i]) * N + (k - 1)] + (double)b[i], dp[c * N + k]);
    }
    
    for(int k = 1; k <= n; k++) {
        ans = -inf;
        for(int c = 1; c <= 100 * 100 + 10; c++)
            ans = max(min(dp[c * N + k] + (total - dp[c * N + k]) / (double)2.0, (double)c), ans);
        cout << fixed << setprecision(20) << ans << " ";
    }
}

int32_t main() {
    solve();
    return 0;
}