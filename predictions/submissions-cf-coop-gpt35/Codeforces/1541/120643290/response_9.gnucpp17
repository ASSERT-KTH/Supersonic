#include <iostream>
#include <vector>
#include <algorithm>
#include <tuple>

using namespace std;

void fastIo() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
}

void solve() {
  int n, ans = 0;
  cin >> n;

  vector<tuple<int, int, int>> a(n);
  for (int i = 0; i < n; i++) {
    cin >> get<0>(a[i]);
    get<1>(a[i]) = i + 1;
  }

  sort(a.begin(), a.end());

  int threshold = 2 * n;
  for (int i = 0; i < n - 1; i++) {
    for (int j = i + 1; j < n; j++) {
      if (get<0>(a[i]) * get<0>(a[j]) >= threshold)
        break;
      else if (get<0>(a[i]) * get<0>(a[j]) == get<1>(a[i]) + get<1>(a[j]))
        ans++;
    }
  }

  cout << ans << endl;
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif

  fastIo();

  int t;
  cin >> t;
  while (t--)
    solve();

  return 0;
}