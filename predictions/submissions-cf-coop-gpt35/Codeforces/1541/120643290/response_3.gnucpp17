#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void fastIo() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
}

void solve() {
    long long n, ans = 0;
    cin >> n;
    vector<long long> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    sort(a.begin(), a.end());
    
    int endIndex = 0;
    while (endIndex < n && a[0] * a[endIndex] < 2 * n) {
        endIndex++;
    }
    endIndex--; // Adjust endIndex to the last valid index
    
    int left = 0, right = endIndex;
    long long leftVal, rightVal, leftIdx, rightIdx;
    
    while (left < endIndex && right >= 0) {
        leftVal = a[left];
        rightVal = a[right];
        leftIdx = left + 1;
        rightIdx = right + 1;
        
        if (leftVal * rightVal >= 2 * n) {
            right--;
        } else if (leftVal * rightVal == leftIdx + rightIdx) {
            ans++;
            right--;
        } else {
            left++;
        }
    }
    
    cout << ans << endl;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    fastIo();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}