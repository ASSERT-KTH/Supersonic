#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

typedef long long int ll;

ll mod = 1e9 + 7;

vector<ll> sieve(int n) {
  vector<bool> isPrime(n + 1, true);
  vector<ll> primes;
  
  for (int p = 2; p <= n; p++) {
    if (isPrime[p]) {
      primes.push_back(p);
      
      for (int i = p * p; i <= n; i += p) {
        isPrime[i] = false;
      }
    }
  }
  
  return primes;
}

ll modulo_pow(ll a, ll b) {
  ll result = 1;
  
  while (b > 0) {
    if (b & 1) {
      result = (result * a) % mod;
    }
    
    a = (a * a) % mod;
    b >>= 1;
  }
  
  return result;
}

void prefact(vector<ll>& fact, ll l) {
  fact[0] = 1;
  
  for (ll i = 1; i <= l; i++) {
    fact[i] = (fact[i - 1] * i) % mod;
  }
}

void preinvfact(vector<ll>& invfact, const vector<ll>& fact, ll n) {
  invfact[0] = 1;
  
  for (int i = 1; i <= n; i++) {
    invfact[i] = modulo_pow(fact[i], mod - 2);
  }
}

ll ncr(ll n, ll r, const vector<ll>& fact, const vector<ll>& invfact) {
  if (n < r || n < 0 || r < 0)
    return 0;
    
  return ((fact[n] * invfact[r]) % mod * invfact[n - r]) % mod;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  
  int t;
  cin >> t;
  
  while (t--) {
    int n;
    cin >> n;
    
    vector<ll> v(n, 0);
    ll d = 0;
    
    for (int i = 0; i < n; i++) {
      cin >> v[i];
      d ^= v[i];
    }
    
    vector<ll> pref(n + 1);
    pref[0] = 0;
    
    for (int i = 1; i <= n; i++) {
      pref[i] = pref[i - 1] ^ v[i - 1];
    }
    
    vector<ll> suff(n + 2);
    suff[n + 1] = 0;
    
    for (int i = n; i >= 1; i--) {
      suff[i] = suff[i + 1] ^ v[i - 1];
    }
    
    int ans = 0;
    
    for (int i = 1; i <= n - 1; i++) {
      if (pref[i] == suff[i + 1]) {
        ans = 1;
        break;
      }
    }
    
    if (ans) {
      cout << "YES\n";
      continue;
    } else if (d == 0 && ans == 0) {
      cout << "NO\n";
      continue;
    }
    
    ll k = 0;
    ll c = 0;
    
    for (int i = 0; i < n; i++) {
      k ^= v[i];
      
      if (k == d) {
        k = 0;
        c++;
      }
    }
    
    if (k == 0 && c >= 3) {
      cout << "YES\n";
    } else {
      cout << "NO\n";
    }
  }
  
  return 0;
}