#include <iostream>
#include <vector>
#include <cmath>

typedef long long int ll;

std::vector<ll> sieve(int n) {
  std::vector<bool> isPrime(n + 1, true);
  std::vector<ll> primes;

  for (int i = 2; i * i <= n; i++) {
    if (isPrime[i]) {
      for (int j = i * i; j <= n; j += i) {
        isPrime[j] = false;
      }
    }
  }

  for (int i = 2; i <= n; i++) {
    if (isPrime[i]) {
      primes.push_back(i);
    }
  }

  return primes;
}

int main() {
  int t;
  std::cin >> t;

  while (t--) {
    int n;
    std::cin >> n;

    std::vector<ll> v(n);
    ll d = 0;

    for (int i = 0; i < n; i++) {
      std::cin >> v[i];
      d ^= v[i];
    }

    std::vector<ll> pref(n + 1, 0);
    for (int i = 1; i <= n; i++) {
      pref[i] = pref[i - 1] ^ v[i - 1];
    }

    std::vector<ll> suff(n + 2, 0);
    for (int i = n; i >= 1; i--) {
      suff[i] = suff[i + 1] ^ v[i - 1];
    }

    int ans = 0;
    for (int i = 1; i <= n - 1; i++) {
      if (pref[i] == suff[i + 1]) {
        ans = 1;
        break;
      }
    }

    if (d == 0 && ans == 0) {
      std::cout << "NO" << std::endl;
      continue;
    }

    ll k = 0;
    ll c = 0;
    for (int i = 0; i < n; i++) {
      k ^= v[i];
      if (k == d) {
        k = 0;
        c++;
      }
    }

    if (k == 0 && c >= 3) {
      std::cout << "YES" << std::endl;
    } else {
      std::cout << "NO" << std::endl;
    }
  }

  return 0;
}