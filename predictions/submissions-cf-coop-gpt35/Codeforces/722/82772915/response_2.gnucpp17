#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>
#include <cmath>
using namespace std;

typedef long long ll;

void run() {
    int n;
    scanf("%d", &n);
    
    vector<ll> a(n), q(n), sum(n), fk(n);
    for (int i = 0; i < n; ++i) {
        scanf("%lld", &a[i]);
        sum[i] = a[i];
    }
    
    vector<int> vis(n, 0), par(n, -1);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &q[i]);
    }
    
    ll ans = 0;
    for (int i = n - 1; i >= 0; --i) {
        fk[i] = ans;
        vis[q[i]] = 1;
        ans = max(ans, a[q[i]]);
        if (vis[q[i] - 1]) {
            int x = q[i];
            int y = q[i] - 1;
            while (par[x] >= 0) {
                x = par[x];
            }
            while (par[y] >= 0) {
                y = par[y];
            }
            if (x != y) {
                ans = max(ans, sum[x] + sum[y]);
                if (par[y] < par[x]) {
                    swap(x, y);
                }
                par[x] += par[y];
                par[y] = x;
                sum[x] += sum[y];
            }
        }
        if (vis[q[i] + 1]) {
            int x = q[i];
            int y = q[i] + 1;
            while (par[x] >= 0) {
                x = par[x];
            }
            while (par[y] >= 0) {
                y = par[y];
            }
            if (x != y) {
                ans = max(ans, sum[x] + sum[y]);
                if (par[y] < par[x]) {
                    swap(x, y);
                }
                par[x] += par[y];
                par[y] = x;
                sum[x] += sum[y];
            }
        }
    }
    
    for (int i = 0; i < n; ++i) {
        printf("%lld\n", fk[i]);
    }
}

int main() {
    int tc = 1;
    for (int i = 0; i < tc; ++i) {
        run();
    }
    return 0;
}