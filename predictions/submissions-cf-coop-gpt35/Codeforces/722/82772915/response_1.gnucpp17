#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

const int N = 5e5 + 7;

int ans, a[N], sum[N], fk[N], q[N];
int siz[N], par[N];

int root(int v) {
    if (par[v] < 0) return v;
    return (par[v] = root(par[v]));
}

void merge(int x, int y) {
    if ((x = root(x)) == (y = root(y)))
        return;
    ans = max(ans, sum[x] + sum[y]);
    if (par[y] < par[x])
        swap(x, y);
    par[x] += par[y];
    par[y] = x;
    sum[x] += sum[y];
}

void run() {
    int n;
    cin >> n;
    
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
        sum[i] = a[i];
    }
    
    for (int i = 1; i <= n; ++i) {
        par[i] = -1;
    }
    
    for (int i = 1; i <= n; ++i) {
        cin >> q[i];
    }
    
    for (int i = n; i >= 1; --i) {
        fk[i] = ans;
        ans = max(ans, a[q[i]]);
        if (q[i] > 1 && a[q[i] - 1])
            merge(q[i], q[i] - 1);
        if (q[i] < n && a[q[i] + 1])
            merge(q[i], q[i] + 1);
    }
    
    for (int i = 1; i <= n; ++i) {
        cout << fk[i] << endl;
    }
}

int main() {
    int tc = 1;
    
    for (int i = 0; i < tc; ++i) {
        run();
    }
    
    return 0;
}