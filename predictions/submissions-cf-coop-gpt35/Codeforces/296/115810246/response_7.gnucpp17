#include <iostream>
#include <vector>
#include <cstring>

using namespace std;

inline void endline() {
    cout << '\n';
}

inline double pi() {
    return 3.14159265359;
}

template<typename T1, typename T2>
inline pair<T1, T2> make_pair(T1 x, T2 y) {
    return {x, y};
}

template<typename T>
inline void push_back(vector<T>& v, T val) {
    v.push_back(val);
}

template<typename T>
inline auto all(const T& v) {
    return v.begin(), v.end();
}

template<typename T>
inline int size(const T& v) {
    return v.size();
}

template<typename T>
inline void clear(T& v, int d) {
    memset(v, d, sizeof(v));
}

void INPUT() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
}

void OUTPUT() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

int main() {
    INPUT();
    OUTPUT();
    int n, m, k;
    cin >> n >> m >> k;
    vector<ll> arr(n);
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    vector<ll> a(m), b(m), c(m), op(m), ans(n);
    for (int i = 0; i < m; i++) {
        cin >> a[i] >> b[i] >> c[i];
    }
    for (int i = 0; i < k; i++) {
        int x, y;
        cin >> x >> y;
        op[x - 1]++;
        op[y]--;
    }
    for (int i = 1; i < m; i++) {
        op[i] += op[i - 1];
    }
    for (int i = 0; i < m; i++) {
        ans[a[i] - 1] += op[i] * c[i];
        ans[b[i]] -= op[i] * c[i];
    }
    cout << ans[0] + arr[0] << " ";
    for (int i = 1; i < n; i++) {
        ans[i] += ans[i - 1];
        cout << ans[i] + arr[i] << " ";
    }
    cout << '\n';
    return 0;
}