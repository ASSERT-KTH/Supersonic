#include <iostream>
#include <vector>

using namespace std;

int expo(int base, int exponent, int mod) {
  int ans = 1;
  base %= mod;
  int baseSquare = (base * base) % mod;
  while (exponent != 0) {
    if (exponent & 1)
      ans = (1LL * ans * base) % mod;
    base = baseSquare;
    exponent >>= 1;
  }
  return ans;
}

int inverse(int x, int mod) {
  return expo(x, mod - 2, mod);
}

void solve() {
  int n, t;
  cin >> n >> t;
  vector<int> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }
  vector<int> result;
  int r = 1;
  for (int i = 0; i < n; i++) {
    if (2 * a[i] < t) {
      result.push_back(0);
    } else {
      result.push_back(r);
      r = 1 - r;
    }
  }
  for (int i = 0; i < n; i++) {
    cout << result[i] << " ";
  }
  cout << endl;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  int t;
  cin >> t;
  while (t--) {
    solve();
  }
  return 0;
}