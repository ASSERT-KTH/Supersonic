#include <iostream>
#include <vector>
#include <sstream>

typedef long long int64_t;

int64_t expo(int64_t base, int64_t exponent, int64_t mod) {
  int64_t ans = 1;
  base %= mod;
  while (exponent != 0) {
    if (exponent & 1)
      ans = (1LL * ans * base) % mod;
    base = (1LL * base * base) % mod;
    exponent >>= 1;
  }
  return ans % mod;
}

int64_t inverse(int64_t x) {
  return expo(x, hell - 2, hell);
}

void solve() {
  int n, t;
  std::cin >> n >> t;
  std::vector<int> a(n);
  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
  }
  int curMid = 1;
  std::stringstream output;
  for (int i = 0; i < n; i++) {
    int r;
    if (t % 2 == 0) {
      if (a[i] == t / 2)
        r = curMid++ % 2;
      else if (2 * a[i] < t)
        r = 0;
      else
        r = 1;
    } else {
      if (2 * a[i] < t)
        r = 0;
      else
        r = 1;
    }
    output << r << " ";
  }
  output << "\n";
  std::cout << output.str();
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  int t = 1;
  std::cin >> t;
  while (t--) {
    solve();
  }
}