#include <iostream>
#include <vector>

using namespace std;

int expo(int base, int exponent, int mod = 1000000007) {
  int ans = 1;
  base %= mod;
  while (exponent != 0) {
    if (exponent & 1)
      ans = (1LL * ans * base) % mod;
    base = (1LL * base * base) % mod;
    exponent >>= 1;
  }
  return ans;
}

int inverse(int x) {
  return expo(x, 1000000007 - 2);
}

void solve() {
  int n, t;
  cin >> n >> t;
  vector<int> a;
  a.reserve(n);
  for (int i = 0; i < n; i++) {
    int value;
    cin >> value;
    a.emplace_back(value);
  }
  vector<int> output;
  output.reserve(n);
  for (int i = 0; i < n; i++) {
    int r = (2 * a[i] >= t) ? 1 : 0;
    output.emplace_back(r);
  }
  vector<int> result;
  result.reserve(n);
  result.emplace_back(output.begin(), output.end());
  for (int i = 0; i < n; i++) {
    cout << result[i] << " ";
  }
  cout << endl;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  int t = 1;
  cin >> t;
  while (t--) {
    solve();
  }
}