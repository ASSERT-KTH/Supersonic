#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")
#include <bits/stdc++.h>
using namespace std;

#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define int long long

int combination(int n, int r) {
    int res = 1;
    for (int i = 1; i <= r; i++) {
        res *= (n - i + 1);
        res /= i;
    }
    return res;
}

void solve() {
    string a, b;
    cin >> a >> b;
    int apos = count(a.begin(), a.end(), '+') - count(a.begin(), a.end(), '-');
    int r = count(b.begin(), b.end(), '+') - count(b.begin(), b.end(), '-');
    int amb = count(b.begin(), b.end(), '?');
    int diff = apos - r;
    if (amb == 0 and diff == 0) {
        cout << 1 << endl;
        return;
    } else if (amb == 0 and diff != 0) {
        cout << 0 << endl;
        return;
    }
    int u = (amb + diff) >> 1;
    int v = amb - (amb + diff) >> 1;
    if ((amb + diff) & 1 or u < 0 or v < 0) {
        cout << 0 << endl;
        return;
    }
    int q = 1 << amb;
    int p = combination(amb, u);
    double prob = (double)p / q;
    cout << fixed << setprecision(15) << prob << endl;
}

int32_t main() {
    fastio
    int t = 1;
    while (t--) {
        solve();
    }
    return 0;
}