#include <iostream>
#include <cmath>
#include <bitset>

using namespace std;

#define ll long long
#define endl "\n"
#define MOD 1000000007

ll powerHelper(ll a_power, ll b_power, ll mod) {
  if (b_power == 0) {
    return 1;
  }
  ll result_power = powerHelper(a_power, b_power / 2, mod);
  result_power = (result_power * result_power) % mod;
  if (b_power % 2 == 1) {
    result_power = (result_power * a_power) % mod;
  }
  return result_power;
}

ll power(ll a_power, ll b_power) {
  return powerHelper(a_power, b_power, MOD);
}

void sieve(ll maxPrime) {
  bitset<1000001> isPrime;
  isPrime.set();
  isPrime[0] = isPrime[1] = 0;
  for (ll i = 2; i * i <= maxPrime; i++) {
    if (isPrime[i]) {
      for (ll j = i * i; j <= maxPrime; j += 2 * i) {
        isPrime[j] = 0;
      }
    }
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(0);

  ll n, a;
  cin >> n;
  sieve(1000000);
  for (ll i = 0; i < n; i++) {
    cin >> a;
    ll trex = sqrt(a);
    if (trex * trex == a && isPrime[trex]) {
      cout << "YES" << endl;
    } else {
      cout << "NO" << endl;
    }
  }
  return 0;
}