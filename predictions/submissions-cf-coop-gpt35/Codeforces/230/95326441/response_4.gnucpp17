#include <iostream>
#include <cmath>
#include <cstring>

#define ll long long

void sieve(ll maxPrime) {
  bool isPrime[maxPrime+1];
  std::memset(isPrime, true, sizeof(isPrime));
  isPrime[0] = isPrime[1] = false;
  
  for (ll i = 2; i <= std::sqrt(maxPrime); i++) {
    if (isPrime[i]) {
      for (ll j = i * i; j <= maxPrime; j += i) {
        isPrime[j] = false;
      }
    }
  }
}

ll power(ll a_power, ll b_power) {
  ll result_power = 1;
  while (b_power > 0) {
    if (b_power & 1) {
      result_power *= a_power;
    }
    a_power *= a_power;
    b_power /= 2;
  }
  return result_power;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(0);
  
  ll n, a;
  std::cin >> n;
  
  sieve(1000000);
  
  ll trex;
  for (ll i = 0; i < n; i++) {
    std::cin >> a;
    trex = std::sqrt(a);
    ll crex = trex * trex;
    if (a == crex) {
      if (isPrime[trex]) {
        std::cout << "YES\n";
      } else {
        std::cout << "NO\n";
      }
    } else {
      std::cout << "NO\n";
    }
  }
  
  return 0;
}