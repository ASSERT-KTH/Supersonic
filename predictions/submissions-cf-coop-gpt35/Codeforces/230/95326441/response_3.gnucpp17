#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

#define ll long long
#define MOD 1000000007

vector<bool> isPrime;

ll power(ll a_power, ll b_power) {
  ll result_power = 1;
  while (b_power > 0) {
    if (b_power & 1) {
      result_power = (result_power * a_power) % MOD;
    }
    a_power = (a_power * a_power) % MOD;
    b_power /= 2;
  }
  return result_power;
}

void sieve(ll maxPrime) {
  isPrime.resize(maxPrime + 1, true);
  isPrime[0] = isPrime[1] = false;
  for (ll i = 2; i * i <= maxPrime; i++) {
    if (isPrime[i]) {
      for (ll j = i * i; j <= maxPrime; j += i) {
        isPrime[j] = false;
      }
    }
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(0);

  ll n;
  cin >> n;

  sieve(1000000);

  for (ll i = 0; i < n; i++) {
    ll a;
    cin >> a;
    ll trex = sqrt(a);
    if (trex * trex == a && isPrime[trex]) {
      cout << "YES\n";
    } else {
      cout << "NO\n";
    }
  }

  return 0;
}