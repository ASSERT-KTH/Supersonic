#include <iostream>
#include <vector>
#include <cmath>
#include <unordered_map>

using namespace std;

void SPF(unordered_map<int, int>& spf) {
  spf[0] = spf[1] = -1;
  for (int i = 2; i < 1000001; ++i)
    spf[i] = i;
  for (int i = 2; i * i < 1000001; ++i) {
    if (spf[i] == i) {
      for (int j = i; j * i < 1000001; ++j)
        spf[i * j] = i;
    }
  }
}

int main() {
  unordered_map<int, int> spf;
  SPF(spf);
  
  int n;
  cin >> n;
  
  vector<ll> ans(n, 0);
  
  for (int t = 0; t < n; ++t) {
    ll a;
    cin >> a;
    
    if (a != 1 && spf[a] == a && spf[sqrt(a)] == sqrt(a))
      ans[t] = 1;
  }
  
  for (int t = 0; t < n; ++t) {
    if (ans[t] == 1)
      cout << "YES" << endl;
    else
      cout << "NO" << endl;
  }
  
  return 0;
}