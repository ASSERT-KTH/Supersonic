#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

void SPF(vector<int>& spf) {
  int n = spf.size();
  spf[0] = spf[1] = -1;
  
  for (int i = 2; i < n; ++i) {
    spf[i] = i;
  }
  
  for (int i = 2; i * i < n; ++i) {
    if (spf[i] == i) {
      for (int j = i; j * i < n; ++j) {
        if (spf[i * j] == i * j) {
          spf[i * j] = i;
        }
      }
    }
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int n;
  cin >> n;
  
  vector<int> spf(1000001);
  SPF(spf);
  
  for (int t = 0; t < n; ++t) {
    int a;
    cin >> a;
    
    int root = sqrt(a);
    if (a != 1 && root * root == a && spf[root] == root) {
      cout << "YES\n";
    } else {
      cout << "NO\n";
    }
  }
  
  return 0;
}