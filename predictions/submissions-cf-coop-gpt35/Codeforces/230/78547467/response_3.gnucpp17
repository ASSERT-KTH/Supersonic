#include <iostream>
#include <cmath>
using namespace std;

const int MAXN = 1000001;
int spf[MAXN];

void SPF() {
  spf[0] = spf[1] = -1;
  for (int i = 2; i < MAXN; ++i) {
    if (spf[i] == 0) {
      for (int j = i; j < MAXN; j += i) {
        if (spf[j] == 0) {
          spf[j] = i;
        }
      }
    }
  }
}

bool isPerfectSquareOfPrime(int num) {
  int root = sqrt(num);
  return root * root == num && spf[root] == root;
}

int main() {
  SPF();
  int n;
  cin >> n;
  int countYes = 0, countNo = 0;
  for (int t = 0; t < n; ++t) {
    int a;
    cin >> a;
    if (isPerfectSquareOfPrime(a)) {
      countYes++;
    } else {
      countNo++;
    }
  }
  cout << "YES" << endl;
  for (int t = 0; t < countYes; ++t) {
    cout << "YES" << endl;
  }
  cout << "NO" << endl;
  for (int t = 0; t < countNo; ++t) {
    cout << "NO" << endl;
  }
  return 0;
}