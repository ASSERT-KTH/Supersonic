#include <iostream>
#include <cmath>
#include <vector>

typedef long long ll;
const int mod = 1000000007;

std::vector<bool> ans;

void SPF() {
  int n = 1000001;
  std::vector<int> spf(n);
  for (int i = 2; i < n; ++i)
    spf[i] = i;
  for (int i = 2; i * i < n; ++i) {
    if (spf[i] == i) {
      for (int j = i; j * i < n; ++j)
        spf[i * j] = i;
    }
  }
}

int main() {
  SPF();
  int n;
  std::scanf("%d", &n);
  ans.resize(n, false);
  ll a;
  for (int t = 0; t < n; ++t) {
    std::scanf("%lld", &a);
    ll root = std::sqrt(a);
    if (a != 1 && root * root == a && spf[root] == root)
      ans[t] = true;
  }
  for (int t = 0; t < n; ++t) {
    if (ans[t])
      std::printf("YES\n");
    else
      std::printf("NO\n");
  }
  return 0;
}