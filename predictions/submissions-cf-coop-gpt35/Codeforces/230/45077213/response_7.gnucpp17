#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>
using namespace std;

const int MAX_N = 1000010;

bool flag[MAX_N];

void Prem(vector<int> &k);

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);

  // Disable synchronization with C I/O functions to improve performance

  int n;
  int a;

  vector<int> k;
  k.clear();

  flag[1] = false;

  Prem(k);

  cin >> n;

  for (int i = 0; i < n; i++) {
    cin >> a;

    bool isPerfectSquare = false;
    bool isPrime = false;

    for (int j = 2; j * j <= a; j++) {
      if (j * j == a) {
        isPerfectSquare = true;
        break;
      }
    }

    if (isPerfectSquare && flag[a]) {
      isPrime = true;
    }

    if (isPerfectSquare && isPrime) {
      cout << "YES\n";
    } else {
      cout << "NO\n";
    }
  }

  return 0;
}

void Prem(vector<int> &k) {
  for (int i = 2; i * i < MAX_N; i++) {
    if (flag[i]) {
      k.push_back(i);
      for (int j = i * i; j < MAX_N; j += i) {
        flag[j] = false;
      }
    }
  }
}