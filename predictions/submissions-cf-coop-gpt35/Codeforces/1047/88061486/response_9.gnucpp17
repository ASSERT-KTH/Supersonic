#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <iostream>
#include <queue>
#include <stack>
#include <unordered_map>
#define LL long long
#define maxn 300010
#define M 15000010
using namespace std;

int main() {
  int n;
  scanf("%d", &n);
  
  int a[maxn];
  for (register int i = 0; i < n; i++) {
    scanf("%d", &a[i]);
  }

  // Optimization 1 - GCD calculation
  int g = __gcd(a[0], a[1]);
  for (register int i = 2; i < n; i++) {
    g = __gcd(g, a[i]);
  }

  // Optimization 2 - Using std::unordered_map for counting frequencies
  unordered_map<int, int> frequency;
  for (register int i = 0; i < n; i++) {
    int t = a[i] / g;
    frequency[t]++;
  }

  int maxx = 0, cnt = 0;
  for (auto it = frequency.begin(); it != frequency.end(); ++it) {
    int t = 0;
    for (int j = it->first; j <= maxx; j += it->first) {
      t += frequency[j];
    }
    if (t > cnt) {
      cnt = t;
    }
  }

  if (cnt == 0) {
    printf("-1\n");
  } else {
    printf("%d\n", n - cnt);
  }

  return 0;
}