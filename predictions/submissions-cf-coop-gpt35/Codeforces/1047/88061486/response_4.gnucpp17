#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <iostream>
#include <queue>
#include <stack>
#include <unordered_map>
#include <vector>

#define LL long long
#define maxn 300010
#define M 15000010

using namespace std;

int a[maxn];
unordered_map<int, int> num;
unordered_map<int, int> vis;

int Gcd(int a, int b) {
  return b > 0 ? Gcd(b, a % b) : a;
}

bool isPrime(int n) {
  if (n <= 1) {
    return false;
  }
  for (int i = 2; i * i <= n; i++) {
    if (n % i == 0) {
      return false;
    }
  }
  return true;
}

vector<int> getPrimes(int n) {
  vector<int> primes;
  for (int i = 2; i <= n; i++) {
    if (isPrime(i)) {
      primes.push_back(i);
    }
  }
  return primes;
}

int main() {
  int n, g;
  scanf("%d", &n);
  for (register int i = 0; i < n; i++) {
    scanf("%d", &a[i]);
    if (i == 1) {
      g = Gcd(a[0], a[1]);
    } else if (i > 1) {
      g = Gcd(g, a[i]);
    }
  }
  int maxx = 0, t;
  for (register int i = 0; i < n; i++) {
    t = a[i] / g;
    num[t]++;
    if (t > maxx) {
      maxx = t;
    }
  }
  
  // Compute the list of prime numbers up to maxx
  vector<int> primes = getPrimes(maxx);
  
  int cnt = 0;
  t = 0;
  for (int prime : primes) {
    if (vis[prime] == 0) {
      t = 0;
      for (int j = prime; j <= maxx; j += prime) {
        t += num[j];
        vis[j] = 1;
      }
      if (t > cnt) {
        cnt = t;
      }
    }
  }
  
  if (cnt == 0) {
    printf("-1\n");
  } else {
    printf("%d\n", n - cnt);
  }
  return 0;
}