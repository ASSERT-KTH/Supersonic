#include <vector>
#include <unordered_map>
#include <random>
#include <algorithm>
#include <iostream>
#include <chrono>

using namespace std;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    mt19937_64 rnd(chrono::steady_clock::now().time_since_epoch().count());

    int n;
    cin >> n;

    vector<ll> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }

    int m = n - n / 2;
    ll res = 0;

    for (int _ = 0; _ < 13; _++) {
        ll x = a[rnd() % n];

        vector<int> freq(n, 0);
        for (int i = 0; i < n; i++) {
            freq[__gcd(x, a[i])]++; // Calculate GCD only once for each unique number
        }

        for (int i = 0; i < n; i++) {
            if (freq[a[i]] >= m && a[i] > res) {
                res = a[i];
            }
        }
    }

    cout << res << endl;

    return 0;
}