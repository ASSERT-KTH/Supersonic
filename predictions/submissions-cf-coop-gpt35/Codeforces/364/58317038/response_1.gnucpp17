#include <iostream>
#include <random>
#include <chrono>
#include <vector>
#include <unordered_map>

int main() {
  std::ios_base::sync_with_stdio(0);
  std::cin.tie(0);

  std::random_device rd;
  std::mt19937 gen(rd());

  int n;
  std::cin >> n;
  std::vector<long long> a(n);
  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
  }

  int m = n - n / 2;
  long long res = 0;

  for (int _ = 0; _ < 13; _++) {
    int x = gen() % n;
    long long s, va, vb;
    std::unordered_map<long long, int> d;
    d.max_load_factor(0.1);

    for (int i = 0; i < n; i++) {
      va = a[x], vb = a[i];
      while (vb != 0) {
        s = va;
        va = vb;
        vb = s % vb;
      }
      d[va]++;
    }

    std::unordered_map<long long, int> prefixSum;
    for (const auto& kv : d) {
      prefixSum[kv.first] = kv.second;
    }
    for (const auto& kv : d) {
      prefixSum[kv.first] += prefixSum[kv.first - 1];
    }

    for (const auto& kv : d) {
      int c = prefixSum[kv.first + kv.first] - prefixSum[kv.first - 1];
      if (c >= m && kv.first > res) {
        res = kv.first;
      }
    }
  }

  std::cout << res << std::endl;
  return 0;
}