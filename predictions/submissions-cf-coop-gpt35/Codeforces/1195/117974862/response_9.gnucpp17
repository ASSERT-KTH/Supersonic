#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int maxn = 100005;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n;
    cin >> n;

    vector<int> arr1(n), arr2(n);
    for (int i = 0; i < n; i++) {
        cin >> arr1[i];
    }

    for (int i = 0; i < n; i++) {
        cin >> arr2[i];
    }

    vector<vector<int>> dp(n, vector<int>(3, 0));
    dp[0][0] = 0;

    for (int i = 1; i < n; i++) {
        dp[i][0] = max({dp[i-1][0], dp[i-1][1], dp[i-1][2]});
        dp[i][1] = max(dp[i-1][0] + arr1[i], dp[i-1][2] + arr1[i]);
        dp[i][2] = max(dp[i-1][0] + arr2[i], dp[i-1][1] + arr2[i]);
    }

    int ans = max({dp[n-1][0], dp[n-1][1], dp[n-1][2]});
    cout << ans << "\n";

    return 0;
}