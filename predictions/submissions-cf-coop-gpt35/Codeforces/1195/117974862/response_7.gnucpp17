#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int maxn = 100005;

void solve() {
    int n;
    cin >> n;

    vector<long long> arr1(n), arr2(n);
    for (int i = 0; i < n; i++) {
        cin >> arr1[i];
    }
    for (int i = 0; i < n; i++) {
        cin >> arr2[i];
    }

    vector<vector<long long>> dp(n, vector<long long>(3, 0));

    for (int i = n - 1; i >= 0; i--) {
        dp[i][0] = max({arr1[i] + dp[i + 1][1], arr2[i] + dp[i + 1][2], dp[i + 1][0]});
        dp[i][1] = max(arr2[i] + dp[i + 1][2], dp[i + 1][1]);
        dp[i][2] = max(arr1[i] + dp[i + 1][1], dp[i + 1][2]);
    }

    cout << dp[0][0] << "\n";
}

int main() {
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}