#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  int n, a, b;
  int t;
  t = 1;
  while (t--) {
    std::cin >> n >> a >> b;
    std::string s;
    std::cin >> s;
    
    int seat[100000]; // Use a fixed-size array instead of a vector
    int seatCount = 0; // Track the number of seat blocks
    int z = 0;
    for (int i = 0; i < n; i++) {
      if (s[i] == '*') {
        if (z != 0) {
          seat[seatCount++] = z; // Store the seat block length directly in the array
        }
        z = 0;
      } else {
        z += 1;
      }
    }
    if (z != 0)
      seat[seatCount++] = z;
    
    std::sort(seat, seat + seatCount);
    
    int ans = 0;
    for (int i = seatCount - 1; i >= 0; i--) { // Loop in reverse order
      if (a == 0 && b == 0)
        break;
      int q = seat[i];
      int x, y;
      if (q & 1) {
        x = q / 2;
        y = x + 1;
      } else {
        x = y = q / 2;
      }
      if (a > b) {
        if (a < y) {
          ans += a;
          a = 0;
        } else {
          ans += y;
          a -= y;
        }
        if (b < x) {
          ans += b;
          b = 0;
        } else {
          ans += x;
          b -= x;
        }
      } else {
        if (a < x) {
          ans += a;
          a = 0;
        } else {
          ans += x;
          a -= x;
        }
        if (b < y) {
          ans += b;
          b = 0;
        } else {
          ans += y;
          b -= y;
        }
      }
    }
    std::cout << ans << "\n";
  }
  return 0;
}