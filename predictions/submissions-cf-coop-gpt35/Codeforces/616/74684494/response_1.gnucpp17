#include <algorithm>
#include <iostream>
#include <unordered_map>
#include <stdio.h>
using namespace std;

int n, k;
int x[500000];
unordered_map<int, int> freq; // Use unordered_map for efficient operations
int l, r = 0;
int rf, lf;
int mx = -1;
int c = 0;

int main() {
  scanf("%d%d", &n, &k);
  for (int i = 0; i < n; i++)
    scanf("%d", &x[i]);

  while (r < n) {
    freq[x[r]]++;
    if (freq[x[r]] == 1) {
      c++;
    }
    if (c <= k && r - l + 1 > mx) { // Update maximum subarray length only when necessary
      rf = r;
      lf = l;
      mx = r - l + 1;
    }
    while (c > k) {
      freq[x[l]]--;
      if (freq[x[l]] == 0) {
        c--;
      }
      l += 1 + freq[x[l - 1]]; // Using sliding window approach to optimize inner loop
    }
    r++;
  }

  printf("%d %d", lf + 1, rf + 1);
}