#include <iostream>
#include <fstream>
#include <vector>
using namespace std;

const int N = 2e5 + 15;
const int MOD = 998244353;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    // Use ifstream instead of fin for input file
    ifstream fin("date.in.txt");

    int t;
    fin >> t;
    while (t--) {
        int n, l, r, aux;
        fin >> n >> l >> r;

        // Use vector instead of map to store frequency counts
        vector<int> a(N, 0);
        vector<int> b(N, 0);

        // Variables to keep track of distinct numbers
        int distinct = 0;
        int ans = 0;

        for (int i = 1; i <= n; ++i) {
            fin >> aux;
            if (i <= l) {
                ++a[aux];
                if (a[aux] == 1) {
                    distinct++;
                }
            } else {
                ++b[aux];
                if (b[aux] == 1) {
                    distinct++;
                }
            }
        }

        // Optimize the loop to reduce the number of iterations
        for (int x = 1; x <= distinct; ++x) {
            int elim = min(a[x], b[x]);
            a[x] -= elim;
            l -= elim;
            b[x] -= elim;
            r -= elim;
        }

        if (l < r) {
            swap(l, r);
            swap(a, b);
        }

        // Optimize the loop to reduce the number of iterations
        for (int x = 1; x <= distinct; ++x) {
            int change = min(a[x] / 2 * 2, l - r);
            ans += change / 2;
            l -= change;
        }

        ans += (l - r) / 2 + (l + r) / 2;
        cout << ans << '\n';

        // No need to clear the vectors, as they will be overwritten in the next iteration
    }

    return 0;
}