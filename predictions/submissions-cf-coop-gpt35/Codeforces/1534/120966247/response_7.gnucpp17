#include <cstring>
#include <iostream>
#include <vector>
using namespace std;
#define int long long
const int N = 1e9 + 7;

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    int* a = new int[n + 1];
    int* vis = new int[n + 1];
    vector<int>* e = new vector<int>[n + 1];
    int cnt = 0;

    memset(vis, 0, sizeof(int) * (n + 1));

    for (int i = 1; i <= n; i++) {
      cin >> a[i];
      e[i].clear();
    }

    for (int v, i = 1; i <= n; i++) {
      cin >> v;
      e[a[i]].push_back(v);
    }

    for (int i = 1; i <= n; i++) {
      if (!vis[a[i]]) {
        cnt++;
        vis[a[i]] = 1;
        stack<int> st;
        st.push(a[i]);

        while (!st.empty()) {
          int u = st.top();
          st.pop();

          for (int j = 0; j < e[u].size(); j++) {
            int v = e[u][j];
            if (!vis[v]) {
              vis[v] = 1;
              st.push(v);
            }
          }
        }
      }
    }

    int x = 2, s = 1;
    while (cnt) {
      if (cnt & 1)
        s = s * x % N;
      x = x * x % N;
      cnt >>= 1;
    }

    cout << s << endl;

    delete[] a;
    delete[] vis;
    delete[] e;
  }
  return 0;
}