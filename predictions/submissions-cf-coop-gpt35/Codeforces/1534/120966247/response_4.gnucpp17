#include <cstring>
#include <iostream>
#include <vector>
using namespace std;
#define int long long
const int N = 1e9 + 7;

int t, n, cnt;
int* a;
int* vis;
vector<int>* e;

void dfs(int u) {
  vis[u] = 1;
  for (int v : e[u]) {
    if (!vis[v]) {
      dfs(v);
    }
  }
}

int qmi(int cnt) {
  int x = 2, s = 1;
  while (cnt) {
    if (cnt & 1) {
      s = s * x % N;
    }
    x = x * x % N;
    cnt >>= 1;
  }
  return s % N;
}

signed main() {
  cin >> t;
  while (t--) {
    cin >> n;
    cnt = 0;

    a = new int[n + 1];
    vis = new int[n + 1];
    e = new vector<int>[n + 1];

    for (int i = 1; i <= n; i++) {
      cin >> a[i];
      e[i].clear();
    }

    for (int v, i = 1; i <= n; i++) {
      cin >> v;
      e[a[i]].push_back(v);
    }

    for (int i = 1; i <= n; i++) {
      if (!vis[a[i]]) {
        cnt++;
        dfs(a[i]);
      }
    }

    cout << qmi(cnt) << endl;

    delete[] a;
    delete[] vis;
    delete[] e;
  }
  return 0;
}