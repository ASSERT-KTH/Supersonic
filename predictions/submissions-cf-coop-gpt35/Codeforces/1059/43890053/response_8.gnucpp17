#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <vector>
using namespace std;

typedef long long ll;

const int inf = 0x3f3f3f3f;
const int mod = 1e9 + 7;

bool isOk(double k, const vector<double>& x, const vector<double>& y) {
  double l = -1e17, r = 1e17;
  double tmp = sqrt(k * k - (k - y[0]) * (k - y[0]));
  for (int i = 0; i < x.size(); i++) {
    if (y[i] > k * 2) {
      return false;
    }
    l = max(l, x[i] - tmp);
    r = min(r, x[i] + tmp);
  }
  return l < r;
}

int main() {
  int n;
  scanf("%d", &n);
  vector<double> x(n), y(n);
  for (int i = 0; i < n; i++) {
    scanf("%lf %lf", &x[i], &y[i]);
  }
  bool hasNegativeProduct = false;
  for (int i = 0; i < n; i++) {
    if (y[i] * y[n - 1] < 0) {
      hasNegativeProduct = true;
      break;
    } else {
      y[i] = abs(y[i]);
    }
  }
  if (hasNegativeProduct) {
    printf("-1\n");
    return 0;
  }
  double l = 0, r = 1e17;
  const double threshold = 1e-10;
  double mid = (l + r) / 2.0;
  while (r - l > threshold) {
    mid = (l + r) / 2.0;
    if (isOk(mid, x, y)) {
      r = mid;
    } else {
      l = mid;
    }
  }
  printf("%.10lf\n", mid);

  return 0;
}