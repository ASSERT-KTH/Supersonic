#include <iostream>
#include <cmath>
#include <vector>

long long round(double x) {
  return (x > 0.0) ? static_cast<long long>(x + 0.5) : static_cast<long long>(x - 0.5);
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.precision(20);

  int n;
  std::cin >> n;

  double a[n];
  double tol = 1.e-7;
  int ent = 0;
  double tot = 0.;

  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
    if (a[i] - floor(a[i]) < tol) {
      ent++;
    }
    tot += floor(a[i]);
  }

  long long rem = round(tot);
  std::cerr << "rem " << rem << std::endl;

  for (int i = 0; i < n; i++) {
    double temp = floor(a[i]);
    if (rem < 0 && a[i] - temp > tol) {
      std::cout << round(temp) + 1 << "\n";
      rem++;
    } else {
      std::cout << round(temp) << "\n";
    }
  }
  return 0;
}