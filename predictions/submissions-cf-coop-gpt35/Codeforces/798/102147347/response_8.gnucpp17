#include <iostream>
#include <vector>
using namespace std;

int gcd(int a, int b) {
  while (b != 0) {
    int temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  
  int n;
  cin >> n;
  
  vector<int> a(n + 1);
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
  }
  
  int faust = gcd(a[1], a[2]);
  for (int i = 3; i <= n; i++) {
    faust = gcd(faust, a[i]);
  }
  
  a[n + 1] = 2;
  
  int dp0 = 0;
  int dp1 = 2e9;
  
  if (faust > 1) {
    cout << "YES" << endl;
    cout << 0 << endl;
    return 0;
  }
  
  for (int i = 1; i <= n; i++) {
    if (a[i] % 2 and a[i + 1] % 2) {
      int temp = dp1;
      dp1 = dp0 + 1;
      dp0 = temp;
    } else if (a[i] % 2 and a[i + 1] % 2 == 0) {
      dp1 = dp0 + 2;
    } else if (a[i] % 2 == 0 and a[i + 1] % 2) {
      dp1 = min(dp1 + 2, dp0 + 2);
    }
  }
  
  cout << "YES" << endl;
  cout << dp0 << endl;
  
  return 0;
}