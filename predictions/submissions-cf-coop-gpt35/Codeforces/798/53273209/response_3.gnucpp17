#include <iostream>
#include <vector>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int n;
  cin >> n;

  vector<string> A;
  A.reserve(n); // Preallocate memory for n strings

  for (int i = 0; i < n; i++) {
    string x;
    cin >> x;
    A.push_back(x);
  }

  if (n == 1) {
    cout << 0;
    return 0;
  }

  int ans = 1000001;
  int counter = 0;

  for (size_t i = 1; i < n; i++) {
    int rotations = 0;

    // Find the minimum number of rotations required for A[i] to become equal to A[0]
    for (size_t j = 0; j < A[0].size(); j++) {
      if (A[i][j] < A[0][j]) {
        rotations = A[i].size() - j; // Rotate the string to the right
        break;
      } else if (A[i][j] > A[0][j]) {
        rotations = j; // Rotate the string to the left
        break;
      }
    }

    if (rotations == 0) {
      // A[i] is already equal to A[0], no rotations needed
      continue;
    }

    counter += rotations;

    if (counter > 50) {
      cout << -1;
      return 0;
    }
  }

  cout << counter;
  return 0;
}