#include <iostream>
#include <vector>
#include <numeric>
using namespace std;

const int N = 1e6 + 15;
const int mod = 1000000007;

void solve() {
  int n;
  cin >> n;
  vector<int> dp(N);
  dp[0] = 1;
  for (int i = 1; i <= n; i++) {
    int x;
    cin >> x;
    vector<int> divs;
    for (int j = 1; j * j <= x; j++) {
      if (x % j == 0) {
        divs.push_back(j);
        if (j * j != x)
          divs.push_back(x / j);
      }
    }
    for (auto x : divs) {
      dp[x] += dp[x - 1];
      dp[x] %= mod;
    }
  }
  int ans = accumulate(dp.begin(), dp.begin() + n + 1, 0LL) % mod;
  cout << ans;
}

int main() {
  solve();
  return 0;
}