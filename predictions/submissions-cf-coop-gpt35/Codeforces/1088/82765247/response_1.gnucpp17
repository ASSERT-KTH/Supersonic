#include <iostream>
#include <vector>

void printOperations(const std::vector<std::pair<int, std::pair<int, int>>>& operations) {
    std::cout << operations.size() << "\n";
    for (const auto& operation : operations) {
        std::cout << operation.first << " " << operation.second.first << " " << operation.second.second << "\n";
    }
}

int main() {
    int n;
    std::cin >> n;
    int v[n + 1];

    for (int i = 1; i <= n; i++) {
        std::cin >> v[i];
    }

    std::vector<std::pair<int, std::pair<int, int>>> operations;

    v[0] = -1;
    for (int i = n; i >= 1; i--) {
        if (v[i] > i) {
            int rem = (v[i] - i) % (n + 1);
            operations.push_back({1, {i, n + 1 - rem}});
            int increment = n + 1 - rem;
            for (int j = 1; j <= i; j++) {
                v[j] += increment;
            }
        } else {
            operations.push_back({1, {i, i - v[i]}});
            int increment = i - v[i];
            for (int j = 1; j <= i; j++) {
                v[j] += increment;
            }
        }
    }

    operations.push_back({2, {n, n + 1}});
    printOperations(operations);

    return 0;
}