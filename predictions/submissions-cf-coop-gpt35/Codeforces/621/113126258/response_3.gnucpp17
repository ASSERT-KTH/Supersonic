#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define mod (1000000007)
#define pii pair<int, int>
#define pll pair<long long, long long>
#define N ((int)2e5 + 10)
#define forn(i, n) for (int i = 0; i < n; i++)
#define fio                                                                    \
  ios_base::sync_with_stdio(false);                                            \
  cin.tie(NULL);                                                               \
  cout.tie(NULL);
#define pb push_back
#define ld long double
int main(void) {
  fio int n, p;
  cin >> n >> p;
  
  vector<pll> ar(n); // Use vector instead of array
  ar[-1].first = 1;
  ar[-1].second = 1;
  
  vector<ll> pref(n); // Use vector instead of array
  pref[-1] = 1;
  long double sum = 0;
  
  for (int i = 0; i < n; i++) {
    ll a, b;
    cin >> a >> b;
    ar[i].second = b / p - (a - 1) / p;
    ar[i].first = b - a + 1;
    
    if (i == 0)
      pref[i] = ar[i].first;
    else
      pref[i] = pref[i - 1] * ar[i].first;
  }

  sum += (ld)1 / ar[0].first;
  sum *= 2;
  sum *= ar[0].second;

  // Store repeated calculations in variables
  ld denominator1 = (ld)ar[n - 1].first / (ld)ar[n - 2].first;
  ld denominator2 = (ld)ar[n - 1].first / (ld)ar[0].first;
  ld part1 = (ld)ar[n - 1].second / (ld)ar[n - 1].first;
  ld part2 = (ld)(ar[n - 2].first - ar[n - 2].second);
  ld part3 = (ld)(ar[0].first - ar[0].second);

  sum += part1 / denominator1 * part2;
  sum += part1 / denominator2 * part3;

  for (int i = 1; i < n - 1; i++) {
    // Store repeated calculations in variables
    ld numerator = (ld)ar[i].second;
    ld denominator = (ld)ar[i].first;
    ld part4 = (ld)ar[i - 1].first - ar[i - 1].second;

    sum += numerator / denominator;
    sum += numerator / denominator / ar[i - 1].first * part4;
  }
  
  cout << setprecision(6) << fixed;
  cout << (long double)sum * (long double)2000 << endl;
  
  return 0;
}