#include <iostream>
#include <iomanip>
#include <vector>
using namespace std;

double getAns(int cntC, int cntM, int c, int m, int p, int v, vector<vector<double>>& dp) {
  int n = dp.size();
  int m = dp[0].size();

  for (int i = n - 1; i >= 0; i--) {
    for (int j = m - 1; j >= 0; j--) {
      if (i == n - 1 && j == m - 1) {
        dp[i][j] = 0;
      } else {
        double temp = 0;
        if (i < n - 1) {
          temp += c * dp[i + 1][j];
        }
        if (j < m - 1) {
          temp += m * dp[i][j + 1];
        }
        temp += (cntC + cntM + 1) * p;
        dp[i][j] = temp / (1 - (c < v || m < v));
      }
    }
  }

  return dp[0][0];
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int t;
  cin >> t;

  while (t--) {
    double c, m, p, v;
    cin >> c >> m >> p >> v;

    int nc = c * 10000;
    int nm = m * 10000;
    int nv = v * 10000;
    int mx = (nc + nv - 1) / nv + (nc + nm + nv - 1) / nv + 1;
    int mc = (nc + nm + nv - 1) / nv;

    vector<vector<double>> dp(mx, vector<double>(mc, -1));

    cout << setprecision(15) << getAns(0, 0, nc, nm, p, nv, dp) << endl;
  }

  return 0;
}