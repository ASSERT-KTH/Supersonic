#include <bits/stdc++.h>
using namespace std;

int dp[1005][1005][1005];

int calculateAnswer(int c, int m, int p, int v) {
  if (c <= 0 && m <= 0) {
    return c + m + 1;
  }

  if (dp[c][m][0] != -1) {
    return dp[c][m][0];
  }

  int temp = 0;

  if (c > 0 && m > 0) {
    temp += c * calculateAnswer(c - v, m + min(c / 2, v / 2), p + min(c / 2, v / 2), v) +
            m * calculateAnswer(c + min(m / 2, v / 2), m - v, p + min(m / 2, v / 2), v) +
            (c + m + 1) * p;
  } else if (c > 0) {
    temp += c * calculateAnswer(c - v, m, p + min(c, v), v) +
            (c + m + 1) * p;
  } else {
    temp += m * calculateAnswer(c, m - v, p + min(m, v), v) +
            (c + m + 1) * p;
  }

  dp[c][m][0] = temp;
  return temp;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int t;
  cin >> t;

  while (t--) {
    int c, m, p, v;
    cin >> c >> m >> p >> v;

    memset(dp, -1, sizeof(dp));

    cout << calculateAnswer(c, m, p, v) << endl;
  }

  return 0;
}