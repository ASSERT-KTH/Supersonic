#include <iostream>
#include <iomanip>
#include <vector>

using namespace std;

const double eps = 1e-14;
vector<vector<double>> dp(1005, vector<double>(1005, -1));

double getAns(int cntC, int cntM, double c, double m, double p, double v) {
  if (c <= eps && m <= eps) {
    return (double)(cntC + cntM + 1);
  }

  if (dp[cntC][cntM] != -1) {
    return dp[cntC][cntM];
  }

  double temp = 0;
  if (c > eps && m > eps) {
    temp += c * getAns(cntC + 1, cntM, c - v, m + min(c / 2, v / 2),
                       p + min(c / 2, v / 2), v) +
            m * getAns(cntC, cntM + 1, c + min(m / 2, v / 2), m - v,
                       p + min(m / 2, v / 2), v) +
            (cntC + cntM + 1) * p;
  } else if (c > eps) {
    temp += c * getAns(cntC + 1, cntM, c - v, m, p + min(c, v), v) +
            (cntC + cntM + 1) * p;
  } else {
    temp += m * getAns(cntC, cntM + 1, c, m - v, p + min(m, v), v) +
            (cntC + cntM + 1) * p;
  }

  dp[cntC][cntM] = temp;
  return temp;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int t;
  cin >> t;

  while (t--) {
    double c, m, p, v;
    cin >> c >> m >> p >> v;

    cout << getAns(0, 0, c, m, p, v) << "\n";
  }

  return 0;
}