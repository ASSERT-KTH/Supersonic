#include <iostream>
#include <array>
#include <unordered_map>
#include <algorithm>

void solve() {
  std::string s;
  std::cin >> s;
  
  std::array<int, 10> a{};
  for (char c : s) {
    ++a[c - '0'];
  }
  
  int cr_h = *std::max_element(a.begin(), a.end());
  
  for (int i = 0; i < 10; ++i) {
    std::unordered_map<int, int> digitCount;
    for (int j = 0; j < 10; ++j) {
      int koita = 0;
      int ekhn_ache = i;
      for (char c : s) {
        if (c - '0' == ekhn_ache) {
          ++koita;
          ekhn_ache = i + j - ekhn_ache;
        }
      }
      if (koita % 2 == 1) {
        --koita;
      }
      cr_h = std::max(cr_h, koita);
    }
  }
  
  std::cout << s.size() - cr_h << '\n';
}

int main() {
  int t;
  std::cin >> t;
  while (t--) {
    solve();
  }
  return 0;
}