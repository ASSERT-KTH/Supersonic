#include <iostream>
#include <cstring>
using namespace std;

#define MAX_N 100005

long long int f(int i, int k, int z, int n, int arr[], long long int dp[]) {
  if (k == 0 || i < 0)
    return 0;
  
  long long int left = 0;
  long long int right = 0;
  
  if (z > 0 && i > 0) {
    left = f(i - 1, k - 1, z - 1, n, arr, dp);
  }
  
  right = f(i + 1, k - 1, z, n, arr, dp);
  
  dp[i] = arr[i] + max(left, right);
  
  return dp[i];
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int t;
  cin >> t;
  
  while (t--) {
    int n, k, z;
    cin >> n >> k >> z;
    
    long long int ans = 0;
    int arr[MAX_N];
    long long int dp[MAX_N] = {0};
    
    for (int i = 0; i < n; i++) {
      cin >> arr[i];
    }
    
    ans = arr[0] + f(1, k, z, n, arr, dp);
    
    cout << ans << endl;
  }
  
  return 0;
}