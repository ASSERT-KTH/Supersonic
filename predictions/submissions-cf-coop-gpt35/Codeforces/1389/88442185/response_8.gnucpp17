#include <iostream>
#include <cstring>
#include <vector>

long long int calculateMaxSum(int i, int k, int z, std::vector<int>& arr, std::vector<long long int>& dp) {
  if (k == 0 || i < 0)
    return 0;

  if (dp[i])
    return dp[i];

  long long int left = 0;
  long long int right = 0;

  if (z) {
    left = calculateMaxSum(i - 1, k - 1, z - 1, arr, dp);
  }

  right = calculateMaxSum(i + 1, k - 1, z, arr, dp);

  dp[i] = arr[i] + std::max(left, right);

  return dp[i];
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int t;
  std::cin >> t;

  while (t--) {
    int n, k, z;
    std::cin >> n >> k >> z;

    std::vector<long long int> dp(n);
    std::vector<int> arr(n);

    for (int i = 0; i < n; i++) {
      std::cin >> arr[i];
    }

    long long int ans = arr[0] + calculateMaxSum(1, k, z, arr, dp);

    std::cout << ans << std::endl;
  }

  return 0;
}