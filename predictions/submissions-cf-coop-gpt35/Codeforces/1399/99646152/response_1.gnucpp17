#include <iostream>
#include <vector>
using namespace std;

typedef long long int ll;

ll binpow(ll a, ll b) {
  ll res = 1;
  while (b > 0) {
    if (b % 2 == 1)
      res = res * a;
    a = a * a;
    b /= 2;
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int tc;
  cin >> tc;
  while (tc--) {
    int n;
    cin >> n;
    vector<ll> a(n), b(n);
    for (int i = 0; i < n; i++)
      cin >> a[i];
    for (int i = 0; i < n; i++)
      cin >> b[i];

    ll ma = *min_element(a.begin(), a.end());
    ll mo = *min_element(b.begin(), b.end());

    ll ans = 0;
    for (int i = 0; i < n; i++) {
      if (a[i] > ma && b[i] > mo) {
        ll x = min(a[i] - ma, b[i] - mo);
        a[i] -= x;
        b[i] -= x;
        ans += x;
        if (a[i] > ma)
          ans += a[i] - ma;
        else
          ans += b[i] - mo;
      } else if (a[i] > ma) {
        ans += a[i] - ma;
      } else if (b[i] > mo) {
        ans += b[i] - mo;
      }
    }
    
    cout << ans << "\n";
  }
  return 0;
}