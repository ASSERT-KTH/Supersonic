#include <iostream>
#include <unordered_map>
#include <vector>

typedef long long int ll;

void solve() {
  ll n;
  std::cin >> n;

  std::unordered_map<ll, std::vector<ll>> m;
  for (ll i = 0; i < n; i++) {
    ll val;
    std::cin >> val;
    m[val].push_back(i + 1);
  }

  ll minres = LLONG_MAX;
  for (const auto& x : m) {
    const std::vector<ll>& v = x.second;
    if (v.size() > 1) {
      ll maxDiff = v[1] - v[0] + 1;
      for (size_t i = 2; i < v.size(); i++) {
        ll diff = v[i] - v[i - 1] + 1;
        maxDiff = std::max(maxDiff, diff);
      }
      minres = std::min(minres, maxDiff);
    }
  }

  if (minres == LLONG_MAX) {
    std::cout << -1 << std::endl;
  } else {
    std::cout << minres << std::endl;
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int t;
  std::cin >> t;
  while (t--) {
    solve();
  }

  return 0;
}