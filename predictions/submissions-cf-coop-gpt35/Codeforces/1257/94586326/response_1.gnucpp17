#include <iostream>
#include <vector>
#include <map>
#include <limits>

using namespace std;

void solve() {
  int n;
  cin >> n;

  map<int, vector<int>> m;
  m.reserve(n); // Preallocate memory for the map

  for (int i = 0; i < n; i++) {
    int val;
    cin >> val;
    m[val].emplace_back(i + 1); // Use emplace_back instead of push_back
  }

  int minres = numeric_limits<int>::max();

  for (const auto& x : m) {
    const vector<int>& v = x.second;
    int size = v.size();

    for (int i = 1; i < size; i++) {
      minres = min(minres, v[i] - v[i - 1] + 1);
    }
  }

  if (minres == numeric_limits<int>::max()) {
    cout << -1 << endl;
  } else {
    cout << minres << endl;
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int t;
  cin >> t;

  while (t--) {
    solve();
  }

  return 0;
}