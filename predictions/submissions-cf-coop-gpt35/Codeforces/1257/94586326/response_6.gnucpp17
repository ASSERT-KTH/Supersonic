#include <iostream>
#include <vector>
using namespace std;

typedef long long int ll;

void solve() {
  ll n;
  cin >> n;
  vector<vector<ll>> m(n);
  for (int i = 0; i < n; i++) {
    ll val;
    cin >> val;
    m[val].emplace_back(i + 1);
  }
  ll minres = n + 1;
  for (auto x : m) {
    vector<ll> v = x;
    if (v.size() >= 2) {
      for (int i = 1; i < v.size(); i++) {
        if ((v[i] - v[i - 1]) > 0) {
          minres = min(minres, v[i] - v[i - 1] + 1);
        }
      }
    }
  }
  if (minres == n + 1) {
    cout << -1 << '\n';
  } else {
    cout << minres << '\n';
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    solve();
  }
}