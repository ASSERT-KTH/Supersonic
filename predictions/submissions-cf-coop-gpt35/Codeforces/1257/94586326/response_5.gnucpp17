#include <iostream>
#include <vector>
#include <map>

typedef long long int ll;

void solve() {
  ll n;
  std::cin >> n;
  std::map<ll, std::vector<ll>> m;
  m.reserve(n);
  for (ll i = 0; i < n; i++) {
    ll val;
    std::cin >> val;
    m[val].emplace_back(i + 1);
  }
  ll minres = LLONG_MAX;
  for (const auto& x : m) {
    const std::vector<ll>& v = x.second;
    if (v.size() > 1) {
      int size = v.size();
      for (int i = 1; i < size; i++) {
        minres = std::min(minres, v[i] - v[i - 1] + 1);
      }
    }
  }
  if (minres == LLONG_MAX) {
    std::cout << -1 << '\n';
  } else {
    std::cout << minres << '\n';
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  int t;
  std::cin >> t;
  while (t--) {
    solve();
  }
}