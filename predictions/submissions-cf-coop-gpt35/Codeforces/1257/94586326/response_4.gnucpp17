#include <iostream>
#include <vector>
#include <limits>
using namespace std;

void solve() {
  long long int n;
  cin >> n;
  
  vector<vector<long long int>> positions(n + 1);
  for (long long int i = 1; i <= n; i++) {
    long long int val;
    cin >> val;
    positions[val].push_back(i);
  }
  
  long long int minres = -1;
  for (auto& v : positions) {
    if (v.size() > 1) {
      for (size_t i = 1; i < v.size(); i++) {
        minres = (minres == -1) ? (v[i] - v[i - 1] + 1) : min(minres, v[i] - v[i - 1] + 1);
      }
    }
  }
  
  cout << minres << '\n';
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int t;
  cin >> t;
  while (t--) {
    solve();
  }
  
  return 0;
}