#include <iostream>
#include <algorithm>

const int MAX_SIZE = 2001;

int n[MAX_SIZE], m[MAX_SIZE];

int main() {
  int N, M, x;
  std::cin >> N >> M;

  for (int i = 1; i <= N; i++) {
    std::cin >> n[i];
    n[i] += n[i - 1];
  }

  for (int j = 1; j <= M; j++) {
    std::cin >> m[j];
    m[j] += m[j - 1];
  }

  std::cin >> x;

  int ans = 0;

  for (int n_i = 1; n_i <= N; n_i++) {
    int min_m = 1;
    int max_m = M;

    while (min_m <= max_m) {
      int mid_m = (min_m + max_m) / 2;

      int s_n = n[n_i] - n[n_i - n_i];
      int s_m = m[mid_m] - m[mid_m - mid_m];

      if (s_m * s_n <= x) {
        ans = std::max(ans, mid_m * n_i);
        min_m = mid_m + 1;
      } else {
        max_m = mid_m - 1;
      }
    }
  }

  std::cout << ans;

  return 0;
}