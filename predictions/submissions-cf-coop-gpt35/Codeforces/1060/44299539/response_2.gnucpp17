#include <iostream>
#include <algorithm>

using namespace std;

int main() {
    int N, M, x;
    cin >> N >> M;
    
    int n[N+1], m[M+1];
    n[0] = 0;
    m[0] = 0;
    
    for (int i = 1; i <= N; i++) {
        int t;
        cin >> t;
        n[i] = t + n[i - 1];
    }
    
    for (int j = 1; j <= M; j++) {
        int t;
        cin >> t;
        m[j] = t + m[j - 1];
    }
    
    cin >> x;
    
    int ans = 0;
    
    for (int n_i = 1; n_i <= N; n_i++) {
        int min_m = 1;
        int max_m = M;
        
        while (min_m <= max_m) {
            int mid_m = (min_m + max_m) / 2;
            
            int s_n = 1e9;
            for (int i = n_i; i <= N; i++) {
                s_n = min(s_n, n[i] - n[i - n_i]);
            }
            
            int s_m = 1e9;
            for (int i = mid_m; i <= M; i++) {
                s_m = min(s_m, m[i] - m[i - mid_m]);
            }
            
            if (s_m * s_n <= x) {
                ans = max(ans, mid_m * n_i);
                min_m = mid_m + 1;
            } else {
                max_m = mid_m - 1;
            }
        }
    }
    
    cout << ans;
    
    return 0;
}