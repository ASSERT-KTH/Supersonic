#include <iostream>
#include <vector>

int main() {
  std::ios_base::sync_with_stdio(false);

  int N, M;
  std::cin >> N >> M;

  std::vector<int> n(N + 1), m(M + 1);
  for (int i = 1; i <= N; i++) {
    int t;
    std::cin >> t;
    n[i] = t + n[i - 1];
  }
  for (int j = 1; j <= M; j++) {
    int t;
    std::cin >> t;
    m[j] = t + m[j - 1];
  }

  int x;
  std::cin >> x;

  std::vector<int> min_row_sum(N + 1);
  for (int i = 1; i <= N; i++) {
    int min_sum = INT_MAX;
    for (int j = i; j <= N; j++) {
      min_sum = std::min(min_sum, n[j] - n[j - i]);
      min_row_sum[j] = min_sum;
    }
  }

  int ans = 0;
  for (int n_i = 1; n_i <= N; n_i++) {
    int min_col_sum = INT_MAX;
    for (int mid_m = 1; mid_m <= M; mid_m++) {
      int s_n = min_row_sum[N] - min_row_sum[N - n_i];
      int s_m = m[mid_m] - m[mid_m - 1];
      min_col_sum = std::min(min_col_sum, s_m);
      if (s_m * s_n <= x) {
        ans = std::max(ans, mid_m * n_i);
      } else {
        break;
      }
    }
  }

  std::cout << ans;

  return 0;
}