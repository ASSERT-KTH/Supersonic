#include <bits/stdc++.h>
using namespace std;

int main() {
  int n, m;
  cin >> n >> m;
  
  unordered_map<string, string> mp; // Optimization 1: Use unordered_map for O(1) average case time complexity
  
  vector<string> v(m);
  for (int i = 0; i < m; i++) {
    string x, y;
    cin >> x >> y;
    
    // Optimization 2: Calculate the lengths of x and y outside the loop
    int lenX = x.length();
    int lenY = y.length();
    
    if (lenX <= lenY) {
      mp[x] = x;
    } else {
      mp[x] = y;
    }
    v[i] = x;
  }
  
  unordered_map<string, string> vMap; // Optimization 3: Use unordered_map to store v strings
  
  for (const auto& x : v) { // Optimization 3: Use range-based for loop
    vMap[x] = mp[x];
  }
  
  for (int i = 0; i < n; i++) {
    string z;
    cin >> z;
    
    // Optimization 4: Use unordered_map vMap for O(1) average case time complexity lookup
    cout << vMap[z] << " ";
  }
  
  return 0;
}