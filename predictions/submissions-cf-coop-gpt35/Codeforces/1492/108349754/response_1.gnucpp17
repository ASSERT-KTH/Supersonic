#include <iostream>
#include <string>
#include <algorithm>
using namespace std;

int main() {
  int n, m;
  string s, t;
  cin >> n >> m >> s >> t;

  int ans = 0;
  int p1 = 0, p2 = 0;
  while (p1 < m) {
    p2 = s.find(t[p1], p2);
    if (p2 == string::npos) break;
    pos[p1++] = p2++;
  }

  p1 = 0, p2 = n - 1;
  while (p1 < m) {
    p2 = s.rfind(t[p1], p2);
    if (p2 == string::npos) break;
    pos2[p1++] = p2--;
  }

  auto max_pos = max_element(pos, pos + m - 1);
  auto min_pos2 = min_element(pos2, pos2 + m - 1);

  ans = max(ans, *max_pos - *min_pos2);

  cout << ans;
  return 0;
}