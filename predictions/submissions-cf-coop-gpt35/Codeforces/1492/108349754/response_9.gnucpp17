#include <iostream>
#include <string>
using namespace std;

int main() {
  int n, m;
  string s, t;
  cin >> n >> m >> s >> t;

  // Allocate memory for pos and pos2 dynamically
  int* pos = new int[m];
  int* pos2 = new int[m];

  int p1 = 0, p2 = 0;
  int maxLen = 0;

  // Iterate over s and t simultaneously to find positions of matching characters
  while (p1 < m && p2 < n) {
    if (s[p2] == t[p1]) {
      pos[p1] = p2;
      p1++;
    }
    p2++;
  }

  p1 = m - 1, p2 = n - 1;
  
  // Iterate over s and t in reverse order to find positions of matching characters
  while (p1 >= 0 && p2 >= 0) {
    if (s[p2] == t[p1]) {
      pos2[p1] = p2;
      p1--;
    }
    p2--;
  }

  // Calculate the maximum length of a substring
  for (int i = 0; i < m - 1; ++i) {
    maxLen = max(maxLen, pos2[i + 1] - pos[i]);
  }

  cout << maxLen;

  // Free dynamically allocated memory
  delete[] pos;
  delete[] pos2;

  return 0;
}