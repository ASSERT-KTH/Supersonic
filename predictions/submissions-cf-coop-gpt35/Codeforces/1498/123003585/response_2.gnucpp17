#include <algorithm>
#include <iostream>
#include <vector>

int main() {
  int n_sets;
  std::cin >> n_sets;
  
  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    std::cin >> n >> W;
    
    std::vector<int> a(n);
    for (int i = 0; i < n; i++)
      std::cin >> a[i];
    
    std::partial_sort(a.begin(), a.begin() + W, a.end(), std::greater<int>());
    
    std::vector<int> x(W + 1, 0);
    x[W] = 200000;
    
    for (int i = 0; i < W; i++) {
      int remain = W - a[i];
      int best_w = W;
      
      for (int j = W; j >= 0; j--) {
        if (j - a[i] >= 0 && x[j] != 0 && j - a[i] < remain) {
          best_w = j;
          remain = j - a[i];
        }
      }
      
      if (--x[best_w] == 0)
        x.erase(x.begin() + best_w);
      
      x[remain]++;
    }
    
    std::cout << 200000 - x[W] << std::endl;
  }
  
  return 0;
}