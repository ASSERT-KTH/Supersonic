#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

int main() {
  int n_sets;
  scanf("%d", &n_sets);
  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    scanf("%d %d", &n, &W);
    vector<int> a(n);
    for (int i = 0; i < n; i++)
      scanf("%d", &a[i]);
    partial_sort(a.begin(), a.begin() + n, a.end(), greater<int>());
    vector<int> count(*max_element(a.begin(), a.end()) + 1);
    count[W] = 200000;
    for (int i : a) {
      int remain = W - i;
      int best_w = W;
      for (int k = W; k >= 0; k--) {
        if (k - i >= 0 && count[k] != 0 && k - i < remain) {
          best_w = k;
          remain = k - i;
        }
      }
      count[best_w]--;
      if (count[best_w] == 0)
        count[best_w] = 0;
      count[remain]++;
    }
    printf("%d\n", 200000 - count[W]);
  }
  return 0;
}