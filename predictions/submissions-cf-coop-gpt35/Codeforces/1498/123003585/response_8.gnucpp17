#include <algorithm>
#include <iostream>
#include <vector>

int main() {
  int n_sets;
  std::cin >> n_sets;
  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    std::cin >> n >> W;
    std::vector<int> a(n);
    int max_element = INT_MIN;
    int max_element_count = 0;
    for (int i = 0; i < n; i++) {
      std::cin >> a[i];
      if (a[i] > max_element) {
        max_element = a[i];
        max_element_count = 1;
      } else if (a[i] == max_element) {
        max_element_count++;
      }
    }

    std::vector<int> weights(W + 1, 0);
    weights[W] = 200000;

    for (int i : a) {
      int remain = W - i;
      int best_w = W;
      for (int k = W; k >= remain; k--) {
        if (weights[k] != 0 && k - i < best_w - i) {
          best_w = k;
        }
      }
      weights[best_w]--;
      if (weights[best_w] == 0) {
        weights[best_w] = 0;
      }
      weights[remain]++;
    }

    std::cout << 200000 - weights[W] << std::endl;
  }
  return 0;
}