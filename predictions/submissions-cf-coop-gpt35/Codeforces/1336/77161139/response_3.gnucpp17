void compute_depth(int u, int p, vector<set<int>> &adj, vector<int> &depth) {
  stack<pair<int, int>> stack;
  stack.emplace(u, p);
  while (!stack.empty()) {
    int u = stack.top().first;
    int p = stack.top().second;
    stack.pop();
    for (int v : adj[u]) {
      if (v != p) {
        depth[v] = depth[u] + 1;
        stack.emplace(v, u);
      }
    }
  }
}

void compute_below(int u, int p, vector<set<int>> &adj, vector<int> &below) {
  stack<pair<int, int>> stack;
  stack.emplace(u, p);
  while (!stack.empty()) {
    int u = stack.top().first;
    int p = stack.top().second;
    stack.pop();
    for (int v : adj[u]) {
      if (v != p) {
        stack.emplace(v, u);
        below[u] += below[v] + 1;
      }
    }
  }
}