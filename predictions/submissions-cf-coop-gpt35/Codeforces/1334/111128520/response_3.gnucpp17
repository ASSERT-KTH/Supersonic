#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void __sol() {
    int n;
    cin >> n;
    vector<pair<long long, long long>> v(n);
    for (int i = 0; i < n; i++) {
        cin >> v[i].first >> v[i].second;
    }
    if (n == 2) {
        cout << min(v[0].first + max(0LL, v[1].first - v[0].second),
                    v[1].first + max(0LL, v[0].first - v[1].second)) << "\n";
        return;
    }
    long long ans = v[0].first;
    long long cnt = v[0].first;
    for (int i = 1; i < n; i++) {
        cnt += v[i].first - max(0LL, v[i].first - v[i - 1].second);
        cnt += max(0LL, v[i - 1].first - v[i - 2].second);
        ans = min(ans, cnt);
    }
    cout << ans << "\n";
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int tc;
    cin >> tc;
    while (tc--) {
        __sol();
    }
    return 0;
}