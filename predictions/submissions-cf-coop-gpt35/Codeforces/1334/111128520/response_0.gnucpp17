#include <iostream>
#include <vector>
#include <algorithm>
#include <chrono>

#define ll long long int
#define MOD 1000000007

using namespace std;

int power(long long x, long long n, const long long P) {
    if (x == 0)
        return 0;
    if (n == 0 || x == 1)
        return 1LL;
    x %= P;
    int res = 1;
    while (n > 0) {
        if (n & 1)
            res = (ll)res * x % P;
        x = (ll)x * x % P;
        n /= 2;
    }
    return res;
}

ll gcd(const ll a, const ll b) {
    if (b == 0)
        return a;
    return gcd(b, a % b);
}

ll lcm(const ll a, const ll b) {
    return (a * b) / gcd(a, b);
}

ll inv(ll x) {
    return power(x, MOD - 2, MOD);
}

ll calculateMinValue(const vector<ll>& a, const vector<ll>& b) {
    int n = a.size();
    ll cnt = 0, curr = a[0];
    for (int i = 0; i < n; i++) {
        cnt += curr;
        curr = max(0LL, a[(i + 1) % n] - b[i]);
    }
    ll ans = cnt;
    for (int i = 1; i < n; i++) {
        cnt += a[i] - max(0LL, a[i] - b[(i - 1 + n) % n]);
        cnt += max(0LL, b[(i - 1 + n) % n] - b[(i - 2 + n) % n]);
        cnt -= b[(i - 1 + n) % n];
        ans = min(ans, cnt);
    }
    return ans;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int tc;
    cin >> tc;
    while (tc--) {
        int n;
        cin >> n;
        vector<ll> a(n), b(n);
        for (int i = 0; i < n; i++) {
            cin >> a[i] >> b[i];
        }
        ll result = calculateMinValue(a, b);
        cout << result << "\n";
    }

    return 0;
}