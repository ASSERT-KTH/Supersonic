#include <iostream>
#include <string>
#include <sstream>
using namespace std;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  
  int t;
  cin >> t;

  stringstream output; // Use stringstream for efficient output

  while (t--) {
    int n, k, ans = 0;
    string s;
    cin >> n >> k >> s;
    
    int* pref = new int[n + 1]; // Use array instead of vector
    memset(pref, 0, sizeof(int) * (n + 1)); // Initialize prefix sums to 0

    for (int i = 0; i < n; ++i) {
      if (s[i] == '1') {
        pref[max(0, i - k)] += 1;
        pref[min(n, i + k + 1)] += -1;
      }
    }
    
    for (int i = 1; i < n; ++i) {
      pref[i] += pref[i - 1];
    }
    
    int cnt = 0; // Count variable for substrings
    for (int i = 0; i < n; ++i) {
      if (pref[i] == 0) {
        ++cnt;
        if (cnt > 0) {
          ++ans;
          cnt = -1 * k;
        }
      }
    }
    
    output << ans << '\n';
    
    delete[] pref; // Deallocate memory for prefix sums
  }
  
  cout << output.str(); // Output all results at once
  
  return 0;
}