#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
using namespace std;

int main() {
    int n;
    cin >> n;

    vector<long long> v(n + 1);
    vector<long long> cnt(n + 1, 0);
    v.reserve(n + 1);
    cnt.reserve(n + 1);

    for (int i = 1; i <= n; i++)
        cin >> v[i];

    long long ans = 0;
    for (int i = 1; i <= n; i++)
        ans += v[i];

    unordered_map<long long, long long> mp, vis;
    mp[0] = 0;
    vis[0] = 1;

    long long mx = 0;
    for (int i = 1; i <= n; i++) {
        cnt[i] = cnt[i - 1] + v[i];
        if (!vis[cnt[i]]) {
            mp[cnt[i]] = i;
            vis[cnt[i]] = 1;
        } else {
            long long l = max(0LL, mp[cnt[i]] - mx);
            long long r = n - i;
            ans -= (l * r) + l + r;
            if (i - mp[cnt[i]] != n || !mx)
                ans--;
            mx = max(mp[cnt[i]] + 1, mx);
            mp[cnt[i]] = i;
        }
    }

    cout << ans << endl;

    return 0;
}