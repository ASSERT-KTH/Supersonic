#include <bits/stdc++.h>
using namespace std;

int main() {
  int n;
  scanf("%d", &n);

  long long ans = n * 1LL * (n + 1) / 2LL;

  long long cumulativeSum[n + 1] = {0};
  for (int i = 1; i <= n; i++)
    scanf("%lld", &cumulativeSum[i]);

  map<long long, long long> mp, vis;
  mp[0] = 0;
  vis[0] = 1;
  long long mx = 0;

  long long *p1 = cumulativeSum + 1;
  long long *p2 = cumulativeSum + n;

  for (int i = 1; i <= n; i++) {
    if (vis[*p1]) {
      long long diff = mp[*p1] - mx;
      long long l = max(0LL, diff);
      long long r = p2 - p1;
      if (diff >= 0) {
        ans -= (l * r) + l + r;
        if (i - mp[*p1] != n || !mx)
          ans--;
      }
      mx = max(mp[*p1] + 1, mx);
    }
    mp[*p1] = i;
    vis[*p1] = 1;

    p1++;
  }

  printf("%lld\n", ans);
}