#include <iostream>
#include <vector>
#include <map>
#include <chrono>
#include <cmath>
#include <algorithm>

#define int long long

void solve() {
    int n;
    std::cin >> n;

    std::vector<int> a(n);
    for (int i = 0; i < n; ++i) {
        std::cin >> a[i];
    }

    std::map<int, int> freq;
    for (int i = 0; i < n; ++i) {
        freq[a[i]]++;
    }

    int ans1 = std::max_element(freq.begin(), freq.end(),
        [](const std::pair<int, int>& p1, const std::pair<int, int>& p2) {
            return p1.second < p2.second;
        })->second;

    int ans2 = 0;
    for (const auto& p : freq) {
        if (p.second % 2 == 1) {
            ans2 += p.second;
        }
    }

    int q;
    std::cin >> q;
    while (q--) {
        int w;
        std::cin >> w;
        if (w == 0)
            std::cout << ans1 << '\n';
        else
            std::cout << std::max(ans1, ans2) << '\n';
    }
}

int32_t main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);

    int t;
    std::cin >> t;

    while (t--) {
        solve();
    }

    return 0;
}