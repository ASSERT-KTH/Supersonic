#include <iostream>
#include <vector>
#include <unordered_map>
#include <cmath>

void fio() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
}

std::vector<long long> dp;

void preprocess(int N) {
  dp.resize(N + 1);
  for (int i = 1; i <= N; ++i) {
    dp[i] = i;
  }
  for (int i = 2; i * i <= N; ++i) {
    if (dp[i] == i) {
      for (int j = i * i; j <= N; j += i) {
        if (dp[j] == j) {
          dp[j] = i;
        }
      }
    }
  }
}

void solve() {
  int n;
  std::cin >> n;
  
  std::unordered_map<int, int> mp;
  std::vector<long long> a(n);
  
  for (int i = 0; i < n; ++i) {
    std::cin >> a[i];
    mp[dp[a[i]]]++;
  }
  
  int ans1 = 1;
  for (const auto& it : mp) {
    ans1 = std::max(ans1, it.second);
  }
  
  int ans2 = 0;
  int sumEvenAndOne = 0;
  for (const auto& it : mp) {
    if (it.second % 2 == 0 || it.first == 1) {
      sumEvenAndOne += it.second;
    }
  }
  ans2 = sumEvenAndOne;
  
  int q;
  std::cin >> q;
  
  std::vector<int> results;
  while (q--) {
    int w;
    std::cin >> w;
    if (w == 0) {
      results.push_back(ans1);
    } else {
      results.push_back(std::max(ans1, ans2));
    }
  }
  
  for (const auto& res : results) {
    std::cout << res << '\n';
  }
}

int main() {
  fio();
  int t;
  std::cin >> t;
  preprocess(1000000);
  while (t--) {
    solve();
  }
  return 0;
}