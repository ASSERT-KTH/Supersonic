#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;

        vector<long long> v(n);

        for (int i = 0; i < n; i++) {
            cin >> v[i];
        }

        vector<long long> cnt(2e5 + 1, 0);
        for (int i = 0; i < n; i++) {
            cnt[v[i]]++;
        }

        vector<long long> dp(2e5 + 1, 0);
        long long best = 0;

        for (int i : v) {
            for (int j = 2; j <= sqrt(i); j++) {
                if (i % j == 0) {
                    dp[i] = max(dp[i], dp[j]);
                    dp[i] = max(dp[i], dp[i / j]);
                }
            }
            dp[i] = max(dp[i], dp[1]);
            dp[i] += cnt[i];
            best = max(best, dp[i]);
        }

        cout << n - best << '\n';
    }

    return 0;
}