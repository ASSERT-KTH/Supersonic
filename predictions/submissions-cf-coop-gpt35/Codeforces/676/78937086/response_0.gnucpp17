#include <iostream>
#include <string>
using namespace std;

#define MOD 1000000007
#define mods 1000000009
#define mods1 37
#define mods2 715827883

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

int TestMillerRabin[12] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37};

ll mulmod(ll a, ll b, ll p) {
  return ((a % p) * (b % p)) % p;
}

ll fastexp(ll x, ll y, ll p) {
  ll ans = 1;
  x = x % p;

  while (y > 0) {
    if (y & 1)
      ans = mulmod(ans, x, p);

    y = y >> 1;
    x = mulmod(x, x, p);
  }

  return ans;
}

bool check_composite(ll n, ll a, ll d, int s) {
  ll x = fastexp(a, d, n);

  if (x == 1 || x == n - 1)
    return false;

  for (int r = 1; r < s; r++) {
    x = mulmod(x, x, n);

    if (x == n - 1)
      return false;
  }

  return true;
}

bool isPrime(ll p) {
  if (p <= 1)
    return false;

  int r = 0;
  ll d = p - 1;

  while (!(d & 1)) {
    d >>= 1;
    r++;
  }

  for (int i = 0; i < 12; i++) {
    int value = TestMillerRabin[i];

    if (p == value)
      return true;

    if (check_composite(p, value, d, r))
      return false;
  }

  return true;
}

int main() {
  int n, k;
  cin >> n >> k;
  int played = 0;
  string p;
  string values[100001];

  for (int i = 0; i < n + 1; i++) {
    cin >> values[i];

    if (i == 0)
      p = values[i];

    if (values[i] != "?")
      played++;
  }

  if (k == 0) {
    if (values[0] == "0" or (values[0] == "?" and played % 2 == 1))
      cout << "Yes";
    else
      cout << "No";

    return 0;
  }

  if (played == n + 1) {
    ll fv[100001];
    ll mm1[100006];
    ll mm2[100006];
    ll mm3[100006];
    ll mm4[100006];

    mm1[0] = 1;
    mm2[0] = 1;
    mm3[0] = 1;
    mm4[0] = 1;

    for (int i = 1; i < n + 6; i++) {
      mm1[i] = mulmod(mm1[i - 1], k, MOD);
      mm2[i] = mulmod(mm2[i - 1], k, mods);
      mm3[i] = mulmod(mm3[i - 1], k, mods1);
      mm4[i] = mulmod(mm4[i - 1], k, mods2);
    }

    ll fv1 = 0;
    ll fv2 = 0;
    ll fv3 = 0;
    ll fv4 = 0;

    for (int i = 0; i < n + 1; i++) {
      fv[i] = stoi(values[i]);

      fv1 = (fv1 + mulmod(fv[i], mm1[i], MOD)) % MOD;
      fv2 = (fv2 + mulmod(fv[i], mm2[i], mods)) % mods;
      fv3 = (fv3 + mulmod(fv[i], mm3[i], mods1)) % mods1;
      fv4 = (fv4 + mulmod(fv[i], mm4[i], mods2)) % mods2;
    }

    if (fv4 == 0 and fv1 == 0 and fv2 == 0 and fv3 == 0)
      cout << "Yes";
    else
      cout << "No";

    return 0;
  }

  if (played % 2 == 1) {
    if ((n + 1 - played) % 2 == 1)
      cout << "Yes";
    else
      cout << "No";
  } else {
    if ((n + 1 - played) % 2 == 0)
      cout << "Yes";
    else
      cout << "No";
  }

  return 0;
}