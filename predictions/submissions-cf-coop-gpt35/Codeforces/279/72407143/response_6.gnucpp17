#include <cmath>
#include <iostream>
#include <vector>

#define INCREMENT 1

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);

  int size, queries;
  std::cin >> size >> queries;

  std::vector<int> elements(size + 1);
  std::vector<int> increasingCount(size + 1, INCREMENT);
  std::vector<int> decreasingCount(size + 1, INCREMENT);

  for (int i = 1; i <= size; i++) {
    std::cin >> elements[i];
  }

  for (int j = size - 1; j >= 1; j--) {
    if (elements[j + 1] >= elements[j])
      increasingCount[j] += increasingCount[j + 1];
    if (elements[j] >= elements[j + 1])
      decreasingCount[j] += decreasingCount[j + 1];
  }

  std::string s1 = "Yes";
  std::string s2 = "No";

  for (int i = 0; i < queries; i++) {
    int left, right;
    std::cin >> left >> right;
    if (right - left <= 1)
      std::cout << s1 << std::endl;
    else {
      int count = left + increasingCount[left] - 1;
      count += decreasingCount[count] - left;
      if (count >= right - left + 1)
        std::cout << s1 << std::endl;
      else
        std::cout << s2 << std::endl;
    }
  }

  return 0;
}