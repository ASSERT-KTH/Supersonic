#include <iostream>
#include <string>
#include <unordered_map>

const int N = 200005;

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);

  int n;
  std::cin >> n;

  // Calculate an appropriate initial capacity based on the expected number of elements
  int initial_capacity = n * 2;
  std::unordered_map<std::string, int> mp(initial_capacity);
  mp.max_load_factor(0.25);

  while (n--) {
    std::string ar;
    std::cin >> ar;

    // Use emplace to insert a new element
    auto [it, inserted] = mp.emplace(ar, 1);

    if (inserted) {
      std::cout << "OK\n";
    } else {
      std::cout << ar << it->second << "\n";
      it->second++;
    }
  }

  return 0;
}