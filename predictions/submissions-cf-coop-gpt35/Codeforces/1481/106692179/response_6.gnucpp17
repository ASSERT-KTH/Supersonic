#include <iostream>
#include <vector>

using namespace std;

int main() {
  int tc;
  cin >> tc;
  while (tc--) {
    int n;
    unsigned int k;
    cin >> n >> k;

    vector<unsigned int> h(n);
    for (int i = 0; i < n; i++) {
      cin >> h[i];
    }

    unsigned int maax = h[n - 1];
    vector<unsigned int> diff(n, 0);

    // Find the maximum height
    for (int i = n - 1; i >= 0; i--) {
      if (h[i] > maax) {
        maax = h[i];
      }
    }

    // Calculate the differences
    for (int i = 0; i < n; i++) {
      if (h[i] < maax) {
        diff[i] = maax - h[i];
      }
    }

    // Calculate the sum of differences
    unsigned int sum = 0;
    for (int i = 0; i < n; i++) {
      sum += diff[i];
    }

    if (sum < k) {
      cout << "-1\n";
      continue;
    }

    // Find the maximum increment
    unsigned int maxIncrement = k / n;

    // Increment the heights
    for (int i = 0; i < n; i++) {
      if (diff[i] > maxIncrement) {
        h[i] += maxIncrement;
        k -= maxIncrement;
      } else {
        h[i] += diff[i];
        k -= diff[i];
      }
    }

    // Find the answer
    int ans = -1;
    for (int i = 0; i < n - 1; i++) {
      if (h[i] < h[i + 1]) {
        ans = i + 1;
        break;
      }
    }

    cout << ans << endl;
  }
  return 0;
}