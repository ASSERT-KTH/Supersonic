#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

#define Test ll _
#define input(a, n) for (int i = 0; i < n; i++) std::cin >> a[i];
#define lp(a, i, b) for (ll i = a; i < b; i++)
#define rlp(a, i, b) for (ll i = a; i >= b; i--)
#define Good_Bye return 0;
#define Faster ios_base ::sync_with_stdio(0); cin.tie(0); cout.tie(0);

typedef int ll;

const ll MOD = 1e9 + 7;
const ll mX = 1e7 + 12;

ll a[mX];
std::vector<ll> prime;

void sum_of_divisors() {
    for (int i = 1; i < mX; i++) {
        for (int j = i; j < mX; j += i) {
            a[j] += i;
        }
    }
    for (int i = mX - 1; i >= 0; i--) {
        if (a[i] <= mX) {
            a[i] = i;
        }
    }
}

void total_divisors(ll a[], ll n) {
    for (ll i = 1; i * i <= n; i++) {
        for (ll j = i * i; j < n; j += i) {
            if (j == i * i) {
                a[j]++;
            } else {
                a[j] += 2;
            }
        }
    }
}

int main() {
    Faster

    sum_of_divisors();

    Test {
        ll c;
        std::cin >> c;
        if (a[c]) {
            std::cout << a[c] << '\n';
        } else {
            std::cout << -1 << '\n';
        }
    }

    Good_Bye
}