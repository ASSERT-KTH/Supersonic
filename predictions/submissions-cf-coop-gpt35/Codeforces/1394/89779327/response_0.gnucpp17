#include <bits/stdc++.h>
#define fi first
#define se second
const int N = 200200;
const int M = 100; // Maximum size of vectors
const int mod = 1e9 + 7;
using namespace std;
int n, m, k;
pair<int, int> v[N][M], g[N][M];
bool ban[10][10][10], slf[10][10];
bool used[10], cnt[10][10];
int res, all;
int sv[10][10];

void rec(int i) {
  if (i == k + 1) {
    res += 1;
    return;
  }
  for (int j = 0; j < i; j++) {
    if (used[i] & (1 << j) || slf[i][j])
      continue;
    int size = k - i + 1;
    for (int h = 0; h < size; h++) {
      sv[i][h] = used[h + i];
      used[h + i] |= ban[i][j][h + i];
    }
    all += cnt[i][j];
    rec(i + 1);
    all -= cnt[i][j];
    for (int h = 0; h < size; h++) {
      used[h + i] = sv[i][h];
    }
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin >> n >> m >> k;
  for (int i = 1; i <= m; i++) {
    int x, y, z;
    cin >> x >> y >> z;
    v[x][y] = {z, y};
  }
  for (int i = 1; i <= n; i++) {
    int size = m + 1;
    for (int j = 0; j < size; j++) {
      if (v[i][j].fi == 0) {
        cout << 0 << "\n";
        return 0;
      }
      g[v[i][j].se] = v[i][j];
    }
    sort(g + 1, g + size);
    int ng_size = 1;
    for (int j = 1; j < size; j++) {
      if (g[j].fi != g[j - 1].fi || g[j].se != g[j - 1].se) {
        g[ng_size++] = g[j];
      } else {
        slf[g[j].fi][g[j].se] = true;
      }
    }
    for (int j = 1; j < ng_size; j++) {
      cnt[g[j].fi][g[j].se] += 1;
      for (int h = 1; h < ng_size; h++)
        if (h != j) {
          ban[g[j].fi][g[j].se][g[h].fi] |= (1 << g[h].se);
        }
    }
  }
  rec(1);
  cout << res << "\n";
}