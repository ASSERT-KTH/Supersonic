#include <iostream>
#include <vector>
#include <algorithm>

const int N = 200200;

int n, m, k;
int ban[10][10][10], cnt[10][10];
int res, all;
std::vector<std::pair<int, int>> v[N], g[N];
int sv[10][10];

void rec(int i, int* used, int all) {
  if (i == k + 1) {
    res += 1;
    return;
  }
  
  for (int j = 0; j < i; j++) {
    if (used[i] & (1 << j) || cnt[i][j])
      continue;
      
    for (int h = i + 1; h <= k; h++) {
      sv[i][h] = used[h];
      used[h] |= ban[i][j][h];
    }
    
    all += cnt[i][j];
    rec(i + 1, used, all);
    all -= cnt[i][j];
    
    for (int h = i + 1; h <= k; h++) {
      used[h] = sv[i][h];
    }
  }
}

int main() {
  std::ios_base::sync_with_stdio(0);
  std::cin >> n >> m >> k;
  
  for (int i = 1; i <= m; i++) {
    int x, y, z;
    std::cin >> x >> y >> z;
    v[x].push_back({ z, y });
  }
  
  for (int i = 1; i <= n; i++) {
    std::sort(v[i].begin(), v[i].end());
    
    for (int j = 0; j < v[i].size(); j++) {
      g[v[i][j].second].push_back({ v[i].size(), j });
    }
  }
  
  std::vector<std::pair<int, int>> ng;
  
  for (int i = 1; i <= n; i++) {
    if (g[i].empty()) {
      std::cout << 0 << "\n";
      return 0;
    }
    
    std::sort(g[i].begin(), g[i].end());
    ng.clear();
    ng.push_back(g[i][0]);
    
    for (int j = 1; j < g[i].size(); j++) {
      if (g[i][j] != g[i][j - 1]) {
        ng.push_back(g[i][j]);
      }
    }
    
    g[i] = ng;
    
    for (int j = 0; j < g[i].size(); j++) {
      cnt[g[i][j].first][g[i][j].second] += 1;
      
      for (int h = 0; h < g[i].size(); h++) {
        if (h != j) {
          ban[g[i][j].first][g[i][j].second][g[i][h].first] |= (1 << g[i][h].second);
        }
      }
    }
  }
  
  int used[10] = { 0 };
  rec(1, used, 0);
  
  std::cout << res << "\n";
  
  return 0;
}