#include <iostream>
#include <vector>
#include <bitset>

using namespace std;

const string eol = "\n";

void solve() {
  int n, d;
  scanf("%d %d", &n, &d); // Use scanf for faster input

  int tabSize = 10 * d + d;
  bitset<100> tab; // Use bitset instead of vector<bool>
  for (int k = 0; k < tabSize; ++k) {
    tab[k] = k % 10 == d || (k / 10) == d;
  }

  for (int k = 0; k < tabSize; ++k) {
    if (tab[k]) {
      for (int j = 0; j < tabSize; ++j) {
        if (tab[j]) {
          for (int l = 0; l < tabSize; ++l) {
            if (k + j * l < tabSize) {
              tab[k + j * l] = true;
            }
          }
        }
      }
    }
  }

  for (int k = 0; k < n; ++k) {
    int ak;
    scanf("%d", &ak); // Use scanf for faster input
    printf("%s\n", (ak >= tabSize || tab[ak]) ? "YES" : "NO"); // Use printf for faster output
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int test_sample_count;
  scanf("%d", &test_sample_count); // Use scanf for faster input
  while (test_sample_count--) {
    solve();
  }

  return 0;
}