#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>

bool comp(int a, int b) { return a > b; }

int main() {
  int t;
  std::cin >> t;
  while (t--) {
    int n, res = 0;
    std::cin >> n;
    std::vector<int> even;
    even.reserve(n);
    std::unordered_set<int> st;
    for (int i = 0; i < n; i++) {
      int x;
      std::cin >> x;
      if (x % 2 == 0 && !st.count(x))
        even.push_back(x);
      st.insert(x);
    }
    std::partial_sort(even.begin(), even.begin() + 10, even.end(), comp);
    std::vector<bool> used(n + 1, false);
    for (int i = 0; i < even.size(); i++) {
      if (!used[even[i]]) {
        int b = even[i];
        while (b % 2 == 0) {
          used[b] = true;
          b >>= 1;
          ++res;
        }
      }
    }
    std::cout << res << std::endl;
  }
  return 0;
}