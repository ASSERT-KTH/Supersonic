#include <iostream>
#include <vector>

using namespace std;

int main() {
  const long long mxn = 32 * 3e5;
  vector<vector<long long>> tr(1, vector<long long>(2));
  long long n;
  cin >> n;
  vector<long long> cnt(1);
  long long tot = 1;
  auto ins = [&](long long x) {
    long long p = 0;
    ++cnt[p];
    for (long long i = 30; i >= 0; --i) {
      long long b = (x >> i) & 1;
      if (!tr[p][b]) {
        tr[p][b] = tr.size();
        tr.push_back(vector<long long>(2));
        cnt.push_back(0);
      }
      p = tr[p][b];
      ++cnt[p];
    }
  };
  auto qry = [&](long long x) {
    long long p = 0;
    --cnt[p];
    long long res = 0;
    for (long long i = 30; i >= 0; --i) {
      long long b = (x >> i) & 1;
      if (cnt[tr[p][b]] > 0) {
        p = tr[p][b];
      } else {
        p = tr[p][!b];
        res += (1 << i);
      }
      --cnt[p];
    }
    return res;
  };
  for (long long i = 0; i < n; ++i) {
    long long b;
    cin >> b;
    ins(b);
  }
  vector<long long> results(n);
  for (long long i = 0; i < n; ++i) {
    long long a;
    cin >> a;
    results[i] = qry(a);
  }
  for (long long i = 0; i < n; ++i) {
    cout << results[i] << ' ';
  }
  cout << '\n';
  return 0;
}