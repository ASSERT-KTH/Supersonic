#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;
const int MOD = 998244353;
struct mod_int {
  int val;
  mod_int(long long v = 0) {
    if (v < 0)
      v = v % MOD + MOD;
    if (v >= MOD)
      v %= MOD;
    val = v;
  }
  mod_int pow(long long p) const {
    mod_int a = *this, result = 1;
    while (p > 0) {
      if (p & 1)
        result *= a;
      a *= a;
      p >>= 1;
    }
    return result;
  }
  mod_int inv() const {
    return pow(MOD - 2);
  }
  // other functions remain the same...
};

mod_int save[2][200005]; // Assuming the maximum value of weight is 200000. You can change it according to your needs.

mod_int solve(int like, int weight) {
  if (save[like][weight].val != -1)
    return save[like][weight];
  // other code remains the same...
}

int main() {
  // other code remains the same...
  for (int i = 0; i < 2; i++)
    for (int j = 0; j < 200005; j++)
      save[i][j] = mod_int(-1);
  // other code remains the same...
}