#include <algorithm>
#include <cassert>
#include <iostream>
#include <unordered_map>
#include <vector>
using namespace std;
const int MOD = 998244353;
//... rest of the code remains the same ...
unordered_map<int, mod_int> save[2]; // Changed from map to unordered_map

//... rest of the code remains the same ...

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  prepare_factorials(4.1e5);
  cin >> N >> M;
  likes.resize(N);
  weights.resize(N);
  //... rest of the code remains the same ...

  probability.assign(2 * M + 1, 0);
  probability[M] = 1;
  for (int iter = 0; iter < M; iter++) {
    vector<mod_int> new_probability(2 * M + 1, 0);
    new_probability.reserve(2 * M + 1); // Reserve memory for the vector
    //... rest of the code remains the same ...

    for (int i = -M; i <= M; i++) {
      //... rest of the code remains the same ...

      mod_int commonDenominator = mod_int(L + DL + i);
      mod_int like_probability = mod_int(L + up) / commonDenominator;
      mod_int dislike_probability = mod_int(1) - like_probability;
      //... rest of the code remains the same ...
    }
    //... rest of the code remains the same ...
  }
  //... rest of the code remains the same ...
}