#include <algorithm>
#include <cmath>
#include <cstdio>
#include <deque>
#include <unordered_map>
#include <memory>
using namespace std;
struct dat {
  static int n;
  deque<int> A;
  unordered_map<int, int> M;
  shared_ptr<dat> next = nullptr;
  int count(int p, int x) const {
    if (p > size()) {
      int p_size = p - size();
      auto it = M.find(x);
      return it == M.end() ? next->count(p_size, x) : next->count(p_size, x) + it->second;
    }
    int ans = 0;
    for (int i = 0; i < p; i++)
      ans += A[i] == x;
    return ans;
  }
  // Rest of the code remains the same...
};
int dat::n;
int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  // Rest of the code remains the same...
}