#include <iostream>
#include <vector>
#include <cmath>

constexpr long long MOD = 1000000007;
constexpr long long MAX_N = 1e5 + 5;

inline long long expo(long long base, long long exponent, long long mod = MOD) {
    long long ans = 1;
    base %= mod;
    while (exponent != 0) {
        if (exponent & 1)
            ans = (ans * base) % mod;
        base = (base * base) % mod;
        exponent >>= 1;
    }
    return ans % mod;
}

void solve() {
    int n, t;
    std::cin >> n >> t;
    std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    int curMid = 1;
    int half_t = t / 2;
    for (int i = 0; i < n; i++) {
        int r;
        if (t % 2 == 0 && a[i] == half_t) {
            r = curMid++ % 2;
        } else if (2 * a[i] < t) {
            r = 0;
        } else {
            r = 1;
        }
        std::cout << r << " ";
    }
    std::cout << "\n";
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    std::cout.tie(0);

    int t = 1;
    std::cin >> t;
    while (t--) {
        solve();
    }
}