Your code is already quite optimized, but there are still some small modifications we could make to further optimize it.

Optimization Steps:

1. Since you are not using all the libraries in `#include <bits/stdc++.h>`, it's better to include only those libraries which are necessary. Using `bits/stdc++.h` increases the compilation time as it includes all the standard libraries, which might not be used in the program.

2. The `expo` and `inverse` functions are declared but not used in this program, so we can remove them to save memory.

3. In the `solve` function, instead of processing the input and output one by one, we can store the results in an array first and then output them all at once. This can reduce the IO operation which may improve the running time.

4. In the `main` function, the macro `ONLINE_JUDGE` is not defined anywhere, so the two `freopen` calls are unnecessary.

Here is the optimized version of your program after applying the above optimizations:

```cpp
#include <iostream>
using namespace std;

void solve() {
  int n, t;
  cin >> n >> t;
  int a[n];
  int r[n];
  int curMid = 1;
  
  for (int i = 0; i < n; i++) {
    cin >> a[i];
    
    if (t % 2 == 0 && a[i] == t / 2) {
      r[i] = (curMid++) % 2;
    } else if (2 * a[i] < t) {
      r[i] = 0;
    } else {
      r[i] = 1;
    }
  }
  
  for (int i = 0; i < n; i++) {
    cout << r[i] << " ";
  }
  cout << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  
  int t = 1;
  cin >> t;
  while (t--) {
    solve();
  }
}
```

Please note that the `#define int long long` has been removed because it can cause confusion and potential bugs. It's better to specify `long long` explicitly when you need it.