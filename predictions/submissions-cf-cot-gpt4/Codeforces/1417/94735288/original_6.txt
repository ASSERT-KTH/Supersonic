Here are the steps to optimize the given C/C++ program:

1. Avoid using `#include <bits/stdc++.h>` as it includes more than what's needed. It's better to include only the libraries that are actually used in the program. Include `<iostream>`, `<vector>` and `<cmath>` instead.
2. Remove `#define int long long` and use `long long` directly when needed. This will make the code more readable.
3. Avoid using `using namespace std;`. This line can cause name collision problems because it imports all the entities in the `std` namespace into the global namespace. Use `std::` prefix when needed.
4. Remove `#define ONLINE_JUDGE`. It appears to be unused in the code.
5. Remove `#define hell 1000000007` and `#define endl "\n"`. Use these values directly in the code.
6. Avoid using `#define` macros for functions like `gcd` and `lcm`. Use inline functions instead. This will make your code more readable and maintainable.
7. Remove `ios` macro. It's better to set `std::ios_base::sync_with_stdio(false)`, `std::cin.tie(0)`, and `std::cout.tie(0)` directly in the `main()` function.
8. The `inverse` function is not used in the program, so it can be safely removed.
9. Remove file redirection (i.e., `freopen("input.txt", "r", stdin)`, `freopen("output.txt", "w", stdout)`) if you're not reading from or writing to files. If it's necessary, make sure to close the files after use.
10. Instead of reading the array size and then creating a VLA (Variable Length Array), use a `std::vector<int>` directly. This makes your code safer and more modern.
11. When checking `if (t % 2 == 0 && a[i] == t / 2)`, we are doing the same operation twice (i.e., `t / 2`). To optimize this, we can calculate `t / 2` outside the loop and store it in a variable for reuse.
12. Instead of using `std::endl`, use `"\n"`. `std::endl` causes a flush operation which can be slow.

Here's the optimized code:

```cpp
#include <iostream>
#include <vector>
#include <cmath>

constexpr long long MOD = 1000000007;
constexpr long long MAX_N = 1e5 + 5;

inline long long expo(long long base, long long exponent, long long mod = MOD) {
    long long ans = 1;
    base %= mod;
    while (exponent != 0) {
        if (exponent & 1)
            ans = (ans * base) % mod;
        base = (base * base) % mod;
        exponent >>= 1;
    }
    return ans % mod;
}

void solve() {
    int n, t;
    std::cin >> n >> t;
    std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    int curMid = 1;
    int half_t = t / 2;
    for (int i = 0; i < n; i++) {
        int r;
        if (t % 2 == 0 && a[i] == half_t) {
            r = curMid++ % 2;
        } else if (2 * a[i] < t) {
            r = 0;
        } else {
            r = 1;
        }
        std::cout << r << " ";
    }
    std::cout << "\n";
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    std::cout.tie(0);

    int t = 1;
    std::cin >> t;
    while (t--) {
        solve();
    }
}
```