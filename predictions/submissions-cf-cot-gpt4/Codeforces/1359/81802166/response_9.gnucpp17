#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>

using namespace std;

typedef long long int lli;

#define forz(i, n) for (lli i = 0; i < n; i++)

lli n;
vector<lli> a;

lli maxSubArraySum(lli F) {
  lli max_so_far = (lli)INT_MIN, max_ending_here = 0;
  lli M = -31;
  for (lli i = 0; i < n; i++) {
    M = max(M, a[i]);
    max_ending_here = max_ending_here + a[i];
    if ((max_so_far < max_ending_here) and (M == F))
      max_so_far = max_ending_here;
    if (max_ending_here < 0 or M > F)
      max_ending_here = 0, M = -31;
  }
  return max_so_far;
}

int main() {
  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
  cin >> n;
  a.resize(n);
  forz(i, n) cin >> a[i];
  lli R = 0;
  for (lli i = -30; i < 31; i++) {
    R = max(R, (maxSubArraySum(i) - i));
  }
  cout << R << endl;
  return 0;
}