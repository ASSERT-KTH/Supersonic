#include <iostream>
#include <vector>
#include <map>

const int R = 1e4;
const int N = 1e5 + 1;
std::map<long long, long long> dp[N];

int main() {
  std::ios_base::sync_with_stdio(0);
  std::cin.tie(0);
  std::cout.tie(0);
  
  int n;
  std::cin >> n;
  std::vector<long long> a(n);
  for (auto &z : a)
    std::cin >> z;
  for (int i = 0; i < n; ++i) {
    for (int j = -30; j <= 30; ++j) {
      long long to = std::max(a[i], static_cast<long long>(j));
      dp[i + 1][to] = std::max(dp[i + 1][to], dp[i][j] + a[i]);
    }
  }
  long long ans = 0;
  for (int i = 0; i <= n; ++i) {
    for (int j = -30; j <= 30; ++j) {
      ans = std::max(ans, (dp[i][j] ? dp[i][j] - j : 0));
    }
  }
  std::cout << ans;
  
  std::cerr << "\nTime execute: " << clock() / (double)CLOCKS_PER_SEC << " sec\n";
  return 0;
}