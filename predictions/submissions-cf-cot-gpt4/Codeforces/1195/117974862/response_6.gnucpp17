#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define REP(i, a, b) for (int i = a; i < b; i++)
#define f0r(i, n) for (int i = 0; i < n; ++i)
const int maxn = 100005;
ll arr1[maxn], arr2[maxn];
ll dp[maxn][3];
int n;
ll dpF(int i, int last) {
  if (i == n)
    return 0LL;
  if (dp[i][last] != -1)
    return dp[i][last];
  return dp[i][last] = max({last != 1 ? arr1[i] + dpF(i + 1, 1) : 0LL, last != 2 ? arr2[i] + dpF(i + 1, 2) : 0LL, dpF(i + 1, last)});
}
void solve() {
  memset(dp, -1, sizeof(dp));
  cin >> n;
  f0r(i, n) cin >> arr1[i];
  f0r(i, n) cin >> arr2[i];
  cout << dpF(0, 0) << "\n";
}
int main() {
  int t;
  t = 1;
  f0r(i, t) { solve(); }
  return 0;
}