#include <algorithm>
#include <array>
#include <cstdio>
#include <cstdlib>
#include <map>
#include <set>
#include <string>
#include <unordered_set>
#include <vector>
using namespace std;
#define int long long
int inf = 1e9 + 7;
vector<bool> b;
int m, p;
int cnt = 0;
bool check(int x) {
  printf("%lld\n", x);
  scanf("%lld", &x);
  if (x == 0)
    exit(0);
  return (x == -1) ^ b[(cnt++) % p];
}
signed main() {
  int n;
  scanf("%lld", &n);
  vector<int> x(n, 0), ans(n, 0);
  vector<pair<int, int>> v(n, {0, 0});
  for (int i = 2; i <= n; i++) {
    printf("XOR %lld %lld\n", 1LL, i);
    fflush(stdout);
    scanf("%lld", &x[i - 1]);
    v[i - 1] = {x[i - 1], i - 1};
  }
  sort(v.begin(), v.end());
  bool b = false;
  int index1, index2;
  for (int i = 0; i < n - 1; i++)
    if (v[i].first == v[i + 1].first) {
      b = true;
      index1 = v[i].second;
      index2 = v[i + 1].second;
      break;
    }
  int a;
  if (b) {
    printf("AND %lld %lld\n", index1 + 1, index2 + 1);
    fflush(stdout);
    scanf("%lld", &a);
    ans[0] = a ^ x[index1];
  } else {
    printf("AND %lld %lld\n", 1LL, v[1].second + 1);
    fflush(stdout);
    scanf("%lld", &a);
    ans[0] = a;
    printf("AND %lld %lld\n", 1LL, v[n - 2].second + 1);
    fflush(stdout);
    scanf("%lld", &a);
    ans[0] |= a;
  }
  for (int i = 1; i < n; i++) {
    ans[i] = ans[0] ^ x[i];
  }
  printf("! ");
  for (int i = 0; i < n; i++) {
    printf("%lld ", ans[i]);
  }
  printf("\n");
  fflush(stdout);
}