#include <iostream>
#include <unordered_map>
#include <vector>
#include <algorithm>

using namespace std;

void solve() {
  unordered_map<int, int> m;
  int n;
  cin >> n;
  vector<int> a(n);
  
  for (int i = 0; i < n; i++) {
    cin >> a[i];
    m[a[i]]++;
  }
  
  if (m.size() < n) {
    int mi = INT_MAX;
    unordered_map<int, int> temp(m);
    int c = 0;
  
    for (int i = 0; i < n; i++) {
      if (i != 0) { // Reset temp and c only if i != 0
        temp = m;
        c = 0;
      }
      for (int j = i; j < n; j++) {
        temp[a[j]]--;
        if (temp[a[j]] == 0)
          temp.erase(a[j]);
        c++;
        if (temp.size() == (n - c)) {
          mi = min(mi, c);
          break;
        }
      }
    }
    cout << mi << "\n";
  } else {
    cout << 0 << "\n";
  }
}

int main() {
  int t = 1;
  while(t--)
    solve();
  return 0;
}