The program is relatively optimized already, but there are a few changes that could be made.

Optimizations:

1. We can remove `#include <math.h>` and `#include <string.h>` as they are not used in the code. This will reduce the compiled binary size.

2. We can declare the variable `y` inside the second `for` loop. It is not used outside of this loop, so there is no need for it to have a broader scope.

3. The `return 0;` at the end of `main()` is not necessary in C++. The compiler will automatically add this if it is not present. Removing it will reduce the code size and improve readability.

4. We can reduce the number of variable assignments. Here `temp` variable is reset to 0 at the end of the outer loop. We can instead reset it at the start of the outer loop. This eliminates one variable assignment per iteration of the outer loop.

5. We can reduce the number of variable assignments by combining the increment statements `temp++` and `hasil++` with the conditions that precede them.

Here is the optimized code:

```cpp
#include <iostream>
using namespace std;

int main() {
  int n, hasil = 0;
  cin >> n;
  
  for (int i = 0; i < n; i++) {
    int temp = 0;
    for (int j = 0; j < 3; j++) {
      int y;
      cin >> y;
      temp += (y == 1);
    }
    hasil += (temp >= 2);
  }
  
  cout << hasil;
}
```

In this optimized code, we've removed unnecessary includes, reduced the scope of the variable `y`, removed the unnecessary `return 0;`, and reduced the number of variable assignments. These changes will make the code faster, smaller, and more readable.