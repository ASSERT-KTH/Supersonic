#include <iostream>
#include <vector>
#include <iomanip>
#include <cstdio>
using namespace std;
using vi = vector<int>;
static const double PI = 3.141592653589793;
static const int MOD = 1000000007;
static const long long INF = 1000000000000000000LL;

inline double calculateTime(int v, double p, int flag) {
  return (flag - p) / v;
}

void solve() {
  int n, ln;
  cin >> n >> ln;
  vi flag(n);
  for (int i = 0; i < n; ++i)
    cin >> flag[i];
  int v1{1}, v2{1}, l{0}, r{n - 1};
  double p1{0}, p2{static_cast<double>(ln)}, ans{0};
  while (l <= r) {
    double time1 = calculateTime(v1, p1, flag[l]);
    double time2 = calculateTime(v2, p2, flag[r]);
    if (time1 < time2) {
      p1 = flag[l];
      v1++;
      l++;
      p2 -= v2 * time1;
      ans += time1;
    } else if (time1 > time2) {
      p2 = flag[r];
      v2++;
      r--;
      p1 += v1 * time2;
      ans += time2;
    } else {
      p1 = flag[l];
      p2 = flag[r];
      v1++;
      v2++;
      l++;
      r--;
      ans += time1;
    }
  }
  ans += (p2 - p1) / (v1 + v2);
  cout << fixed << setprecision(14) << ans << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int t = 1;
  cin >> t;
  while (t--) {
    solve();
  }
}