Optimization Steps:

1. Instead of using `string` to read the operations, we can use `char`. This will reduce the memory usage as `char` uses less memory than `string`.

2. Instead of using two `if` statements, we can combine them into an `if-else` structure. This will reduce the number of comparisons, thus optimizing running time.

3. `s = s + 1` and `s = s -1` can be simplified to `s++` and `s--` respectively as they are equivalent.

Here is the optimized code:

```cpp
#include <iostream>
using namespace std;

int main() {
    int n, s = 0;
    cin >> n;
    for (int i = 0; i < n; i++) {
        char operation;
        cin >> operation;
        if (operation == '+') {
            s++;
        } else if (operation == '-') {
            s--;
        }
    }
    cout << s;
    return 0;
}
```
Note: This optimized version assumes that the input is formatted correctly (only '+' or '-' characters are entered). If there's a possibility of malformed input, additional error checking should be added.