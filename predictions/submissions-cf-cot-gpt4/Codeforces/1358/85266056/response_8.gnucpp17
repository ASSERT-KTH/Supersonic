#include <iostream>
#include <vector>
using namespace std;
const long long MOD = 1e9 + 7;
long long getSum(long long n) { return n * (n + 1) / 2; }
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  long long n, x;
  cin >> n >> x;
  vector<long long> v(n);
  for (long long &val : v)
    cin >> val;
    
  long long ans = 0;
  int s = 0, e = 0;
  long long days = 0, sums = 0;
  while (e < 2*n) {
    long long val = v[e % n];
    days += val;
    sums += getSum(val);
    e++;
    while (days > x) {
      if (days - v[s % n] < x) {
        long long diff = days - x;
        ans = max(ans, sums - getSum(diff));
        break;
      }
      days -= v[s % n];
      sums -= getSum(v[s % n]);
      s++;
    }
  }
  cout << ans;
  return 0;
}