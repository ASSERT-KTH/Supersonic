#include <iostream>
#include <vector>
#include <cmath>
#include <cstring>
#define mod 1000000007
#define len 1000005

std::vector<long long> adj[len];
bool vis[len];
long long n, k, sm, ans;

long long modpow(long long x, long long n, long long m) {
  if (n == 0)
    return 1UL % m;
  long long u = modpow(x, n / 2, m);
  u = (u * u) % m;
  if (n % 2 == 1)
    u = (u * x) % m;
  return u;
}

long long mod_(long long x, long long m) {
  if (x > 0)
    return x % m;
  else
    return (m - abs(x) % m) % m;
}

long long dfs(long long n, long long p) {
  if (vis[n])
    return 0;
  vis[n] = true;
  long long x = 0;
  for (auto u : adj[n]) {
    if (u != p)
      x += dfs(u, n);
  }
  return x + 1;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cin >> n >> k;
  for (long long i = 1, u, v, x; i < n; i++) {
    std::cin >> u >> v >> x;
    if (x == 0){
      adj[u].push_back(v), adj[v].push_back(u);
    }
  }
  for (long long i = 1; i <= n; i++) {
    if (!vis[i]) {
      sm += modpow(dfs(i, -1), k, mod);
      sm = mod_(sm, mod);
    }
  }
  ans = modpow(n, k, mod);
  std::cout << mod_(ans - sm, mod);
}
