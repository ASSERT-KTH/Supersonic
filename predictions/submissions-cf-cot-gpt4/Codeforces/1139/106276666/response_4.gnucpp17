#include <iostream>
#include <vector>
#include <cmath>

using namespace std;
typedef long long ll;
typedef unsigned long long ul;
#define len (int)1e6 + 5
#define mod (ll)(1e9 + 7)
#define v(i) vector<i>
#define pb push_back

ul modpow(ul x, ul n, ul m) {
  ul result = 1;
  while (n > 0) {
    if (n % 2 == 1)
      result = (result * x) % m;
    x = (x * x) % m;
    n /= 2;
  }
  return result % m;
}

ul mod_(ll x, ll m) {
  if (x > 0)
    return x % m;
  else
    return (m - abs(x) % m) % m;
}

v(ll) adj[len];
bool vis[len];

ll dfs(ll, ll);

int main() {
  ul n, k;
  ul sm = 0, ans;
  cin >> n >> k;
  for (ll i = 1; i <= n - 1; i++) {
    ll u, v, x;
    cin >> u >> v >> x;
    if (x == 0)
      adj[u].pb(v), adj[v].pb(u);
  }
  for (ll i = 1; i <= n; i++) {
    if (!vis[i]) {
      sm += modpow(dfs(i, -1), k, mod);
      sm = mod_(sm, mod);
    }
  }
  ans = modpow(n, k, mod);
  cout << mod_(ans - sm, mod);
  return 0;
}

ll dfs(ll n, ll p) {
  if (vis[n])
    return 0;
  vis[n] = true;
  ll x = 0;
  for (auto u : adj[n]) {
    if (u != p)
      x += dfs(u, n);
  }
  return x + 1;
}