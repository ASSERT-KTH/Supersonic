#include <bits/stdc++.h>
#define int long long int
#define ll int
#define ibs ios_base::sync_with_stdio(false)
#define cti cin.tie(NULL)
#define bp __builtin_popcount
#define pb emplace_back
#define res(v) sort(v.begin(), v.end()), v.erase(unique(v.begin(), v.end()), v.end());
#define deb(x) cout << endl << "[" << #x << " = " << x << "]" << endl;
using vi = std::vector<long double>;
using vvi = std::vector<vi>;
using pii = std::pair<int, int>;
using vpii = std::vector<pii>;
#define mp make_pair
#define rep(i, a, b) for (int i = a; i <= b; i++)
#define per(i, b, a) for (int i = b; i >= a; i--)
#define all(x) x.begin(), x.end()
using namespace std;
constexpr int N = 2e2 + 10;
constexpr int inf = 1e18 + 10;
constexpr long double Pi = 3.14159265;
#define F first
#define S second
int n, a[N], b[N], pos[N];
void solve() {
  cin >> n;
  rep(i, 1, n) cin >> a[i] >> b[i];
  long double total = accumulate(b + 1, b + 1 + n, 0.0L);
  vvi dp(N * N, vi(N, -inf));
  dp[0][0] = 0;
  long double ans = -inf;
  int cap = 0;
  rep(i, 1, n) {
    auto &tmp = dp;
    cap += a[i];
    per(c, 100 * 100 + 10, 1) per(k, n, 1) if (c >= a[i]) {
      tmp[c][k] = max(dp[c - a[i]][k - 1] + (long double)b[i], dp[c][k]);
    }
  }
  rep(k, 1, n) {
    ans = -inf;
    auto &tmp = dp;
    rep(c, 1, 100 * 100 + 10) ans =
        max(min(tmp[c][k] + (total - tmp[c][k]) / 2.0L, (long double)c), ans);
    cout << fixed << setprecision(20) << ans << " ";
  }
}
int32_t main() {
  ibs;
  cti;
  solve();
  return 0;
}