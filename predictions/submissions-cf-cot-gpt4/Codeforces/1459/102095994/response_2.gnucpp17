#include <algorithm>
#include <vector>
#include <iostream>
#include <numeric>
#include <iomanip>

#define F first
#define S second
#define rep(i, a, b) for (int i = a; i <= b; i++)
#define per(i, b, a) for (int i = b; i >= a; i--)
#define all(x) x.begin(), x.end()

using namespace std;
using vi = std::vector<long double>;
using vvi = std::vector<vi>;
using pii = std::pair<int, int>;
using vpii = std::vector<pii>;
using vvpii = std::vector<vpii>;

void solve() {
  int n;
  cin >> n;
  vector<int> a(n+1), b(n+1);
  long double total = accumulate(b.begin() + 1, b.begin() + 1 + n, 0);
  vvi dp(100*100 + 11, vi(n+1, -1e18 - 10));
  dp[0][0] = 0;
  long double ans = -1e18 - 10;
  int cap = 0;
  rep(i, 1, n) {
    cap += a[i];
    per(c, 100 * 100 + 10, 1) per(k, n, 1) if (c >= a[i]) {
      dp[c][k] = max(dp[c - a[i]][k - 1] + (long double)b[i], dp[c][k]);
    }
  }
  rep(k, 1, n) {
    ans = -1e18 - 10;
    rep(c, 1, 100 * 100 + 10) ans =
        max(min(dp[c][k] + (total - dp[c][k]) / (long double)2.0, (long double)c), ans);
    cout << fixed << setprecision(20) << ans << " ";
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  solve();
  return 0;
}