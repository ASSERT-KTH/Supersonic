#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <climits>
#include <cmath>
using ll = long long int;
constexpr ll dx[] = {-1, +1, 0, 0, +1, -1, +1, -1};
constexpr ll dy[] = {0, 0, -1, +1, +1, +1, -1, -1};
constexpr ll mx = 1e5 + 123;
constexpr ll MOD = 1e9 + 7;
constexpr ll INF = LLONG_MAX;
ll power(ll a, ll b) {
  a %= MOD;
  if (!a)
    return 0;
  ll p = 1;
  while (b > 0) {
    if (b & 1) {
      p *= a;
      p %= MOD;
    }
    a *= a;
    a %= MOD;
    b = b >> 1;
  }
  return p;
}
template <class T> void print(std::vector<T> &v) {
  for (auto u : v) {
    std::cout << u << " ";
  }
  std::cout << std::endl;
}
template <class T> T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a % b) : a); }
template <class T> T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }
int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  ll t, a, i, x, y, o;
  std::cin >> t;
  while (t--) {
    std::cin >> a;
    o = 1;
    std::cout << 2 << std::endl;
    x = (a + (a - 1) + 1) / 2;
    std::cout << a << " " << a - 1 << std::endl;
    for (i = a - 2; i >= 1; i--) {
      std::cout << x << " " << i << std::endl;
      x = (x + i + 1) / 2;
    }
  }
  return 0;
}