Optimization steps:

1. The first step to optimize this program is to get rid of the "#include <bits/stdc++.h>". This header file includes a lot of unnecessary files that can slow down the compilation time and increase memory usage. Instead, we will include only the necessary headers.

2. The macros such as speed() and file() are not used in the program, we can remove them to clean up the code. 

3. "using namespace std" is considered bad practice because it pollutes the global namespace, so we'll remove this. 

4. The "typedef long long int ll" can be replaced with "using ll = long long int" which is more modern and readable.

5. The program uses "endl" to output a newline character and flush the output stream. Flushing the stream can have a performance cost, so instead of using "endl", we can use "\n".

6. We can remove unused data structures, types, constants, and functions to reduce memory usage.

Here's the optimized version of your program:

```cpp
#include <iostream>
#include <climits>

using ll = long long int;

int main() {
  ll t, a, i, x, y, o;
  std::cin >> t;
  while (t--) {
    std::cin >> a;
    o = 1;
    std::cout << 2 << "\n";
    x = (a + (a - 1) + 1) / 2;
    std::cout << a << " " << a - 1 << "\n";
    for (i = a - 2; i >= 1; i--) {
      std::cout << x << " " << i << "\n";
      x = (x + i + 1) / 2;
    }
  }
  return 0;
}
```
With these optimizations, the program should run faster and use less memory.