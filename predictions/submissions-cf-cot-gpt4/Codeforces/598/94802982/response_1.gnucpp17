#include <bits/stdc++.h>
using namespace std;
#define int long long
#define endl '\n';
int dp[31][31][51];
int solve(int n, int m, int k) {
  if (n * m == k || !k)
    return dp[n][m][k] = 0;
  if (dp[n][m][k] != 1e18)
    return dp[n][m][k];
  for (int i = 1; i <= n - 1; ++i) {
    for (int j = 0; j <= k; ++j) {
      int temp = m * m + solve(i, m, j) + solve(n - i, m, k - j);
      dp[n][m][k] = min(dp[n][m][k], temp);
    }
  }
  for (int i = 1; i <= m - 1; ++i) {
    for (int j = 0; j <= k; ++j) {
      int temp = n * n + solve(n, i, j) + solve(n, m - i, k - j);
      dp[n][m][k] = min(dp[n][m][k], temp);
    }
  }
  return dp[n][m][k];
}
signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  for (int i = 0; i < 31; ++i)
    for (int j = 0; j < 31; ++j)
      for (int k = 0; k < 51; ++k)
        dp[i][j][k] = 1e18;
  solve(30, 30, 50);
  int t;
  cin >> t;
  while (t--) {
    int n, m, k;
    cin >> n >> m >> k;
    cout << solve(n, m, k) << endl;
  }
  return 0;
}