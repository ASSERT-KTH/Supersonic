#include <iostream>
#include <vector>
#define N 100005
using namespace std;
int n, x, y, t;
vector<int> tree[N];
int c[N], par[N], h[N], ve[N];
bool ans[N], yes;
void built_h(int i, int k) {
  for (int j = 0; j < tree[i].size(); j++) {
    if (par[i] != tree[i][j]) {
      h[tree[i][j]] = k + 1;
      built_h(tree[i][j], k + 1);
    }
  }
}
int main() {
  cin >> n;
  for (int i = 1; i <= n; i++) {
    ve[i] = i;
    cin >> x >> y;
    if (x == -1)
      t = i, par[i] = i;
    else
      par[i] = x;
    c[i] = y;
    if (x != -1)
      tree[x].push_back(i);
  }
  h[t] = 1;
  built_h(t, 1);
  for (int i = 1; i <= n; i++) {
    bool ok = false;
    for (int j = 0; j < tree[i].size(); j++)
      if (!c[tree[i][j]]) {
        ok = true;
        break;
      }
    if (!c[i])
      ok = true;
    if (!ok)
      ans[i] = true, yes = true;
  }
  if (!yes)
    cout << -1;
  else
    for (int i = 1; i <= n; i++)
      if (ans[i])
        cout << i << " ";
}