#include <iostream>
#include <vector>

#define ll long long

using namespace std;

unsigned int n, A, B, C, D;
unsigned int ans;
unsigned int F;
vector<bool> primes;

unsigned int f(unsigned int x) {
  return A * x * x * x + B * x * x + C * x + D;
}

bool isPrime(unsigned int x) {
  if (x == 2 || x == 3 || x == 5)
    return true;
  if ((x & 1) && x % 3 != 0 && x % 5 != 0)
    return !primes[x];
  return false;
}

void process(unsigned int i) {
  unsigned int j = i;
  unsigned int F1 = f(i);
  while (j <= n) {
    ans += (n / j) * F1;
    if ((ll)j * i > n)
      break;
    j *= i;
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  cin >> n >> A >> B >> C >> D;

  primes.resize(n + 1, true);
  primes[0] = primes[1] = false;
  for (int i = 2; i * i <= n; i++)
    if (primes[i])
      for (int j = i * i; j <= n; j += i)
        primes[j] = false;

  for (unsigned int i = 2; i <= n; i++)
    if (isPrime(i))
      process(i);
  
  cout << ans;
  return 0;
}