Step 1: The first thing that we can optimize are the header files. Instead of `#include <bits/stdc++.h>` we should include only those header files which are actually needed.

Step 2: The variables `i` and `j` are not used in the code. We should remove them.

Step 3: The `FAST` macro is defined but not used in the code. We should remove it.

Step 4: The `vl`, `pb`, `mp` and `all` macros are not used in the code. We should remove them.

Step 5: The `while (t--)` loop is unnecessary as `t` is always 1, so it will only run once. We should remove the loop.

Step 6: We can combine the if-else conditions for `n & 1` and `k <= n/2` because they are performing the same operation: `cout << 2 * k - 1 << endl;`. For this, we can use the logical OR operator `||`.

Step 7: The `endl` in `cout` statements can be replaced with `'\n'` to make it faster. The `endl` not only inserts a newline, but also flushes the output buffer, which can slow down the output.

Here is the optimized code:

```cpp
#include <iostream>

using namespace std;

int32_t main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  int n, k;
  cin >> n >> k;
  if ((n & 1 && k <= (n / 2) + 1) || (k <= n / 2)) {
    cout << 2 * k - 1 << '\n';
  } else {
    cout << 2 * (k - n / 2 - 1) << '\n';
  }
  return 0;
}
```