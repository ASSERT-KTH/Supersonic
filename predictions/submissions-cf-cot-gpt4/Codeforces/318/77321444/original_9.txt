Optimization steps:

1. Remove the `bits/stdc++.h` header file. It's a GCC specific library that includes practically every standard library. This is overkill and increases compilation time. It's better to include only the libraries that you need.

2. Remove the `#define FAST` macro. It's unnecessary for this code because it's not doing a lot of input/output operations. It's also more clear for the reader if you directly use these commands where you need them.

3. Remove the `#define` for `vl`, `pb`, `mp`, and `all`. These definitions are not used in the code, so it's better to remove them for clarity.

4. Remove the variables `i` and `j`, as they are not used in this program.

5. The while loop can be removed, as it only iterates once.

6. The if and else branches have duplicate code. The operation `n / 2` is repeated multiple times. You can store the result of `n / 2` in a variable and reuse it to improve the performance slightly.

Here is the optimized code:

```cpp
#include <iostream>

int32_t main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  
  int n, k;
  cin >> n >> k;
  
  int half_n = n / 2;
  
  if (n & 1) {
    if (k <= half_n + 1) {
      cout << 2 * k - 1 << endl;
    } else {
      cout << 2 * (k - half_n - 1) << endl;
    }
  } else {
    if (k <= half_n) {
      cout << 2 * k - 1 << endl;
    } else {
      cout << 2 * (k - half_n) << endl;
    }
  }

  return 0;
}
```

This optimized code includes only necessary libraries, removes unused macros and variables, and reduces the number of computations by reusing the result of `n / 2`.