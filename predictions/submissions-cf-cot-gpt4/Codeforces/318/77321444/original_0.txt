Here are the steps for optimization:

1. Remove unnecessary macros and global variables: The macros 'vl', 'pb', 'mp', and global variables 'i', 'j' are not used in this program. So, we can remove them to reduce memory usage.

2. Avoid using the bitwise operator for checking whether a number is odd or even: Bitwise operators are usually slower than arithmetic operators. In this case, we can use the modulus operator (%) to check whether a number is odd or even.

3. Avoid repetitive calculations: In your code, 'n / 2' is calculated twice. To optimize this, we can calculate it once and store it in a variable.

4. Remove the unnecessary while loop: The while loop in your code only runs once. There is no need for a loop here, so we can remove it.

Now, let's implement these optimizations in your code:

```
#include <bits/stdc++.h>
using namespace std;

int main() {
#ifndef ONLINE_JUDGE
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif

  int n, k;
  cin >> n >> k;

  int half_n = n / 2;

  if (n % 2 == 1) {
    if (k <= half_n + 1) {
      cout << 2 * k - 1 << "\n";
    } else {
      cout << 2 * (k - half_n - 1) << "\n";
    }
  } else {
    if (k <= half_n) {
      cout << 2 * k - 1 << "\n";
    } else {
      cout << 2 * (k - half_n) << "\n";
    }
  }

  return 0;
}
```