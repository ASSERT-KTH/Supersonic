Step by step optimization:

1. Remove `#include <bits/stdc++.h>`: This is actually a header file that includes many standard libraries. Including it will increase the compile time. You should include only those header files which you are using in your program. In the given code, we are using `iostream` and `fstream` for cin, cout and file operations.

2. Remove unnecessary macros: The macros `vl`, `pb`, `mp` and `all` are not used in the program and can be safely removed.

3. Avoid long long for small numbers: The variables `n`, `k`, `i` and `j` are declared as `long long` which is a 64-bit integer. It is not necessary for this program as the range of these variables seems to be small. You can replace it with `int` which is 32-bit and takes less memory.

4. Avoid global variables: The variables `i` and `j` are declared as global variables but are not used in the program, so they can be removed.

5. Some logic simplification: The code checks if `n` is even or odd to determine the output. This can be simplified by using the bitwise AND operator (`&`) with `1` to check if a number is even or odd.

Let's apply these optimizations to the code:

```cpp
#include <iostream>
#include <fstream>
using namespace std;

int main() {
  ifstream input("input.txt");
  ofstream output("output.txt");
  
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int t = 1;
  while (t--) {
    int n, k;
    input >> n >> k;
    if (n & 1) {
      if (k <= (n / 2) + 1) {
        output << 2 * k - 1 << "\n";
      } else {
        output << 2 * (k - n / 2 - 1) << "\n";
      }
    } else {
      if (k <= n / 2) {
        output << 2 * k - 1 << "\n";
      } else {
        output << 2 * (k - n / 2) << "\n";
      }
    }
  }
  return 0;
}
```

Note that `input.txt` and `output.txt` are file names. Replace them with your actual file names.