This C++ program is already well optimized both in terms of running time and memory usage.

The program reads an integer `n` from the input, and then reads `n` integers. If any of the `n` integers is `1`, it prints "HARD" and ends. If none of the `n` integers is `1`, it prints "EASY" and ends.

Thus, the time complexity is O(n), which is the best possible for this task.

Moreover, the program uses a constant amount of memory, which is also optimal.

To further optimize the program, you could potentially remove the `std::endl` and replace it with `'\n'`. The `std::endl` not only inserts a newline character but also flushes the output buffer, which can slow down the program if you are printing a lot of data. In this case, however, the difference would be negligible since the program only prints one or two lines.

Here is the optimized version of the code:

```cpp
#include <iostream>
#include <string>
using namespace std;
int main() {
  ios_base::sync_with_stdio(false);
  int n, a;
  cin >> n;
  for (int i = 0; i < n; i++) {
    cin >> a;
    if (a == 1) {
      cout << "HARD\n";
      return 0;
    }
  }
  cout << "EASY\n";
  return 0;
}
```
This change will not make a noticeable difference in this case, but it is a good habit to get into for when you are writing programs that do a lot of output.