The given program seems to be reading two integers, then computes the maximum, and subtracts the result from 7. It then uses a switch-case structure to print a string based on the result. 

Here are some optimizations that can be done:

1. The variables `a` and `b` can be declared and initialized in the same line when they are taken as input. This can improve readability and compactness of the code.

2. The `n` variable is used to store the result of the computation `7 - max(a, b)`. However, this intermediate variable isn't really necessary, the expression can be directly used in the switch statement.

3. The `break` statement is used at the end of each `case`. This is not necessary in this case because there is no code after the switch-case structure, and each `case` is returning a value, thus ending the function. However, removing `break` can lead to fall-through behavior in switch-case, which can introduce bugs if the code is later modified. Therefore, it's generally recommended to keep `break` in each `case` unless there's a good reason to allow fall-through.

4. The `return 0;` at the end of the `main()` function isn't necessary in C++. The compiler will automatically insert this if it's not present.

Here's the optimized program:

```cpp
#include <iostream>
using namespace std;
int main() {
  int a, b;
  cin >> a >> b;
  switch (7 - max(a, b)) {
  case 1:
    cout << "1/6";
    break;
  case 2:
    cout << "1/3";
    break;
  case 3:
    cout << "1/2";
    break;
  case 4:
    cout << "2/3";
    break;
  case 5:
    cout << "5/6";
    break;
  case 6:
    cout << "1/1";
    break;
  }
}
```
Please note that the given program is already quite efficient, and the modifications above are mostly about code style and readability rather than performance. The performance of this code is mainly determined by the I/O operations (`cin` and `cout`), and the `max` function and `switch` statement are very fast. 

Therefore, these optimizations will not have a significant impact on the running time or memory usage of the program.