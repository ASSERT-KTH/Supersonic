Here are some steps to optimize your program:

1. You don't need to store the result of `7 - max(a, b)` in a variable `n`. You can use the result directly in the `switch` statement. This will save memory.

2. Modern compilers are pretty good at optimizing `switch` statements, but in some cases, a series of `if` and `else if` statements can be faster. This is because compilers can optimize `if` statements using branch prediction, but they can't always do this with `switch` statements. However, in this case, since the number of cases is not very large, a `switch` statement should be fine.

3. `std::endl` is used to insert a new line and flush the stream. If you don't need to flush the stream, you can use `'\n'` instead of `std::endl`. This can be faster because flushing the stream is a relatively slow operation.

4. In C++, input/output operations are quite slow. If speed is a concern, you can use `std::ios_base::sync_with_stdio(false)`, `std::cin.tie(NULL)`, and `std::cout.tie(NULL)` to make them faster.

Here is the optimized code:

```cpp
#include <iostream>
using namespace std;

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);

    int a, b;
    cin >> a >> b;

    switch (7 - max(a, b)) {
        case 1:
            cout << "1/6\n";
            break;
        case 2:
            cout << "1/3\n";
            break;
        case 3:
            cout << "1/2\n";
            break;
        case 4:
            cout << "2/3\n";
            break;
        case 5:
            cout << "5/6\n";
            break;
        case 6:
            cout << "1/1\n";
            break;
    }

    return 0;
}
```

This code should have the same functionality as your original code, but it is more memory-efficient and potentially faster.