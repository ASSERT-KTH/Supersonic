Optimization Steps:

1. The variable 'n' is only used once in switch, so it's better to put the expression directly in the switch condition. This would save some memory.

2. The use of 'cin' and 'cout' can be slightly slower compared to 'scanf' and 'printf'. But the difference is minimal and may not be noticeable in most cases. However, if we are aiming for maximum efficiency, we could replace 'cin' with 'scanf' and 'cout' with 'printf'. 

3. It's a good practice to add 'return 0' at the end of main() to indicate that the program has executed successfully, but modern C++ compilers add 'return 0' at the end of main() automatically if it's not written in the code. We can remove 'return 0' to make the code a little cleaner.

Optimized Program:

```cpp
#include <cstdio>
#include <algorithm>
using namespace std;
int main() {
  int a, b;
  scanf("%d %d", &a, &b);
  switch (7 - max(a, b)) {
  case 1:
    printf("1/6");
    break;
  case 2:
    printf("1/3");
    break;
  case 3:
    printf("1/2");
    break;
  case 4:
    printf("2/3");
    break;
  case 5:
    printf("5/6");
    break;
  case 6:
    printf("1/1");
    break;
  }
}
```
Remember, these optimizations are minor and won't have a significant impact on the performance of the program. The original code is quite efficient in itself.