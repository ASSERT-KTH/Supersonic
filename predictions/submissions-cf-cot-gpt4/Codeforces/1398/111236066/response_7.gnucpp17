#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

typedef tree<int, null_type, less<int>, rb_tree_tag,
             tree_order_statistics_node_update>
    pbds;

bool isPrime(int n) {
  if (n <= 1)
    return false;
  for (int i = 2; i * i <= n; i++)
    if (n % i == 0)
      return false;
  return true;
}

void solve() {
  int n;
  cin >> n;
  string s;
  cin >> s;
  map<int, int> cnt;
  cnt[1]++;
  int pre = 0;
  int ans = 0;
  for (int i = 0; i < n; i++) {
    int d = s[i] - '0';
    pre += d;
    ans += cnt[pre - i];
    cnt[pre - i]++;
  }
  cout << ans << endl;
}

int main() {
  int t;
  cin >> t;
  for(int i=0; i<t; i++) {
    solve();
  }
  return 0;
}