The given C++ program has a function to check if a number is prime, but it's not used anywhere in the program. The removal of this function would save memory. 

The `rng` variable is also not used in the program, removing it would save memory too.

Additionally, `trace` macro is not used, it can be removed.

The macro `w(t)` is used only once in the code and its definition is unnecessarily spread over multiple lines, this macro can be replaced directly inside the main function, making the code more readable.

The `range` macro is also defined but not used in the code, it can be removed.

`FIO` macro is not used, it can be removed.

The `pbds` typedef is not used in the program, it can be removed.

The macro `MOD` and `inf` are not used in the code, they can be removed.

The `mp`, `mt`, `pqb`, `pqs`, `setbits` macros are not used in the code, they can be removed.

Here is the optimized code:

```cpp
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;

#define int long long
#define pii pair<int, int>
#define vi vector<int>
#define mii map<int, int>

void solve() {
  int n;
  cin >> n;
  string s;
  cin >> s;
  mii cnt;
  cnt[1]++;
  int pre = 0;
  int ans = 0;
  for (int i = 0; i < n; i++) {
    int d = s[i] - '0';
    pre += d;
    ans += cnt[pre - i];
    cnt[pre - i]++;
  }
  cout << ans << endl;
}

int32_t main() {
  int t;
  cin >> t;
  while (t--) { 
    solve(); 
  }
  return 0;
}
```
This optimized code has removed all unnecessary definitions and unused variables, it should run faster and use less memory than the original code.