#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define int long long
const int inf = 0x3f3f3f3f3f3f3f3LL;
const int mod = (int)1e9 + 7;
using namespace std;
#define endl '\n'
template <class T, class T2> void smin(T &a, T2 val) {
  if (a > val)
    a = val;
}
template <class T, class T2> void smax(T &a, T2 val) {
  if (a < val)
    a = val;
}
const int N = 210;
int len[3];
vector<int> v[3];
int dp[N][N][N];
int solve(int idx0, int idx1, int idx2, int len0, int len1, int len2) {
  if (idx0 >= len0 && idx1 >= len1 && idx2 >= len2) {
    return 0;
  }
  int &ans = dp[idx0][idx1][idx2];
  if (ans != -1) {
    return ans;
  }
  ans = 0;
  int idx[3] = {idx0, idx1, idx2};
  int len[3] = {len0, len1, len2};
  for(int i=0; i<3; ++i) {
    for(int j=i+1; j<3; ++j) {
      if(idx[i] < len[i] && idx[j] < len[j]) {
        smax(ans, v[i][idx[i]] * v[j][idx[j]] + solve(idx[0] + (i==0), idx[1] + (i==1), idx[2] + (i==2), len[0], len[1], len[2]));
      }
    }
  }
  for(int i=0; i<3; ++i) {
    if(idx[i] < len[i]) {
      smax(ans, solve(idx[0] + (i==0), idx[1] + (i==1), idx[2] + (i==2), len[0], len[1], len[2]));
    }
  }
  return ans;
}
int32_t main() {
  _ for (int i = 0; i < 3; ++i) {
    cin >> len[i];
    v[i].resize(len[i]);
  }
  for (int i = 0; i < 3; ++i) {
    for (int j = 0; j < len[i]; ++j) {
      cin >> v[i][j];
    }
    sort(v[i].rbegin(), v[i].rend());
  }
  memset(dp, -1, sizeof dp);
  cout << solve(0, 0, 0, len[0], len[1], len[2]);
  return 0;
}