#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
using std::cin;
using std::cout;
using std::endl;
using std::vector;
using std::min;
using std::string;

const int MOD = 1e9 + 7;
const int nax = 1e6 + 10;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int t = 1;
  cin >> t;
  while (t--) {
    string s;
    long long int n;
    cin >> n;
    cin >> s;
    vector<long long int> left(n + 1, 0);
    long long int star = 0;
    for (int i = 0; i < n; i++) {
      if (s[i] == '.') {
        left[i + 1] = left[i] + star;
      } else {
        star++;
        left[i + 1] = left[i];
      }
    }
    long long int ans = LLONG_MAX;
    long long int right = 0;
    star = 0;
    for (int i = n - 1; i >= 0; i--) {
      if (s[i] == '.') {
        right += star;
      } else {
        star++;
      }
      ans = min(ans, left[i] + right);
    }
    cout << ans << endl;
  }
}