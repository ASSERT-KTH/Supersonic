#include <queue>
#include <iostream>
#include <utility>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int mx = 6000;

bool vis[mx][600];
pii dp[mx][600];
int s, d;

bool bfs() {
    queue<pii> q;
    q.push({s, 0});
    vis[s][0] = true;
    int f = 1, sum, mul;
    pii p;
    while (!q.empty()) {
        p = q.front(); q.pop();
        for (int i = f; i < 10; i++) {
            sum = p.first - i;
            mul = (p.second * 10 + i) % d;
            if (sum == 0 && mul == 0) {
                dp[sum][mul] = p;
                return true;
            }
            if (sum >= 0 && !vis[sum][mul]) {
                vis[sum][mul] = true;
                q.push({sum, mul});
                dp[sum][mul] = p;
            }
        }
        f = 0;
    }
    return false;
}

void print(int sum, int mul) {
    if (sum == s && mul == 0) return;
    print(dp[sum][mul].first, dp[sum][mul].second);
    printf("%d", dp[sum][mul].first - sum);
}

int main() {
    scanf("%d %d", &d, &s);
    if (bfs()) print(0, 0);
    else printf("-1\n");
    return 0;
}