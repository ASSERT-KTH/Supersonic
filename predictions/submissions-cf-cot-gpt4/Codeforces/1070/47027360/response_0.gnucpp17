#include <iostream>
#include <queue>
#include <utility>
#include <cstring>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const ll INF = 1 << 28;
const long double EPS = 1e-7;

int vis[6000][600];
pii dp[6000][600];

bool bfs(int s, int d) {
  queue<pii> q;
  q.push(make_pair(s, 0));
  vis[s][0] = 1;
  pii p;
  int f = 1, mul, sum;
  while (!q.empty()) {
    p = q.front();
    q.pop();
    for (int i = f; i < 10; i++) {
      sum = p.first;
      sum -= i;
      mul = p.second;
      mul *= 10;
      mul += i;
      mul %= d;
      if (sum == 0 && mul == 0) {
        dp[sum][mul] = make_pair(p.first, p.second);
        return 1;
      }
      if (sum >= 0 && !vis[sum][mul]) {
        vis[sum][mul] = 1;
        q.push(make_pair(sum, mul));
        dp[sum][mul] = make_pair(p.first, p.second);
      }
    }
    f = 0;
  }
  return 0;
}

void print(int sum, int mul, int s) {
  if (sum == s && mul == 0)
    return;
  print(dp[sum][mul].first, dp[sum][mul].second, s);
  cout << dp[sum][mul].first - sum;
}

int main() {
  int d, s;
  cin >> d >> s;
  if (bfs(s, d) == 1) {
    print(0, 0, s);
  } else
    cout << -1 << endl;
  return 0;
}