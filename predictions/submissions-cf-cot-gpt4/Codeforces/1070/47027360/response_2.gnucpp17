#include <cstdio>
#include <vector>
#include <queue>

typedef long long ll;
typedef std::pair<int, int> pii;

ll INF = 1 << 28;

ll gcd(ll a, ll b) {
  if (b == 0)
    return a;
  else
    return gcd(b, a % b);
}

ll lcm(ll a, ll b) { return a / gcd(a, b) * b; }

std::vector<std::vector<int>> vis(6000, std::vector<int>(600));
std::vector<std::vector<pii>> dp(6000, std::vector<pii>(600));
int s, d;

int bfs() {
  std::queue<pii> q;
  q.push(std::make_pair(s, 0));
  vis[s][0] = 1;
  pii p;
  int f = 1, mul, sum;
  while (!q.empty()) {
    p = q.front();
    q.pop();
    for (int i = f; i < 10; i++) {
      sum = p.first;
      sum -= i;
      mul = p.second;
      mul *= 10;
      mul += i;
      mul %= d;
      if (sum == 0 && mul == 0) {
        dp[sum][mul] = std::make_pair(p.first, p.second);
        return 1;
      }
      if (sum >= 0 && !vis[sum][mul]) {
        vis[sum][mul] = 1;
        q.push(std::make_pair(sum, mul));
        dp[sum][mul] = std::make_pair(p.first, p.second);
      }
    }
    f = 0;
  }
  return 0;
}

void print(int sum, int mul) {
  if (sum == s && mul == 0)
    return;
  print(dp[sum][mul].first, dp[sum][mul].second);
  std::cout << dp[sum][mul].first - sum;
}

int main() {
  scanf("%d %d", &d, &s);
  if (bfs() == 1) {
    print(0, 0);
  } else
    std::cout << -1 << std::endl;
  return 0;
}