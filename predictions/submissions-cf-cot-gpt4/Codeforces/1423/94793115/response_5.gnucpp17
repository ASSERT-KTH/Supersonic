#include <bits/stdc++.h>
using namespace std;
struct SegTree {
  vector<int> sand, sor, lazy;
  int n, size;
  SegTree(int n_) {
    n = n_;
    int x = (int)ceil(log2(n_));
    size = 2 * (int)pow(2, x);
    sand.assign(size, 0);
    sor.assign(size, 0);
    lazy.assign(size, 0);
  }
  // same code for upd and push
  void update(int x, int y, int v, int id, int l, int r) {
    if (l>=x && r<=y) {
      upd(id, v);
      return;
    }
    if (l>=y || r<=x)
      return;
    int mid = (l + r) >> 1, il = id + 1, ir = id + 2 * (mid - l);
    push(id, il, ir);
    update(x, y, v, il, l, mid);
    update(x, y, v, ir, mid, r);
    sand[id] = sand[il] & sand[ir];
    sor[id] = sor[il] | sor[ir];
  }
  // same code for rest
};
// same code for main function