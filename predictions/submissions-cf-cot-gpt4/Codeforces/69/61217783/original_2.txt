The given C++ program is already quite optimized. However, there are a few changes that could potentially make it more efficient.

Firstly, we can use `std::ios::sync_with_stdio(false)` and `cin.tie(NULL)`. These two lines will make `cin` and `cout` faster, which can be significant when dealing with large inputs.

Secondly, we can break the loop as soon as we find a non-zero sum for `x`, `y`, or `z`. This way, we don't need to process the rest of the input if we already know that the final result will be "NO".

Lastly, we can use `printf` and `scanf` instead of `cout` and `cin` for faster I/O.

Optimized program:

```cpp
#include <cstdio>
using namespace std;
int main() {
  std::ios::sync_with_stdio(false);
  cin.tie(NULL);
  int n;
  scanf("%d", &n);
  int sum_x = 0, sum_y = 0, sum_z = 0;
  for (int i = 0; i < n; i++) {
    int x, y, z;
    scanf("%d %d %d", &x, &y, &z);
    sum_x += x;
    sum_y += y;
    sum_z += z;
    if (sum_x != 0 || sum_y != 0 || sum_z != 0) {
      printf("NO");
      return 0;
    }
  }
  printf("YES");
  return 0;
}
```

Please note that the improvements made are typically relevant for larger inputs and may not have a significant impact on smaller inputs.