The given code is already quite optimal, but here are a few small improvements:

1. Use `std::ios::sync_with_stdio(false);` and `cin.tie(NULL);` to speed up C++ I/O.
2. The code loops through n times to check if the sum of x, y, and z are all zero. We can terminate early if at any point, sum_x, sum_y or sum_z are not zero. This is not a guaranteed improvement but could improve the average case. 
3. Use `'\n'` instead of `endl` to avoid unnecessary flushing of the output buffer.

Here's the optimized code:

```cpp
#include <iostream>
using namespace std;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);

  int n;
  cin >> n;

  int sum_x = 0, sum_y = 0, sum_z = 0;
  
  for (int i = 0; i < n; i++) {
    int x, y, z;
    cin >> x >> y >> z;
    sum_x += x;
    sum_y += y;
    sum_z += z;
    
    if (sum_x != 0 || sum_y != 0 || sum_z != 0) {
      cout << "NO" << '\n';
      return 0;
    }
  }
  
  cout << "YES" << '\n';
  return 0;
}
```
Note: The improved code may not always be faster. It will terminate early if a non-zero sum is found, but if the input always results in zero sums, it will perform the same number of operations as the original. Also, using `ios::sync_with_stdio(false);` and `cin.tie(NULL);` can significantly speed up input/output, but it will make synchronization between C and C++ I/O streams impossible, so it should be used with care.