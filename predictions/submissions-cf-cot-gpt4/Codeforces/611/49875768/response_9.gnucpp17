#include <bits/stdc++.h>
using namespace std;

typedef long long LL;

LL rows, columns, horizontal[505][505], vertical[505][505];
char grid[505][505];

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);

  cin >> rows >> columns;
  for (LL i = 1; i <= rows; i++) {
    for (LL j = 1; j <= columns; j++) {
      cin >> grid[i][j];
    }
  }

  for (LL i = 1; i <= rows; i++) {
    for (LL j = 1; j <= columns; j++) {
      horizontal[i][j] = horizontal[i][j - 1];
      vertical[i][j] = vertical[i - 1][j];
      
      if (grid[i][j] == '.') {
        if (grid[i][j] == grid[i][j - 1]){
          horizontal[i][j]++;
        }
        if (grid[i][j] == grid[i - 1][j]){
          vertical[i][j]++;
        }
      }
    }
  }

  LL queryCount;
  cin >> queryCount;
  
  while (queryCount--) {
    LL top, left, bottom, right, result = 0;
    cin >> top >> left >> bottom >> right;
    
    for (LL i = top; i <= bottom; i++) {
      result += horizontal[i][right] - horizontal[i][left - 1];
      if (grid[i][left] == grid[i][left - 1] && grid[i][left] == '.'){
        result--;
      }
    }
    for (LL i = left; i <= right; i++) {
      result += vertical[bottom][i] - vertical[top - 1][i];
      if (grid[top][i] == grid[top - 1][i] && grid[top][i] == '.'){
        result--;
      }
    }
    cout << result << "\n";
  }
  return 0;
}