#include <iostream>
#include <chrono>
#include <random>

#ifdef PERVEEVM_LOCAL
#define debug(x) std::cerr << (#x) << ":\t" << (x) << '\n'
#else
#define debug(x) 238;
#endif

std::ios_base::sync_with_stdio(false);
std::cin.tie(0);
std::cout.tie(0);

using ll = long long;
using ld = long double;

std::mt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());

constexpr double PI = atan2(0.0, -1.0);
constexpr int INF = 0x3f3f3f3f;
constexpr ll LINF = (ll)2e18;
constexpr int N = 10100;

ll gcd(ll a, ll b) {
  while (b != 0) {
    a %= b;
    std::swap(a, b);
  }
  return a;
}

ll lcm(ll a, ll b) {
  ll d = gcd(a, b);
  a /= d;
  return a * b;
}

ll gcdEx(const ll a, const ll b, ll &x, ll &y) {
  //...
}

ll binmul(const ll a, const ll b, const ll mod) {
  //...
}

ll solve(const ll r1, const ll mod1, const ll r2, const ll mod2) {
  //...
}

ll a[N];

void run() {
  //...
}

int main(void) {
  auto start = std::chrono::high_resolution_clock::now();
  run();
  auto end = std::chrono::high_resolution_clock::now();

#ifdef PERVEEVM_LOCAL
  std::cerr << "Execution time: "
            << std::chrono::duration_cast<std::chrono::milliseconds>(end -
                                                                     start)
                   .count()
            << " ms" << '\n';
#endif

  return 0;
}