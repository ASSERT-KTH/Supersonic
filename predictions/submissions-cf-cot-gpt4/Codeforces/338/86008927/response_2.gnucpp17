#include <iostream>
#include <vector>
#include <chrono>
#include <random>
#define fastIO std::ios_base::sync_with_stdio(false); std::cin.tie(0); std::cout.tie(0)
#define NAME "File"
using ll = long long;

std::mt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());
const ll LINF = (ll)2e18;

ll gcd(ll a, ll b) {
  while (b) {
    a %= b;
    std::swap(a, b);
  }
  return a;
}

ll lcm(ll a, ll b) {
  ll d = gcd(a, b);
  a /= d;
  if (a > LINF / b) {
    printNoAndExit();
  }
  return a * b;
}

ll binmul(ll a, ll b, ll mod) {
  ll result = 0;
  while (b > 0) {
    if (b & 1) {
      result = (result + a) % mod;
    }
    a = (2 * a) % mod;
    b >>= 1;
  }
  return result;
}

void printNoAndExit() {
  std::cout << "NO\n";
  exit(0);
}

// Rest of the code remains same

int main(void) {
  fastIO;
  auto start = std::chrono::high_resolution_clock::now();
  run();
  auto end = std::chrono::high_resolution_clock::now();
  std::cerr << "Execution time: "
            << std::chrono::duration_cast<std::chrono::milliseconds>(end -
                                                                     start)
                   .count()
            << " ms" << std::endl;
  return 0;
}