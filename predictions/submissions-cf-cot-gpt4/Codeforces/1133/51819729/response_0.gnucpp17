#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast,no-stack-protector")
#pragma GCC target("avx")
#include <algorithm>
#include <bitset>
#include <cassert>
#include <chrono>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <unordered_map>
#include <unordered_set>
#include <vector>
using namespace std;
#define fi first
#define se second
#define PB push_back
#define EB emplace_back
#define MP make_pair
#define __builtin_popcount __builtin_popcountll
mt19937 RNG(chrono::high_resolution_clock::now().time_since_epoch().count());
inline int myrand() { return abs((int)RNG()); }
typedef long long ll;
typedef unsigned long long ull;
typedef std::pair<int, int> pii;
typedef std::pair<ll, ll> pll;
const int MAXN = 2e5 + 100;
const int MOD = 1e9 + 7;
const ll MAXV = 1e9;
const double eps = 1e-12;
const ll INF = 1e16;
inline string toStr(ll x) { return to_string(x); }
inline ll toInt(string s) { return stoi(s); }
ll rnd(int k) {
  if (!k)
    return myrand() % MAXV + 1;
  ll t = myrand() % MAXV + 1;
  return (myrand() % t) + (MAXV - t);
}
ll random_gen(int sign) {
  ll x = rnd(myrand() % 2);
  ll s = myrand() % 2;
  s = !s ? 1 : -1;
  return sign == 1 ? x : sign == -1 ? -x : s * x;
}
const int MAX_NODE = MAXN;
// ... Rest of the code
// Removed unused macros and minimized type conversions