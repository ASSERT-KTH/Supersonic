#include <algorithm>
#include <cassert>
#include <chrono>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <unordered_map>
#include <unordered_set>
#include <vector>

using std::cin;
using std::cout;

constexpr int MAXN = 2e5 + 100;
constexpr int MOD = 1e9 + 7;
constexpr long long MAXV = 1e9;
constexpr double eps = 1e-12;
constexpr long long INF = 1e16;

typedef long long ll;
typedef std::pair<int, int> pii;
typedef std::pair<ll, ll> pll;

std::mt19937 RNG(chrono::high_resolution_clock::now().time_since_epoch().count());

inline int myrand() { return abs((int)RNG()); }

//... the rest of the code remains the same

int main() {
  std::ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  Ares_KN();
  cerr << "\nTime elapsed: " << 1000 * clock() / CLOCKS_PER_SEC << "ms\n";
  return 0;
}