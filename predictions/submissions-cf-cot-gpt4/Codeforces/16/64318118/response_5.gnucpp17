#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include "bits/stdc++.h"
#define fore(i, a, b) for (int i = a; i < (b); i++)
#define fr(i, a, b) for (int i = a; i >= b; i--)
#define fast ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0)
using namespace std;
typedef long long ll;
typedef pair<ll, ll> pr;

inline void solve() {
    int n;
    cin >> n;
    vector<double*> m(n);
    for(int i = 0; i < n; i++)
    {
        m[i] = new double[n];
        for(int j = 0; j < n; j++)
            cin >> m[i][j];
    }
    vector<double> dp(1 << n, 0);
    dp[(1 << n) - 1] = 1;
    vector<int> shift(n);
    for(int i = 0; i < n; i++)
        shift[i] = 1 << i;
    fr(i, (1 << n) - 1, 0) {
        int ruby = 0;
        fore(g, 0, n) {
            if ((i >> g) & 1)
                ruby++;
        }
        fore(j, 0, n) fore(k, j + 1, n) {
            if (((i >> j) & 1) && ((i >> k) & 1)) {
                int a = 0, b = 0;
                fore(g, 0, n) {
                    if (g != j && ((i >> g) & 1))
                        a += shift[g];
                    if (g != k && ((i >> g) & 1))
                        b += shift[g];
                }
                double factor = 2 * dp[i] / (ruby * (ruby - 1));
                dp[b] += factor * m[j][k];
                dp[a] += factor * m[k][j];
            }
        }
    }
    fore(i, 0, n) cout << fixed << setprecision(20) << dp[shift[i]] << ' ';
    for(int i = 0; i < n; i++)
        delete[] m[i];
}

int main() {
    fast;
#if defined(_DEBUG)
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    solve();
}