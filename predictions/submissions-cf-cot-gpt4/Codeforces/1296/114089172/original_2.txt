The primary areas for optimization in this program are:

1. Removing the unused `oo`, `OO`, `mod`, and `N` constants.
2. Changing the `ll` and `int` types in the program to `auto`, which automatically adjusts the type according to the values.
3. Converting the `if` statements to a `switch` statement for faster execution.
4. Removing the unused `sort` functions.

Optimized program:

```cpp
#include <bits/stdc++.h>
using namespace std;
void run_case() {
  auto n = 0;
  cin >> n;
  string s;
  cin >> s;
  s = " " + s;
  map<int64_t, int> mp;
  auto sum = 0ll;
  mp[0] = 1;
  auto l = 0, r = 0, ans = 1000000000;
  for (int i = 1; i <= n; i++) {
    switch (s[i]) {
        case 'L': sum += 1000000000; break;
        case 'R': sum -= 1000000000; break;
        case 'U': sum += 7; break;
        case 'D': sum -= 7; break;
    }
    if (mp[sum] != 0) {
      int left = mp[sum];
      int right = i;
      if ((right - left + 1) < ans) {
        ans = right - left + 1;
        l = left;
        r = right;
      }
    }
    mp[sum] = i + 1;
  }
  if (ans == 1000000000) {
    cout << "-1\n";
  } else {
    cout << l << " " << r << "\n";
  }
}
int main() {
  ios::sync_with_stdio(false), cin.tie(nullptr);
  auto tc = 1;
  cin >> tc;
  while (tc--)
    run_case();
}
```

This program uses a reduced number of variables, optimizes the if-else statement for faster execution, and removes unnecessary functions.