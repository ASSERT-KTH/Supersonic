The given C/C++ program can be optimized in several ways:

1. Avoid using `#include <bits/stdc++.h>`: This is actually a header file that includes most of the standard library headers. It is convenient for writing short programs or for competitive programming, but it makes your program non-portable and increases compilation time. Instead, only include the necessary headers.

2. Reduce scope of variables: The variable `temp` is only used in the for-loop, so it makes sense to declare it there.

3. Avoid incrementing in the condition of the for-loop: The `i++` operation in the condition of the for-loop is difficult to read and can lead to bugs. It's better to put it in the third part of the for-loop statement.

4. Simplify the ternary operator in the output statement: The current output statement can be simplified by removing redundant conditions and parentheses.

Here is the optimized program:

```c++
#include <iostream>
using namespace std;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int test;
  cin >> test;
  while (test--) {
    int n, a[2] = {};
    cin >> n;
    for (int i = 0, temp; i < n; i++){
      cin >> temp;
      a[temp % 2]++;
    }
    cout << (a[1] > 0 && !(a[0] == 0 && a[1] % 2 == 0) ? "YES\n" : "NO\n");
  }
}
```
This optimized version is easier to read, understand, and maintain, and should also perform slightly better due to the reduced scope of the variable and the simplified output statement.