Here are the steps to optimize your program:

1. Replace `#include <bits/stdc++.h>` with the specific libraries that you are using. The `bits/stdc++.h` header file includes a lot of unnecessary header files which increases the compilation time. In your program, you are using iostream and iomanip, so replace `bits/stdc++.h` with those.

2. Avoid using `using namespace std;`. Although it's not a performance optimization, it's a good practice to avoid namespace pollution.

3. Avoid using `cin.tie(NULL);` and `cout.tie(NULL);`. They are used to untie cin and cout, which is unnecessary in your case. By default, cin is tied to cout to flush the buffer before each input operation. Since you don't mix input and output operations, you don't need to untie them.

4. The logic inside the cout statement is quite confusing, it would be better to calculate it outside the cout statement, store it in a boolean variable and then print it. This won't necessarily improve performance, but it will make the code more readable.

Here is your optimized code:

```c++
#include <iostream>
#include <iomanip>

int main() {
    std::ios_base::sync_with_stdio(false);
    int test;
    std::cin >> test;
    while (test--) {
        int n, a[2] = {};
        std::cin >> n;
        for (int temp, i = 0; i++ < n; a[temp % 2]++)
            std::cin >> temp;
        bool isYes = (a[1] != 0 && !(a[0] == 0 && (a[1] % 2 == 0)));
        std::cout << (isYes ? "YES\n" : "NO\n");
    }
}
```
The optimized code now includes only the necessary libraries, avoids namespace pollution, and has more readable output logic. The performance improvements from these changes will be minimal, but they will make your code cleaner and easier to understand.