#include <vector>
#include <queue>
#include <cstdio>

using namespace std;

void bfs(int u, vector<vector<int>>& v, vector<bool>& vis, int& nn, int& ne) {
  nn = 0, ne = 0;
  queue<int> q;
  q.push(u);
  vis[u] = true;
  while (!q.empty()) {
    u = q.front();
    q.pop();
    nn++;
    if (v[u].size() == 2)
      ne++;
    for (int i = 0; i < (int)v[u].size(); i++) {
      int p = v[u][i];
      if (!vis[p]) {
        vis[p] = true;
        q.push(p);
      }
    }
  }
}

int main() {
  int i, n, m, a, b, c = 0;
  scanf("%d %d", &n, &m);
  vector<vector<int>> v(n+1);
  vector<bool> vis(n+1, false);
  int nn, ne;
  while (m--) {
    scanf("%d %d", &a, &b);
    v[a].emplace_back(b);
    v[b].emplace_back(a);
  }
  for (i = 1; i <= n; i++) {
    if (!vis[i]) {
      bfs(i, v, vis, nn, ne);
      if (nn == ne)
        c++;
    }
  }
  printf("%d\n", c);
  return 0;
}