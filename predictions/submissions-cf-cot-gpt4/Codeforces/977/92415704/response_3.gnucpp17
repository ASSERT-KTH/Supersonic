#include <iostream>
#include <vector>
#include <queue>

std::vector<int> v[200010];
bool vis[200010];
int ne;

void bfs(int u) {
  ne = 0;
  vis[u] = true;
  std::queue<int> q;
  q.push(u);
  while (!q.empty()) {
    u = q.front();
    q.pop();
    if (v[u].size() == 2)
      ne++;
    for (int i = 0; i < (int)v[u].size(); i++) {
      int p = v[u][i];
      if (!vis[p]) {
        vis[p] = true;
        q.push(p);
      }
    }
  }
  if (q.size() == ne)
    return q.size();
  else
    return 0;
}

int main() {
  int n, m, a, b, c = 0;
  std::cin >> n >> m;
  while (m--) {
    std::cin >> a >> b;
    v[a].push_back(b);
    v[b].push_back(a);
  }
  for (int i = 1; i <= n; i++) {
    if (!vis[i]) {
      c += bfs(i);
    }
  }
  std::cout << c << std::endl;
  return 0;
}