Your program takes four integers, sorts them, and then checks how many distinct numbers there are, subtracts this from 3 and outputs the result.

To optimize the program, we can make the following changes:

1. **Include only necessary headers**: `#include <bits/stdc++.h>` includes many unnecessary headers, which can slow down the compile time. We can replace it with the specific headers we need, in this case `#include <iostream>` and `#include <algorithm>`.

2. **Avoid using `namespace std`**: Declaring `using namespace std` can potentially lead to name conflicts. It's better to use `std::` prefix when calling functions from the standard library.

3. **Optimize the input loop**: Instead of using a loop for taking the input, we can take the input directly. This reduces the overhead of loop iterations.

4. **Eliminate the unnecessary variable `ans`**: We can directly output the result without storing it in the variable `ans`. This makes the code more straightforward and saves memory.

5. **Optimize the array size**: As we're only working with 4 elements, we can reduce the size of the array `mas` from 5 to 4. This saves memory.

Here is the optimized code:

```cpp
#include <iostream>
#include <algorithm>

int main() {
  int mas[4];
  std::cin >> mas[0] >> mas[1] >> mas[2] >> mas[3];
  std::sort(mas, mas + 4);
  int distinct = 3;
  for (int i = 0; i < 3; ++i) {
    if (mas[i] != mas[i + 1])
      --distinct;
  }
  std::cout << distinct;
  return 0;
}
```