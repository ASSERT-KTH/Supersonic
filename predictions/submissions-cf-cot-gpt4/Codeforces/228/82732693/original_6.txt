Step 1: Replace bits/stdc++.h with the specific libraries that are used in your application. This is because bits/stdc++.h includes a lot of unnecessary libraries which can slow down your compilation time.

Step 2: The array size is 5 but only first 4 elements are used, so we can change the array size to 4.

Step 3: Instead of using sort function, we can use a set data structure to store the array elements. A set in C++ STL automatically sorts the elements when they are inserted and it doesn't allow duplicates. This will eliminate the need for a second loop.

Step 4: Instead of decrementing ans, we directly calculate ans by subtracting the number of unique elements (size of the set) from 4.

Optimized program:

```c++
#include <iostream>
#include <set>
using namespace std;
int main() {
  set<int> s;
  for (int i = 0; i < 4; ++i) {
    int x;
    cin >> x;
    s.insert(x);
  }
  cout << 4 - s.size();
}
```