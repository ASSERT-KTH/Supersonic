#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;
typedef vector<pii> vpii;
typedef vector<vpii> vvpii;
typedef vector<pll> vpll;
typedef vector<vpll> vvpll;
typedef vector<pdd> vpdd;
typedef vector<vpdd> vvpdd;

inline int sz(const auto& x) { return int(x.size()); }

template <typename T> inline void ckmin(T &a, const T &b) { a = min(a, b); }

void setIO() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
}

int main() {
  setIO();
  const int MAXV = 61;
  int N;
  cin >> N;
  vi a(N);
  for (auto& x : a) cin >> x;
  vi pri;
  for (int v = 2; v < MAXV; v++) {
    bool ok = true;
    for(const auto& p : pri) if (v % p == 0) ok = false;
    if (ok) pri.push_back(v);
  }
  vi mask(MAXV);
  for (int v = 1; v < MAXV; v++)
    for (int i = 0; i < sz(pri); i++)
      if (v % pri[i] == 0) mask[v] |= 1 << i;
  
  vvpii dp(N + 1, vpii(1 << sz(pri), {INT_MAX, -1}));
  dp[0][0].first = -1;
  for (int i = 0; i < N; i++)
    for (int m = 0; m < (1 << sz(pri)); m++)
      if (dp[i][m].first < INT_MAX)
        for (int v = 1; v < MAXV; v++)
          if (!(mask[v] & m))
            ckmin(dp[i + 1][m ^ mask[v]], make_pair(dp[i][m].first + abs(v - a[i]), v));

  vi b(N);
  int m = min_element(dp.back().begin(), dp.back().end()) - dp.back().begin();
  for (int i = N - 1; i >= 0; i--) {
    b[i] = dp[i + 1][m].second;
    m ^= mask[b[i]];
  }
  for(const auto& x : b) cout << x << ' ';
  cout << '\n';
  return 0;
}