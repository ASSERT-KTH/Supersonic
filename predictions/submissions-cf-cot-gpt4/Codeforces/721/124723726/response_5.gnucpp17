#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

using ll = long long int;
ll const MOD = 1000000007;

template <class T> inline bool chmin(T &a, T b) { return a > b ? a = b, 1 : 0; }
template <class T> inline bool chmax(T &a, T b) {
  return a < b ? a = b, 1 : 0;
}
template <class T> inline void add(T &a, T b) {
  a += b;
  a >= MOD ? a - MOD : a;
}
template <class T> inline void sub(T &a, T b) {
  a -= b;
  a < 0 ? a + MOD : a;
}
template <class T> inline void mul(T &a, T b) { return (a * b) % MOD; }

bool comp1(char &s1, char &s2) { return s1 > s2; }
bool comp2(const pair<ll, pair<ll, ll>> &a, const pair<ll, pair<ll, ll>> &b) {
  if (a.first > b.first)
    return 1;
  if (a.first == b.first && a.second.second > b.second.second)
    return 1;
  return 0;
}

void readArray(ll a[], int n) {
  for (ll i = 0; i < n; i++)
    cin >> a[i];
}

void solve() {
  ll t1 = 1;
  ll const inf = 1e9 + 7;
  for (ll tt = 1; tt <= t1; tt++) {
    int n, m, T;
    cin >> n >> m >> T;
    vector<pair<int, int>> adj[n + 1];
    for (int i = 0; i < m; i++) {
      int u, v, w;
      cin >> u >> v >> w;
      adj[u].push_back({v, w});
    }
    vector<vector<int>> dp(n + 1, vector<int>(n + 1, inf));
    vector<vector<int>> par(n + 1, vector<int>(n + 1, -1));
    dp[1][1] = 0;
    vector<ll> indc(n + 1, -1);
    for (int j = 1; j < n; j++) {
      for (int i = 1; i <= n; i++) {
        for (const auto &e : adj[i]) {
          ll to = e.first;
          if (dp[to][j + 1] > dp[i][j] + e.second && dp[i][j] + e.second <= T) {
            indc[to] = i;
            dp[to][j + 1] = dp[i][j] + e.second;
            par[to][j + 1] = i;
          }
        }
      }
    }
    int res = 0;
    for (int i = 1; i <= n; i++)
      if (dp[n][i] <= T)
        res = i;
    vector<int> ans;
    int cur = n;
    int jumps = res;
    ans.push_back(cur);
    while (jumps > 1) {
      ans.push_back(par[cur][jumps]);
      cur = par[cur][jumps];
      jumps--;
    }
    reverse(ans.begin(), ans.end());
    cout << res << '\n';
    for (ll i : ans)
      cout << i << " ";
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  solve();
  return 0;
}