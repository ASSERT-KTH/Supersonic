#include <bits/stdc++.h>

constexpr long long MOD = 1000000007;
constexpr long long inf = 1e9 + 7;
constexpr long long maxn = 5e5 + 1;

using lld = long double;
using ll = long long int;
using ar = std::vector<ll>;
using mat = std::vector<std::vector<ll>>;
using Pair = std::pair<ll, ll>;

mat cn(ll n, ll m) { return std::vector<std::vector<ll>>(n, std::vector<ll>(m)); }

template <class T> inline bool chmin(T &a, T b) { return a > b ? a = b, 1 : 0; }
template <class T> inline bool chmax(T &a, T b) {
  return a < b ? a = b, 1 : 0;
}
template <class T> inline void add(T &a, T b) {
  a += b;
  a >= MOD ? a - MOD : a;
}
template <class T> inline void sub(T &a, T b) {
  a -= b;
  a < 0 ? a + MOD : a;
}

void remDup(std::vector<ll> &v) {
  sort(v.begin(), v.end());
  v.erase(unique(v.begin(), v.end()), v.end());
}

void readArray(ll a[], int n) {
  for (ll i = 0; i < n; ++i)
    std::cin >> a[i];
}

void solve() {
  ll t1 = 1;
  for (ll tt = 1; tt <= t1; ++tt) {
    int n, m, T;
    std::cin >> n >> m >> T;
    std::vector<Pair> adj[n + 1];
    adj->reserve(n+1);
    for (int i = 0; i < m; ++i) {
      int u, v, w;
      std::cin >> u >> v >> w;
      adj[u].push_back({v, w});
    }
    mat dp(n + 1, std::vector<int>(n + 1, inf));
    mat par(n + 1, std::vector<int>(n + 1, -1));
    dp[1][1] = 0;
    std::vector<ll> indc(n + 1, -1);
    for (int j = 1; j < n; ++j) {
      for (int i = 1; i <= n; ++i) {
        for (auto e : adj[i]) {
          ll to = e.first;
          if (dp[to][j + 1] > dp[i][j] + e.second && dp[i][j] + e.second <= T) {
            indc[to] = i;
            dp[to][j + 1] = dp[i][j] + e.second;
            par[to][j + 1] = i;
          }
        }
      }
    }
    int res = 0;
    for (int i = 1; i <= n; ++i)
      if (dp[n][i] <= T)
        res = i;
    std::vector<int> ans;
    ans.reserve(res);
    int cur = n;
    int jumps = res;
    ans.push_back(cur);
    while (jumps > 1) {
      ans.push_back(par[cur][jumps]);
      cur = par[cur][jumps];
      jumps--;
    }
    reverse(ans.begin(), ans.end());
    std::cout << res << '\n';
    for (ll i : ans)
      std::cout << i << " ";
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);
  solve();
  return 0;
}