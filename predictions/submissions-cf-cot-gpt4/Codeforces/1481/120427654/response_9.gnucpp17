#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#pragma GCC optimize("Ofast,unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

using namespace __gnu_pbds;

typedef long long ll;
typedef std::pair<int, int> pii;
typedef std::pair<long double, pii> muchie;

typedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> OST;

const ll NMAX = 100001;
const ll INF = (1LL << 60);
const ll HALF = (1LL << 59);
const ll MOD = 1000000007;
const ll BLOCK = 518;
const ll base = 31;
const ll nr_of_bits = 21;
const ll LIMIT = 1000;

int dp[BLOCK][NMAX];
int cnt[NMAX];

std::vector<int> lvl[NMAX];
std::vector<int> v[NMAX];
std::vector<int> levelecu[NMAX];
std::map<int, int> mp;
std::map<int, int> l;

int depth;
char cul[NMAX];
int cc[NMAX];

void DFS(int node, int p, int level) {
    lvl[level].push_back(node);
    depth = std::max(depth, level);
    for (int x : v[node]) {
        if (x == p)
            continue;
        DFS(x, node, level + 1);
    }
}

int main() {
    // ...
}