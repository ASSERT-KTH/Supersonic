#include <iostream>
#include <vector>
#include <unordered_map>
#define debug(x) cerr << #x << " " << x << "\n"
#define debugs(x) cerr << #x << " " << x << " "
#pragma GCC optimize("Ofast,unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
typedef long long ll;
typedef pair<int, int> pii;
const ll NMAX = 100001;
const ll INF = (1LL << 60);
const ll HALF = (1LL << 59);
const ll MOD = 1000000007;
const ll BLOCK = 518;
const ll base = 31;
const ll nr_of_bits = 21;
const ll LIMIT = 1000;

void DFS(int node, int p, int level, vector<int>* lvl, vector<int>* v, int& depth) {
  lvl[level].push_back(node);
  depth = max(depth, level);
  for (auto x : v[node]) {
    if (x == p)
      continue;
    DFS(x, node, level + 1, lvl, v, depth);
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  // Define all necessary variables here
  int dp[BLOCK][NMAX];
  int cnt[NMAX];
  vector<int> lvl[NMAX];
  vector<int> v[NMAX];
  vector<int> levelecu[NMAX];
  unordered_map<int, int> mp;
  int depth;
  char cul[NMAX];
  int cc[NMAX];

  // Your main code here
  // ...

  return 0;
}