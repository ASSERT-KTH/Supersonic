#include <bits/stdc++.h>
#define debug(x) cerr << #x << " " << x << "\n"
#define debugs(x) cerr << #x << " " << x << " "
#pragma GCC optimize("Ofast,unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
using namespace std;
typedef long long ll;
const ll NMAX = 100001;
const ll INF = (1LL << 60);
const ll HALF = (1LL << 59);
const ll MOD = 1000000007;
const ll BLOCK = 518;
const ll base = 31;
const ll nr_of_bits = 21;
const ll LIMIT = 1000;
int dp[BLOCK][NMAX];
int cnt[NMAX];
vector<int> v[NMAX];
int depth;
char cul[NMAX];
int cc[NMAX];
void DFS(int node, int p, int level) {
  depth = max(depth, level);
  for (auto x : v[node]) {
    if (x == p)
      continue;
    DFS(x, node, level + 1);
  }
}
int main() {
  int n, x, i;
  cin >> n >> x;
  int a = x;
  int b = n - x;
  for (i = 2; i <= n; i++) {
    cin >> x;
    v[x].push_back(i);
    v[i].push_back(x);
  }
  for (i = 1; i <= n; i++) {
    cnt[i] = v[i].size() - (i != 1);
  }
  DFS(1, 0, 1);
  // Continue the rest of the program...
}