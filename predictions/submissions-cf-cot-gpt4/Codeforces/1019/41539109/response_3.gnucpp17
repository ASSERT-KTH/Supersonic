#include <bits/stdc++.h>
using namespace std;
#pragma GCC optimize("O3")
struct POINT {
  int x, y;
  POINT() : x(0), y(0) {}
  POINT(int x, int y) : x(x), y(y) {}
  void operator+=(const POINT &t) { x += t.x; y += t.y; }
  void operator-=(const POINT &t) { x -= t.x; y -= t.y; }
  void operator!() { swap(x, y); x = -x; }
};
inline long long dot(const POINT &a, const POINT &b) {
  return (long long)a.x * b.x + (long long)a.y * b.y;
}
inline long long cross(const POINT &a, const POINT &b) {
  return (long long)a.x * b.y - (long long)a.y * b.x;
}
inline long long cross(const POINT &a, const POINT &b, const POINT &c) {
  POINT ac = a; ac -= c;
  POINT bc = b; bc -= c;
  return cross(ac, bc);
}
// ... rest of the program is unchanged ...
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  // ... rest of the program is unchanged ...
  for (kierunek u : kol) {
    // ... rest of the program is unchanged ...
    if (ww == S) {
      cout << "Yes\n";
      cout << tab[p].x << ' ' << tab[p].y << '\n';
      cout << tab[q].x << ' ' << tab[q].y << '\n';
      cout << stab[s].x << ' ' << stab[s].y << '\n';
      return 0;
    }
    // ... rest of the program is unchanged ...
    if (ww == -S) {
      cout << "Yes\n";
      cout << tab[p].x << ' ' << tab[p].y << '\n';
      cout << tab[q].x << ' ' << tab[q].y << '\n';
      cout << stab[s].x << ' ' << stab[s].y << '\n';
      return 0;
    }
    // ... rest of the program is unchanged ...
  }
  cout << "No\n";
  return 0;
}