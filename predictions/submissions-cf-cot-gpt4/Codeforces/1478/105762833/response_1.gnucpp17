#include <iostream>
#include <vector>
#include <bitset>
#include <algorithm>
#include <iterator>

#define forn(k, n) for (int k = 0; k < (n); ++k)
using pii = std::pair<int, int>;
constexpr std::string eol = "\n";

void solve() {
  int n, d;
  std::cin >> n >> d;
  std::bitset<10 * d + d> tab;
  int sz_tab = tab.size();
  forn(k, sz_tab) { tab[k] = k % 10 == d || (k / 10) == d; }
  forn(k, sz_tab) if (tab[k]) {
    forn(j, sz_tab) if (tab[j]) {
      forn(l, sz_tab) if (k + j * l < sz_tab) { tab[k + j * l] = true; }
    }
  }
  forn(k, n) {
    int ak;
    std::cin >> ak;
    std::cout << (ak >= sz_tab || tab[ak] ? "YES" : "NO") << eol;
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int test_sample_count;
  std::cin >> test_sample_count;
  while (test_sample_count--) {
    solve();
  }
  return 0;
}