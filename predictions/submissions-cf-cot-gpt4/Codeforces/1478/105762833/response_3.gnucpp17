#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
#define all(c) begin(c), end(c)
template <class C> inline void log_c(const C &c) {
#ifdef LOCAL_PROJECT
  std::copy(
      std::begin(c), std::end(c),
      std::ostream_iterator<std::remove_reference_t<decltype(*std::begin(c))>>(
          std::clog, " "));
  std::clog << std::endl;
#endif
}
using namespace std;
using pii = pair<int, int>;
const std::string eol = "\n";
void solve() {
  int n, d;
  scanf("%d %d", &n, &d);
  vector<bool> tab(10 * d + d);
  int tab_size = tab.size();

  for (int k = 0; k < tab_size; ++k) {
    tab[k] = k % 10 == d || (k / 10) == d;
  }
  for (int k = 0; k < tab_size; ++k) {
    if (tab[k]) {
      for (int j = 0; j < tab_size; ++j) {
        if (tab[j]) {
          int new_index = k + j * tab_size;
          if (new_index < tab_size) {
            tab[new_index] = true;
          }
        }
      }
    }
  }
  for (int k = 0; k < n; ++k) {
    int ak;
    scanf("%d", &ak);
    printf((ak >= tab_size || tab[ak]) ? "YES\n" : "NO\n");
  }
}
int main() {
  std::ios_base::sync_with_stdio(false);
  int test_sample_count;
  scanf("%d", &test_sample_count);
  while (test_sample_count--) {
    solve();
  }
  return 0;
}