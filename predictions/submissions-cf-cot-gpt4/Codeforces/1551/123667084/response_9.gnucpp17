#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

#define fastio()                                                               \
  ios_base::sync_with_stdio(0);                                                \
  cin.tie(0);                                                                  \
  cout.tie(0)
#define ll long long

const ll MaxN = 1e5 + 5;
const ll INF = 1e9;
const ll MOD = 1e9 + 7;

void solve() {
  string s;
  cin >> s;
  int n, k;
  n = s.size(), k = 2;
  vector<int> a(n, 0), index(n, 0);
  for (int i = 0; i < n; a[i] = s[i], index[i] = i, ++i)
    ;
  sort(index.begin(), index.end(), [&](int i, int j) { return a[i] < a[j]; });
  vector<int> res(n, 0), g(k + 1, -1);
  int ans = 0;
  for (int i = 0, p = 0; i < n; ++i, ++p) {
    int pos = p % k + 1;
    if (g[pos] == -1)
      g[pos] = index[i];
    else if (a[index[i - k]] != a[index[i]])
      g[pos] = index[i];
    else
      --p;
    if (i >= k - 1) {
      res[g[pos]] = pos;
      ans += (pos != 0);
    }
  }
  cout << ans / 2 << '\n';
}
int main() {
  fastio();
  int t = 1;
  cin >> t;
  while (t--)
    solve();
  return 0;
}