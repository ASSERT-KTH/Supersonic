#include <iostream>
#include <vector>
#include <utility>
#include <algorithm>
#include <cmath>
#include <string>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef vector<int> vi;

const ll MaxN = 1e5 + 5;
const ll INF = 1e9;
const ll MOD = 1e9 + 7;
const double eps = 1e-5;
const double pi = acos(-1);

void solve(const string& s) {
  int n = s.size(), k = 2;
  vpii a(n, pii(0, 0));
  for (int i = 0; i < n; a[i].second = i, a[i].first = s[i], ++i);
  sort(a.begin(), a.end());

  vi res(n, 0);
  vector<vi> g(k + 1, vi());
  for (int i = 0, p = 0; i < n; ++i, ++p) {
    int pos = p % k + 1;
    if (g[pos].empty())
      g[pos].push_back(a[i].second);
    else if (a[i - k].first != a[i].first)
      g[pos].push_back(a[i].second);
    else
      --p;
  }

  int mn = int(g[k].size());
  for (int i = 1; i <= k; ++i)
    for (int j = 0; j < mn; ++j)
      res[g[i][j]] = i;

  int ans = 0;
  for (auto x : res)
    ans += (x != 0);
  cout << ans / 2 << '\n';
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int t = 1;
  cin >> t;
  while (t--) {
    string s;
    cin >> s;
    solve(s);
  }
  return 0;
}