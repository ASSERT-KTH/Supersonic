#include <iostream>
#include <vector>
#include <algorithm>
#include <utility>
#include <string>

using namespace std;
#define fastio() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define all(a) a.begin(), a.end()
#define ll long long
#define vt vector
#define pii pair<int, int>

void solve() {
  string s;
  cin >> s;
  int n = s.size(), k = 2;
  vt<pii> a(n, pii(0, 0));
  for (int i = 0; i < n; ++i) {
    a[i].se = i;
    a[i].fi = s[i];
  }
  
  sort(all(a));
  
  vt<int> res(n, 0);
  vt<vt<int>> g(k + 1, vt<int>());
  
  for (int i = 0, p = 0; i < n; ++i) {
    ++p;
    int pos = p % k + 1;
    if (g[pos].size() == 0)
      g[pos].push_back(a[i].se);
    else if (a[i - k].fi != a[i].fi)
      g[pos].push_back(a[i].se);
    else
      --p;
  }
  
  int mn = int(g[k].size());
  for (int i = 1; i <= k; ++i) {
    for (int j = 0; j < mn; ++j)
      res[g[i][j]] = i;
  }
  
  int ans = 0;
  for (const auto &x : res)
    ans += (x != 0);
  
  cout << ans / 2 << '\n';
}

int main() {
  fastio();
  int t = 1;
  cin >> t;
  while (t--)
    solve();
  return 0;
}