#include <iostream>
#include <vector>

using namespace std;

const double EPS = 1e-9;
const int MOD = 1e9 + 7;
const int DX[8] = {0, 0, 1, -1, -1, 1, -1, 1};
const int DY[8] = {1, -1, 0, 0, -1, -1, 1, 1};

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int n, m, k;
  cin >> n >> m >> k;

  vector<long long> arr(n), a(m), b(m), c(m), ans(n), op(m);

  for (int i = 0; i < n; i++)  cin >> arr[i];
  for (int i = 0; i < m; i++)  cin >> a[i] >> b[i] >> c[i];

  for (int i = 0; i < k; i++) {
    int x, y;
    cin >> x >> y;
    op[x - 1]++;
    op[y]--;
  }

  for (int i = 1; i < m; i++) op[i] += op[i - 1];

  for (int i = 0; i < m; i++) {
    ans[a[i] - 1] += op[i] * c[i];
    ans[b[i]] -= op[i] * c[i];
  }

  cout << ans[0] + arr[0] << " ";

  for (int i = 1; i < n; i++) {
    ans[i] += ans[i - 1];
    cout << ans[i] + arr[i] << " ";
  }

  cout << '\n';

  return 0;
}