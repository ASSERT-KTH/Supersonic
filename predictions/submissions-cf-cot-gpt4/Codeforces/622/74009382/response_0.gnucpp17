#include <iostream>
#include <vector>
#include <cassert>

using std::cin;
using std::cout;
using std::ostream;
using std::istream;
using std::vector;
using std::pair;

const long long MOD = 1000000007;
const long long INF = 1e18;
const int N = 1e6 + 5;

// Removed redundant code and macros here...

struct mod_int {
  int val;
  mod_int(long long v = 0) {
    if (v < 0)
      v = v % MOD + MOD;
    if (v >= MOD)
      v %= MOD;
    val = v;
  }
  // Rest of the code...
};

vector<mod_int> P(N);
vector<mod_int> ele(N);

void solve() {
  int n, k;
  cin >> n >> k;
  for (int i = 1; i < k + 4; ++i) {
    mod_int j = i;
    P[i] = P[i - 1] + j.pow(k);
  }
  // Rest of the solve function...
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int t = 1;
  while (t--)
    solve();
  return 0;
}