#include <vector>
#include <stack>
#include <bitset>
#include <iostream>
using namespace std;

int n, m;
vector<int> graph[500001];
int ans[500001];
bitset<500001> visited;

int num() {
  int res;
  cin >> res;
  return res;
}

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  
  stack<int> s;
  s.push(i);
  visited.set(i);
  int res = 0;
  
  while (!s.empty()) {
    int now = s.top();
    s.pop();
    res++;
    for (int next : graph[now])
      if (!visited[next]) {
        visited.set(next);
        s.push(next);
      }
  }
  
  for (int next : graph[i])
    ans[next] = res;
  return res;
}

int main() {
  n = num();
  m = num();
  
  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    if (l < 0)
      continue;
    int a = num();
    while (l-- > 0) {
      int b = num();
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  for (int i = 1; i <= n; i++)
    if (!visited[i])
      cout << answer(i) << " ";
  cout << endl;
}