#include <iostream>
#include <vector>
#include <stack>
#include <bitset>

const int MOD = 1000000007;
const int MAX = 500001;
std::vector<int> graph[MAX];
int ans[MAX];

int num() {
    int res;
    std::cin >> res;
    return res;
}

int answer(int i) {
    if (ans[i] > 0) {
        return ans[i];
    }

    std::stack<int> s;
    s.push(i);
    std::vector<int> list;
    std::bitset<MAX> bs;
    bs.set(i);

    while (!s.empty()) {
        int now = s.top();
        s.pop();
        list.push_back(now);

        for (auto next : graph[now]) {
            if (!bs[next]) {
                bs.set(next);
                s.push(next);
            }
        }
    }

    int res = list.size();
    for (auto next : list) {
        ans[next] = res;
    }

    return res;
}

int main() {
    std::ios_base::sync_with_stdio(false);

    int n = num();
    int m = num();

    for (int i = 0; i < m; ++i) {
        int l = num() - 1;
        if (l < 0) {
            continue;
        }

        int a = num();
        while (--l >= 0) {
            int b = num();
            graph[a].push_back(b);
            graph[b].push_back(a);
            a = b;
        }
    }

    for (int i = 1; i <= n; ++i) {
        std::cout << answer(i) << " ";
    }

    std::cout << '\n';

    return 0;
}