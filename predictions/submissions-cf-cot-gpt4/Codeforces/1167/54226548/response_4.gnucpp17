#include <iostream>
#include <vector>
using namespace std;

const int MOD = 1000000007;
vector<vector<int>> graph;
vector<int> ans;

int num() {
  int res;
  scanf("%d", &res);
  return res;
}

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  vector<bool> visited(graph.size(), false);
  vector<int> list;
  list.push_back(i);
  visited[i] = true;
  for(int j = 0; j < list.size(); j++) {
    for(int next : graph[list[j]]) {
      if (!visited[next]) {
        visited[next] = true;
        list.push_back(next);
      }
    }
  }
  int res = list.size();
  for (int next : list)
    ans[next] = res;
  return res;
}

int main() {
  int n = num();
  int m = num();
  graph.resize(n+1);
  ans.resize(n+1, 0);
  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    if (l < 0)
      continue;
    int a = num();
    while (l-- > 0) {
      int b = num();
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  for (int i = 1; i <= n; i++)
    printf("%d ", answer(i));
  printf("\n");
}