#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int main() {
  long long int T;
  cin >> T;
  while (T--) {
    long long int N;
    cin >> N;
    vector<pair<long long int, long long int>> v(N);
    for (long long int i = 0; i < N; ++i) {
      long long int M;
      cin >> M;
      long long int mx = LLONG_MIN;
      for (long long int j = 0; j < M; ++j) {
        long long int x;
        cin >> x;
        mx = max(mx, x - j + 1);
      }
      v[i] = {mx, mx + M};
    }
    sort(v.begin(), v.end());
    long long int start = v[0].first;
    long long int end = v[0].second;
    for (long long int i = 1; i < N; ++i) {
      long long diff = max(0LL, v[i].first - end);
      if (v[i].first >= end) {
        start += diff;
        end = v[i].second;
      } else {
        end = v[i].second + diff;
      }
    }
    cout << start << "\n";
  }
  return 0;
}