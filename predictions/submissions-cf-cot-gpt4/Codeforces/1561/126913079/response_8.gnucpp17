#include <iostream>
#include <vector>
#include <algorithm>
#include <iterator>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    long long T;
    cin >> T;
    while (T--) {
        long long N;
        cin >> N;
        vector<pair<long long, long long>> v;
        v.reserve(N); // Reserve memory for vector v
        for (long long i = 0; i < N; i++) {
            long long M;
            cin >> M;
            vector<long long> mx;
            mx.reserve(M); // Reserve memory for vector mx
            for (long long j = 0; j < M; j++) {
                long long x;
                cin >> x;
                mx.push_back(x - j + 1);
            }

            long long start = *max_element(mx.begin(), mx.end());
            v.emplace_back(start, start + M);
        }
        sort(v.begin(), v.end());

        long long start = 0;
        long long end = 0;
        for (auto const& element : v) {
            if (element.first >= end) {
                start += element.first - end;
                end = element.second;
            } else {
                end = max(end, element.second);
            }
        }

        cout << start << "\n";
    }
}