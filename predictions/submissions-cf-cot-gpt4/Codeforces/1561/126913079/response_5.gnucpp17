#include <iostream>
#include <algorithm>
#include <vector>

int main() {
  long long int T;
  std::cin >> T;
  while (T--) {
    long long int N;
    std::cin >> N;
    std::vector<std::pair<long long int, long long int>> v(N);
    for (long long int i = 0; i < N; i++) {
      long long int M;
      std::cin >> M;
      long long int start = 0;
      long long int max_val = INT_MIN;
      for (long long int j = 0; j < M; j++) {
        long long int x;
        std::cin >> x;
        max_val = std::max(max_val, x - j + 1);
      }
      start = max_val;
      long long int end = M + start;
      v[i] = {start, end};
    }
    sort(v.begin(), v.end());
    long long int start = 0;
    long long int end = 0;
    for (long long int i = 0; i < N; i++) {
      if (v[i].first >= end) {
        long long diff = v[i].first - end;
        start = start + diff;
        end = v[i].second;
      } else {
        long long diff = end - v[i].first;
        end = v[i].second + diff;
      }
    }
    std::cout << start << "\n";
  }
}