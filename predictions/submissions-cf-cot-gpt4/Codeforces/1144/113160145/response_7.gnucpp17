#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#pragma GCC optimize("-O3")

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

void make_unique(vector<int> &vec) {
  vec.erase(unique(vec.begin(), vec.end()), vec.end());
}

const long long int mod = 1000000007;
const long double PI = 3.141592653589793;
const long long int inf = 1e18;
const long long int cons = 200005;

vector<long long int> g[cons], vis(cons);
unordered_map<pair<long long int, long long int>, long long int> u;

void dfs(long long int node, long long int pv) {
  vis[node] = 1;
  for (long long int child : g[node]) {
    if (vis[child] == 0) {
      u[{node, child}] = pv;
      u[{child, node}] = pv ^ 1;
      dfs(child, pv ^ 1);
    } else {
      if (u.find({node, child}) != u.end()) {
        if (u[{node, child}] != pv) {
          return;
        }
      } else {
        u[{node, child}] = pv;
        u[{child, node}] = pv ^ 1;
      }
    }
  }
}

int main() {
  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);

#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  long long int n = 0, m = 0, i = 0, j = 0, k = 0;
  cin >> n >> m;
  vector<pair<long long int, long long int>> v;
  for(i = 0; i < m; i++) {
    cin >> j >> k;
    g[j].emplace_back(k);
    g[k].emplace_back(j);
    v.emplace_back(j, k);
  }
  dfs(1, 0);
  if (m == 1) {
    cout << "NO" << endl;
  } else {
    cout << "YES" << endl;
    for(i = 0; i < m; i++) { 
      cout << u[v[i]]; 
    }
  }
  return 0;
}