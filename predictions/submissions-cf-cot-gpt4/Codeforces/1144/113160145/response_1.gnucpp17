#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
typedef __gnu_pbds::tree<int, __gnu_pbds::null_type, std::less<int>, __gnu_pbds::rb_tree_tag,
             __gnu_pbds::tree_order_statistics_node_update>
    ordered_set;
template <typename T> void make_unique(std::vector<T> &vec) {
  vec.erase(unique(vec.begin(), vec.end()), vec.end());
}

const long long int mod = 1000000007;
const long double PI = 3.141592653589793;
const long long int inf = 1e18;
const long long int cons = 200005;
long long int N, M;
std::vector<long long int> g[cons], vis(cons);
long long int u[cons][cons];

void dfs(long long int node, long long int pv) {
  vis[node] = 1;
  for (long long int child : g[node]) {
    if (vis[child] == 0) {
      u[node][child] = pv;
      u[child][node] = pv ^ 1;
      dfs(child, pv ^ 1);
    } else {
      if (u[node][child] != 0) {
        if (u[node][child] != pv) {
          M = 1;
        }
      } else {
        u[node][child] = pv;
        u[child][node] = pv ^ 1;
      }
    }
  }
}

int main() {
  std::ios_base::sync_with_stdio(false); 
  std::cin.tie(nullptr); 
  std::cout.tie(nullptr);
  
  long long int n = 0, m = 0, i = 0, j = 0, k = 0;
  std::cin >> n >> m;
  std::vector<std::pair<long long int, long long int>> v;
  for(i = 0; i < m; i++) {
    std::cin >> j >> k;
    g[j].push_back(k);
    g[k].push_back(j);
    v.push_back({j, k});
  }
  dfs(1, 0);
  if (M) {
    std::cout << "NO" << std::endl;
  } else {
    std::cout << "YES" << std::endl;
    for(i = 0; i < m; i++) { std::cout << u[v[i].first][v[i].second]; }
  }
  return 0;
}
