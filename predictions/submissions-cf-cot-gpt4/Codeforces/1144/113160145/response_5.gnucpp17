#include <bits/stdc++.h>
using namespace std;
const long long mod = 1000000007;
const long long inf = 1e18;
const long long cons = 200005;
vector<long long> g[cons];
unordered_map<pair<long long, long long>, long long> u;
long long M;
vector<long long> vis(cons);

void dfs(long long node, long long pv) {
  vis[node] = 1;
  for (long long child : g[node]) {
    if (vis[child] == 0) {
      u[{node, child}] = pv;
      u[{child, node}] = pv ^ 1;
      dfs(child, pv ^ 1);
    } else {
      auto it = u.find({node, child});
      if ( it != u.end()) {
        if ( it->second != pv) {
          M = 1;
        }
      } else {
        u[{node, child}] = pv;
        u[{child, node}] = pv ^ 1;
      }
    }
  }
}

int main() {
  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  long long n = 0, m = 0, j = 0, k = 0;
  cin >> n >> m;
  vector<pair<long long, long long>> v;
  for(long long i = 0; i < m; i++) {
    cin >> j >> k;
    g[j].push_back(k);
    g[k].push_back(j);
    v.push_back({j, k});
  }
  memset(&vis[0], 0, vis.size() * sizeof(vis[0]));
  dfs(1, 0);
  if (M) {
    cout << "NO" << endl;
  } else {
    cout << "YES" << endl;
    for(long long i = 0; i < m; i++) {
      cout << u[v[i]];
    }
  }
  return 0;
}