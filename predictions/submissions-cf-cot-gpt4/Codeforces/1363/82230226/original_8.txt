Optimization steps:

1. `#include <bits/stdc++.h>`: This header file includes almost all the required header files and thus increases the compilation time. It's better to include only those header files which are required.

2. `#define ll long long int`: It's better to use `typedef` instead of `#define` for type definition.

3. `#define max(a, b) (a > b) ? a : b` and `#define min(a, b) (a < b) ? a : b`: These macros are unnecessary as `std::max` and `std::min` already exist in the `<algorithm>` library. They can be removed.

4. `#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);`: This macro is used to speed up the I/O operations but it's used only once in the `main` function. You can replace the macro with the actual commands in the `main` function.

5. `vector<ll> adj[100005];` and `for (ll i = 0; i < 100005; i++)`: Here, you are creating an array of 100005 vectors which are initialized every time in the `while` loop. Instead, you can create a vector of vectors and resize it according to the needs in the `while` loop. This would save memory.

6. `freopen("input.txt", "r", stdin);` and `freopen("output.txt", "w", stdout);`: These lines are used to redirect standard I/O to files. They are not necessary for the program to work and can be removed.

7. `if (n == 1 || adj[x].size() == 1 || n % 2 == 0)`: The condition `n == 1` is redundant because if `n == 1` then `adj[x].size()` will also be 1.

Here's the optimized code:

```cpp
#include <iostream>
#include <vector>
#include <algorithm>

typedef long long int ll;
typedef unsigned long long int ull;

using namespace std;

vector<vector<ll>> adj;

void init(int n) {
  adj.clear();
  adj.resize(n+1);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  ll t;
  cin >> t;
  while (t--) {
    ll n, x;
    cin >> n >> x;
    init(n);
    ll i, j, a, b;
    for (i = 0; i < n - 1; i++) {
      cin >> a >> b;
      adj[a].push_back(b);
      adj[b].push_back(a);
    }
    if (adj[x].size() == 1 || n % 2 == 0) {
      cout << "Ayush\n";
    } else {
      cout << "Ashish\n";
    }
  }
  return 0;
}
```