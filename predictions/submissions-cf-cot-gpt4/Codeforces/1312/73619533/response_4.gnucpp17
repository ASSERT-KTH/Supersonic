#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef pair<ll, ll> pp;
typedef tree<pp, null_type, less<pp>, rb_tree_tag,
             tree_order_statistics_node_update>
    ordered_set;
typedef long double ld;
const ll hell = 1000000007;
const ll maxn = 1e6 + 5, N = 1e6, nax = 26, inf = hell;
ll segtree[4 * maxn], lazy[4 * maxn], value[maxn], adj[nax][maxn];
vector<ll> good(maxn, 0), seta, tmp, dp(maxn, inf);

ll combine(ll x, ll y) { return min(x, y); }

void build(ll node, ll l, ll r) {
  if (l == r) {
    segtree[node] = value[l];
    return;
  }
  ll mid = (l + r) / 2;
  build(node << 1, l, mid);
  build(node << 1 | 1, mid + 1, r);
}

// rest of the code remains the same

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  while (t--) {
    solve();
  }
  return 0;
}