The given code seems to be doing a task that involves checking the remainder when dividing each element in an array by a given number, 'k'. The map 'mp' is used to store the remainders for each element in the array. If a remainder greater than 1 is found or if the same remainder is found again, 'fl' is set to 0 and the checks are stopped for that element. If 'fl' remains 1 after checking all elements, "YES" is printed, else "NO" is printed. 

Optimizations that can be made:

1. Unnecessary macros, variables and libraries: The program contains a lot of macros and variables which are not used anywhere in the program. Removing these will make the code cleaner and more memory efficient. The 'bits/stdc++.h' header includes a lot of unnecessary libraries, changing it to only include the necessary ones i.e., 'iostream' and 'map' will also help with compilation times.

2. Variable declaration: The variable 'j' is declared inside the loop but it can be declared once outside the loop to save memory.

3. Using 'break' instead of 'if-else': The 'if-else' block that checks the value of 'fl' can be replaced with 'break' inside the loop. This will terminate the loop as soon as 'fl' is set to 0, thus saving computation time.

Optimized code:

```cpp
#include <iostream>
#include <map>
using namespace std;
#define ll long long int

int main() {
    ll t;
    cin >> t;
    while (t--) {
        ll n, k, p, i, j = 0, fl = 1;
        map<ll, ll> mp;
        ll a[35];

        cin >> n >> k;
        for (i = 1; i <= n; i++) {
            cin >> a[i];
        }
        for (i = 1; i <= n; i++) {
            p = a[i];
            while (p) {
                if (p % k > 1) {
                    fl = 0;
                    break;
                }
                if (p % k == 1) {
                    if (mp[j] == 1) {
                        fl = 0;
                        break;
                    }
                    mp[j] = 1;
                }
                j++;
                p = p / k;
            }
            if (fl == 0)
                break;
        }
        if (fl == 1)
            cout << "YES" << endl;
        else
            cout << "NO" << endl;
    }
    return 0;
}
```
Please note that the array size of 'a' is 35 here, which is a hard coded value. In a more robust program, the size of this array should either be dynamically allocated based on the input or a data structure like vector should be used which can grow dynamically.