#include <iostream>
#include <string>
#include <vector>
#include <cmath>
#include <iomanip>

using namespace std;

vector<vector<long long>> initialize() {
    vector<vector<long long>> l(1001, vector<long long>(1001, 0));
    l[0][0] = 1;
    for (int i = 1; i < 1001; i++) {
        l[i][0] = 1;
        for (int j = 1; j < i + 1; j++) {
            l[i][j] = l[i - 1][j - 1] + l[i - 1][j];
        }
    }
    return l;
}

void solve(const vector<vector<long long>>& l) {
    string a, b;
    cin >> a >> b;
    int apos = 0, bpos = 0, amb = 0;
    for (auto i : a) {
        apos += i == '+';
        apos -= i == '-';
    }
    for (auto i : b) {
        bpos += i == '+';
        bpos -= i == '-';
        amb += i == '?';
    }
    int diff = apos - bpos;
    double prob;
    if (amb == 0 && diff == 0) {
        prob = 1;
    } else if (amb == 0 && diff != 0) {
        prob = 0;
    } else {
        int u = (amb + diff) / 2;
        int v = amb - u;
        if ((amb + diff) & 1 || (u < 0 || v < 0)) {
            prob = 0;
        } else {
            double q = pow(2, amb);
            double p = l[amb][u];
            prob = p / q;
        }
    }
    cout << prob << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    auto l = initialize();
    cout << setprecision(15) << fixed;
    int t = 1;
    for (int i = 1; i <= t; i++) {
        solve(l);
    }
    return 0;
}