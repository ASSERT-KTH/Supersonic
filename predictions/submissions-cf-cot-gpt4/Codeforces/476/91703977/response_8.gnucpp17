#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")
#include <bits/stdc++.h>
using namespace std;

#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define int long long
#define ld long double

int l[1001][1001] = {};

void initialize() {
    l[0][0] = 1;
    for (int i = 1; i < 1001; i++) {
        l[i][0] = 1;
        for (int j = 1; j < i + 1; j++) {
            l[i][j] = (l[i - 1][j - 1] + l[i - 1][j]);
        }
    }
}

int nCr(int n, int r) { return l[n][r]; }

void solve() {
    string a, b;
    cin >> a >> b;
    ld prob;
    int apos = 0;
    for (const auto &i : a) {
        apos += i == '+';
        apos -= i == '-';
    }
    int bpos = 0, amb = 0;
    for (const auto &i : b) {
        amb += i == '?';
    }
    int diff = apos - count(b.begin(), b.end(), '+') + count(b.begin(), b.end(), '-');
    if (amb == 0 and diff == 0) {
        prob = 1;
        cout << prob << "\n";
        return;
    } else if (amb == 0 and diff != 0) {
        prob = 0;
        cout << prob << "\n";
        return;
    }
    int u = (amb + diff) / 2;
    int v = amb - u;
    if ((amb + diff) & 1 or (u < 0 or v < 0)) {
        prob = 0;
        cout << prob << "\n";
        return;
    }
    prob = nCr(amb, u) / pow(2, amb);
    cout << prob << "\n";
}

int32_t main() {
    initialize();
    fastio cout << setprecision(15) << fixed;
    int t = 1;
    for (int i = 1; i <= t; i++) {
        solve();
    }
    return 0;
}