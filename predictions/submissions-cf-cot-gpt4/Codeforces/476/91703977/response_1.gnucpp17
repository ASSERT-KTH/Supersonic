#include <bits/stdc++.h>

using namespace std;

typedef int64_t ll;
typedef double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pair<int, int>> vpii;
typedef unordered_set<int> uset;
typedef unordered_map<int, int> umap;

int nCr(vector<vector<int>>& l, int n, int r) { return l[n][r]; }

void solve() {
  string a, b;
  cin >> a >> b;
  double prob;
  int apos = 0;
  for (auto i : a) {
    apos += i == '+';
    apos -= i == '-';
  }
  int amb = 0;
  int r = 0;
  for (auto i : b) {
    amb += i == '?';
    r += i == '+';
    r -= i == '-';
  }
  int diff = apos - r;
  if (amb == 0 and diff == 0) {
    prob = 1;
    cout << prob << endl;
    return;
  } else if (amb == 0 and diff != 0) {
    prob = 0;
    cout << prob << endl;
    return;
  }
  int u = (amb + diff) / 2;
  int v = amb - u;
  if ((amb + diff) & 1 or (u < 0 or v < 0)) {
    prob = 0;
    cout << prob << endl;
    return;
  }
  double q = pow(2, amb);
  double p = nCr(amb, u);
  prob = p / q;
  cout << prob << endl;
}

void initialize(vector<vector<int>>& l) {
  l[0][0] = 1;
  for (int i = 1; i < 1001; i++) {
    l[i][0] = 1;
    for (int j = 1; j < i + 1; j++) {
      l[i][j] = (l[i - 1][j - 1] + l[i - 1][j]);
    }
  }
}

int main() {
  vector<vector<int>> l(1001, vector<int>(1001, 0));
  initialize(l);

  int t = 1;
  for (int i = 1; i <= t; i++) {
    solve();
  }

  return 0;
}