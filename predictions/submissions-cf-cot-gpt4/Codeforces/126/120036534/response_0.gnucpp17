#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
template <typename T> using minpq = priority_queue<T, vector<T>, greater<T>>;
template <typename T> void make_unique(vector<T> &vec) {
  sort(vec.begin(), vec.end());
  vec.erase(unique(vec.begin(), vec.end()), vec.end());
}
#define ll long long int
#define precise(ans, digits) fixed << setprecision(digits) << ans
#define endl '\n'
#define ld long double
#define pi 3.141592653589793238
#define fo(i, n) for (long i = 1; i <= n; i++)
#define tol(s) transform(s.begin(), s.end(), s.begin(), ::tolower)
#define tou(s) transform(s.begin(), s.end(), s.begin(), ::toupper)
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mt make_tuple
#define lb lower_bound
#define ub upper_bound
#define mkp make_pair
#define gcd(a, b) __gcd(a, b)
#define fr first
#define sc second
#define sz(x) (long)x.size()
#define T                                                                      \
  ll t = 0;                                                                    \
  cin >> t;                                                                    \
  for (ll test = 0; test < t; test++)
#define rep(i, n) for (__typeof(n) i = 0; i < (n); i++)
#define MAX(a) (*max_element(all(a)))
#define MIN(a) (*min_element(all(a)))
#define bitcount(a) __builtin_popcountll(a)
#define OS(T)                                                                  \
  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<vc> vvc;
typedef vector<ll> vl;
typedef vector<pii> vpii;
typedef vector<pll> vpl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef pair<ll, pll> ppl;
long long add(long long a, long long b, long long mod) {
  long long res = (a % mod + b % mod) % mod;
  if (res < 0)
    res += mod;
  return res;
}
vector<ll> Z(string s) {
  ll n = sz(s);
  vector<ll> z(n);
  for (ll i = 1, l = 0, r = 0; i < n; i++) {
    if (i <= r)
      z[i] = min(r - i + 1, z[i - l]);
    while (i + z[i] < n && s[z[i]] == s[z[i] + i]) {
      ++z[i];
    }
    if (i + z[i] - 1 > r) {
      l = i;
      r = i + z[i] - 1;
    }
  }
  return z;
}
signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  string s;
  cin >> s;
  string p = "Just a legend";
  ll n = sz(s);
  vector<ll> z = Z(s);
  ll ans = -1;
  ll max_z = 0;
  for (ll i = 0; i < n; i++)
    max_z = max(max_z, z[i]);
  for (ll i = n - 1; i >= 0; i--) {
    if (i + z[i] == n && max_z >= z[i])
        ans = max(ans, z[i]);
    max_z = max(max_z, z[i]);
  }
  if (ans == -1)
    cout << p;
  else
    cout << s.substr(0, ans);
  return 0;
}