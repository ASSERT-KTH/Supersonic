#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <algorithm>

#define ll long long int

using namespace std;

vector<ll> Z(string s) {
  ll n = s.size();
  vector<ll> z(n);
  for (ll i = 1, l = 0, r = 0; i < n; i++) {
    if (i <= r)
      z[i] = min(r - i + 1, z[i - l]);
    while (i + z[i] < n && s[z[i]] == s[z[i] + i]) {
      ++z[i];
    }
    if (i + z[i] - 1 > r) {
      l = i;
      r = i + z[i] - 1;
    }
  }
  return z;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  string s;
  cin >> s;
  string p = "Just a legend";
  ll n = s.size();
  vector<ll> z = Z(s);
  multiset<ll> ss;
  for (ll i = 0; i < n; i++)
    ss.insert(z[i]);
  ll ans = -1;
  for (ll i = n - 1; i >= 0; i--) {
    ss.erase(ss.lower_bound(z[i]));
    if (i + z[i] == n) {
      multiset<ll>::iterator it = ss.lower_bound(z[i]);
      if (it != ss.end() && *it >= z[i])
        ans = max(ans, z[i]);
    }
  }
  if (ans == -1)
    cout << p << "\n";
  else
    cout << s.substr(0, ans) << "\n";

  return 0;
}