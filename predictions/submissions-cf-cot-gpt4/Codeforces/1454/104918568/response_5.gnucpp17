#include <bits/stdc++.h>
using namespace std;

void solve() {
  int n;
  cin >> n;
  map<int, pair<int, int>> m; // to store element, and its count and first occurrence
  for (int i = 0; i < n; i++) {
    int x;
    cin >> x;
    if(m[x].first == 0){ // if it's the first occurrence
      m[x] = make_pair(1, i);
    } else {
      m[x].first++; // increase the count
    }
  }
  int minIndex = n; // to store the minimum index of non-duplicate element
  for (auto& it : m) {
    if (it.second.first == 1) {
      minIndex = min(minIndex, it.second.second); // update the minimum index
    }
  }
  if(minIndex == n) // if no non-duplicate found
    cout << -1 << endl;
  else
    cout << minIndex + 1 << endl;
  return;
}

int main() {
  int t;
  cin >> t;
  while (t--) {
    solve();
  }
}