The given C/C++ program seems to be already quite optimized. It calculates the sum of arithmetic progression from 1 to n. However, there are a few things that could be slightly adjusted:

1. The `#include <bits/stdc++.h>` statement includes a lot of unnecessary libraries which can slow down the compilation time. It's better to include only those libraries that are actually needed in the program. In this case, we only need `iostream`.

2. The `using namespace std;` statement can lead to name conflicts when the program becomes larger or when it's used in a larger project. So, it's good practice to not use this statement. We should use `std::` prefix before cin, cout and endl.

3. The variable `sum` is declared at the beginning but it is not initialized until later. It is a good practice to declare and initialize variables at the same time to prevent unexpected behavior.

4. The `long long n, sum;` statement declares two variables on the same line. It's a good practice to declare each variable on its own line for better readability.

Here's the optimized version of the program:

```cpp
#include <iostream>

int main() {
    long long n;
    std::cin >> n;
    
    long long sum = (n % 2 == 0) ? n / 2 : ((n + 1) / 2) * (-1);
    
    std::cout << sum << std::endl;
    return 0;
}
```

Here, I have used the ternary operator to calculate the value of `sum` in a single line. This makes the code more concise.