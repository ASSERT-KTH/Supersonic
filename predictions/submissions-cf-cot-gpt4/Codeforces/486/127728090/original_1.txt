This program accepts an integer n as input, checks if it's even or odd, and then calculates a sum based on the parity of the number.

The optimization steps for the given code are:

1. Remove #include <bits/stdc++.h>: This header file includes most of the standard libraries and is heavier than includes necessary for this code. Instead of this, you can use only the necessary libraries, which in this case are iostream for cin, cout and stdlib.h for abs() function.

2. Avoid long long for n and sum: The number n and sum are declared as long long, which uses more memory than needed. An int can support numbers up to 2^31-1 or about 2 billion, which should be more than enough in most cases.

3. Avoid using else: The else statement is not necessary in this code and can be removed for cleaner code. The sum is calculated differently depending on whether n is even or odd, but since only two cases exist, the first if statement can be rewritten as an if-else statement, and the else can be removed.

4. Reduce the number of operations: In the else clause, we are performing three operations: addition, division and multiplication. This can be reduced to one operation by using the fact that the sum is simply `-n/2`.

Here is the optimized code:

```cpp
#include <iostream>
#include <stdlib.h>

using namespace std;

int main() {
    int n, sum;
    cin >> n;

    // if n is even
    if (n % 2 == 0)
        sum = n / 2;
    // if n is odd
    else
        sum = -n / 2;

    cout << sum << endl;
    return 0;
}
```