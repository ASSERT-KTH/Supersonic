The original code reads an integer from the user, then performs an if-else computation to calculate the sum.

The if-else check determines whether the number is even or odd. If the number is even, the sum is simply n divided by 2. If the number is odd, the sum is negative half of (n+1).

This code can be optimized by removing the if-else condition and using a one-liner mathematical expression that gives the same result.

The mathematical operation that can be used to replace the if-else condition is:

sum = (n / 2) * (n % 2 == 0 ? 1 : -1);

This expression divides n by 2, then multiplies the result by 1 if n is even, or -1 if n is odd. This effectively replicates the logic of the original if-else condition, but in a more efficient manner.

The optimized code is:

```cpp
#include <bits/stdc++.h>
using namespace std;
int main() {
  long long n;
  cin >> n;
  long long sum = (n / 2) * (n % 2 == 0 ? 1 : -1);
  cout << sum << endl;
  return 0;
}
```

This optimization reduces the number of lines and improves the readability of the code. It also potentially improves performance slightly due to the removal of the conditional branch (if-else), although the performance impact would likely be negligible for most inputs.