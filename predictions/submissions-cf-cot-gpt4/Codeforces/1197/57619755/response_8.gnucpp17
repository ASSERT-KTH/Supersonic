#pragma GCC optimize("O3", "unroll-loops")
#pragma GCC target("avx2")
#include <bits/stdc++.h>
using namespace std;
#define ll long long
ll n, m, k, ans = 0, prefix_sum[1005000] = {0}, dp[1005000] = {0};
int main() {
  scanf("%lld %lld %lld", &n, &m, &k);
  for (int i = 1; i <= n; i++) {
    scanf("%lld", &prefix_sum[i]);
    prefix_sum[i] += prefix_sum[i-1];  // calculate prefix sum
  }
  for (int i = 1; i <= n; i++) {
    dp[i] = max(dp[i-1], prefix_sum[i] - k);  // consider the case without the current element
    if (i > m) {  // if the window size is larger than m
      dp[i] = max(dp[i], dp[i-m] + prefix_sum[i] - prefix_sum[i-m] - k);  // consider the case with the current element
    }
    ans = max(ans, dp[i]);
  }
  printf("%lld", ans);
  return 0;
}