#pragma GCC optimize("O3", "unroll-loops")
#pragma GCC target("avx2")
#include <bits/stdc++.h>
using namespace std;
#define ll long long
ll n, m, k, ans=0, a[1005000], dp[1005000], sum[1005000];
deque< pair<ll, ll> > dq;
int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  cin >> n >> m >> k;
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
    sum[i] = sum[i-1] + a[i];
  }
  for (int i = 1; i <= n; i++) {
    while (!dq.empty() && dq.front().second < i - m) {
      dq.pop_front();
    }
    dp[i] = max(dp[i], (dq.empty() ? 0 : dq.front().first + k) + sum[i]);
    while (!dq.empty() && dq.back().first <= sum[i] - dp[i]) {
      dq.pop_back();
    }
    dq.push_back(make_pair(sum[i] - dp[i], i));
    ans = max(ans, dp[i]);
  }
  cout << ans;
  return 0;
}