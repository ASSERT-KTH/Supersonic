#pragma GCC optimize("O3", "unroll-loops")
#pragma GCC target("avx2")
#include <bits/stdc++.h>
using namespace std;
#define ll long long
ll n, m, k, ans, prefixSum[1005000], dp[1005000];
deque<int> dq;
int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  cin >> n >> m >> k;
  for (int i = 1; i <= n; i++) {
    cin >> prefixSum[i];
    prefixSum[i] += prefixSum[i - 1];
  }
  for (int i = 1; i <= n; i++) {
    if (!dq.empty() && dq.front() < i - m) {
      dq.pop_front();
    }
    if (!dq.empty()) {
      dp[i] = max(dp[i - 1], dp[dq.front()] + prefixSum[i] - prefixSum[dq.front()] - k);
    } else {
      dp[i] = max(dp[i - 1], prefixSum[i] - k);
    }
    ans = max(ans, dp[i]);
    while (!dq.empty() && dp[dq.back()] - prefixSum[dq.back()] <= dp[i] - prefixSum[i]) {
      dq.pop_back();
    }
    dq.push_back(i);
  }
  cout << ans;
  return 0;
}