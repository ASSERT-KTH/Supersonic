#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

#define MAXN 100005

std::pair<int, int> adj[MAXN];

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int n;
  std::cin >> n;
  int sum = 0;

  for (int i = 0; i < n - 1; ++i) {
    int x, y, w;
    std::cin >> x >> y >> w;
    adj[x - 1].push_back({y - 1, w});
    adj[y - 1].push_back({x - 1, w});
    sum += w;
  }

  std::queue<std::pair<int, int>> q;
  int seen[n + 1] = {};
  q.push({0, 0});
  seen[0] = 1;
  int big = -1;

  while (!q.empty()) {
    std::pair<int, int> s = q.front();
    q.pop();
    big = std::max(big, s.second);
    for (const auto &t : adj[s.first]) {
      if (!seen[t.first]) {
        seen[t.first] = 1;
        q.push({t.first, s.second + t.second});
      }
    }
  }

  std::cout << (2 * sum) - big << '\n';

  return 0;
}