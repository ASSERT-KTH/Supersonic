#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

typedef long long ll;
constexpr ll maxn = 100005;

std::vector<std::pair<ll, ll>> adj[maxn];

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);

    ll n;
    std::cin >> n;

    ll sum = 0;
    for (ll i = 0; i < n - 1; i++) {
        ll x, y, w;
        std::cin >> x >> y >> w;
        adj[x - 1].push_back({y - 1, w});
        adj[y - 1].push_back({x - 1, w});
        sum += w;
    }

    std::queue<std::pair<ll, ll>> q;
    std::vector<ll> seen(n + 1, 0);
    q.push({0, 0});
    seen[0] = 1;

    ll big = -1;

    while (!q.empty()) {
        std::pair<ll, ll> s = q.front();
        q.pop();
        big = std::max(big, s.second);
        for (auto t : adj[s.first]) {
            if (!seen[t.first]) {
                seen[t.first] = 1;
                q.push({t.first, s.second + t.second});
            }
        }
    }

    std::cout << (2 * sum) - big << std::endl;

    return 0;
}