#include <iostream>
#include <vector>
using namespace std;

constexpr long MOD = 1e9 + 7;

void setIO(string name, int submit) {
  if (submit) {
    freopen((name + ".in").c_str(), "r", stdin);
    freopen((name + ".out").c_str(), "w", stdout);
  } 
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  setIO("", 0);
  
  int N, M;
  cin >> N >> M;

  vector<vector<int>> matrix(N, vector<int>(N, 1 << 30));
  vector<long> cost(N, 1e18);
  vector<bool> marked(N, false);

  for (int i = 0; i < M; i++) {
    int a, b, c;
    cin >> a >> b >> c;
    matrix[a][b] = c;
  }
  
  for (int i = 0; i < N; i++) {
    dijisktra(i, N, matrix, cost, marked);
  }
  return 0;
}

void dijisktra(int start, int N, vector<vector<int>>& matrix, vector<long>& cost, vector<bool>& marked) {
  fill(cost.begin(), cost.end(), 1e18);
  fill(marked.begin(), marked.end(), false);

  for (int j = 0; j < N; j++) {
    if (cost[j] > matrix[start][j])
      cost[j] = matrix[start][j];
  }

  // rest of the code remains same inside this function.
}