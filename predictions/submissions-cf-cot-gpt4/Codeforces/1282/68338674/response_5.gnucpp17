#include <algorithm>
#include <array>
#include <iostream>
#define ll long long
using namespace std;
const int MAXN = 2e5 + 5;
const ll MOD = 1e9 + 7;

int func(int pos, int M, int K, int N, array<int, MAXN> &A, array<int, MAXN> &psum) {
  if (psum[pos] > M)
    return 0;
  int temp = M - psum[pos];
  int cnt = pos;
  for (int i = pos + K; i <= N; i += K) {
    if (A[i] > temp) {
      for (int j = i - K + 1; j <= N; ++j) {
        if (A[j] <= temp) {
          temp -= A[j];
          ++cnt;
        } else
          break;
      }
      break;
    } else {
      temp -= A[i];
      cnt += K;
    }
  }
  return cnt;
}

void solve(int testNum) {
  int N, M, K;
  cin >> N >> M >> K;
  array<int, MAXN> A;
  array<int, MAXN> psum;
  for (int i = 1; i <= N; ++i) {
    cin >> A[i];
  }
  sort(A.begin() + 1, A.begin() + 1 + N);
  for (int i = 1; i <= N; ++i)
    psum[i] = psum[i - 1] + A[i];
  if (psum[N] <= M) {
    cout << N << '\n';
    return;
  }
  int cnt = 0;
  for (int i = 0; i <= N; ++i) {
    cnt = max(cnt, func(i, M, K, N, A, psum));
  }
  cout << cnt << '\n';
}

int main() {
  int T;
  cin >> T;
  for (int t = 1; t <= T; ++t) {
    solve(t);
  }
  return 0;
}