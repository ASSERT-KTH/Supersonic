#include <bits/stdc++.h>
using namespace std;
constexpr double PI = 3.14159265;
constexpr int N = 200005;
using ll = long long int;
vector<ll> v[N], diam[N], tour, path;
ll n, h[N], first[N], stmin[2 * N][20], root;
ll vis1[N], vis2[N], vis3[N], vis4[N];
ll parent[N], dist[N], root1;
void height_initialise(ll x, ll y) {
  h[x] = y;
  vis1[x] = 1;
  for (auto node : v[x]) {
    if (vis1[node] == 0) {
      height_initialise(node, y + 1);
    }
  }
}
void distanc(ll x, ll y) {
  dist[x] = y;
  vis3[x] = 1;
  for (auto node : v[x]) {
    if (vis3[node] == 0) {
      distanc(node, y + 1);
    }
  }
}
...
int main() {
  ...
  vector<pair<ll, ll>> an;
  an.reserve(n);  // Reserve memory for n elements.
  ...
  for (auto i = 0; i < path.size() / 2; i++) {
    for (auto j = diam[i].size() - 1; j > 0; j--) {
      ...
      ll z_dist = dist[x] + dist[y] - 2 * dist[z];
      ans += z_dist;
    }
  }
  ...
  for (auto i = path.size() - 1; i > 0; i--) {
    ...
    ll z_dist = dist[x] + dist[y] - 2 * dist[z];
    ans += z_dist;
  }
  ...
  for (auto i = 0; i < an.size(); i++) {
    cout << an[i].first << " " << an[i].second << " " << an[i].second << "\n";
  }
  return 0;
}