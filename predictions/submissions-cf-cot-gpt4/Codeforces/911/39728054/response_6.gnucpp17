#include <iostream>
#include <vector>
#include <queue>
#include <cmath>
using namespace std;

constexpr long long PI = 3.14159265;
constexpr int N = 200005;
using ll = long long;

vector<ll> v[N], diam[N], tour, path;
ll n, h[N], first[N], stmin[2 * N][20], root;
ll vis1[N], vis2[N], vis3[N], vis4[N];
ll parent[N], dist[N], root1;

void height_initialise(ll x, ll y) {
  h[x] = y;
  vis1[x] = 1;
  for (int i = 0; i < v[x].size(); ++i) {
    int node = v[x][i];
    if (vis1[node] == 0) {
      height_initialise(node, y + 1);
    }
  }
}

// ... Rest of the code ...

// Use '\n' instead of std::endl
cout << ans << '\n'; 
for (i = 0; i < an.size(); ++i) {
  cout << an[i].first << " " << an[i].second << " " << an[i].second << '\n';
}
return 0;
}