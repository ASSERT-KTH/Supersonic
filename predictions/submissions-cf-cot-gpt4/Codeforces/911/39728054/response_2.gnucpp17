#include <vector>
#include <queue>
#include <utility>
#include <algorithm>
#include <iostream>
#include <cmath>

#define PI 3.14159265
#define N 200005
#define ll long long int

std::vector<ll> v[N], diam[N], tour, path;
ll n, h[N], first[N], stmin[2 * N][20], root;
ll vis1[N], vis2[N], vis3[N], vis4[N];
ll parent[N], dist[N], root1;

void height_initialise(ll x, ll y) {
  h[x] = y;
  vis1[x] = 1;
  for (int i = 0; i < v[x].size(); ++i) {
    int node = v[x][i];
    if (vis1[node] == 0) {
      height_initialise(node, y + 1);
    }
  }
}

// ... rest of the functions remain the same ...

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cin >> n;
  ll i, j, x, y, z, l, r, q, ans = 0;
  std::vector<std::pair<ll, ll>> an;
  an.reserve(N); // reserve space for an vector
  for (i = 0; i < n - 1; ++i) {
    std::cin >> x >> y;
    v[x].push_back(y);
    v[y].push_back(x);
  }
  
  // ... rest of the code remains the same ...

  for (i = 0; i < an.size(); ++i) {
    std::cout << an[i].first << " " << an[i].second << " " << an[i].second << '\n';
  }
  return 0;
}