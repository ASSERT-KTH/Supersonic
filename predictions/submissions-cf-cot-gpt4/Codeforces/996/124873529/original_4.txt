The given code is a competitive programming style C++ program. It will be optimized for running time and memory usage. Here are the steps for optimization:

1. Remove unused macros and functions: In the given code, many macros and functions are not in use. So, removing those will decrease memory usage. Macros such as `forloop`, `ll`, `ld`, `pb`, `ravi`, `parmar2002`, `nl`, `sclock`, `eclock`, `finout`, `whole`, `wholer`, `len`, `endline`, `T`, `retf`, `vint`, `vll`, `vld`, `vbool`, `vpii`, `vpll`, `unm`, `uns`, `forv`, `forin`, `ret`, `F`, `S` and functions `power` and `mod` are not in use. Also, the `ans` variable is not in use. 

2. Minimize I/O operations: Instead of reading the array elements and then calculating the required value in two separate loops, it can be done in a single loop. This will save time as I/O operations are costly.

3. Use `std::min_element` function: The STL function `std::min_element` can be used to find the minimum value and its index which is more efficient than using a manual loop.

The optimized program is:

```C++
#include <bits/stdc++.h>
using namespace std;

void solve() {
  int n;
  cin >> n;
  pair<int, int> mn = {INT_MAX, -1};
  for(int i = 0; i < n; i++) {
    int x;
    cin >> x;
    x = (x - i <= 0) ? i + 1 : ceil(double(x - i) / n);
    mn = min(mn, {x, i + 1});
  }
  cout << mn.second;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  solve();
  return 0;
}
```

Explanation:
- The input is read and the required value is calculated in the same loop to minimize I/O operations. If the value is less than or equal to zero, the index is stored and it is guaranteed to be the minimum as all indices are positive. Otherwise, the required value is calculated and stored along with the index.
- The `min` function is used to keep track of the minimum value and its index.
- The index of the minimum value is printed at the end.
- The `solve` function is called directly in the `main` function. There is no need to define another function `fun` as it is not used.