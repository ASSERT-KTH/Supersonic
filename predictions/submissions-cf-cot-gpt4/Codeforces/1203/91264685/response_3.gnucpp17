#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>

long long gcd(long long a, long long b) {
  return std::__gcd(a, b);
}

long long lcm(long long a, long long b) {
  return a * (b / gcd(a, b));
}

void optimizeIO() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);
}

void processCase() {
  int n;
  std::cin >> n;
  std::vector<int> a(n);
  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
  }
  std::sort(a.begin(), a.end());
  std::unordered_set<int> s;
  std::unordered_map<int, int> m;
  for (int i = 0; i < n; i++) {
    if (a[i] != 1 && m[a[i] - 1] == 0) {
      s.insert(a[i] - 1);
      m[a[i] - 1]++;
    } else if (m[a[i]] == 0) {
      s.insert(a[i]);
      m[a[i]]++;
    } else if (m[a[i] + 1] == 0) {
      s.insert(a[i] + 1);
      m[a[i] + 1]++;
    }
  }
  std::cout << s.size() << "\n";
}

int main() {
  optimizeIO();
  processCase();
  return 0;
}