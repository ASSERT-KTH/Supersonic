#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <set>
using std::cin;
using std::cout;
using std::endl;
using std::unordered_map;
using std::set;
typedef long long ll;

#define optimize()                                                             \
  ios_base::sync_with_stdio(0);                                                \
  cin.tie(0);                                                                  \
  cout.tie(0)

ll lcm(ll a, ll b) { return a * (b / __gcd(a, b)); }

const int mx = 1e6 + 123;
int n, a[mx];
set<int> s;
unordered_map<int, int> m;

void _case_() {
  cin >> n;
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }
  sort(a, a + n);
  for (int i = 0; i < n; i++) {
    if (a[i] != 1 and m[a[i] - 1] == 0) {
      s.insert(a[i] - 1);
      m[a[i] - 1]++;
    } else if (m[a[i]] == 0) {
      s.insert(a[i]);
      m[a[i]]++;
    } else if (m[a[i] + 1] == 0) {
      s.insert(a[i] + 1);
      m[a[i] + 1]++;
    }
  }
  cout << s.size() << endl;
}

int main() {
  optimize();
  _case_();
  return 0;
}