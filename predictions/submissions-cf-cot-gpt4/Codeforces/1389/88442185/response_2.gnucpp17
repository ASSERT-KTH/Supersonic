#include <iostream>
#include <algorithm>

#define N 100005
#define mod 1000000007

const long long ll = 0;
const double dd = 0.0;

bool lef = true;
long long int dp[100001][6];

long long int f(int i, int k, int z, int arr[]) {
  if (k == 0 || i < 0)
     return 0;
  
  long long int left = 0;
  long long int right = 0;
  
  if (dp[i][z])
    return dp[i][z];
  
  bool lef_local = true;
  
  if (z && lef_local) {
    lef_local = false;
    left = f(i - 1, k - 1, z - 1, arr);
  }

  right = f(i + 1, k - 1, z, arr);
  
  long long int result = arr[i] + std::max(left, right);
  dp[i][z] = result;
  
  return result;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int t;
  std::cin >> t;
  while (t--) {
    int n, k, z;
    std::cin >> n >> k >> z;
    long long int ans = 0;
    int arr[n];
    for(int i = 0; i < n; i++) { 
        std::cin >> arr[i]; 
    }
    ans = arr[0] + f(1, k, z, arr);
    std::cout << ans << std::endl;
    std::fill(&dp[0][0], &dp[0][0] + sizeof(dp), 0);
  }

  return 0;
}