#include <iostream>
#include <cstring>

using namespace std;

#define N 100005

long long dp[N][6];

long long f(int i, int k, int z, int arr[]) {
  if (k == 0 || i < 0)
    return 0;
  long long left = 0;
  long long right = 0;
  if (dp[i][z] != -1)
    return dp[i][z];
  if (z) {
    left = f(i - 1, k - 1, z - 1, arr);
  }
  right = f(i + 1, k - 1, z, arr);
  return dp[i][z] = arr[i] + max(left, right);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int t;
  cin >> t;
  memset(dp, -1, sizeof(dp));
  while (t--) {
    int n, k, z;
    cin >> n >> k >> z;
    int arr[n];
    for (int i = 0; i < n; i++) {
      cin >> arr[i];
    }
    cout << arr[0] + f(1, k, z, arr) << "\n";
  }
  return 0;
}