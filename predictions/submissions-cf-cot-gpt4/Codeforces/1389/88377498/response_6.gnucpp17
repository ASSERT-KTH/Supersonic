#include <iostream>
#include <string>
#include <cstring>
#include <algorithm>
#define ses "\n"
#define mxi 200003
typedef long long v99;
using namespace std;

v99 pw(v99 a, v99 b) {
  v99 ans = 1;
  for (v99 i = 1; i <= b; ++i)
    ans = (ans * a);
  return ans;
}

void solve() {
  string s;
  cin >> s;
  v99 cr_h = 0, a[12];
  memset(a, 0, sizeof(a));
  v99 size = s.size();
  for (int i = 0; i < size; i++) a[s[i] - '0']++;
  for (int i = 0; i < 10; i++) cr_h = max(cr_h, a[i]);
  for (int i = 0; i < 10; i++) {
    for (int j = 0; j < 10; j++) {
      v99 koita = 0;
      v99 ekhn_ache = i;
      for (int p = 0; p < size; p++) {
        if (s[p] - '0' == ekhn_ache) {
          koita++;
          ekhn_ache = i + j - ekhn_ache;
        }
      }
      if (koita & 1)
        --koita;
      cr_h = max(cr_h, koita);
    }
  }
  cout << size - cr_h << ses;
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  long long t;
  cin >> t;
  while (t--) solve();
  return 0;
}