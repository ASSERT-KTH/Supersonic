#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

const std::string ses = "\n";
const std::string whp = " ";

typedef long long v99;
typedef unsigned long long ull;

v99 fx[4] = {1, -1, 0, 0};
v99 fy[4] = {0, 0, 1, -1};
v99 ox8[] = {0, 0, 1, 1, 1, -1, -1, -1};
v99 oy8[] = {1, -1, 1, -1, 0, 0, -1, 1};

bool sort2val(const std::pair<int, int> &a, const std::pair<int, int> &b) {
  if (a.second == b.second)
    return a.first < b.first;
  return a.second < b.second;
}

template <class T> T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a % b) : a); }

template <class T> T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }

v99 pw(v99 a, v99 b) {
  v99 ans = 1;
  for (v99 i = 1; i <= b; ++i)
    ans = (ans * a);
  return ans;
}

template <class T> inline T bigmod(T n, T p, T m) {
  if (p == 0)
    return 1;
  else if (p % 2 == 0) {
    v99 val = bigmod(n, p / 2, m);
    return (T)((val * val) % m);
  } else
    return (T)(((v99)n * (v99)bigmod(n, p - 1, m)) % m);
}

void solve() {
  std::string s;
  std::cin >> s;
  v99 cr_h = 0;
  std::vector<v99> a(12, 0);
  for (auto ch : s) ++a[ch - '0'];
  for (auto i : a) cr_h = std::max(cr_h, i);
  for (int i = 0; i < 10; ++i) {
    for (int j = 0; j < 10; ++j) {
      v99 koita = 0;
      v99 ekhn_ache = i;
      for (char ch : s) {
        if ((ch - '0') == ekhn_ache) {
          ++koita;
          ekhn_ache = i + j - ekhn_ache;
        }
      }
      if (koita & 1)
        --koita;
      cr_h = std::max(cr_h, koita);
    }
  }
  std::cout << s.size() - cr_h << ses;
}

int main() {
  long long t;
  std::cin >> t;
  while (t--)
    solve();
  return 0;
}