#include <iostream>
#include <cmath>
#include <vector>
using namespace std;
typedef long long ll;
#define PB push_back
#define F first
#define S second
#define MP make_pair
#define endl '\n'
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define sz(a) a.length()
const double PI = acos(-1);
const double eps = 1e-9;
const ll MOD = 1000000007;
#define mem(a, b) memset(a, b, sizeof(a))
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) (a * (b / gcd(a, b)))
#define sqr(a) ((a) * (a))
inline bool checkBit(ll n, int i) { return n & (1LL << i); }
inline ll setBit(ll n, int i) {
  return n | (1LL << i);
  ;
}
inline ll resetBit(ll n, int i) { return n & (~(1LL << i)); }
inline bool EQ(double a, double b) { return fabs(a - b) < 1e-9; }
inline bool isLeapYear(ll year) {
  return (year % 400 == 0) || (year % 4 == 0 && year % 100 != 0);
}
inline bool isIntege(double num) { return (num == (int)num); }
inline double coDist(double x1, double y1, double x2, double y2) {
  return sqrt(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)));
}
inline double TriangleAreaWithSide(double a, double b, double c) {
  double s = (a + b + c) / 2;
  double area = sqrt(s * (s - a) * (s - b) * (s - c));
  return area;
}
inline void normal(ll &a) {
  a %= MOD;
  (a < 0) && (a += MOD);
}
inline ll modMul(ll a, ll b) {
  a %= MOD, b %= MOD;
  normal(a), normal(b);
  return (a * b) % MOD;
}
inline ll modAdd(ll a, ll b) {
  a %= MOD, b %= MOD;
  normal(a), normal(b);
  return (a + b) % MOD;
}
inline ll modSub(ll a, ll b) {
  a %= MOD, b %= MOD;
  normal(a), normal(b);
  a -= b;
  normal(a);
  return a;
}
inline ll modPow(ll b, ll p) {
  ll r = 1;
  while (p) {
    if (p & 1)
      r = modMul(r, b);
    b = modMul(b, b);
    p >>= 1;
  }
  return r;
}
inline ll modInverse(ll a) { return modPow(a, MOD - 2); }
inline ll modDiv(ll a, ll b) { return modMul(a, modInverse(b)); }

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  double a[10];
  for (int i = 0; i < 6; i++) {
    cin >> a[i];
  }
  double ang = (PI * 120.0) / 180.0;
  double A1 = ((a[0] * a[1]) / 2) * sin(ang);
  double A2 = ((a[2] * a[3]) / 2) * sin(ang);
  double A3 = ((a[4] * a[5]) / 2) * sin(ang);
  double x1 = sqrt(sqr(a[0]) + sqr(a[1]) - (2.0 * a[0] * a[1] * cos(ang)));
  double x2 = sqrt(sqr(a[3]) + sqr(a[2]) - (2.0 * a[3] * a[2] * cos(ang)));
  double x3 = sqrt(sqr(a[4]) + sqr(a[5]) - (2.0 * a[4] * a[5] * cos(ang)));
  double A4 = TriangleAreaWithSide(x1, x2, x3);
  double ar = TriangleAreaWithSide(1, 1, 1);
  int tottri = (A1 + A2 + A3 + A4) / ar;
  cout << tottri << endl;
}