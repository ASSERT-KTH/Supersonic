The program is full of unnecessary function and macro definitions, most of them aren't even used in the main function which increases memory usage and compilation time. There are also unnecessary typedefs. Let's remove them.

The code also uses `std::endl` to insert new lines. While this does insert a new line, it also flushes the output stream which can be a costly operation if done too frequently. We can use `'\n'` to insert a newline without flushing the stream.

We can also move the `ang`, `ar` and `tottri` calculation outside the for loop as they are constant and don't need to be recalculated every time.

Here's the optimized version of your program:

```cpp
#include <iostream>
#include <cmath>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);

  const double PI = acos(-1);
  const double ang = (PI * 120.0) / 180.0;
  const double ar = sqrt(3)/4;

  double a[6];
  for (int i = 0; i < 6; ++i) {
    cin >> a[i];
  }

  double A1 = ((a[0] * a[1]) / 2) * sin(ang);
  double A2 = ((a[2] * a[3]) / 2) * sin(ang);
  double A3 = ((a[4] * a[5]) / 2) * sin(ang);
  double x1 = sqrt(a[0]*a[0] + a[1]*a[1] - (2.0 * a[0] * a[1] * cos(ang)));
  double x2 = sqrt(a[2]*a[2] + a[3]*a[3] - (2.0 * a[2] * a[3] * cos(ang)));
  double x3 = sqrt(a[4]*a[4] + a[5]*a[5] - (2.0 * a[4] * a[5] * cos(ang)));
  double A4 = sqrt((x1+x2+x3)/2 * ((x1+x2+x3)/2-x1) * ((x1+x2+x3)/2-x2) * ((x1+x2+x3)/2-x3));

  int tottri = (A1 + A2 + A3 + A4) / ar;
  cout << tottri << '\n';

  return 0;
}
```

In this optimized version of the program, we only include the necessary headers and only define functions that we actually use. We also removed all macros and typedefs that aren't used, which makes the code more readable and efficient.