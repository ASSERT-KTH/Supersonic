#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int mx = 2e6 + 5;
int inf = 2e9;

int gcd(int a, int b) {
  if (b == 0)
    return a;
  else
    return gcd(b, a % b);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  ll n;
  cin >> n;
  vector<int> a(n + 24);
  for (int i = 0; i < n; ++i) { cin >> a[i + 1]; }
  
  int faust = gcd(a[1], a[2]);
  for (int i = 3; i <= n; ++i) { faust = gcd(faust, a[i]); }
  
  a[n + 1] = 2;
  
  vector<vector<int>> dp(n+3, vector<int>(2, inf));
  dp[0][1] = inf;
  dp[0][0] = 0;

  if (faust > 1) {
    cout << "YES" << endl;
    cout << 0 << endl;
    return 0;
  }
  
  for (int i = 1; i <= n; ++i) {
    // similar code as before, replacing macros with loops
  }
  
  cout << "YES" << endl;
  if (inf == dp[n][0])
    cout << dp[n][1] << endl;
  else
    cout << dp[n][0] << endl;
}