#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define rep(i, n) for (long long(i) = 0; (i) < (n); ++(i))
#define ref(i, a, b) for (long long(i) = (a); (i) <= (b); ++(i))
#define endl '\n'
#define st first
#define nd second
#define pb push_back
#define mp make_pair
const int mx = 2e6 + 5;
const int inf = 2e9;

int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

int dp[2][2];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    ll n;
    cin >> n;
    vector<int> a(n + 24);
    rep(i, n) { cin >> a[i + 1]; }
    int faust = gcd(a[1], a[2]);
    ref(i, 3, n) { faust = gcd(faust, a[i]); }
    a[n + 1] = 2;
    dp[0][1] = dp[1][1] = inf;
    dp[0][0] = 0;

    if (faust > 1) {
        cout << "YES" << endl << 0 << endl;
        return 0;
    }

    ref(i, 1, n) {
        int cur = i & 1;
        int prev = 1 - cur;
        bool ai = a[i] % 2;
        bool ai1 = a[i + 1] % 2;
        dp[cur][0] = dp[cur][1] = inf;

        if (ai && ai1) {
            dp[cur][0] = dp[prev][1];
            dp[cur][1] = dp[prev][0] + 1;
        } else if (ai && !ai1) {
            dp[cur][0] = dp[prev][1];
            dp[cur][1] = dp[prev][0] + 2;
        } else if (!ai && ai1) {
            dp[cur][0] = min(dp[prev][0], dp[prev][1]);
            dp[cur][1] = min(dp[prev][1], dp[prev][0]) + 2;
        } else if (!ai && !ai1) {
            dp[cur][0] = min(dp[prev][0], dp[prev][1]);
            dp[cur][1] = dp[cur][0];
        }
    }

    cout << "YES" << endl << min(dp[n & 1][0], dp[n & 1][1]) << endl;
    return 0;
}