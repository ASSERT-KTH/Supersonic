#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define rep(i, n) for (long long(i) = 0; (i) < (n); ++(i))
#define ref(i, a, b) for (long long(i) = (a); (i) <= (b); ++(i))
#define endl '\n'
#define st first
#define nd second
#define pb push_back
#define mp make_pair
const int mx = 2e6 + 5;
int inf = 2e9;
int gcd(int a, int b) {
  while (b != 0) {
    int temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  ll n;
  cin >> n;
  vector<int> a(n + 3);
  rep(i, n) { cin >> a[i + 1]; }
  int faust = gcd(a[1], a[2]);
  ref(i, 3, n) { faust = gcd(faust, a[i]); }
  a[n + 1] = 2;
  vector<vector<int>> dp(n + 3, vector<int>(2, inf));
  dp[0][0] = 0;
  if (faust > 1) {
    cout << "YES" << endl;
    cout << 0 << endl;
    return 0;
  }
  ref(i, 1, n) {
    bool ai_odd = a[i] & 1;
    bool ai1_odd = a[i + 1] & 1;
    dp[i][0] = min(dp[i - 1][0], dp[i - 1][1]);
    dp[i][1] = inf;
    if (ai_odd && ai1_odd) {
      dp[i][1] = dp[i - 1][0] + 1;
    } else if (ai_odd && !ai1_odd) {
      dp[i][1] = dp[i - 1][0] + 2;
    } else if (!ai_odd && ai1_odd) {
      dp[i][1] = dp[i][0] + 2;
    } else if (!ai_odd && !ai1_odd) {
      dp[i][1] = dp[i][0];
    }
  }
  cout << "YES" << endl;
  cout << min(dp[n][0], dp[n][1]) << endl;
}