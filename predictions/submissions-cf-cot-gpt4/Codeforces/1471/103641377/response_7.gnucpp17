#include <iostream>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <chrono>
using namespace std;

#define nl "\n"
#define ll long long
#define pii pair<ll, ll>
#define vi vector<ll>

#define boost                                                                  \
  ios::sync_with_stdio(false);                                                 \
  cin.tie(NULL);                                                               \
  cout.tie(NULL)

const int N = 1e6 + 5;
vi dp(N);

void preprocess(int num) {
  dp[1] = 1;
  for (int i = 2; i <= sqrt(num) + 1; ++i) {
    if (num % i == 0) {
      if (dp[num / i] % i)
        dp[num] = dp[num / i] * i;
      else
        dp[num] = dp[num / i] / i;
      break;
    }
  }
  if (dp[num] == 0)
    dp[num] = num;
}

void solve() {
  int n;
  cin >> n;
  unordered_map<int, int> mp;
  vi a(n);
  for (int i = 0; i < n; ++i) 
    cin >> a[i];
  
  int ans1 = 1, ans2 = 0;
  for (int i = 0; i < n; ++i) {
    preprocess(a[i]);
    mp[dp[a[i]]]++;
    ans1 = max(ans1, mp[dp[a[i]]]);
    if (mp[dp[a[i]]] % 2 == 0 || dp[a[i]] == 1)
      ans2 += mp[dp[a[i]]];
  }

  int q;
  cin >> q;
  while (q--) {
    int w;
    cin >> w;
    if (w == 0)
      cout << ans1 << nl;
    else
      cout << max(ans1, ans2) << nl;
  }
}

int main() {
  boost;
  int t = 1;
  cin >> t;
  while (t--)
    solve();
  return 0;
}