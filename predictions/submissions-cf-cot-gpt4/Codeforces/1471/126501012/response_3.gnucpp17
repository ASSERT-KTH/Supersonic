#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
#define mod 1000000007

int64_t getN(int64_t n, int64_t x, std::unordered_map<int64_t, int64_t>& memo) {
  if(memo.find(n) != memo.end()){
    return memo[n];
  }
  int64_t cnt = 0;
  while (n > 0 && n % x == 0) {
    ++cnt;
    n /= x;
  }
  memo[n] = cnt;
  return cnt;
}

void solve() {
  int64_t n, x;
  std::cin >> n >> x;
  std::vector<int64_t> a(n), b(n);
  a.reserve(n);
  b.reserve(n);
  std::unordered_map<int64_t, int64_t> memo;
  for (auto &c : a)
    std::cin >> c;
  int64_t sum = 0;
  for (int64_t i = 0; i < n; ++i) {
    b[i] = getN(a[i], x, memo);
  }
  int64_t tok = b[0];
  for (int64_t i = 0; i < n; ++i) {
    if (i != 0)
      b[i] = std::min(b[i], tok);
    tok = std::min(tok, b[i]);
  }
  tok = b[n - 1];
  for (int64_t i = n - 1; i >= 0; --i) {
    if (i != n - 1)
      b[i] = std::min(b[i], 1 + tok);
    tok = std::min(tok, b[i]);
    sum += b[i] * a[i] + a[i];
  }
  std::cout << sum;
}

int main() {
  int64_t t;
  std::cin >> t;
  while (t--) {
    solve();
    std::cout << "\n";
  }
  return 0;
}