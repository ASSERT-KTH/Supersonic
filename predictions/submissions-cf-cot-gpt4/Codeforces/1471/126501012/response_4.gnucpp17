#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;
typedef long long ll;

ll getN(ll n, ll x) {
    ll cnt = 0;
    while (n > 0 && n % x == 0) {
        ++cnt;
        n /= x;
    }
    return cnt;
}

void solve() {
    ll n, x;
    cin >> n >> x;
    vector<ll> a(n), b(n);
    for (auto &c : a)
        cin >> c;
    ll sum = 0;
    for (ll i = 0; i < n; ++i) {
        b[i] = getN(a[i], x);
    }
    ll tok = b[0];
    for (ll i = 0; i < n; ++i) {
        if (i != 0)
            b[i] = min(b[i], tok);
        tok = min(tok, b[i]);
    }
    tok = b[n - 1];
    for (ll i = n - 1; i >= 0; --i) {
        if (i != n - 1)
            b[i] = min(b[i], 1 + tok);
        tok = min(tok, b[i]);
        sum += b[i] * a[i] + a[i];
    }
    cout << sum;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    ll t;
    cin >> t;
    while (t--) {
        solve();
        cout << "\n";
    }
    return 0;
}