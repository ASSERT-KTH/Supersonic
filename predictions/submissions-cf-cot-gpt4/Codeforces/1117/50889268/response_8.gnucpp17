#include <iostream>
#include <vector>
#include <cmath>
using namespace std;
typedef long long ll;

ll x1, y1, x2, y2;

bool check(vector<ll>& x, vector<ll>& y, int n, ll pos) {
  ll full_periods = pos / n;
  ll this_day = pos % n;
  ll current_x = x1 + full_periods * x[n] + x[this_day];
  ll current_y = y1 + full_periods * y[n] + y[this_day];
  return abs(x2 - current_x) + abs(y2 - current_y) <= pos;
}

int main() {
  int n;
  cin >> x1 >> y1 >> x2 >> y2;
  cin >> n;
  vector<ll> x(n + 1, 0), y(n + 1, 0);
  for (int i = 0; i < n; ++i) {
    char direction;
    cin >> direction;
    if (direction == 'U')
      y[i + 1]++;
    else if (direction == 'D')
      y[i + 1]--;
    else if (direction == 'L')
      x[i + 1]--;
    else if (direction == 'R')
      x[i + 1]++;
    x[i + 1] += x[i], y[i + 1] += y[i];
  }
  ll l = 0, r = -1;
  ll upper_bound = abs(x2 - x1) + abs(y2 - y1);
  upper_bound += (upper_bound % 2 != n % 2) ? 1 : 0;
  while (l <= upper_bound) {
    ll mid = (l + upper_bound) / 2;
    if (check(x, y, n, mid)) {
      r = mid;
      upper_bound = mid - 1;
    } else {
      l = mid + 1;
    }
  }
  cout << r;
  return 0;
}