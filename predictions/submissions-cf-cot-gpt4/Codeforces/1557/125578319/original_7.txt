Optimization Steps:

1. The variable "array_size" is declared as a double but it is used as an integer in a for loop. It should be declared as an integer because array indices are always integers. This will save space and improve performance.

2. The array "data" is not necessary. We can read the input directly from the cin and process it without storing it in an array. This will save a lot of memory because the array "data" can potentially have 100000 elements.

3. The variable "answer" is not necessary. We can directly print the result without storing it in a variable. This will save a little bit of memory.

4. The variable "i" is declared twice. We can declare it only once at the beginning of the program. This will make the code cleaner.

5. The function "find_answer" does not return a value even though it is declared to return a double. It should be declared as a void function.

Here is the optimized program:

```cpp
#include <bits/stdc++.h>
#include <iomanip>
using namespace std;
void find_answer() {
  int array_size;
  double maximum = -1E9, sum = 0;
  cin >> array_size;
  for (int i = 0; i < array_size; i++) {
    double value;
    cin >> value;
    maximum = max(value, maximum);
    sum += value;
  }
  cout << maximum + ((sum - maximum) / (array_size - 1));
}
int main() {
  ios_base::sync_with_stdio(0);
  cout.tie(nullptr);
  cin.tie(nullptr);
  cout << fixed << setprecision(6);
  int test_case;
  cin >> test_case;
  for (int i = 0; i < test_case; i++) {
    find_answer();
    cout << endl;
  }
  return 0;
}
```
This optimized program will run faster and use less memory than the original program.