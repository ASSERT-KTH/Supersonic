Optimization Strategies:

1. Instead of using the generic `#include <bits/stdc++.h>`, include only the necessary libraries. This reduces the compile-time and the memory usage. In your case, you only use features from `iostream` and `iomanip`, so we only need to include these two.

2. Using Variable Length Array (VLA) is not a good practice in C++, because it may cause a stack overflow for large inputs. However, in this program, we do not need to store all the numbers. We can calculate the sum and min on the fly. Therefore, we can remove the array.

3. The `double min = INT_MIN;` is a bit confusing. It should be `int min = INT_MIN;` as you are comparing it with the integer array elements.

4. The `sum` can be a `double` from the start, eliminating the need of casting it to `double` when calculating `ans`.

5. `sum = sum + arr[i];` can be simplified to `sum += arr[i];`.

6. Variables `min` and `sum` can be initialized closer to their first use.

Optimized Code:

```
#include <iostream>
#include <iomanip>
using namespace std;

int main() {
  int test;
  cin >> test;
  while (test--) {
    int n;
    cin >> n;
    double sum = 0.0;
    int min = INT_MIN;
    for (int i = 0; i < n; i++) {
      int num;
      cin >> num;
      if (num > min)
        min = num;
      sum += num;
    }
    if (n > 1) {
      double ans = (sum - min) / (n - 1) + min;
      cout << setprecision(8) << ans << '\n';
    }
  }
  return 0;
}
```