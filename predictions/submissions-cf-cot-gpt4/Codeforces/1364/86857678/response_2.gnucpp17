#include <iostream>
#include <vector>

using namespace std;
typedef long long ll;

void dfs(int s, int des, vector<int>& arr, const vector<vector<int>>& vec) {
    arr[s] = 1;

    for (auto i : vec[s]) {
        if (!arr[i]) {
            dfs(i, des, arr, vec);
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<ll> a(n+1);
        for (int i = 1; i <= n; i++)
            cin >> a[i];
        vector<ll> v;
        for (int i = 1; i <= n; i++) {
            if (i == 1 || i == n || (a[i - 1] < a[i]) != (a[i] < a[i + 1]))
                v.push_back(a[i]);
        }
        cout << v.size() << endl;
        for (auto it : v)
            cout << it << " ";
        cout << endl;
    }
    return 0;
}