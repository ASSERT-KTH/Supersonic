#include <iostream>
#include <vector>
#include <array>

const int mod = 1e9 + 7;

void solve() {
    std::vector<array<int, 3>> ve;
    int sgtree[8000000];
    int slow[8000000];
    int n, m;
    std::cin >> n >> m;
    if (m == 2) {
        std::cout << "0\n";
        return;
    }
    for (int i = 0; i < n; i++) {
        int l, r, w;
        std::cin >> l >> r >> w;
        if (l == 1 && r == m) {
            std::cout << "0\n";
            return;
        }
        ve.push_back({w, l, r - 1});
    }
    sort(ve.begin(), ve.end());
    int i = 0, j = -1, ans = 1000000;
    while (j < ((int)ve.size() - 1)) {
        if (check() > 0) {
            del(i);
            ans = min(ans, ve[j][0] - ve[i][0]);
            i++;
        } else {
            j++;
            add(j);
        }
    }
    while (check() > 0) {
        del(i);
        ans = min(ans, ve[j][0] - ve[i][0]);
        i++;
    }
    std::cout << ans << '\n';
}

int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t = 1;
    for (int tc = 1; tc <= t; tc++) {
        solve();
    }
    return 0;
}