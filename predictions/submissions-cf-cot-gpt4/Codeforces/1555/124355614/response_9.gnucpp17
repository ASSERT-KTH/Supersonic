#include <iostream>
#include <vector>
#include <algorithm>
#define ll long long
#define N 2000005
using namespace std;

int t[4 * N], push[4 * N];

void add(int v, int tl, int tr, int l, int r, int x) {
  if (!push[v] && l <= r) {
    if (tl != tr) {
      push[v * 2] += push[v];
      push[v * 2 + 1] += push[v];
      t[v * 2] += push[v];
      t[v * 2 + 1] += push[v];
    }
    push[v] = 0;
    if (tl == l && tr == r) {
      t[v] += x;
      push[v] += x;
      return;
    }
    int tm = (tl + tr) / 2;
    add(v * 2, tl, tm, l, min(r, tm), x);
    add(v * 2 + 1, tm + 1, tr, max(l, tm + 1), r, x);
    t[v] = min(t[v * 2], t[v * 2 + 1]);
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int n, m;
  cin >> n >> m;
  vector<pair<int, pair<int, int>>> s;

  for (int i = 0; i < n; i++) {
    int l, r, w;
    cin >> l >> r >> w;
    s.push_back({w, {l, r - 1}});
  }

  sort(s.begin(), s.end());
  int ans = INT_MAX;

  for (int i = 0; i < n; i++) {
    if (i > 0)
      add(1, 1, m - 1, s[i - 1].second.first, s[i - 1].second.second, -1);
    while (i < n && t[1] == 0) {
      add(1, 1, m - 1, s[i].second.first, s[i].second.second, +1);
      i++;
    }
    if (t[1])
      ans = min(ans, s[i].first - s[i].first);
  }
  cout << ans;
}