#include <iostream>
#include <string>
#include <algorithm>

#define PATTERN_SIZE 6

using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int n, m;
    cin >> n >> m;
    string s;
    cin >> s;
    string k[PATTERN_SIZE] = {"abc", "acb", "bac", "bca", "cab", "cba"};
    int pp[PATTERN_SIZE][n + 1];
    fill(&pp[0][0], &pp[0][0] + sizeof(pp), 0);
    for (int i = 0; i < PATTERN_SIZE; i++) {
        for (int j = 0; j < n; j++) {
            pp[i][j + 1] = pp[i][j];
            if (k[i][j % 3] != s[j])
                pp[i][j + 1]++;
        }
    }
    for (int i = 0; i < m; i++) {
        int l, r;
        cin >> l >> r;
        l--;
        int ans = r - l;
        for (int j = 0; j < PATTERN_SIZE; j++) {
            ans = min(ans, pp[j][r] - pp[j][l]);
        }
        cout << ans << endl;
    }
    return 0;
}