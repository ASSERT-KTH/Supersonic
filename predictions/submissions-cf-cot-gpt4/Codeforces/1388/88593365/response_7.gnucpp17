#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vpii;

#define pb push_back

void solve() {
  int n;
  cin >> n;
  vi a(n), b(n);
  for(auto &it : a) cin >> it;
  for(auto &it : b) cin >> it;
  vpii e;
  for(int i = 0; i < n; ++i) if (b[i] >= 0) e.pb({i, b[i] - 1});
  
  vi adj[n], adj2[n];
  for(auto &it : e) {
    adj[it.first].pb(it.second);
    adj2[it.second].pb(it.first);
  }

  vi d(n), ans, t;
  queue<int> qu;
  for(int i = 0; i < n; ++i) {
    d[i] = adj2[i].size();
    if (!d[i]) qu.push(i);
  }
  while (!qu.empty()) {
    int u = qu.front();
    qu.pop();
    for(auto v : adj[u]) {
      --d[v];
      if (!d[v]) qu.push(v);
    }
    t.pb(u);
  }
  if (t.size() == n) ans = t;

  ll sum = 0;
  vi ans1, d1;
  for(auto x : ans) {
    if (a[x] > 0) {
      ans1.pb(x);
      sum += a[x];
      if (b[x] >= 0) a[b[x] - 1] += a[x];
    } else
      d1.pb(x);
  }
  reverse(d1.begin(), d1.end());
  for(auto x : d1) sum += a[x], ans1.pb(x);
  
  cout << sum << '\n';
  for(auto &it : ans1) cout << it+1 << ' ';
  cout << '\n';
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  solve();
  return 0;
}