#include <iostream>
#include <vector>
#include <cassert>
#include <iomanip>
#include <utility>

using namespace std;
using li = long long;
using ld = long double;
using pt = pair<int, int>;
using tree = node*;

const int INF = int(1e9);
const li INF64 = li(1e18);
const ld EPS = 1e-9;
const int N = 250 * 1000 + 555;
const int M = 30 * 1000 * 1000 + 555;

// Removed global variables

struct node {
  int sum, sval;
  node *l, *r;
  node() : sum(0), sval(-1), l(NULL), r(NULL) {}
  node(int sum, int sval, node *l, node *r)
      : sum(sum), sval(sval), l(l), r(r) {}
};

// Removed unnecessary inline functions

// Other functions (Read, Solve, Main) remain same

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0), cout.tie(0);
  cout << fixed << setprecision(15);
  if (read()) {
    solve();
  }
  return 0;
}