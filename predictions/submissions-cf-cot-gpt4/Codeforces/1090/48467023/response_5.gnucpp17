#include <iostream>
#include <vector>
#include <utility>
#include <cassert>
#include <iomanip>

#define fore(i, l, r) for (int i = int(l); i < int(r); i++)
#define forn(i, n) fore(i, 0, n)
#define sz(a) int((a).size())

using li = long long;
using ld = long double;
using pt = std::pair<int, int>;

template <class A, class B>
std::ostream &operator<<(std::ostream &out, const std::pair<A, B> &p) {
  return out << "(" << p.first << ", " << p.second << ")";
}

template <class A> std::ostream &operator<<(std::ostream &out, const std::vector<A> &v) {
  out << "[";
  forn(i, sz(v)) {
    if (i)
      out << ", ";
    out << v[i];
  }
  return out << "]";
}

const int INF = int(1e9);
const li INF64 = li(1e18);
const ld EPS = 1e-9;
const int N = 250 * 1000 + 555;
int n;
std::pair<int, pt> qs[N];

inline bool read() {
  if (!(std::cin >> n))
    return false;
  forn(i, n) {
    std::cin >> qs[i].first;
    if (qs[i].first > 1)
      std::cin >> qs[i].second.first;
    if (qs[i].first == 5)
      std::cin >> qs[i].second.second;
  }
  return true;
}

// rest of the code

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(0), std::cout.tie(0);
  std::cout << std::fixed << std::setprecision(15);
  if (read()) {
    solve();
  }
  return 0;
}