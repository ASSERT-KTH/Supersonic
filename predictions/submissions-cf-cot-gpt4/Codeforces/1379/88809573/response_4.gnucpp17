#include <algorithm>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>
using namespace std;
typedef long long ll;
const int maxn = 2e5 + 10;
const int maxm = 5e5 + 10;
int q;
struct node {
  ll a, b;
} f[maxn];
ll ans;
ll A[maxn], B[maxn];
ll suf[maxn];
int n, m;
int main() {
  scanf("%d", &q);
  while (q--) {
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= m; i++) {
      scanf("%lld %lld", &f[i].a, &f[i].b);
      A[i] = f[i].a;
    }
    sort(A + 1, A + 1 + m);
    int diff = m - n + 1;
    for (int i = m; i >= 1; i--)
      suf[i] = suf[i + 1] + A[i];
    ans = 0;
    if (n <= m)
      ans = suf[diff];
    for (int i = 1; i <= m; i++) {
      ll temp;
      int pos = lower_bound(A + 1, A + 1 + m, f[i].b) - A;
      if (pos <= diff)
        continue;
      temp = suf[pos];
      int num = n - (m - pos + 1);
      if (f[i].a < f[i].b)
        temp += f[i].a, num--;
      temp += num * f[i].b;
      ans = max(ans, temp);
    }
    cout << ans << endl;
  }
  return 0;
}