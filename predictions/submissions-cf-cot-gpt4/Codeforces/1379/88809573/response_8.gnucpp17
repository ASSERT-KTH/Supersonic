#include <algorithm>
#include <iostream>
#include <vector>
#define pb push_back
#define fi first
#define se second
using namespace std;
typedef long long ll;
const int maxn = 2e5 + 10;
int q;
struct node {
  ll a, b;
} f[maxn];
ll ans;
vector<ll> A;
ll suf[maxn];
int n, m;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cin >> q;
  while (q--) {
    cin >> n >> m;
    A.clear();
    A.resize(m+1);
    for (int i = 1; i <= m; i++) {
      cin >> f[i].a >> f[i].b;
      A[i] = f[i].a;
    }
    sort(A.begin()+1, A.end());
    fill(suf, suf+maxn, 0);
    for (int i = m; i >= 1; i--)
      suf[i] = suf[i + 1] + A[i];
    ans = 0;
    if (n <= m)
      ans = suf[m - n + 1];
    for (int i = 1; i <= m; i++) {
      ll temp = 0;
      int pos = lower_bound(A.begin()+1, A.end(), f[i].b) - A.begin();
      int num_diff = m - pos + 1;
      if (pos <= num_diff)
        continue;
      temp += suf[pos];
      int num = n - num_diff;
      if (f[i].a < f[i].b)
        temp += f[i].a, num--;
      temp += num * f[i].b;
      ans = max(ans, temp);
    }
    cout << ans << "\n";
  }
  return 0;
}