#include "bits/stdc++.h"
#define ll long long int
#define MOD 1000000007
#define oo 1000000000000000000
#define forr(i, n) for (int i = 0; i < n; i++)
#define fastio                                                                 \
  ios_base::sync_with_stdio(false);                                            \
  cin.tie(0);                                                                  \
  cout.tie(0)
#define all(x) x.begin(), x.end()
#define unique(v)                                                              \
  sort(all(v));                                                                \
  v.resize(distance(v.begin(), unique(all(v))))
#define eb emplace_back
#define FF first
#define SS second
#define mem(a, v) memset(a, v, sizeof(a))
#define pb push_back
#define popcount(x) __builtin_popcount(x)
using namespace std;

template <typename T> void __print(T x) {
  cerr << x;
}

long long power(long long x, long long n, long long P = -1) {
  if (x == 0)
    return 0;
  else if (n == 0 || x == 1)
    return 1;
  long long res = 1;
  while (n > 0) {
    if (n & 1)
      res *= x;
    if (P != -1) res %= P;
    x *= x;
    if (P != -1) x %= P;
    n /= 2;
  }
  return res;
}

void __sol() {
  int n;
  cin >> n;
  vector<pair<ll, ll>> v(n);
  forr(i, n) cin >> v[i].FF >> v[i].SS;
  if (n == 2) {
    cout << min(v[0].FF + max(0LL, v[1].FF - v[0].SS),
                v[1].FF + max(0LL, v[0].FF - v[1].SS))
         << "\n";
    return;
  }
  ll cnt = 0, curr = v[0].FF;
  for (int i = 0; i < n; i++) {
    cnt += curr;
    curr = max(0LL, v[(i + 1) % n].FF - v[i].SS);
  }
  ll ans = cnt;
  for (int i = 1; i < n; i++) {
    cnt += v[i].FF - max(0LL, v[i].FF - v[(i - 1 + n) % n].SS);
    cnt += max(0LL, v[(i - 1 + n) % n].FF - v[(i - 2 + n) % n].SS);
    cnt -= v[(i - 1 + n) % n].FF;
    ans = min(ans, cnt);
  }
  cout << ans << "\n";
  return;
}

int main() {
  fastio;
  int tc;
  cin >> tc;
  while (tc--)
    __sol();
  return 0;
}