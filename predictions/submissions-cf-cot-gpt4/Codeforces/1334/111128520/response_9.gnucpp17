#include <iostream>
#include <vector>
#include <algorithm>
#include <chrono>
#include <cstring>
#define ll long long int
#define MOD 1000000007
#define oo 1000000000000000000
#define forr(i, n) for (int i = 0; i < n; ++i)
#define fastio ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0)
#define all(x) x.begin(), x.end()
#define unique(v) sort(all(v)); v.resize(distance(v.begin(), unique(all(v))))
#define eb emplace_back
#define FF first
#define SS second
#define mem(a, v) memset(a, v, sizeof(a))
#define pb push_back
#define popcount(x) __builtin_popcount(x)

void __sol() {
  int n;
  std::cin >> n;
  std::vector<std::pair<ll, ll>> v(n);
  forr(i, n) std::cin >> v[i].FF >> v[i].SS;
  if (n == 2) {
    std::cout << std::min(v[0].FF + std::max(0LL, v[1].FF - v[0].SS),
                v[1].FF + std::max(0LL, v[0].FF - v[1].SS))
         << "\n";
    return;
  }
  ll cnt = 0, curr = v[0].FF;
  for (int i = 0; i < n; i++) {
    cnt += curr;
    curr = std::max(0LL, v[(i + 1) % n].FF - v[i].SS);
  }
  ll ans = cnt;
  for (int i = 1; i < n; ++i) {
    cnt += v[i].FF - std::max(0LL, v[i].FF - v[(i - 1 + n) % n].SS);
    cnt += std::max(0LL, v[(i - 1 + n) % n].FF - v[(i - 2 + n) % n].SS);
    cnt -= v[(i - 1 + n) % n].FF;
    ans = std::min(ans, cnt);
  }
  std::cout << ans << "\n";
  return;
}

int main() {
  clock_t time_req = clock();
  fastio;
  int tc = 1;
  std::cin >> tc;
  while (tc--)
    __sol();
  time_req = clock() - time_req;
  return 0;
}