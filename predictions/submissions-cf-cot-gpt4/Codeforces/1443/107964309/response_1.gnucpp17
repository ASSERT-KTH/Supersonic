#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <array>

int main() {
  int T;
  std::cin >> T;
  while (T--) {
    int n;
    std::cin >> n;
    std::vector<std::array<int, 2>> vec;
    vec.reserve(n);
    std::unordered_map<int, int> timeSum;
    for (int i = 0; i < n; i++) {
      int a, b;
      std::cin >> a >> b;
      vec.push_back({a, b});
      timeSum[a] += b;
    }
    std::sort(vec.begin(), vec.end());
    int total = 0;
    for (const auto& item : vec) {
      total += item[1];
    }
    int ans = total;
    for (int i = 0; i < n; i++) {
      if (i > 0 && vec[i][0] == vec[i - 1][0])
        continue;
      int temp = vec[i][0] +
                 std::max(0, (total - timeSum[vec[i][0]] - vec[i][0]));
      ans = std::min(ans, temp);
      total -= timeSum[vec[i][0]];
    }
    std::cout << ans << '\n';
  }
}