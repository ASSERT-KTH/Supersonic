#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>

using namespace std;

int main() {
  int T;
  cin >> T;
  while (T--) {
    long long n;
    cin >> n;
    vector<pair<long long, long long>> vec(n);
    for (long long i = 0; i < n; i++) {
      long long a;
      cin >> a;
      vec[i].first = a;
    }
    for (long long i = 0; i < n; i++) {
      long long b;
      cin >> b;
      vec[i].second = b;
    }
    sort(vec.begin(), vec.end());
    unordered_map<long long, long long> timeSum;
    long long total = 0;
    for (long long i = 0; i < n; i++) {
      timeSum[vec[i].first] += vec[i].second;
      total += vec[i].second;
    }
    long long ans = total;
    for (long long i = 0; i < n; i++) {
      long long temp = vec[i].first + max(0LL, (total - timeSum[vec[i].first] - vec[i].first));
      ans = min(ans, temp);
      total -= timeSum[vec[i].first];
    }
    cout << ans << endl;
  }
  return 0;
}