#include <iostream>
#include <vector>

template <typename T>
std::istream &operator>>(std::istream &input, std::vector<T> &v) {
  for (T &a : v)
    input >> a;
  return input;
}

void answer(bool v) {
  std::cout << (v ? "YES\n" : "NO\n");
}

void solve(std::vector<unsigned> &a) {
  unsigned min_val = a[0], diff = 0;
  for (size_t i = 1; i < a.size(); ++i) {
    if (a[i] < min_val) {
      min_val = a[i];
    }
    if (a[i] > a[i - 1]) {
      diff = a[i] - a[i - 1];
      if (diff > min_val) {
        return answer(false);
      }
    }
    a[i] -= diff;
  }
  answer(true);
}

void test_case() {
  size_t n;
  std::cin >> n;
  std::vector<unsigned> a(n);
  std::cin >> a;
  solve(a);
}

int main() {
  size_t t;
  std::cin >> t;
  while (t-- > 0)
    test_case();
  return 0;
}