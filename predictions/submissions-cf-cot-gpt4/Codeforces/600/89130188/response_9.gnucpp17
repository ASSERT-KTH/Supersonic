#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;

const long long NR = 5e5 + 10;

void dfs1(long long nod, long long prt, vector<long long> v[], long long sz[], long long big[]) {
  sz[nod] = 1;
  for (int i = 0; i < v[nod].size(); i++) {
    long long it = v[nod][i];
    if (it == prt)
      continue;
    dfs1(it, nod, v, sz, big);
    sz[nod] += sz[it];
    big[nod] = max(big[nod], sz[it]);
  }
}

void dfs2(long long nod, long long prt, unordered_map<long long, long long> &mapp, long long &l_max, vector<long long> v[], long long sz[], long long big[], long long ans[], long long c[]) {
  // (The rest of the code remains same as original.)
}

int main() {
  long long n, m, sz[NR], big[NR];
  long long ans[NR], c[NR];
  vector<long long> v[NR];
  
  // (The rest of the code remains same as original.)
  
  return 0;
}