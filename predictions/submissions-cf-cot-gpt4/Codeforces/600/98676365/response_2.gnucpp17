#include <iostream>
#include <vector>
using ll = long long;

struct Seg {
  int l, r, v;
  ll num, sum;
};

const int maxn = 1e5 + 7;
Seg t[maxn << 5];
int n, tot, cor[maxn], rt[maxn];
ll ans[maxn];
std::vector<int> G[maxn];

void up(int id) {
  if (t[t[id].l].num > t[t[id].r].num) {
    t[id].num = t[t[id].l].num;
    t[id].v = t[t[id].l].v;
    t[id].sum = t[t[id].l].sum;
  } else if (t[t[id].l].num < t[t[id].r].num) {
    t[id].num = t[t[id].r].num;
    t[id].v = t[t[id].r].v;
    t[id].sum = t[t[id].r].sum;
  } else {
    t[id].num = t[t[id].l].num;
    t[id].v = t[t[id].l].v;
    t[id].sum = t[t[id].l].sum + t[t[id].r].sum;
  }
}

// ...

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int _T = 1;
  while (_T--)
    solve();
  return 0;
}