#include <iostream>
#include <unordered_map>
#include <string>

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const ll POSITIVE_INFINITY = 9223372036854775807;
const ll NEGATIVE_INFINITY = -9223372036854775807;
const ll MOD = 1000000007;
const ld PI = acos(-1.0);

template <typename T> inline T bigMod(T A, T B, T M = MOD) {
  A %= M;
  T ret = 1;
  while (B) {
    if (B & 1)
      ret = (ret * A) % M;
    A = (A * A) % M;
    B = B >> 1;
  }
  return ret;
}

template <typename T> inline T invMod(T A, T M = MOD) {
  return bigMod(A, M - 2, M);
}

const int N = 200005;

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);

  int n;
  std::cin >> n;
  std::unordered_map<std::string, int> mp;
  mp.reserve(1 << 18);
  mp.max_load_factor(0.25);
  while (n--) {
    std::string ar;
    std::cin >> ar;
    auto it = mp.insert({ar, 1});
    if (!it.second) {
      std::cout << ar << it.first->second << '\n';
      it.first->second++;
    } else {
      std::cout << "OK\n";
    }
  }
  return 0;
}