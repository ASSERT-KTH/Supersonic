#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
#define endl '\n';
const ll POSITIVE_INFINITY = 9223372036854775807;
const ll NEGATIVE_INFINITY = -9223372036854775807;
const ll MOD = 1000000007;
const ld PI = acos(-1.0);
template <typename T> inline T bigMod(T A, T B, T M = MOD) {
  A %= M;
  T ret = 1;
  while (B) {
    if (B & 1)
      ret = (ret * A) % M;
    A = (A * A) % M;
    B = B >> 1;
  }
  return ret;
}
template <typename T> inline T invMod(T A, T M = MOD) {
  return bigMod(A, M - 2, M);
}
const int N = 200005;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int n;
  scanf("%d", &n);

  unordered_map<string, int> mp;
  mp.reserve(1 << 18);
  mp.max_load_factor(0.25);

  char ar[N];
  while (n--) {
    scanf("%s", ar);
    auto [it, inserted] = mp.emplace(ar, 0);

    if (inserted) {
      printf("OK\n");
    }
    else {
      printf("%s%d\n", ar, it->second);
      it->second += 1;
    }
  }
  return 0;
}