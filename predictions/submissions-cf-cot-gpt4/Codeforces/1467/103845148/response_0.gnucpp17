#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define vi vector<int>
#define vb vector<bool>
#define ff first
#define ss second
#define pb push_back
vector<int> a;
vector<bool> isPeakOrValley;

bool check(ll i) {
    return (i > 0 && i < a.size() - 1) &&
           ((a[i] > a[i + 1] && a[i] > a[i - 1]) ||
            (a[i] < a[i - 1] && a[i] < a[i + 1]));
}

int kitne(ll ind) {
    int cnt = 0;
    for (ll i = ind - 1; i <= ind + 1; i++) {
        cnt += isPeakOrValley[i];
    }
    return cnt;
}

void hn_bhai() {
    ll n;
    cin >> n;
    a.resize(n);
    isPeakOrValley.resize(n, false);
    for (ll i = 0; i < n; i++)
        cin >> a[i];
    ll tot = 0;
    for (ll i = 1; i < n - 1; i++) {
        isPeakOrValley[i] = check(i);
        tot += isPeakOrValley[i];
    }
    int p = 0;
    for (ll i = 1; i < n - 1; i++) {
        int temp = kitne(i);
        ll val = a[i];
        if (i - 1 >= 0) {
            a[i] = a[i - 1];
            isPeakOrValley[i] = check(i);
        }
        p = max(p, temp - kitne(i));
        if (i + 1 < n) {
            a[i] = a[i + 1];
            isPeakOrValley[i] = check(i);
        }
        p = max(p, temp - kitne(i));
        a[i] = val;
        isPeakOrValley[i] = check(i);
    }
    cout << tot - p << endl;
}

int main() {
    int t;
    cin >> t;
    while (t--)
        hn_bhai();
}