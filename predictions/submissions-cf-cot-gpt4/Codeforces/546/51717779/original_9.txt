The existing code calculates the sum of the series using a loop. This can be optimized by using the formula for the sum of an arithmetic series directly, which is:

Sum = n/2 * (first_term + last_term)

Where:
n is the number of terms,
first_term is the first term in the series,
last_term is the last term in the series.

In this case, the series is 1k, 2k, ..., wk. So, "n" is "w", "first_term" is "k", and "last_term" is "wk".

This can help to reduce the running time complexity from O(w) to O(1).

The optimized version of the code would be:

```cpp
#include <bits/stdc++.h>
using namespace std;
int main() {
  int_least64_t k, n, w, dem = 0;
  cin >> k >> n >> w;
  dem = w * (w + 1) / 2 * k;
  if (dem <= n) {
    cout << 0;
  } else
    cout << dem - n;
  return 0;
}
```
This code does the same as the original one, but it calculates the sum of the series without a loop, which makes it more efficient.