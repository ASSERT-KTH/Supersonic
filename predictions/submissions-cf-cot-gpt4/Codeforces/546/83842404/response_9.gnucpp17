#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

const int N = 5e6 + 2;
const long long inf = 1e18;
vector<int> val(N);
vector<bool> is(N);
vector<int> cnt(N);
vector<long long> pref(N);
const int to = sqrt(N) + 1;

inline int sz(const auto& x) { return (int)x.size(); }

void precalc() {
  for (int i = 2; i < N; i++) {
    val[i] = i;
  }
  for (int i = 2; i < to; i++) {
    if (is[i])
      continue;
    for (int j = 2 * i; j < N; j += i) {
      is[j] = 1;
      int temp = j;
      while (temp % i == 0) {
        temp /= i;
        cnt[j]++;
      }
      if (val[j] != 1) {
        cnt[j]++;
      }
    }
  }
  for (int i = 1; i < N; i++) {
    pref[i] = pref[i - 1] + cnt[i];
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  precalc();
  int t, a, b;
  cin >> t;
  while (t--) {
    cin >> a >> b;
    cout << pref[a] - pref[b] << '\n';
  }
  return 0;
}