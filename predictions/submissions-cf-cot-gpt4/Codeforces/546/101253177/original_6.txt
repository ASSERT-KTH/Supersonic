There are several steps that can be taken to optimize this program:

1. Remove the `#include <bits/stdc++.h>` line. This header file includes almost all standard library headers which is not efficient. It increases compilation time and memory usage. We should only include what we use.

2. Remove the `#include <stdio.h>` line. This header file is not necessary here because we are using cin and cout for input and output which are in the std namespace, not in the stdio.h header file.

3. Avoid using `std::endl` when you just want a newline character. `std::endl` actually flushes the output buffer in addition to inserting a newline, which can be a costly operation.

4. We can reduce the number of operations in the code by calculating `(n - k)` only once and storing it in a variable. This way, we avoid calculating it twice in the if-else condition.

5. We can use `std::ios_base::sync_with_stdio(false)` to turn off synchronization between the C and C++ standard streams. This can give a significant speedup.

6. The `cin.tie(NULL)` is used to untie cin from cout. Tied streams ensure that one stream is flushed automatically before each I/O operation on the other stream.

Here is the optimized code:

```c++
#include <iostream>

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int d = 0;
  std::cin >> d;
  long k = 0;
  std::cin >> k;
  long n = 0;
  std::cin >> n;
  n = n * (n + 1) / 2;
  n = n * d;
  long diff = n - k;
  if (diff > 0) {
    std::cout << diff << '\n';
  } else {
    std::cout << "0" << '\n';
  }
}
```
