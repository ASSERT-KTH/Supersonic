#include <algorithm>
#include <iostream>
#include <vector>
#define LSOne(S) ((S) & -(S))
const long long P = 1e9 + 7;
const double EPS = 1e-11;
using namespace std;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<long long> v(n);
    vector<long long> cnt(n+1, 0);
    for (int i = 0; i < n; i++) {
      cin >> v[i];
      cnt[v[i]]++;
    }
    sort(v.begin(), v.end());
    vector<long long> dp(n+1, 0);
    long long best = 0;
    for (int i = 1; i <= n; i++) {
      if (cnt[i] == 0)
        continue;
      for (int j = i*2; j <= n; j += i) {
        dp[i] = max(dp[i], dp[j]);
      }
      dp[i] += cnt[i];
      best = max(best, dp[i]);
    }
    cout << n - best << '\n';
  }
}