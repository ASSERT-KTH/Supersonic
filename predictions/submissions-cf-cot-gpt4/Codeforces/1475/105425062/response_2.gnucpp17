#include <cmath>
#include <iostream>
#include <vector>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<long long> cnt(2e5 + 1, 0);
    for (int i = 0; i < n; i++) {
      long long x;
      cin >> x;
      cnt[x]++;
    }
    vector<long long> dp(2e5 + 1, 0);
    long long best = 0;
    for (int i = 1; i < dp.size(); i++) {
      if (cnt[i] == 0)
        continue;
      int root = sqrt(i);
      for (int j = 2; j <= root; j++) {
        if (i % j == 0) {
          dp[i] = max(dp[i], dp[j]);
        }
      }
      dp[i] += cnt[i];
      best = max(best, dp[i]);
    }
    cout << n - best << '\n';
  }
}