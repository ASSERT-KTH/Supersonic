#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>
#define LSOne(S) ((S) & -(S))
const long long P = 1e9 + 7;
const double EPS = 1e-11;
using namespace std;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<long long> dp(2e5 + 1, 0);
    long long best = 0;
    for (int i = 0; i < n; i++) {
      int x;
      cin >> x;
      for (int j = 1; j * j <= x; j++) {
        if (x % j == 0) {
          dp[x] = max(dp[x], max(dp[j], dp[x / j]));
        }
      }
      dp[x]++;
      best = max(best, dp[x]);
    }
    cout << n - best << '\n';
  }
}