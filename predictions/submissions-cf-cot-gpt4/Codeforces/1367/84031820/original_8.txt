Here are the optimization steps:

1. Remove #include <bits/stdc++.h> as it includes a lot of unnecessary header files which increases the compile time. Include only those header file which are required.
2. Replace typedef long long ll; typedef long double ld; with using ll = long long; using ld = long double; as this is a more modern and clean way of writing typedefs.
3. Remove the usage of cin.tie(NULL) and ios::sync_with_stdio(false) as it is not required in this code. It is generally used to speed up cin/cout, but in this code, it's unnecessary and removing it will reduce the program's startup time.
4. Remove the unused macros ceil(n, m), all(x), and rall(x) to clean up the code.
5. The vector pref can be initialized with the value of '0' to remove the need to check if pref[i] == 0 before increasing ans.

Here is the optimized code:

```cpp
#include <iostream>
#include <vector>
#include <string>
using namespace std;
using ll = long long;
using ld = long double;

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n, k, ans = 0;
    string s;
    cin >> n >> k >> s;
    vector<int> pref(n + 1, 0);
    for (int i = 0; i < n; ++i)
      if (s[i] == '1')
        pref[max(0, i - k)] += 1, pref[min(n, i + k + 1)] -= 1;
    for (int i = 1; i < n; ++i)
      pref[i] += pref[i - 1];
    for (int i = 0; i < n; ++i) {
      int cnt = 0;
      while (i < n && pref[i] == 0) {
        ++cnt;
        if (cnt > 0)
          ++ans, cnt = -1 * k;
        ++i;
      }
    }
    cout << ans << '\n';
  }
}
```