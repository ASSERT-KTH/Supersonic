#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

const int MAX = 1000001;
vector<int> spf(MAX);

void SPF() {
  spf[0] = spf[1] = -1;
  for (int i = 2; i < MAX; ++i)
    spf[i] = i;
  for (int i = 2; i * i < MAX; ++i) {
    if (spf[i] == i) {
      for (int j = i; j * i < MAX; ++j)
        spf[i * j] = i;
    }
  }
}

int main() {
  SPF();
  int n;
  cin >> n;

  for (int t = 0; t < n; ++t) {
    long long a;
    cin >> a;
    auto root = sqrt(a);
    if (a != 1 && root * root == a && spf[static_cast<int>(root)] == static_cast<int>(root))
      cout << "YES" << endl;
    else
      cout << "NO" << endl;
  }
  return 0;
}