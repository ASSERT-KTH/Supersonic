#include <iostream>
#include <cmath>
#include <vector>
using namespace std;

const int MAX_N = 1000001;
const int MOD = 1000000007;
int spf[MAX_N];
void SPF() {
  spf[0] = spf[1] = -1;
  for (int i = 2; i < MAX_N; ++i)
    spf[i] = i;
  for (int i = 2; i * i < MAX_N; ++i) {
    if (spf[i] == i) {
      for (int j = i; j * i < MAX_N; ++j)
        spf[i * j] = i;
    }
  }
}

int main() {
  SPF();
  int n;
  cin >> n;
  long long int a;
  vector<bool> ans(n, false);
  string result;
  for (int t = 0; t < n; ++t) {
    cin >> a;
    long long int root = sqrt(a);
    if (a != 1 && root * root == a && spf[root] == root)
      ans[t] = true;
  }
  for (int t = 0; t < n; ++t) {
    result += (ans[t] ? "YES\n" : "NO\n");
  }
  cout << result;
  return 0;
}