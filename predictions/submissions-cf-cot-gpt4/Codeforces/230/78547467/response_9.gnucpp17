#include <iostream>
#include <cmath>
#include <vector>

const long long MOD = 1000000007;
const std::string NEW_LINE = "\n";

std::vector<int> SPF() {
    const int maxN = 1000001;
    std::vector<int> spf(maxN);
    spf[0] = spf[1] = -1;
    for (int i = 2; i < maxN; ++i)
        spf[i] = i;
    for (int i = 2; i * i < maxN; ++i) {
        if (spf[i] == i) {
            for (int j = i; j * i < maxN; ++j)
                spf[i * j] = i;
        }
    }
    return spf;
}

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);

    auto spf = SPF();

    int n;
    std::cin >> n;
    long long a;
    for (int t = 0; t < n; ++t) {
        std::cin >> a;
        long long root = sqrt(a);
        if (a != 1 && root * root == a && spf[root] == root)
            std::cout << "YES" << NEW_LINE;
        else
            std::cout << "NO" << NEW_LINE;
    }
    return 0;
}