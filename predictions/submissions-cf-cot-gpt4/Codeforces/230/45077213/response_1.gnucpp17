#include <iostream>
#include <cstring>
using namespace std;
bool isPrime[1000010];
long long sqrRoots[1000010];
void Prem();
int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  int n;
  long long a;
  memset(isPrime, true, sizeof(isPrime));
  isPrime[0] = isPrime[1] = false;
  for (long long i = 0; i <= 1000000; i++) {
    sqrRoots[i] = i * i;
  }
  Prem();
  cin >> n;
  for (int i = 0; i < n; i++) {
    cin >> a;
    long long root = lower_bound(sqrRoots, sqrRoots + 1000000, a) - sqrRoots;
    if (sqrRoots[root] != a || !isPrime[root])
      cout << "NO\n";
    else
      cout << "YES\n";
  }
  return 0;
}
void Prem() {
  for (int i = 2; i * i <= 1000000; i++) {
    if (isPrime[i]) {
      for (int j = i * i; j <= 1000000; j += i)
        isPrime[j] = false;
    }
  }
}