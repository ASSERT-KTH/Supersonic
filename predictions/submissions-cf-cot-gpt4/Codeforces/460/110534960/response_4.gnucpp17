#include <iostream>
#include <vector>
#include <algorithm>
using ll = long long;
const int N = 1e5 + 70;
ll h[N];
bool check(ll x, ll n, ll m, ll w) {
  std::vector<ll> s(n, 0);
  ll cur = 0, mm = 0;
  for (ll i = 0; i < n; ++i) {
    if (i - w >= 0)
      cur -= s[i - w];
    if (h[i] >= x)
      continue;
    if (h[i] + cur < x) {
      s[i] = x - h[i] - cur;
      cur += s[i];
      mm += s[i];
    }
    if (mm > m)
      return false;
  }
  return true;
}
void solve() {
  ll n, m, w;
  scanf("%lld%lld%lld", &n, &m, &w);
  ll mn = 1e18;
  for (int i = 0; i < n; ++i)
    scanf("%lld", h + i), mn = std::min(mn, h[i]);
  ll l = 0, r = mn + m, ans = 0;
  while (l <= r) {
    ll md = l + ((r - l) >> 1);
    if (check(md, n, m, w)) {
      ans = std::max(ans, md);
      l = md + 1;
    } else {
      r = md - 1;
    }
  }
  printf("%lld", ans);
}
int main() {
  std::ios::sync_with_stdio(0);
  std::cin.tie(0);
  std::cout.tie(0);
  solve();
  puts("");
  return 0;
}