#include <vector>
#include <algorithm>
#include <cstdio>
using std::vector;
using std::min;
using std::max;
using ll = long long;
const int N = 1e5 + 70;
const ll M = 1e9 + 7;
ll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }
bool check(ll x, ll n, ll w, ll m, vector<ll>& h, vector<ll>& s) {
  ll cur = 0, mm = 0;
  for (int i = 0; i < n; ++i) {
    if (i - w >= 0)
      cur -= s[i - w];
    if (h[i] >= x)
      continue;
    if (h[i] + cur < x) {
      s[i] = x - h[i] - cur;
      cur += s[i];
      mm += s[i];
    }
    if (mm > m)
      return false;
  }
  return true;
}
void solve() {
  ll n, m, w;
  scanf("%lld%lld%lld", &n, &m, &w);
  vector<ll> h(N);
  vector<ll> s(n, 0ll);
  ll mn = 1e18;
  for (int i = 0; i < n; ++i)
    scanf("%lld", &h[i]), mn = min(mn, h[i]);
  ll l = 0, r = mn + m, ans = 0;
  while (l <= r) {
    ll md = l + ((r - l) >> 1);
    if (check(md, n, w, m, h, s)) {
      ans = max(ans, md);
      l = md + 1;
    } else {
      r = md - 1;
    }
  }
  printf("%lld", ans);
}
int main() {
  solve();
  puts("");
  return 0;
}