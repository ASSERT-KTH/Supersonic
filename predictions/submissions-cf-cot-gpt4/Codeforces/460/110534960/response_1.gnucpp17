#include <iostream>
#include <vector>
#include <algorithm>

typedef long long ll;

ll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }

bool check(ll x, ll n, ll m, ll w, std::vector<ll>& h) {
  std::vector<ll> s(n);
  ll cur = 0, mm = 0;
  for (int i = 0; i < n; ++i) {
    if (i - w >= 0)
      cur -= s[i - w];
    if (h[i] >= x)
      continue;
    if (h[i] + cur < x) {
      s[i] = x - h[i] - cur;
      cur += s[i];
      mm += s[i];
    }
    if (mm > m)
      return false;
  }
  return true;
}

void solve() {
  ll n, m, w;
  std::cin >> n >> m >> w;
  std::vector<ll> h(n);
  ll mn = 1e18;
  for (int i = 0; i < n; ++i) {
    std::cin >> h[i];
    mn = std::min(mn, h[i]);
  }
  ll l = 0, r = mn + m, ans = 0;
  while (l <= r) {
    ll md = l + ((r - l) >> 1);
    if (check(md, n, m, w, h)) {
      ans = std::max(ans, md);
      l = md + 1;
    } else {
      r = md - 1;
    }
  }
  std::cout << ans;
}

int main() {
  solve();
  std::cout << "\n";
}