#include <cmath>
#include <cstdio>
#include <algorithm>
using namespace std;
typedef long long ll;
const int inf = 0x3f3f3f3f;
const int mod = 1e9 + 7;
const int maxn = 2000 + 10;
const double MAX_LIMIT = 100000000000000000.0;
double *x, *y;
int n;
bool isOk(double k) {
  double l = -MAX_LIMIT, r = MAX_LIMIT;
  for (int i = 0; i < n; i++) {
    if (y[i] > k * 2) {
      return false;
    }
    double tmp = sqrt(k * k - (k - y[i]) * (k - y[i]));
    l = max(l, x[i] - tmp);
    r = min(r, x[i] + tmp);
  }
  return l < r;
}
int main() {
  scanf("%d", &n);
  x = new double[n];
  y = new double[n];
  for (int i = 0; i < n; i++) {
    scanf("%lf %lf", &x[i], &y[i]);
  }
  for (int i = 0; i < n; i++) {
    if (y[i] * y[n - 1] < 0) {
      printf("-1\n");
      delete[] x;
      delete[] y;
      return 0;
    } else {
      y[i] = abs(y[i]);
    }
  }
  double l = 0, r = MAX_LIMIT;
  double mid = (l + r) / 2.0;
  for (int i = 1; i <= 100; i++) {
    mid = (l + r) / 2.0;
    if (isOk(mid)) {
      r = mid;
    } else {
      l = mid;
    }
  }
  printf("%.10lf\n", mid);
  delete[] x;
  delete[] y;
}