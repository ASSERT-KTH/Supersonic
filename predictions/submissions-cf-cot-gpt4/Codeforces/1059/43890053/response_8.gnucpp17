#include <cmath>
#include <cstdio>
#include <algorithm>
#define mem(a, b) memset(a, b, sizeof(a))

typedef long long ll;
const int maxn = 2000 + 10;
double x[100000 + 10], y[100000 + 10];
int n;

bool isOk(long double k) {
  long double l = -1e18, r = 1e18;
  long double kSquare = k * k;
  for (int i = 0; i < n; ++i) {
    if (y[i] > k * 2) {
      return false;
    }
    long double kMinusY = k - y[i];
    long double sqrtValue = sqrt(kSquare - kMinusY * kMinusY);
    l = std::max(l, (long double)(x[i] - sqrtValue));
    r = std::min(r, (long double)(x[i] + sqrtValue));
  }
  return l < r;
}

int main() {
  scanf("%d", &n);
  for (int i = 0; i < n; ++i) {
    scanf("%lf %lf", &x[i], &y[i]);
  }
  for (int i = 0; i < n; ++i) {
    if (y[i] * y[n - 1] < 0) {
      printf("-1\n");
      return 0;
    } else {
      y[i] = abs(y[i]);
    }
  }
  long double l = 0, r = 1e18;
  long double mid;
  for (int i = 1; i <= 100; ++i) {
    mid = (l + r) / 2.0;
    if (isOk(mid)) {
      r = mid;
    } else {
      l = mid;
    }
  }
  printf("%.10Lf\n", mid);
}