#include <iostream>
#include <set>
#include <string>

using ll = long long;
const int base = 257;
const int mod = 1e9 + 7;
const int N = 1e6;
ll f[N];

void init() {
  f[0] = 1;
  for (auto i = 1; i < N; i++)
    f[i] = f[i - 1] * base % mod;
}

ll get_hash(const std::string& s) {
  ll val = 0;
  for (auto i = 0; i < s.size(); i++) {
    val = (val * base + s[i]) % mod;
  }
  return val;
}

bool check(const std::string& t, const std::set<ll>& st) {
  ll val = get_hash(t);
  for (auto i = 0; i < t.size(); i++) {
    for (auto j = 'a'; j <= 'c'; j++) {
      if (j != t[i]) {
        if (st.find((((j - t[i]) * f[t.size() - i - 1] + val) % mod + mod) %
                    mod) != st.end())
          return true;
      }
    }
  }
  return false;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  init();
  int n, m;
  std::cin >> n >> m;
  std::set<ll> st;
  for (auto i = 0; i < n; i++) {
    std::string s;
    std::cin >> s;
    st.insert(get_hash(s));
  }
  for (auto i = 0; i < m; i++) {
    std::string t;
    std::cin >> t;
    std::cout << (check(t, st) ? "YES" : "NO") << std::endl;
  }
  return 0;
}