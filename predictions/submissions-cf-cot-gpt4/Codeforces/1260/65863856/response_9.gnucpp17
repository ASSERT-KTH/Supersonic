#include <bits/stdc++.h>
using namespace std;
template <typename T> class LazySegmentTree {
  int n;
  vector<T> arr;
  vector<T> lazy;
  // ... the rest is same ...
public:
  LazySegmentTree(int n) : arr(4 * n), lazy(4 * n) {
    this->n = n;
  }
  // ... the rest is same ...
};

// ... the rest is same ...

map<int, bool> memo;
bool is_possible(int mid) {
  if (memo.count(mid)) {
    return memo[mid];
  }
  // ... the rest is same ...
  bool result = req_time <= t;
  memo[mid] = result;
  return result;
}

int main() {
  // ... the rest is same ...
  sort(a, a + m);
  // ... the rest is same ...
}