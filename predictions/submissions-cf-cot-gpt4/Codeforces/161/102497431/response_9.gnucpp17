#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
const ll MOD = 1e9 + 7;
#define pb push_back
#define ff first
#define ss second
mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
ll mrand(ll B) { return (ull)rng() % B; }
const int N = 50005;
const int K = 505;
int g[N][N];
ll ans;
int n, k;
ll dp[N][K];
void dfs(int node, int par) {
  for (int u = 0; u < n; u++) {
    if (u == par || g[node][u] == 0)
      continue;
    dfs(u, node);
    for (int i = 1; i <= k; i++) {
      dp[node][i] += dp[u][i - 1];
    }
  }
  ans += dp[node][k];
  ll tot = 0;
  for (int i = 1, j = k - 1; i < k; i++, j--) {
    for (int u = 0; u < n; u++) {
      if (u == par || g[node][u] == 0)
        continue;
      tot += (dp[u][i - 1]) * (dp[node][j] - dp[u][j - 1]);
    }
  }
  ans += tot >> 1;
  dp[node][0] = 1LL;
}
void work() {
  cin >> n >> k;
  for (int i = 0; i < n - 1; i++) {
    int u, v;
    cin >> u >> v;
    --u, --v;
    g[u][v] = g[v][u] = 1;
  }
  dfs(0, -1);
  cout << ans << '\n';
}
int main() {
  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
  work();
  return 0;
}