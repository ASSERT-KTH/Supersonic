#include <iostream>
#include <vector>

using namespace std;
using ll = long long;
using ld = long double;
using ve = vector<string>;
using vellll = vector<vector<vector<vector<ll>>>>;
using velll = vector<vector<vector<ll>>>;
using pii = pair<int, int>;
using pll = pair<ll, ll>;

const ll mod = 1000000007;
const ll inf = 9e18;
const ld pi = 2 * acos(0.0);

void solve() {
  ll n, m;
  cin >> n >> m;

  ve arr(n);
  for (int i = 0; i < n; i++)
    cin >> arr[i];

  velll cum(n, vector<vector<ll>>(m, vector<ll>(2, 0)));
  vellll dp(n, vector<vector<vector<ll>>>(m, vector<vector<ll>>(2, vector<ll>(2, 0))));

  for (int i = n - 1; i >= 0; i--) {
    for (int j = 0; j < m; j++) {
      cum[i][j][0] = (i == n - 1) ? 0 : cum[i + 1][j][0];
      if (arr[i][j] == 'R')
        cum[i][j][0]++;
    }
  }
  for (int j = m - 1; j >= 0; j--) {
    for (int i = 0; i < n; i++) {
      cum[i][j][1] = (j == m - 1) ? 0 : cum[i][j + 1][1];
      if (arr[i][j] == 'R')
        cum[i][j][1]++;
    }
  }

  // rest of the code remains the same...
  cout << dp[0][0][0][1] << '\n';
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int tes = 1;
  while (tes--) {
    solve();
  }
  
  return 0;
}