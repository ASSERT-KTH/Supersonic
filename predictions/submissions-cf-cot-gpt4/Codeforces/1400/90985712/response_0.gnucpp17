#include <bits/stdc++.h>
#define int long long
using namespace std;
const int N = 3e5 + 7, K = 20, X = 42, M = 998244353;
int cnk[X][X] = {0};
int fact[N] = {0}, defact[N] = {0};
int dp[1 << K][X] = {0};
int sz[1 << K] = {0};
vector<int> op[N], cl[N];
pair<int, int> lr[N];
pair<int, int> bad[K];
bool has[N] = {0};
bool f[N] = {0}, f2[N] = {0};
int bpow(int a, int n) {
  if (n == 0)
    return 1;
  if (n == 1)
    return a % M;
  if (n & 1 == 0) {
    int mem = bpow(a, n >> 1);
    return (mem * mem) % M;
  }
  return (a * bpow(a, n - 1)) % M;
}
int obr(int x) { return bpow(x, M - 2); }
void init() {
  for (int n = 0; n < X; n++) {
    cnk[n][0] = 1;
    for (int k = 1; k <= n; k++) {
      cnk[n][k] = (cnk[n - 1][k] + cnk[n - 1][k - 1]) % M;
    }
  }
  fact[0] = 1;
  for (int i = 1; i < N; i++)
    fact[i] = (fact[i - 1] * i) % M;
  defact[N - 1] = obr(fact[N - 1]);
  for (int i = N - 2; i >= 0; i--) {
    defact[i] = (defact[i + 1] * (i + 1)) % M;
  }
}
// The rest of your code remains the same