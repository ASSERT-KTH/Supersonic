#include <iostream>
#include <vector>
#include <map>
#include <set>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int n;
  cin >> n;
  long long ans = static_cast<long long>(n) * (n + 1) / 2;
  
  vector<long long> v(n + 1), cnt(n + 1, 0);
  for (int i = 1; i <= n; i++)
    cin >> v[i];
    
  map<long long, int> mp;
  set<long long> vis;
  mp[0] = 0;
  vis.insert(0);
  
  int mx = 0;
  for (int i = 1; i <= n; i++) {
    cnt[i] = cnt[i - 1] + v[i];
    if (vis.count(cnt[i])) {
      int l = max(0, mp[cnt[i]] - mx);
      int r = n - i;
      if (mp[cnt[i]] - mx >= 0) {
        ans -= static_cast<long long>(l) * r + l + r;
        if (i - mp[cnt[i]] != n || !mx)
          ans--;
      }
      mx = max(mp[cnt[i]] + 1, mx);
    }
    mp[cnt[i]] = i;
    vis.insert(cnt[i]);
  }
  
  cout << ans << "\n";
  return 0;
}