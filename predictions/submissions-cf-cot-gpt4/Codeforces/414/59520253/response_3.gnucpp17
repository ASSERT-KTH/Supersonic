#include <bits/stdc++.h>
using namespace std;
#define int long long
#define vi vector<int>
#define vll vector<ll>
#define umap unordered_map
#define pii pair<int, int>
#define pll pair<ll, ll>
#define uset unordered_set
#define frw(i, a, b) for (auto i = (a); i < (b); i++)
#define bck(i, a, b) for (auto i = (a); i > (b); i--)
#define T()                                                                    \
  int testcases;                                                               \
  cin >> testcases;                                                            \
  frw(TC, 1, testcases + 1)
#define tez                                                                    \
  ios::sync_with_stdio(0);                                                     \
  cin.tie(0);                                                                  \
  cout.tie(0);
#define endl "\n"
#define fi first
#define se second
#define pow asdihagsiduh
#define pub push_back
#define in insert
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define sz(a) int(a.size())
#define sq(a) ((a) * (a))
#define trace(...) ZZ(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1> void ZZ(const char *name, Arg1 &&arg1) {
  std::cerr << name << " = " << arg1 << endl;
}
template <typename Arg1, typename... Args>
void ZZ(const char *names, Arg1 &&arg1, Args &&... args) {
  const char *comma = strchr(names + 1, ',');
  std::cerr.write(names, comma - names) << " = " << arg1;
  ZZ(comma, args...);
}
const int MOD = 1e9 + 7;
int main() {
  tez int n, k;
  cin >> n >> k;
  int dp[n + 1][k + 1] = {0};
  bck(i, n, 0) {
    dp[i][1] = 1;
    frw(j, 2, k + 1) {
      for (int l = 2 * i; l <= n; l += i) {
        dp[i][j] += dp[l][j - 1];
        if (dp[i][j] >= MOD)
          dp[i][j] -= MOD;
      }
      dp[i][j] += dp[i][j - 1];
      if (dp[i][j] >= MOD)
        dp[i][j] -= MOD;
    }
  }
  int ans = 0;
  frw(i, 1, n + 1) ans += dp[i][k];
  cout << ans % MOD;
}