#include <algorithm>
#include <chrono>
#include <iostream>
#include <string>
#include <vector>

using namespace std;

constexpr double EPS = 1e-9;
constexpr int INF = 1e9;
constexpr int MOD = 1000000007;
constexpr char endl = '\n';

using V = vector;
using db = double;
using ldb = long double;
using ll = long long;
using pq = priority_queue;
using str = string;
using uint = unsigned int;
using ull = unsigned long long;
using umap = unordered_map;
using uset = unordered_set;

#define ff first
#define ss second
#define pb push_back
#define pf push_front

#define rep(i, a, b) for (int i = (a); i < (b); i++)
#define sqr(x) ((x) * (x))
#define all(x) (x).begin(), (x).end()

void solve() {
    string s;
    cin >> s;
    int n = s.size();
    int ans = INF;
    V<V<int>> next(n, V<int>(4, -1));
    next[n - 1][s[n - 1] - '0'] = n - 1;
    for (int i = n - 2; i >= 0; i--) {
        next[i] = next[i + 1];
        next[i][s[i] - '0'] = i;
        if (next[i][1] == -1 || next[i][2] == -1 || next[i][3] == -1) {
            continue;
        }
        ans = min(ans, max({next[i][1], next[i][2], next[i][3]}) - i + 1);
    }
    cout << (ans == INF ? 0 : ans) << endl;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    ll TC;
    cin >> TC; 
    while (TC--) {
        solve();
    }
}