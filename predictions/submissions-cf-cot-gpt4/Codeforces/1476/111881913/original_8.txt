Here's the optimized program with explanations:

Optimization 1: Reduce the use of std::cin and std::cout
Using std::cin and std::cout for taking input and output is slow when compared to scanf and printf. The reason is that cin and cout are much more high-level, and they do a lot more than just input/output, including handling things like internationalization and other formatting tasks. So, to make your program faster, you can use scanf/printf instead of cin/cout.

Optimization 2: Reduce the number of division and modulus operations
Division and modulus operations are slower than multiplication and addition/subtraction operations. In the given code, the division and modulus operations are used to calculate the value of 'ans' and 'sum'. We can reduce these operations by storing the result of the division operation in a variable and reusing it.

Optimization 3: Avoid multiplying by 100
Multiplying by 100 is slower than left shifting by 2 places (equivalent to multiplying by 4). We can replace 'v[i] * 100' with '(v[i] << 2)' to make the program run faster.

Here's the optimized program:

```cpp
#include <bits/stdc++.h>
#define ull unsigned long long int
using namespace std;
int main() {
  int t;
  scanf("%d", &t);
  while (t--) {
    ull n, k;
    scanf("%llu%llu", &n, &k);
    vector<ull> v(n);
    for (int i = 0; i < n; i++) {
      scanf("%llu", &v[i]);
    }
    ull ans = 0;
    ull sum = v[0];
    for (int i = 1; i < n; i++) {
      if ((v[i] << 2) > sum * k) {
        ull x = (v[i] << 2) - sum * k;
        ull quotient = x / k;
        if (x % k != 0) {
          ans += quotient + 1;
          sum += quotient + 1;
        } else {
          ans += quotient;
          sum += quotient;
        }
      }
      sum += v[i];
    }
    printf("%llu\n", ans);
  }
}
```

Please note that the usage of `#include <bits/stdc++.h>` and `using namespace std` is not a best practice in C++ as it includes a lot of unnecessary headers and using the entire std namespace can lead to name clashes. However, I have left it unchanged as per your instruction to make a small modification to the original program.