Here are some steps to optimize the given C/C++ program:

- Instead of using `bits/stdc++.h` which includes every standard library, include only those libraries which are needed. This will reduce the compilation time and memory usage.

- The macro `#define endl "\n"` is not needed as you can directly use `"\n"` in the program.

- `#define fastio` is not needed as the program is not that large and doesn't need to do heavy input/output operations.

- Macros like `#define fr(iter, n) for (ll iter = 0; iter < n; ++iter)` are not recommended as they can lead to confusion and decrease readability. It's better to write the loop in the function where it is used.

- Instead of using `typedef`, use `using` keyword as it is more modern and flexible.

- The function `binpow` is defined but not used in the program, remove it.

- Instead of using `vector<bool> rng(n, 0);`, you can use `std::bitset` which uses less memory.

- In the main function, `bool fg = 0;` is defined but not used, remove it.

Here is the optimized code:

```cpp
#include <iostream>
#include <vector>
#include <bitset>
#include <utility>

using namespace std;
using ll = long long;
using ull = unsigned long long;
using ii = pair<ll, ll>;
using iii = pair<ll, ii>;
using vi = vector<ll>;
using vvi = vector<vi>;
using vii = vector<ii>;
using viii = vector<iii>;

ll INF = 0x7FFFFFFFFFFFFFFF;

int main() {
  ll T;
  cin >> T;
  while (T--) {
    ll n;
    cin >> n;
    vi a(n);
    for (ll i = 0; i < n; ++i) cin >> a[i];
    bitset<100005> rng;
    for (ll i = 0; i < n; ++i) {
      if (a[i] != (i + 1)) {
        rng.set(i);
      }
    }
    ll cng = 0;
    for (ll i = 0; i < n - 1; ++i) {
      if (rng[i] != rng[i + 1])
        cng++;
    }
    if ((cng == 0) && (rng[0] == 0))
      cout << 0 << "\n";
    else if (cng == 0)
      cout << 1 << "\n";
    else if ((cng <= 2) && ((rng[0] == 0) || (rng[n - 1] == 0)))
      cout << 1 << "\n";
    else
      cout << 2 << "\n";
  }
}
```

Note: The size of `bitset` is fixed at compile time. If `n` can be greater than `100005`, you should keep using `vector<bool>`.