#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdlib>

using ll = long long;
const unsigned int MOD = 1000000007;
const ll INF = 1e18;
void testcase();

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int t = 1;
  while (t--) {
    testcase();
  }
  return 0;
}

void testcase() {
  int n;
  std::cin >> n;
  std::vector<ll> vec;
  vec.reserve(n);
  ll count = 576460752303423487;
  for (int i = 0; i < n; i++) {
    ll temp;
    std::cin >> temp;
    vec.push_back(temp);
  }
  std::sort(vec.begin(), vec.end());
  ll c = 1;
  unsigned int counter = (int)pow(vec[n - 1], 1.0 / (n - 1)) + n;
  counter++;
  while (counter--) {
    ll newcount = 0;
    ll xx = 1;
    for (int i = 0; i < n; i++) {
      newcount += abs(xx - vec[i]);
      xx *= c;
      if (newcount > count)
        break;
    }
    if (newcount < count)
      count = newcount;
    if (count == 0)
      break;
    c++;
  }
  std::cout << count << std::endl;
}