#include <iostream>
#include <cmath>
#include <climits>
using namespace std;
using ll = long long;
const unsigned int MOD = 1000000007;
const ll INF = 1e18;
void testcase();
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  int t = 1;
  while (t--) {
    testcase();
  }
  return 0;
}
void testcase() {
  int n;
  cin >> n;
  ll sum = 0;
  ll maxVal = 0;
  for (int i = 0; i < n; i++) {
    ll temp;
    cin >> temp;
    sum += temp;
    maxVal = max(maxVal, temp);
  }
  ll c = 1;
  ll newcount = 0;
  ll count = LLONG_MAX;
  unsigned int counter = (int)cbrt(maxVal) + n;
  counter++;
  while (counter--) {
    newcount = 0;
    ll xx = 1;
    for (int i = 0; i < n; i++) {
      newcount += abs(xx - c);
      if (newcount > count)
        break;
      xx *= c;
    }
    if (newcount < count)
      count = newcount;
    newcount = 0;
    if (count == 0)
      break;
    c++;
  }
  if (sum - n < count) {
    count = n;
  }
  if (sum < count) {
    count = sum;
  }
  cout << count << endl;
}