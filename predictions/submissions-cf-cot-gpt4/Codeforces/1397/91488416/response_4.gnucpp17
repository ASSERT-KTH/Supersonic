#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

#define MOD 1000000007
#define INF 576460752303423487
#define pb push_back

int main() {
  int t = 1;
  while (t--) {
    int n;
    std::cin >> n;
    std::vector<long long> vec(n);
    long long sum = 0;
    for (int i = 0; i < n; i++) {
      std::cin >> vec[i];
      sum += vec[i];
    }
    std::sort(vec.begin(), vec.end());
    long long c = 1;
    long long newcount = 0;
    long long count = INF;
    unsigned int counter = (int)std::pow(vec[n - 1], 1.0 / (n - 1)) + n;
    counter++;
    while (counter--) {
      newcount = 0;
      long long xx = 1;
      for (int i = 0; i < n; i++) {
        newcount += std::abs(xx - vec[i]);
        xx *= c;
        if (newcount > count)
          break;
      }
      if (newcount < count)
        count = newcount;
      newcount = 0;
      if (count == 0)
        break;
      c++;
    }
    count = std::min(std::min(sum, count), static_cast<long long>(n));
    std::cout << count << std::endl;
  }
  return 0;
}