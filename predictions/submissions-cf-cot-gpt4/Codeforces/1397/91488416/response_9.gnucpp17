#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#define pb push_back
using namespace std;
using ll = long long;
const unsigned int MOD = 1000000007;
const ll INF = 1e18;
void testcase();
int main() {
  int t = 1;
  while (t--) {
    testcase();
  }
  return 0;
}
void testcase() {
  int n;
  cin >> n;
  vector<ll> vec(n);
  ll sum = 0;
  for (int i = 0; i < n; i++) {
    cin >> vec[i];
    sum += vec[i];
  }
  sort(vec.begin(), vec.end());
  ll c = 1;
  ll newcount = 0;
  ll count = INF;
  unsigned int counter = (unsigned int)pow(vec[n - 1], 1.0 / (n - 1)) + n;
  counter++;
  while (counter--) {
    newcount = 0;
    ll xx = 1;
    for (int i = 0; i < n; i++) {
      newcount += abs(xx - vec[i]);
      xx *= c;
      if (newcount > count)
        break;
    }
    count = min(count, newcount);
    if (count == 0)
      break;
    c++;
  }
  count = min({count, sum - n, sum});
  cout << count << endl;
}