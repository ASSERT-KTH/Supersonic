#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < (n); ++i)
typedef long long ll;
#define vi vector<int>
#define vll vector<ll>

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vi ar(n);
    REP(i, n) { cin >> ar[i]; }
    vector<vll> dp(3, vll(n + 1, 0ll));
    REP(i, n) {
      dp[0][i + 1] = dp[0][i] + (i & 1 ? 0 : ar[i]);
      if (i + 2 <= n)
        dp[1][i + 2] = max(dp[0][i], dp[1][i]) + ar[i + 1];
    }
    cout << max({dp[0][n], dp[1][n]}) << endl;
  }
}