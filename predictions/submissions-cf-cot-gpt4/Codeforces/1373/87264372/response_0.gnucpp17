#include <stdio.h>
#include <vector>
#include <algorithm>

typedef long long ll;

int main() {
  int t;
  scanf("%d", &t);
  while (t--) {
    int n;
    scanf("%d", &n);
    std::vector<int> ar(n);
    for (int i = 0; i < n; ++i) { 
        scanf("%d", &ar[i]); 
    }
    std::vector<std::vector<ll>> dp(2, std::vector<ll>(n, 0ll));
    for (int i = 0; i < n; ++i) {
      dp[0][i] = dp[0][i - 1] + (i & 1 ? 0 : ar[i]);
      if (i + 1 < n)
        dp[1][i + 1] = std::max(dp[0][i - 1], dp[1][i - 1]) + ar[i];
      dp[1][i] = std::max({dp[0][i], dp[1][i - 1], dp[1][i]});
    }
    printf("%lld\n", std::max({dp[0][n - 1], dp[1][n - 1]}));
  }
}