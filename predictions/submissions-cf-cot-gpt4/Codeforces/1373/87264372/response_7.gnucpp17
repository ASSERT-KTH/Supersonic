#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int t;
    scanf("%d", &t);
    while (t--) {
        int n;
        scanf("%d", &n);
        vi ar(n);
        for (int i = 0; i < n; ++i) {
            scanf("%d", &ar[i]);
        }
        vector<vll> dp(3, vll(n + 1, 0ll));
        for (int i = 0; i < n; ++i) {
            dp[0][i + 1] = dp[0][i] + (i & 1 ? 0 : ar[i]);
            if (i + 2 <= n)
                dp[1][i + 2] = max(dp[0][i], dp[1][i]) + ar[(i % 2 == 0 ? i + 1 : i)];
            dp[2][i + 1] = max({dp[0][i], dp[1][i], dp[2][i], dp[2][i + 1]}) + (i & 1 ? 0 : ar[i]);
        }
        printf("%lld\n", max({dp[0][n], dp[1][n], dp[2][n]}));
    }
}