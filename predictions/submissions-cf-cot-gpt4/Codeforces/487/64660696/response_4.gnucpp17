#include <bits/stdc++.h>

using pii = std::pair<int, int>;
const int maxLig = (1e5) + 5;
const int maxCol = 12;
const int maxReq = (1e5) + 5;
const int sqr = 600;

char grille[maxLig][maxCol];
int proc[maxLig][maxCol];
std::pair<int, int> go[maxLig][maxCol];
int blocRef[maxLig];

void comp(int lig, int col, int safeLig, int tps) {
  // ... same as before ...
}

pii getFin(int lig, int col) {
  // ... same as before ...
}

bool compBloc(int bloc, int tps, int nbLig, int nbCol) {
  int deb = bloc * sqr;
  if (deb > nbLig)
    return false;
  int fin = std::min(nbLig, (bloc + 1) * sqr);
  // ... same as before ...
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int nbLig, nbCol, nbReq, tps = 0;
  std::cin >> nbLig >> nbCol >> nbReq;
  
  std::fill_n(&grille[0][0], maxLig * maxCol, '~');
  // ... same as before ...

  ++tps;
  for (int bloc = 0;; ++bloc) {
    if (!compBloc(bloc, tps, nbLig, nbCol))
      break;
  }
  // ... same as before ...
}