#include <iostream>
#include <array>
#include <utility>
using namespace std;
using pii = pair<int, int>;
const int maxLig = (1e5) + 5;
const int maxCol = 12;
const int maxReq = (1e5) + 5;
const int sqr = 600;
int nbLig, nbCol, nbReq;
array<array<char, maxCol>, maxLig> grille;
array<array<int, maxCol>, maxLig> proc;
int tps = 0;
array<array<pii, maxCol>, maxLig> go;
int blocRef[maxLig];

// rest of the functions remain unchanged

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  cin >> nbLig >> nbCol >> nbReq;
  for (int lig = 1; lig <= nbLig; ++lig) {
    for (int col = 1; col <= nbCol; ++col) {
      cin >> grille[lig][col];
    }
  }
  ++tps;
  for (int bloc = 0; compBloc(bloc); ++bloc);
  for (int req = 0; req < nbReq; ++req) {
    char mode;
    cin >> mode;
    int lig, col;
    cin >> lig >> col;
    if (mode == 'A') {
      pii res = getFin(lig, col);
      if (res == pii{0, 0})
        res = {-1, -1};
      cout << res.first << " " << res.second << "\n";
    } else {
      ++tps;
      char nv;
      cin >> nv;
      grille[lig][col] = nv;
      int bloc = blocRef[lig];
      compBloc(bloc);
      if (bloc)
        compBloc(bloc - 1);
    }
  }
}