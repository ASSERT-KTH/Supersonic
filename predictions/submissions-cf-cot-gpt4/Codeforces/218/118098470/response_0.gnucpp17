#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n, m, sum = 0, sum1 = 0, k;
  cin >> n >> m;
  k = n;

  vector<int> a(m+1);
  priority_queue<int> maxHeap;
  for (int i = 1; i <= m; i++) {
    cin >> a[i];
    maxHeap.push(a[i]);
  }
  sort(a.begin() + 1, a.end());

  for (int i = 1; i <= m; i++) {
    for (int j = 0; j < a[i] && k > 0; j++, k--) {
      sum = sum + a[i] - j;
    }
  }

  for (int i = 1; i <= n; i++) {
    int maximum = maxHeap.top();
    maxHeap.pop();
    sum1 = sum1 + maximum;
    if (maximum > 1)
      maxHeap.push(maximum - 1);
  }

  cout << sum1 << " " << sum << "\n";
  return 0;
}