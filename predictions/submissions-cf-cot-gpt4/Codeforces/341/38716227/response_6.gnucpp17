#include <iostream>
#include <vector>
#include <unordered_set>
#include <unordered_map>
#include <cmath>
#include <sstream>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;
using ll = long long;
using ld = long double;
using pii = std::pair<int, int>;
using pll = std::pair<ll, ll>;
using vi = std::vector<int>;
using vll = std::vector<ll>;
using vc = std::vector<char>;
using vs = std::vector<std::string>;
using vpll = std::vector<pll>;
using vpii = std::vector<pii>;
using umap = std::unordered_map;
using uset = std::unordered_set;
#define nl "\n"
#define mt make_tuple
#define fast ios_base::sync_with_stdio(false), cin.tie(NULL)
const int mod = 1e9 + 7;
const int mxn = 1010;
const ld eps = 1e-9;
ll multree[mxn][mxn][2], addtree[mxn][mxn][2];
ll yo(ll x) { return (x % 2); }

ll query2(ll tree[mxn][mxn][2], ll x, ll y) { ... }
ll query1(ll x, ll y) { ... }
ll query(ll x1, ll y1, ll x2, ll y2) { ... }
void upd2(ll tree[mxn][mxn][2], ll x, ll y, ll mul, ll add) { ... }
void upd1(ll x, ll y1, ll y2, ll mul, ll add) { ... }
void upd(ll x1, ll y1, ll x2, ll y2, ll val) { ... }

int main() {
  fast;
  ll i, j, k, n, m, tt, x1, y1, x2, y2, q, val;
  std::cin >> n;
  std::cin >> q;
  while (q--) {
    std::cin >> tt;
    if (tt == 2) {
      std::cin >> x1 >> y1 >> x2 >> y2 >> val;
      upd(x1, y1, x2, y2, val);
    } else {
      std::cin >> x1 >> y1 >> x2 >> y2;
      std::cout << query(x1, y1, x2, y2) << nl;
    }
  }
  return 0;
}