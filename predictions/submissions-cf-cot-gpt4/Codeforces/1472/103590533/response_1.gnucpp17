#include <iostream>
#include <vector>
#include <algorithm>
#include <tuple>

using ll = long long;
using tll = std::tuple<ll, ll, ll>;
using std::vector;
using std::cin;
using std::cout;
using std::endl;

void solve() {
  int t, n, x, y;
  cin >> t;
  while (t--) {
    cin >> n;
    vector<tll> a;
    for(int i = 0; i < n; ++i) {
      cin >> x >> y;
      a.emplace_back(std::max(x, y), std::min(x, y), i);
    }
    std::sort(a.begin(), a.end());
    auto prev = (*a.begin());
    auto best = prev;
    vector<int> res(n);
    for (const auto &person : a) {
      if (std::get<0>(prev) == std::get<0>(person)) {
        if (std::get<1>(best) < std::get<1>(person) && std::get<0>(best) < std::get<0>(person))
          res[std::get<2>(person)] = std::get<2>(best) + 1;
        else {
          res[std::get<2>(person)] = -1;
        }
      } else {
        if (std::get<1>(best) > std::get<1>(prev))
          best = prev;
        if (std::get<1>(best) < std::get<1>(person) && std::get<0>(best) < std::get<0>(person))
          res[std::get<2>(person)] = std::get<2>(best) + 1;
        else
          res[std::get<2>(person)] = -1;
        prev = person;
      }
    }
    for (const auto &p : res)
      cout << p << " ";
    cout << endl;
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  solve();
  return 0;
}