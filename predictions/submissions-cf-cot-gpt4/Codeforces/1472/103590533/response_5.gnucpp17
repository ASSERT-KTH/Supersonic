#include <iostream>
#include <set>
#include <vector>
#include <tuple>
#define fastio std::ios_base::sync_with_stdio(0); std::cin.tie(0); std::cout.tie(0);
#define ll long long
#define tll std::tuple<ll, ll, ll>
#define ms(type) std::multiset<type>
#define MT std::make_tuple
#define T(i) std::get<i>
#define rep(i, a, b) for (ll i = a; i < b; i++)
#define fileio() { \
  #ifndef ONLINE_JUDGE \
  freopen("input.txt", "r", stdin); \
  freopen("output.txt", "w", stdout); \
  #endif \
}
const ll MOD = 1e9 + 7;
#define type tll
void solve() {
  int t, n, x, y;
  std::cin >> t;
  while (t--) {
    std::cin >> n;
    ms(tll) a;
    rep(i, 0, n) {
      std::cin >> x >> y;
      a.insert(MT(std::max(x, y), std::min(x, y), i));
    }
    auto prev = (*a.begin());
    auto best = prev;
    int res[n];
    std::string result;
    for (const auto &person : a) {
      int h, w, i;
      std::tie(h, w, i) = person;
      if (T(0)(prev) == h) {
        if (T(1)(best) < w && T(0)(best) < h)
          res[i] = T(2)(best) + 1;
        else {
          res[i] = -1;
        }
      } else {
        if (T(1)(best) > T(1)(prev))
          best = prev;
        if (T(1)(best) < w && T(0)(best) < h)
          res[i] = T(2)(best) + 1;
        else
          res[i] = -1;
        prev = person;
      }
      result += std::to_string(res[i]) + " ";
    }
    std::cout << result << "\n";
  }
}
int main() {
  fastio;
  solve();
  return 0;
}