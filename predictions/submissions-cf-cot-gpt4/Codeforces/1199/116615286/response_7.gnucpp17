#include <iostream>
#include <vector>
#include <cstring>
using namespace std;

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n, m;
    cin >> n >> m;
    vector<int> matching;
    vector<pair<int, int>> adj[300005];
    bool match[300005];
    memset(match, 0, sizeof(match));
    for (int i = 1; i <= m; i++) {
      int x, y;
      cin >> x >> y;
      adj[x].push_back(make_pair(y, i));
    }
    for (int i = 1; i <= 3 * n; i++) {
      if (match[i] == true)
        continue;
      for (auto it = adj[i].begin(); it != adj[i].end(); it++) {
        int nd = (*it).first;
        int ed = (*it).second;
        if (match[nd] == false) {
          matching.push_back(ed);
          match[nd] = true;
          match[i] = true;
          break;
        }
      }
    }
    if (matching.size() >= n) {
      cout << "Matching" << '\n';
      for (int i = 0; i < n; i++)
        cout << matching[i] << " ";
      cout << '\n';
      continue;
    }
    vector<int> v;
    for (int i = 1; i <= 3 * n; i++)
      if (match[i] == false)
        v.push_back(i);
    if (v.size() >= n) {
      cout << "IndSet" << '\n';
      for (int i = 0; i < n; i++)
        cout << v[i] << " ";
    } else
      cout << "Impossible";
    cout << '\n';
  }
  return 0;
}