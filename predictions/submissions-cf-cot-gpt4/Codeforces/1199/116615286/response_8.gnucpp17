#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#define FAST ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
using namespace std;
const int mod = 1000000007;
const int maxN = 300005;
int t, n, m;
vector<pair<int, int>> adj[maxN];
bool match[maxN];
vector<int> matching, v;

int main() {
  FAST;
  cin >> t;
  matching.reserve(maxN);
  v.reserve(maxN);
  while (t--) {
    cin >> n >> m;
    matching.clear();
    for (int i = 1; i <= 3 * n; ++i) {
      adj[i].clear();
    }
    memset(match, 0, sizeof(match));
    for (int i = 1; i <= m; ++i) {
      int x, y;
      cin >> x >> y;
      adj[x].push_back(make_pair(y, i));
    }
    for (int i = 1; i <= 3 * n; ++i) {
      if (match[i] == true)
        continue;
      for (auto it = adj[i].begin(); it != adj[i].end(); ++it) {
        int nd = (*it).first;
        int ed = (*it).second;
        if (match[nd] == false) {
          matching.push_back(ed);
          match[nd] = true;
          match[i] = true;
          break;
        }
      }
    }
    if (matching.size() >= n) {
      cout << "Matching\n";
      for (int i = 0; i < n; ++i) {
        cout << matching[i] << " ";
      }
      cout << '\n';
      continue;
    }
    v.clear();
    for (int i = 1; i <= 3 * n; ++i) {
      if (match[i] == false)
        v.push_back(i);
    }
    if (v.size() >= n) {
      cout << "IndSet\n";
      for (int i = 0; i < n; ++i) {
        cout << v[i] << " ";
      }
    } else
      cout << "Impossible";
    cout << '\n';
  }
}