#include <bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0)
#define endl '\n'
typedef long long int ll;
typedef vector<ll> vll;
#define pb push_back

ll n, init[100100], goal[100100], ans;
vll *g;
vll res;

void dfs(ll node, ll par, ll pre, ll ppre) {
  if (ppre) {
    init[node] ^= 1;
  }
  if (init[node] != goal[node]) {
    ans++;
    res.pb(node);
    ppre ^= 1;
  }
  for (ll v : g[node]) {
    if (v == par)
      continue;
    dfs(v, node, ppre, pre);
  }
}

void solve() {
  cin >> n;
  g = new vll[n+1];
  for(ll i=0; i<n-1; i++) {
    ll a, b;
    cin >> a >> b;
    g[a].pb(b);
    g[b].pb(a);
  }
  for(ll i=0; i<n; i++) { cin >> init[i + 1]; }
  for(ll i=0; i<n; i++) { cin >> goal[i + 1]; }
  dfs(1, 0, 0, 0);
  cout << ans << endl;
  for (ll v : res) {
    cout << v << endl;
  }
  delete[] g;
}

signed main() {
  fast;
  solve();
}