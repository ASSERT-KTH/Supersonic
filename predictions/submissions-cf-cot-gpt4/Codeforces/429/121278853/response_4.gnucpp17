#include <iostream>
#include <vector>

using namespace std;
using ll = long long int;
using vll = vector<ll>;
using vvll = vector<vll>;

#define MOD int(1e9 + 7)
#define mod int(1e9 + 7)

vll g[100100];
ll init[100100], goal[100100], ans;

void dfs(ll node, ll par, ll pre, ll ppre) {
    if (ppre) {
        init[node] ^= 1;
    }
    if (init[node] != goal[node]) {
        ans++;
        cout << node << endl;
        ppre ^= 1;
    }
    for (auto v : g[node]) {
        if (v == par)
            continue;
        dfs(v, node, ppre, pre);
    }
}

int main() {
    ll n;

    cin >> n;

    for (ll i = 0; i < n - 1; i++) {
        ll a, b;
        cin >> a >> b;
        g[a].push_back(b);
        g[b].push_back(a);
    }

    for (ll i = 0; i < n; i++) cin >> init[i + 1];
    for (ll i = 0; i < n; i++) cin >> goal[i + 1];

    dfs(1, 0, 0, 0);

    cout << ans << endl;
}