#include <bits/stdc++.h>
using namespace std;
const int INF = 1000000007;
const int N = 81;
struct Node{
    int i, j, k, l;
};
int n, m, p;
int c[N][N];
Node f[N*N*N*2];
int main() {
  scanf("%d%d%d", &n, &p, &m);
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= n; ++j)
      c[i][j] = INF;
  }
  for (int i = 1, x, y, dis; i <= m; ++i) {
    scanf("%d%d%d", &x, &y, &dis);
    c[x][y] = min(dis, c[x][y]);
  }
  for (int i = 1; i <= n; ++i) {
    f[i][i][1][0] = f[i][i][1][1] = 0;
  }
  for (int d = 1; d < n; ++d) {
    for (int i = 1; i + d <= n; ++i) {
      int j = i + d;
      for (int k = 2; k <= p; ++k) {
        for (int i2 = i + 1; i2 < j; ++i2) {
          int temp = min(f[i2][j][k - 1][0] + c[i][i2], f[i2][j][k - 1][1] + c[i][j]);
          f[i][j][k][0] = min(f[i][j][k][0], temp);
        }
        int temp = min(f[j][j][k - 1][0] + c[i][j], f[i][i][k - 1][1] + c[j][i]);
        f[i][j][k][1] = min(f[i][j][k][1], temp);
      }
    }
  }
  int ans = INF;
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= n; ++j) {
      ans = min(ans, min(f[i][j][p][0], f[i][j][p][1]));
    }
  }
  printf("%d\n", ans == INF ? -1 : ans);
}
