This program is already quite optimized, but there are a couple of areas we could improve. 

1. The first optimization is to get rid of the unnecessary variables odd and even. Instead, you could use a boolean variable to check if there is at least one odd and one even number.

2. The second optimization is to break the loop as soon as you find at least one odd and one even number. There is no need to go through all the elements in the array if you've already found both.

Here is the optimized program:

```cpp
#include <iostream>
using namespace std;
int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  int t, n, tmp;
  bool odd, even;
  cin >> t;
  while (t--) {
    cin >> n;
    odd = even = false;
    for (int i = 0; i < n; i++) {
      cin >> tmp;
      if (tmp & 1)
        odd = true;
      else
        even = true;
      
      if(odd && even) break;
    }
    if (odd && even)
      cout << "NO\n";
    else
      cout << "YES\n";
  }
  return 0;
}
```
Please note that this optimization does not change the big O time complexity of the program, but it does potentially reduce the constant factor, making the program run faster in practice. The space complexity does not change either, but the program uses less memory because it uses fewer variables.