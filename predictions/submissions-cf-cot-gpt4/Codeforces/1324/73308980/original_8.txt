The given program reads a number of test cases, then for each test case it reads a number of integers and counts how many of them are odd and how many are even. If there are both odd and even numbers it prints "NO", otherwise it prints "YES".

The program is already quite efficient, but we can still make a few small optimizations:

1. We can replace the multiplication in the if statement with a logical AND. Multiplying odd and even is the same as checking if they are both not zero, but logical AND is faster than multiplication.

2. We can break the loop as soon as we have found both an odd and an even number. There is no need to read and check the rest of the numbers because the result is already determined.

Here is the optimized code:

```cpp
#include <iostream>
using namespace std;
int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  int t, n, tmp, odd, even;
  cin >> t;
  while (t--) {
    cin >> n;
    odd = even = 0;
    for (int i = 0; i < n; i++) {
      cin >> tmp;
      if (tmp & 1)
        odd++;
      else
        even++;
      if (odd && even) // As soon as we find both odd and even, break the loop.
        break;
    }
    if (odd && even) // Changed multiplication to logical AND.
      cout << "NO\n";
    else
      cout << "YES\n";
  }
  return 0;
}
```

Please be aware that these optimizations will not have a significant impact on the running time, as the original code is already quite efficient. But they do make the code slightly faster and more understandable.