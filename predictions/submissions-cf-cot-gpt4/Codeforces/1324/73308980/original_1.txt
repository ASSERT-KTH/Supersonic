This program reads an integer `t` representing the number of test cases and then for each test case, it reads an integer `n` and then `n` integers. It counts the number of odd and even numbers. If both counts are non-zero, it prints "NO", else it prints "YES".

The code is already quite optimized. However, there are a few minor adjustments that could potentially improve efficiency.

1. Reduce the scope of the temporary variable `tmp`: It's not necessary for `tmp` to be declared at the function scope. Instead, declare it inside the for loop. This tiny change can improve readability and maintainability of the code, although it does not impact the performance.

2. Early termination of the loop: If the purpose is only to check whether there are both odd and even numbers, we can break the loop as soon as we found at least one odd and one even number. This can significantly reduce the running time when `n` is large.

3. Use `'\n'` instead of `endl`: `endl` causes an unnecessary flush of the output buffer. Use `'\n'` instead, which does not cause a flush.

Here's the optimized version of the program:

```
#include <iostream>
using namespace std;
int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  int t, n, odd, even;
  cin >> t;
  while (t--) {
    cin >> n;
    odd = even = 0;
    for (int i = 0; i < n; i++) {
      int tmp;
      cin >> tmp;
      if (tmp & 1)
        odd++;
      else
        even++;
      if (odd && even)
        break;
    }
    if (odd && even)
      cout << "NO\n";
    else
      cout << "YES\n";
  }
  return 0;
}
```