Step by step explanation:

1. The bits/stdc++.h header file includes a lot of unnecessary header files which can increase the compilation time. Replace it with the necessary header files.
2. The 'using namespace std;' is generally considered bad practice because it brings in the entire std namespace which could lead to name clashes and is not good for large projects. So, it's better to use the std:: prefix when needed.
3. Do not use 'typedef' to define new types. Use the 'using' keyword instead. It's more readable and flexible.
4. The macros 'all', 'open_file', 'write_file', 'mem', 'show', 'forn', 'lower' and 'upper' are not used in the program. Remove them to clean up the code.
5. The function 'lcm' is not used in the program. Remove it to clean up the code.
6. The global array A[MAX] and dp[MAX][19] can be moved inside main to limit their scope and prevent potential issues with global variables.
7. The 'scanf' function is a C function. In C++, 'cin' should be used instead for consistency.

Here is the optimized version of the program:

```cpp
#include <iostream>
#include <vector>
#include <algorithm>

using ll = long long;

int const MAX = (1 << 19);

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int n, m, i;
  std::cin >> n >> m;

  std::vector<int> A(MAX);
  std::vector<std::vector<int>> dp(MAX, std::vector<int>(19));
  
  for(i = 0; i < MAX; i++) A[i] = i;

  for(i = 0; i < n; i++) {
    int x, y;
    std::cin >> x >> y;
    A[x] = std::max(A[x], y);
  }

  dp[0][0] = A[0];

  for (int i = 1; i < (1 << 19); i++) {
    dp[i][0] = A[i] = std::max(A[i], A[i - 1]);
  }

  for (int j = 1; j < 19; j++) {
    for (int i = 0; i < MAX; i++) {
      dp[i][j] = dp[dp[i][j - 1]][j - 1];
    }
  }
  while (m--) {
    int l, r, nb = 0, x;
    std::cin >> l >> r;

    for (int j = 18; j >= 0; j--) {
      if (dp[l][j] < r) {
        nb += 1 << j;
        l = dp[l][j];
      }
    }
    if (dp[l][0] >= r)
      nb++;
    else
      nb = -1;

    std::cout << nb << std::endl;
  }
  return 0;
}
```