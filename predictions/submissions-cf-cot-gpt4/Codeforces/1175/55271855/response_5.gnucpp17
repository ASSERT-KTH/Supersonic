#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
#define all(a) a.begin(), a.end()
#define open_file freopen("input.txt", "r", stdin);
#define write_file freopen("output.txt", "w", stdout);
#define mem(A, v) memset(A, v, sizeof(A));
#define show(x) cout << x << '\n'
#define forn(i, n) for (i = 0; i < n; i++)
#define lower(sl) transform(sl.begin(), sl.end(), sl.begin(), ::tolower);
#define upper(su) transform(su.begin(), su.end(), su.begin(), ::toupper);
ll lcm(ll a, ll b) { return a * b / __gcd(a, b); }
int const MAX = (1 << 19);
int A[MAX];
int dp[MAX][19];
bool calculated[MAX][19];
int getDP(int i, int j) {
    if (!calculated[i][j]) {
        if(j == 0) dp[i][j] = A[i] = max(A[i], A[i-1]);
        else dp[i][j] = getDP(getDP(i, j-1), j-1);
        calculated[i][j] = true;
    }
    return dp[i][j];
}
int main() {
  int n, m, i;
  scanf("%d %d", &n, &m);
  forn(i, MAX) A[i] = i;
  forn(i, n) {
    int x, y;
    scanf("%d %d", &x, &y);
    A[x] = max(A[x], y);
  }
  while (m--) {
    int l, r, nb = 0, x;
    scanf("%d %d", &l, &r);
    for (int j = 18; j >= 0; j--) {
      if (getDP(l, j) < r) {
        nb += 1 << j;
        l = getDP(l, j);
      }
    }
    if (getDP(l, 0) >= r)
      nb++;
    else
      nb = -1;
    printf("%d\n", nb);
  }
  return 0;
}