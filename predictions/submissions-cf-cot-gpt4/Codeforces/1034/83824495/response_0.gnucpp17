#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define N 17000005
int lpf[N];
int cont[N];

void sieve() {
  for (int i = 2; i < N; i++) {
    if (lpf[i] == 0) {
      lpf[i] = i;
      for (ll j = 1LL * i * i; j < N; j += i) {
        if (lpf[j] == 0)
          lpf[j] = i;
      }
    }
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  sieve();
  int n;
  cin >> n;
  vector<int> arr(n);
  int mcd = 0, max_num = 0;
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
    mcd = __gcd(mcd, arr[i]);
    max_num = max(max_num, arr[i]);
  }
  for (int& num : arr) {
    num /= mcd;
    while (num > 1) {
      int f = lpf[num];
      cont[f]++;
      int temp;
      while ((temp = num % f) == 0)
        num /= f;
      if(temp != 0) break;
    }
  }
  int maxi = 0;
  for (int i = 2; i <= max_num; i++)
    maxi = max(maxi, cont[i]);
  cout << ((maxi == 0) ? -1 : n - maxi) << '\n';
  return 0;
}