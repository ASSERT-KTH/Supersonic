#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

#define N 17000005

void sieve(int lpf[]) {
  for (int i = 2; i < N; i++) {
    if (lpf[i] == 0) {
      lpf[i] = i;
      for (int j = i * i; j < N; j += i) {
        if (lpf[j] == 0)
          lpf[j] = i;
      }
    }
  }
}

int main() {
  int lpf[N] = {0};
  int cont[N] = {0};
  
  sieve(lpf);
  
  int n;
  cin >> n;
  
  vector<int> arr(n);
  int mcd = 0;
  
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
    mcd = __gcd(mcd, arr[i]);
  }

  int maxi = 0;
  for (int i = 0; i < n; i++) {
    arr[i] /= mcd;
    while (arr[i] > 1) {
      int f = lpf[arr[i]];
      cont[f]++;
      maxi = max(maxi, cont[f]);
      while (arr[i] % f == 0)
        arr[i] /= f;
    }
  }

  if (maxi == 0)
    cout << -1 << '\n';
  else
    cout << n - maxi << '\n';
  return 0;
}