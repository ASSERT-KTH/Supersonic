#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define N 17000005

int lpf[N];
int cont[N];

void sieve() {
  for (int i = 2; i < N; i++) {
    if (lpf[i] == 0) {
      lpf[i] = i;
      for (ll j = 1LL * i * i; j < N; j += i) {
        if (lpf[j] == 0)
          lpf[j] = i;
      }
    }
  }
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  
  sieve();
  
  int n;
  cin >> n;
  
  vector<int> arr(n);
  
  int mcd = 0;
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
    arr[i] /= mcd;
    mcd = __gcd(mcd, arr[i]);
  }

  for (int i = 0; i < n; i++) {
    int f = lpf[arr[i]];
    while (arr[i] > 1) {
      cont[f]++;
      arr[i] /= f;
      f = lpf[arr[i]];
    }
  }

  int maxi = *max_element(cont, cont + N);

  if (maxi == 0)
    cout << -1 << '\n';
  else
    cout << n - maxi << '\n';

  return 0;
}