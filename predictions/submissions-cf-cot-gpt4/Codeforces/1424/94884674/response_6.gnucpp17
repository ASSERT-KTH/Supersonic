#include <bits/stdc++.h>
const double PI = acos(-1);
const double eps = 1e-8;
typedef unsigned long long ull;
typedef long long ll;
#define pii pair<int, int>
#define X first
#define Y second
using namespace std;
const int maxn = 1e6 + 10;
const int mod = 1e9 + 7;
int prime[maxn/10];
bool vis[maxn];
void euler(int n) {
  for (int i = 2; i < n; ++i) {
    if (!vis[i])
      prime[++prime[0]] = i;
    for (int j = 1; j <= prime[0] && i * prime[j] < n; ++j) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
}
int ans[maxn/10];
int main() {
  euler(maxn - 9);
  for (int i = 1; i <= maxn; ++i)
    ans[i] = ans[i - 1] + (int)(!vis[i]);
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    if (n <= 3) {
      printf("%d\n", n);
      continue;
    }
    int l = 1, r = prime[0];
    while (l + 1 < r) {
      int mid = (r + l) / 2;
      if ((ll)prime[mid] * prime[mid] <= (ll)n)
        l = mid;
      else
        r = mid;
    }
    printf("%d\n", ans[n] - ans[prime[l]] + 1);
  }
  return 0;
}