#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

typedef long long ll;
const int maxn = 1e6 + 10;
vector<int> prime;
vector<bool> vis(maxn);
vector<int> ans(maxn);

void euler(int n) {
  for (int i = 2; i < n; ++i) {
    if (!vis[i])
      prime.push_back(i);
    for (unsigned int j = 0; j < prime.size() && i * prime[j] < n; ++j) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
}

int main() {
  euler(maxn - 9);
  for (int i = 1; i <= maxn; ++i)
    ans[i] = ans[i - 1] + (!vis[i]);
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    if (n <= 3) {
      cout << n << "\n";
      continue;
    }
    int l = 1, r = prime.size();
    while (l + 1 < r) {
      int mid = (r + l) / 2;
      if ((ll)prime[mid] * prime[mid] <= (ll)n)
        l = mid;
      else
        r = mid;
    }
    cout << ans[n] - ans[prime[l]] + 1 << "\n";
  }
  return 0;
}