Optimization Steps:
1. Remove `#include <bits/stdc++.h>`: It includes all the standard libraries which increases the compilation time. Instead, include only those libraries which are being used in your code.
2. Remove the unused defined macros: `debug1`, `debug2`, `debug3` are not being used in the code. Removing them will make the code cleaner.
3. Avoid copying in range-based for loop: In the statement `for (auto x : m)`, we are copying each pair in the map which is unnecessary and might slow down the execution for large inputs. It is better to use a constant reference.

Here is the optimized code after applying these steps:

```cpp
#include <iostream>
#include <map>
#include <vector>
#include <climits>

using namespace std;
typedef long long int ll;
#define endl '\n'
#define rep(i, n) for (int i = 0; i < n; i++)
#define all(v) v.begin(), v.end()
#define F first
#define S second

void solve() {
  ll n;
  cin >> n;
  map<ll, vector<ll>> m;
  rep(i, n) {
    ll val;
    cin >> val;
    m[val].push_back(i + 1);
  }
  ll minres = LLONG_MAX;
  for (const auto &x : m) {
    const vector<ll> &v = x.second;
    if (v.size() > 1) {
      for (int i = 1; i < v.size(); i++) {
        if ((v[i] - v[i - 1]) > 0) {
          minres = min(minres, v[i] - v[i - 1] + 1);
        }
      }
    }
  }
  if (minres == LLONG_MAX) {
    cout << -1 << endl;
  } else {
    cout << minres << endl;
  }
}
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    solve();
  }
}
```