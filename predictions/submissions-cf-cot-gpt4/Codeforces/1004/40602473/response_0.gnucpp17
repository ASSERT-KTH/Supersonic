#include <algorithm>
#include <iostream>
using namespace std;
#define rep(i, N) for (i = 0; i < (N); i++)
const int MAXN = 1000000;
int freq[MAXN];
int cfreq[MAXN];
int dist[1001][1001];
inline bool isvalid(int, int, int, int);
int T;
int main() {
  fill(freq, freq + MAXN, 0);
  int t, b = -1, x;
  cin >> T;
  rep(t, T) {
    int k;
    cin >> k;
    freq[k]++;
    b = max(b, k);
  }
  rep(t, T) if (t > 0 && (freq[t] != (t << 2))) break;
  x = t;
  int n, m, y;
  for (n = 1; n * n <= T; n++)
    if (T % n == 0) {
      m = T / n;
      y = n + m - b - x;
      if (isvalid(n, m, x, y)) {
        cout << n << " " << m << endl;
        cout << x << " " << y << endl;
        goto l1;
      } else if (isvalid(m, n, x, y)) {
        cout << m << " " << n << endl;
        cout << x << " " << y << endl;
        goto l1;
      }
    }
  cout << -1 << endl;
l1:
  return 0;
}
inline bool isvalid(int n, int m, int x, int y) {
  if (x < 1 || x > n || y < 1 || y > m)
    return false;
  fill(cfreq, cfreq + MAXN, 0);
  int i, j;
  x--;
  y--;
  rep(i, n) rep(j, m) cfreq[dist[x][y] + dist[i][j]]++;
  rep(i, T) if (cfreq[i] != freq[i]) return false;
  return true;
}