#include <iostream>
#define rrep(i, N) for (i = (N - 1); i >= 0; i--)
#define rep(i, N) for (i = 0; i < (N); i++)
#define sqr(x) (x) * (x)
#define random (rand() << 16 ^ rand())
typedef long long int64_t;
typedef pair<int, int> ii;
const int64_t inf = 1e18 + 7;
const int64_t mod = 1e9 + 7;
const int MAXN = 1000000;
bool isvalid(int, int, int, int, int, int[], int[]);

int main() {
  using namespace std;
  int T;
  int freq[MAXN], cfreq[MAXN];
  rep(i, MAXN) freq[i] = cfreq[i] = 0;
  int t, b = -1, x;
  cin >> T;
  rep(t, T) {
    int k;
    cin >> k;
    freq[k]++;
    b = max(b, k);
  }
  rep(t, T) if (t > 0 && (freq[t] != (t << 2))) break;
  x = t;
  int n, m, y;
  bool flag = false;
  for (n = 1; n * n <= T; n++)
    if (T % n == 0) {
      m = T / n;
      y = n + m - b - x;
      if (isvalid(n, m, x, y, T, freq, cfreq)) {
        cout << n << " " << m << endl;
        cout << x << " " << y << endl;
        flag = true;
        break;
      } else if (isvalid(m, n, x, y, T, freq, cfreq)) {
        cout << m << " " << n << endl;
        cout << x << " " << y << endl;
        flag = true;
        break;
      }
    }
  if (!flag) cout << -1 << endl;
  return 0;
}

inline bool isvalid(int n, int m, int x, int y, int T, int freq[], int cfreq[]) {
  using namespace std;
  if (x < 1 || x > n || y < 1 || y > m)
    return false;
  int i, j;
  x--;
  y--;
  rep(i, n) rep(j, m) cfreq[(abs(x - i) + abs(y - j))]++;
  rep(i, T) if (cfreq[i] != freq[i]) return false;
  return true;
}