#include <bits/stdc++.h>
#define present(container, element) (container.find(element) != container.end())
#define all(c) c.begin(), c.end()
#define lli long long int
#define vi vector<int>
#define cpresent(container, element)                                           \
  (find(all(container), element) != container.end())
#define tr(container, it)                                                      \
  for (auto it = container.begin(); it != container.end(); it++)
using namespace std;

const double eps = 1e-14;
double dp[1005][1005];
double getAns(lli cntC, lli cntM, double c, double m, double p, double v) {
  if (dp[cntC][cntM] > -eps) 
    return dp[cntC][cntM];

  if (c <= eps && m <= eps) {
    dp[cntC][cntM] = (double)(cntC + cntM + 1);
    return dp[cntC][cntM];
  }

  double temp = (cntC + cntM + 1) * p;
  if (c > eps) {
    temp += c * getAns(cntC + 1, cntM, max(0.0, c - v), m + min(c, v) / 2, p + min(c, v) / 2, v);
  }
  if (m > eps) {
    temp += m * getAns(cntC, cntM + 1, c + min(m, v) / 2, max(0.0, m - v), p + min(m, v) / 2, v);
  }

  dp[cntC][cntM] = temp;
  return temp;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  memset(dp, -1, sizeof(dp));
  while (t--) {
    double c, m, p, v;
    cin >> c >> m >> p >> v;
    cout << setprecision(15) << getAns(0, 0, c, m, p, v) << endl;
  }
  return 0;
}