#include <iostream>
#include <algorithm>

const int mod = 1e9 + 7;

long long fast_pow(long long x, long long n) {
  long long result = 1;
  while (n != 0) {
    if (n & 1) {
      result = (result * x) % mod;
    }
    x = (x * x) % mod;
    n >>= 1;
  }
  return result;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int N;
  std::cin >> N;
  while (N--) {
    long long a, b;
    std::cin >> a >> b;
    if (a == 0 || b == 0) {
      std::cout << std::max(a, b) << ' ' << 0 << '\n';
      continue;
    }
    if (a == b && a != 0) {
      std::cout << 0 << ' ' << 0 << '\n';
      continue;
    }
    long long diff = std::max(a, b) - std::min(a, b);
    std::cout << diff << ' ' << std::min(a % diff, diff - a % diff) << '\n';
  }
  return 0;
}