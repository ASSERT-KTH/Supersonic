The optimization steps are as follows:

1. Remove `#include <bits/stdc++.h>`. This header file includes a lot of unnecessary header files, which can slow down the compilation time. Instead, only include the necessary header files.

2. Remove the `fast` macro. Instead, place the `ios::sync_with_stdio(0); cin.tie(0);` directly in the main function. This is more readable and straightforward.

3. The function `pow` and `prime` are not used anywhere in the program. So, remove them to save memory.

4. Remove unused macros `eb`, `pb`, `ff`, `ss`, and `gcd`. They are not used anywhere in the program.

5. The `mod` constant is also not used, so remove it.

After applying these optimizations, the resulting code is:

```cpp
#include<iostream>
#include<algorithm>
using namespace std;
typedef long long ll;

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  
  int N;
  cin >> N;
  while (N--) {
    ll a, b;
    cin >> a >> b;
    if (a == 0 or b == 0) {
      cout << max(a, b) << ' ' << 0 << '\n';
      continue;
    }
    if (a == b and a != 0) {
      cout << 0 << ' ' << 0 << '\n';
      continue;
    }
    if (b > a)
      swap(a, b);
    cout << a - b << ' ' << min(a % (a - b), a - b - a % (a - b)) << '\n';
  }
}
```

This optimized code is more efficient in terms of running time and memory usage. It's also more readable and straightforward.