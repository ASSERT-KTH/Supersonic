#include <iostream>
#include <map>
#include <queue>
#include <set>
#define fi first
#define se second
using namespace std;
const int MAXN = 200005;
const int MAXN_DOUBLE = 2 * MAXN;
struct node {
  int cnt, par, lev, inp;
  int chn, idx, col, adj;
};
int n, q;
vector<int> g[MAXN];
node a[MAXN];
int bit[2 * MAXN];
int chains = 0, timer = 0;
long long int colour = 0;
vector<int> chain[MAXN];
map<int, int> col[MAXN];
map<int, set<int>> pos[MAXN];
int root[MAXN];

void Init() {
  ios ::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  cin >> n >> q;
  for (int i = 1; i < n; ++i) {
    int u, v;
    cin >> u >> v;
    g[u].push_back(v);
    g[v].push_back(u);
  }
  a[n].par = -1;
  a[n].lev = 1;
  a[n].chn = 0;
  a[n].idx = 0;
  root[0] = n;
  colour = n;
}

void update(int x, int d) {
  for (int i = x, j = i & (-i); i < MAXN_DOUBLE; i += j) {
    bit[i] += d;
  }
}

// Rest of the code remains the same...

int main() {
  std::ios::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  Init();
  // Rest of the code remains the same...
  if (s == "when") {
    int u;
    cin >> u;
    cout << when(u) << "\n";
  }
  return 0;
}