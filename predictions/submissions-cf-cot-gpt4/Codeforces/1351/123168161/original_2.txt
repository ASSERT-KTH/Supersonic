Here are the steps to optimize the given code:

1. We can optimize the code by avoiding the use of 'bits/stdc++.h'. This header file includes almost all C++ Standard Library header files, and it is a heavy operation for the compiler to include all these files. We can replace it with only those header files required in this program: 'iostream' and 'algorithm'.

2. We can also avoid using 'using namespace std;'. This namespace includes all the standard library names and it can lead to name clashing issues if our program has names identical to those in the standard library. We can add 'std::' prefix before standard library names.

3. Instead of calculating the min(a1, b1) and min(a2, b2) twice, we can calculate it once and store it in a variable. This will reduce the number of function calls and hence improve the execution time.

4. Avoid the use of 'endl' to add new lines, instead, use '\n'. The 'endl' not only adds a new line but also flushes the output buffer, which is a costly operation in terms of execution time.

Now, here is the optimized code:

```cpp
#include <iostream>
#include <algorithm>

int main() {
  int t;
  std::cin >> t;
  while (t--) {
    int a1, b1, a2, b2;
    std::cin >> a1 >> b1 >> a2 >> b2;
    int max1 = std::max(a1, b1), max2 = std::max(a2, b2);
    int min1 = std::min(a1, b1), min2 = std::min(a2, b2);
    if (max1 == max2 && min1 + min2 == max1)
      std::cout << "YES\n";
    else
      std::cout << "NO\n";
  }
  return 0;
}
```