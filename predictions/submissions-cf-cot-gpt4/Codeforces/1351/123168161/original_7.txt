The given C++ program doesn't have any unnecessary overhead or expensive operations, it's already quite simple and efficient. However, there are a few minor improvements that can be made:

1. Use `std::ios_base::sync_with_stdio(false);` and `std::cin.tie(NULL);` to turn off synchronization with the C standard streams. This can make I/O operations faster.

2. Avoid using `std::endl` as it causes an unnecessary flush operation. Use `'\n'` instead.

3. Store the result of `min(a1, b1)` and `min(a2, b2)` to avoid recalculating them.

Here is the modified version:

```cpp
#include <bits/stdc++.h>
using namespace std;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int a1, b1, a2, b2;
    cin >> a1 >> b1 >> a2 >> b2;
    int max1 = max(a1, b1), max2 = max(a2, b2);
    int min1 = min(a1, b1), min2 = min(a2, b2);
    if (max1 == max2 && min1 + min2 == max1)
      cout << "YES" << '\n';
    else
      cout << "NO" << '\n';
  }
  return 0;
}
```

Please note that these optimizations may have a minor effect on performance but they won't change the time complexity of the program. This program already runs in O(1) time for each test case.