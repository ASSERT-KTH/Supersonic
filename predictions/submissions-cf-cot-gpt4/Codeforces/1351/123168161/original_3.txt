Step 1: Remove the #include <bits/stdc++.h> header. This header file is quite large and includes more than necessary for this program, which could slow down compile time. Instead, include only the necessary headers.

Step 2: Instead of finding the maximum and minimum two times, find the maximum and minimum once and store the results in variables. This reduces computation time.

Step 3: Instead of checking the condition and printing separately, use a ternary operator. This reduces the length of the code and increases readability.

Step 4: 'std::endl' causes a flush of the output buffer which could cause a performance hit. Use '\n' instead of 'std::endl' for a new line.

Here is the optimized code:

```cpp
#include <iostream>
#include <algorithm>

int main() {
  int t;
  std::cin >> t;
  while (t--) {
    int a1, b1, a2, b2;
    std::cin >> a1 >> b1 >> a2 >> b2;
    int max1 = std::max(a1, b1), min1 = std::min(a1, b1);
    int max2 = std::max(a2, b2), min2 = std::min(a2, b2);
    std::cout << ((max1 == max2 && min1 + min2 == max1) ? "YES\n" : "NO\n");
  }
  return 0;
}
```
Remember, these optimizations are minor and may not have a significant impact on the runtime. However, they do improve the readability and maintainability of the code.