The given C++ program is relatively well optimized, it is efficient in terms of both time complexity and memory usage. The time complexity is linear (O(n)) and it uses only a constant amount of memory. However, there are some minor improvements that can be done:

1. Avoid using `#include <bits/stdc++.h>`: This header file includes quite a lot of files, which can slow down the compilation process. We should only include the files that we actually use.
2. Use `std::ios_base::sync_with_stdio(false)` and `cin.tie(NULL)`: These can potentially speed up I/O operations.
3. Use '\n' instead of `endl`: The `endl` manipulator flushes the output buffer every time it's used, which can be slower than simply outputting a newline character ('\n').
4. Declare `max1` and `max2` once outside the loop: It is unnecessary to declare these variables in every iteration of the loop.

Here is the optimized program:

```c++
#include <iostream>
#include <algorithm>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int t;
  cin >> t;

  int max1, max2;
  while (t--) {
    int a1, b1, a2, b2;
    cin >> a1 >> b1 >> a2 >> b2;
    max1 = max(a1, b1);
    max2 = max(a2, b2);

    if (max1 == max2 && min(a1, b1) + min(a2, b2) == max1)
      cout << "YES\n";
    else
      cout << "NO\n";
  }
  return 0;
}
```