This program is already quite optimized in terms of running time and space complexity. It has a time complexity of O(1) for each test case, and a space complexity of O(1), since it only uses a constant amount of variables.

However, there are minor optimizations that can be applied:

1. Avoiding the use of 'bits/stdc++.h' as it includes too many unnecessary libraries which increases the compilation time. Instead, we will include only the required libraries, which in this case are iostream and algorithm.

2. Using '\n' instead of endl to output a new line. This is because endl also flushes the output stream, which can slow down your program if you do it too often.

3. By declaring the variables outside the while loop, we can avoid the overhead of creating them and destroying them every time the loop is run.

Here is the optimized code:

```cpp
#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    
    int t;
    int a1, b1, a2, b2, max1, max2;
    cin >> t;
    
    while (t--) {
        cin >> a1 >> b1 >> a2 >> b2;
        max1 = max(a1, b1);
        max2 = max(a2, b2);
        if (max1 == max2 && min(a1, b1) + min(a2, b2) == max1)
            cout << "YES\n";
        else
            cout << "NO\n";
    }
    
    return 0;
}
```

In this code, we have also added two lines at the start of main() to speed up cin and cout. This can make a significant difference in problems involving large amounts of input and output.