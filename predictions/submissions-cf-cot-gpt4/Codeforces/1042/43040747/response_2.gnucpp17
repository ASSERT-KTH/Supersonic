#include <iostream>
#include <vector>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag,
             tree_order_statistics_node_update>
    pbdsm;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  ll n, t;
  cin >> n >> t;
  vector<ll> v(n + 1);
  v[0] = 0;
  pbdsm A;
  A.insert(make_pair(0, 0));
  ll ans = 0, k = 1;
  for (auto i = 1; i <= n; ++i) {
    cin >> v[i];
    v[i] += v[i - 1];
    ans += A.size() - A.order_of_key(make_pair(v[i] - t, 2e6));
    A.insert(make_pair(v[i], k++));
  }
  cout << ans;
  return 0;
}