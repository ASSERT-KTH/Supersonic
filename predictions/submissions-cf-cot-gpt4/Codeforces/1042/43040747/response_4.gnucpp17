#include <iostream>
#include <vector>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

typedef long long ll;
typedef __gnu_pbds::tree<std::pair<ll, ll>, __gnu_pbds::null_type, std::less<std::pair<ll, ll>>, __gnu_pbds::rb_tree_tag,
             __gnu_pbds::tree_order_statistics_node_update>
    pbdsm;

int main() {
  std::ios::sync_with_stdio(0);
  std::cin.tie(0);
  
  ll n, t, ans = 0, k = 1;
  std::cin >> n >> t;
  
  std::vector<ll> v(n + 1);
  v[0] = 0;
  pbdsm A;
  A.insert({0, 0});
  
  for (int i = 1; i <= n; ++i) {
    std::cin >> v[i];
    v[i] += v[i - 1];
    ans += A.size() - A.order_of_key({v[i] - t, 2e6});
    A.insert({v[i], k++});
  }
  
  std::cout << ans;
  
  return 0;
}