#include <iostream>
#include <vector>
#include <algorithm>

#define fi first
#define se second
const int N = 200200;
const int mod = 1e9 + 7;

int main() {
  std::ios_base::sync_with_stdio(0);
  int n, m, k;
  std::cin >> n >> m >> k;
  
  std::vector<std::pair<int, int>> v[N], g[N], ng;
  int ban[10][10][10], slf[10][10];
  int used[10], cnt[10][10];
  int res = 0, all = 0;
  int sv[10][10];
  
  for (int i = 1; i <= m; i++) {
    int x, y, z;
    std::cin >> x >> y >> z;
    v[x].push_back({z, y});
  }
  for (int i = 1; i <= n; i++) {
    std::sort(v[i].begin(), v[i].end());
    for (int j = 0; j < v[i].size(); j++) {
      g[v[i][j].se].push_back({v[i].size(), j});
    }
  }
  for (int i = 1; i <= n; i++) {
    if (g[i].empty()) {
      std::cout << 0 << "\n";
      return 0;
    }
    std::sort(g[i].begin(), g[i].end());
    ng.clear();
    ng.push_back(g[i][0]);
    for (int j = 1; j < g[i].size(); j++) {
      if (g[i][j] == g[i][j - 1]) {
        slf[g[i][j].fi][g[i][j].se] = true;
      } else {
        ng.push_back(g[i][j]);
      }
    }
    g[i] = ng;
    for (int j = 0; j < g[i].size(); j++) {
      cnt[g[i][j].fi][g[i][j].se] += 1;
      for (int h = 0; h < g[i].size(); h++)
        if (h != j) {
          ban[g[i][j].fi][g[i][j].se][g[i][h].fi] |= (1 << g[i][h].se);
        }
    }
  }
  // rec(1); The rec function is not provided in the given code.
  std::cout << res << "\n";
}