#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;
using namespace std;

// The rest of the program remains the same until the test_cases() function

void test_cases() {
  int n, m;
  cin >> n >> m;
  vector<pair<int, vector<int>>> a(m);
  map<int, int> fr;
  for (int i = 0; i < m; i++) {
    a[i].ff = i;
    int x;
    cin >> x;
    a[i].ss.resize(x);
    for (auto &x : a[i].ss) {
      cin >> x;
      fr[x]++;
      fr[x] = min(fr[x], m + 1 >> 1); // Bitwise shift instead of division
    }
  }
  vector<int> sizes(m); // Precompute sizes
  for (int i = 0; i < m; i++) {
    sizes[i] = a[i].ss.size();
  }
  sort(ALL(a), [&](auto &a, auto &b) { return sizes[a.ff] < sizes[b.ff]; }); // Use precomputed sizes
  vector<int> res(m, -1); // Preallocate memory
  for (int i = 0; i < m; i++) {
    int idx = a[i].ff;
    vector<int> v = a[i].ss;
    int mn = 1e18;
    for (int x : v) {
      if (fr[x] > 0) {
        mn = min(mn, fr[x]);
      }
    }
    // The rest of the program remains the same
  }
  // ...
}
// The rest of the program remains the same