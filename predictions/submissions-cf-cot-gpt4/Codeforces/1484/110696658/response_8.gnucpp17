#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

typedef long long ll;
typedef pair<ll, vector<ll>> pv;

bool comp(const pv &a, const pv &b) {
    return a.second.size() < b.second.size();
}

void test_cases() {
  ll n, m;
  scanf("%lld %lld", &n, &m);
  vector<pv> a(m);
  map<ll, ll> fr;
  for (ll i = 0; i < m; i++) {
    a[i].first = i;
    ll x;
    scanf("%lld", &x);
    a[i].second.resize(x);
    for (auto &x : a[i].second) {
      scanf("%lld", &x);
      fr[x]++;
      fr[x] = min(fr[x], (m + 1) / 2);
    }
  }
  sort(a.begin(), a.end(), comp);
  vector<ll> res(m, -1);
  for (ll i = 0; i < m; i++) {
    ll idx = a[i].first;
    vector<ll> v = a[i].second;
    ll mn = 1e18;
    for (ll x : v) {
      if (fr[x] > 0) {
        mn = min(mn, fr[x]);
      }
    }
    if (mn == 1e18) {
      printf("NO\n");
      return;
    }
    ll per = -1;
    for (ll x : v) {
      if (mn == fr[x]) {
        per = x;
        break;
      }
    }
    res[idx] = per;
    fr[per]--;
  }
  printf("YES\n");
  for (ll i = 0; i < m; i++) {
    printf("%lld ", res[i]);
  }
  printf("\n");
}

int main() {
  ll tt;
  scanf("%lld", &tt);
  for (ll T = 1; T <= tt; T++) {
    test_cases();
  }
  return 0;
}