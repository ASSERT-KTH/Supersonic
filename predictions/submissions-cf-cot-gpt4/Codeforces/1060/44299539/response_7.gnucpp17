#include <bits/stdc++.h>
using namespace std;
long long n[2001], m[2001], s_m[2001];

int main() {
  long long s_n, t, N, M, x, min_n = 1, max_n, mid_n, min_m = 1, max_m,
                                  mid_m, ans = 0, col;
  cin >> N >> M;
  max_n = N;
  for (long long i = 1; i <= N; i++) {
    cin >> t;
    n[i] = t + n[i - 1];
  }
  for (long long j = 1; j <= M; j++) {
    cin >> t;
    m[j] = t + m[j - 1];
  }
  cin >> x;
  
  // calculate s_m for each M
  for (int j = 1; j <= M; j++) {
    s_m[j] = 10e10;
    for (int i = j; i <= M; i++)
        s_m[j] = min(s_m[j], m[i] - m[i - j]);
  }

  for (int n_i = 1; n_i <= N; n_i++) {
    min_m = 1;
    max_m = M;
    s_n = 10e10;
    for (int i = n_i; i <= N; i++)
      s_n = min(s_n, n[i] - n[i - n_i]);
    while (min_m <= max_m) {
      mid_m = (min_m + max_m) / 2;
      if (s_m[mid_m] * s_n <= x) {
        ans = max(ans, mid_m * n_i);
        min_m = mid_m + 1;
      } else
        max_m = mid_m - 1;
    }
  }
  cout << ans;
  return 0;
}