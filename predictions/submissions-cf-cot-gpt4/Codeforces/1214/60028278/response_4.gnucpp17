#include <algorithm>
#include <cstring>
#include <iostream>
#include <map>
#include <stack>
#include <stdio.h>
#include <string>
#include <vector>

typedef std::pair<int, int> pii;
int n, m;
std::string* mz;
bool* vis;

bool dfs(int x, int y) {
  if (x >= n || y >= m || mz[x][y] == '#' || vis[x * m + y])
    return false;
  if (x == n - 1 && y == m - 1)
    return true;
  if (x || y)
    vis[x * m + y] = 1;
  return dfs(x + 1, y) || dfs(x, y + 1);
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin >> n >> m;
  mz = new std::string[n];
  vis = new bool[n*m];
  for (int i = 0; i < n; i++) {
    std::cin >> mz[i];
  }
  if (!dfs(0, 0))
    std::cout << 0;
  else {
    vis[0] = 0;
    if (!dfs(0, 0))
      std::cout << 1;
    else
      std::cout << 2;
  }
  delete[] mz;
  delete[] vis;
  return 0;
}