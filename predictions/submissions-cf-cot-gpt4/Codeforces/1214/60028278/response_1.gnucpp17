#include <algorithm>
#include <iostream>
#include <unordered_map>
#include <string>
#include <vector>
using namespace std;

typedef pair<int, int> pii;
const int maxn = 1e6 + 5;
int n, m;
string mz[maxn];
unordered_map<int, bool> vis;
int paths = 0;

void dfs(int x, int y) {
  if (x >= n || y >= m || mz[x][y] == '#' || vis[x * m + y])
    return;
  if (x == n - 1 && y == m - 1) {
    paths++;
    return;
  }
  vis[x * m + y] = 1;
  dfs(x + 1, y);
  dfs(x, y + 1);
  vis[x * m + y] = 0; // Backtracking
}

int main() {
  ios_base::sync_with_stdio(false);
  cin >> n >> m;
  for (int i = 0; i < n; i++) {
    cin >> mz[i];
  }
  dfs(0, 0);
  cout << min(paths, 2);
  return 0;
}