#include <algorithm>
#include <iostream>
#include <vector>
#include <stack>
#include <string>
using namespace std;

typedef pair<int, int> pii;
const int MAXN = 1e6 + 5;
int n, m;
vector<string> mz;
stack<pii> s;
vector<vector<bool>> vis;

bool dfs(int x, int y) {
  if (x >= n || y >= m || mz[x][y] == '#' || vis[x][y])
    return false;
  if (x == n - 1 && y == m - 1)
    return true;
  if (x || y)
    vis[x][y] = true;
  return dfs(x + 1, y) || dfs(x, y + 1);
}

int main() {
  cin >> n >> m;
  mz.resize(n);
  vis.resize(n, vector<bool>(m, false));
  for (int i = 0; i < n; i++) {
    cin >> mz[i];
  }
  if (!dfs(0, 0))
    cout << 0 << '\n';
  else {
    vis[0][0] = false;
    if (!dfs(0, 0))
      cout << 1 << '\n';
    else
      cout << 2 << '\n';
  }
  return 0;
}