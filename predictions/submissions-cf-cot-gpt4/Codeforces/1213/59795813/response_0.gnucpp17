#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define gcd __gcd
#define int long long
#define err(x) cout << #x << ": " << x << endl;
using namespace std;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef map<int, int> mi;
const int MAX = 2e5;
int n, m, u, q, v, w, k, par[MAX], sz[MAX], PS[MAX];
vector<pair<int, pii>> e;
int root(int x) { return x == par[x] ? x : par[x] = root(par[x]); }
int mrg(int x, int y) {
  x = root(x), y = root(y);
  if (x == y)
    return 0;
  if (sz[x] < sz[y])
    swap(x, y);
  int tmp = sz[x] * sz[y];
  par[y] = x, sz[x] += sz[y];
  return tmp;
}
void dsu() {
  map<pair<int, int>, int> cache;
  for (int i = 0; i < n - 1; i++) {
    pair<int, int> p = e[i].S;
    if (!cache.count(p))
      cache[p] = mrg(p.F, p.S);
    PS[e[i].F] += cache[p];
  }
  for (int i = 1; i <= MAX; i++)
    PS[i] += PS[i - 1];
}
main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  cin >> n >> m;
  for (int i = 0; i < n - 1; i++) {
    cin >> u >> v >> w;
    e.pb({w, {u, v}});
  }
  sort(e.begin(), e.end());
  for (int i = 1; i <= n; i++)
    par[i] = i, sz[i] = 1;
  dsu();
  while (m--) {
    cin >> q;
    cout << PS[q] << ' ';
  }
}