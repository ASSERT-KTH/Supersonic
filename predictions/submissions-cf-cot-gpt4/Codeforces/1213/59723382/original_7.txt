Optimization steps:

1. Change the `#include <bits/stdc++.h>` to specific libraries needed. The `bits/stdc++.h` includes a lot of unnecessary libraries, which increase the compilation time.

2. Remove the `ios_base::sync_with_stdio(0);`, `cin.tie(0);`, and `cout.tie(0);` lines. These are used to sync the C++ standard streams with the C standard streams. In this code, there is no use of the C standard streams, so these lines are unnecessary.

3. Remove the array `v[][]`. This array is used to store values that are calculated in the while loop. However, it is possible to calculate these values without storing them in an array, which saves memory.

4. Remove the `#ifndef ONLINE_JUDGE ... #endif` lines. This is only necessary if you are using an online judge system that provides input and output files. If you are not, this is unnecessary.

5. Initiate `_d` with `d` and use a do-while loop instead of a while loop. It is more efficient and eliminates the need for `v[1][d] = d;`

Optimized code:

```cpp
#include <iostream>
using namespace std;
const long long base = 31;
const long long mod = 1e9 + 7;
int main() {
  int q;
  cin >> q;
  while (q--) {
    long long n, m;
    cin >> n >> m;
    long long k = n / m;
    long long d = m % 10;
    long long cnt = 1;
    long long _d = d;
    long long o = 0;
    do {
      o += _d;
      _d = (_d + d) % 10;
      ++cnt;
    } while (_d != d);
    long long res = (k / cnt) * o;
    for (int i = 1; i <= k % cnt; ++i)
      res += (_d + d * (i - 1)) % 10;
    cout << res << '\n';
  }
  return 0;
}
```
