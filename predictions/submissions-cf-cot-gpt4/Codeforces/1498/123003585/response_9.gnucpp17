#include <algorithm>
#include <iostream>
#include <unordered_map>
#include <vector>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int n_sets;
  cin >> n_sets;
  
  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    cin >> n >> W;
    vector<int> a(n);
    for (int i = 0; i < n; i++)
      cin >> a[i];
    sort(a.begin(), a.end(), greater<int>());
    unordered_map<int, int> x;
    x.reserve(n);
    x[W] = 200000;
    
    for (int i : a) {
      int remain = W - i;
      int best_w = W;
      
      for (auto it = x.rbegin(); it != x.rend(); ++it) {
        if (it->first - i >= 0 && it->second != 0 && it->first - i < remain) {
          best_w = it->first;
          remain = it->first - i;
          break;
        }
      }
      
      x[best_w]--;
      if (!x[best_w])
        x.erase(best_w);
      x[remain]++;
    }
    
    cout << 200000 - x[W] << "\n";
  }
  
  return 0;
}