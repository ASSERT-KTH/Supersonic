#include <iostream>
#include <set>
#include <vector>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n_sets;
  cin >> n_sets;

  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    cin >> n >> W;
    vector<int> a(n);
    for (int i = 0; i < n; i++)
      cin >> a[i];
    sort(a.rbegin(), a.rend());
    multiset<int> x;
    x.insert(W);
    for (int i : a) {
      auto it = x.lower_bound(i);
      if (it != x.end()) {
        int remain = *it - i;
        x.erase(it);
        x.insert(remain);
      } else {
        x.insert(W - i);
      }
    }
    cout << W * n_sets - accumulate(x.begin(), x.end(), 0) << '\n';
  }
  return 0;
}