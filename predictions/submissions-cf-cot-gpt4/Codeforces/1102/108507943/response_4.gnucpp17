#include <iostream>
#include <vector>
#include <string>

typedef long long int int64;

void forward(std::string &s, int x, int n, std::vector<int64> &count) {
  for (int64 i = 0; i < n; ++i) {
    if (count[x] < n / 3 && s[i] - '0' > x && count[s[i] - '0'] > n / 3) {
      ++count[x];
      --count[s[i] - '0'];
      s[i] = x + '0';
    }
  }
}

void backward(std::string &s, int x, int n, std::vector<int64> &count) {
  for (int64 i = n - 1; i >= 0; --i) {
    if (count[x] < n / 3 && s[i] - '0' < x && count[s[i] - '0'] > n / 3) {
      ++count[x];
      --count[s[i] - '0'];
      s[i] = x + '0';
    }
  }
}

int main() {
  int64 n;
  std::vector<int64> count(3, 0);
  std::string s;
  std::cin >> n;
  std::cin >> s;
  for (int64 i = 0; i < n; ++i) {
    ++count[s[i] - '0'];
  }
  if(count[0] > n/3)
    forward(s, 0, n, count);
  if(count[1] > n/3)
    forward(s, 1, n, count);
  if(count[2] > n/3)
    backward(s, 2, n, count);
  if(count[1] > n/3)
    backward(s, 1, n, count);
  std::cout << s;
}