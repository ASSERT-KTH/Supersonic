#include <bits/stdc++.h>
using namespace std;
#define int long long
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define PI 3.14159265
const int MOD = 1e9+7;
const int N = 400;
int sz[N], a[N], ans[N], cnt[N];
int v_i[N][N], v_e[N][N];

void initialize() {
  for (int i = 1; i <= N-1; i++) {
    a[i] = i;
    sz[i] = 1;
  }
}

int root(int i) {
  while (a[i] != i) {
    a[i] = a[a[i]];
    i = a[i];
  }
  return i;
}

void merge(int x, int y) {
  int u = root(x);
  int v = root(y);
  if (sz[u] < sz[v]) {
    swap(u, v);
  }
  a[v] = a[u];
  sz[u] += sz[v];
}

int32_t main() {
  IOS;
  int n;
  cin >> n;
  initialize();
  int v[n+1];
  for (int i = 1; i <= n; i++) {
    cin >> v[i];
  }
  string s[n+1];
  for (int i = 0; i < n; i++) {
    cin >> s[i];
    for (int j = 0; j < n; j++) {
      if (s[i][j] == '1') {
        int root_i = root(i + 1);
        int root_j = root(j + 1);
        if (root_i != root_j) {
          merge(root_i, root_j);
        }
      }
    }
  }
  for (int i = 1; i <= n; i++) {
    int root_i = root(i);
    v_e[root_i][cnt[root_i]++] = v[i];
  }
  for (int i = 1; i <= n; i++) {
    sort(v_e[i], v_e[i] + cnt[i]);
  }
  for (int i = 1; i <= n; i++) {
    int root_i = root(i);
    cout << v_e[root_i][cnt[root_i]++] << " ";
  }
  cout << endl;
}