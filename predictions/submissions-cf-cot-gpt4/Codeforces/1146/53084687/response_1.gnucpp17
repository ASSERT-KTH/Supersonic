#include <algorithm>
#include <cstdio>
using namespace std;
const int X = 1e5;
struct node {
  int l, r;
  int lz;
  int sgn;
};
void pushup(node sgt[], int x) {
  if (sgt[x << 1].sgn == sgt[x << 1 | 1].sgn) {
    sgt[x].sgn = sgt[x << 1].sgn;
  } else {
    sgt[x].sgn = 0;
  }
}
void pushdown(node sgt[], int x) {
  if (sgt[x].lz == 2) {
    sgt[x << 1].sgn = -sgt[x << 1].sgn;
    sgt[x << 1 | 1].sgn = -sgt[x << 1 | 1].sgn;
    sgt[x << 1].lz = (sgt[x << 1].lz % 2 == 0 ? 2 - sgt[x << 1].lz : -sgt[x << 1].lz);
    sgt[x << 1 | 1].lz = (sgt[x << 1 | 1].lz % 2 == 0 ? 2 - sgt[x << 1 | 1].lz : -sgt[x << 1 | 1].lz);
    sgt[x].lz = 0;
  }
  if (sgt[x].lz) {
    sgt[x << 1].sgn = sgt[x].lz;
    sgt[x << 1 | 1].sgn = sgt[x].lz;
    sgt[x << 1].lz = sgt[x].lz;
    sgt[x << 1 | 1].lz = sgt[x].lz;
    sgt[x].lz = 0;
  }
}
//...
void update(node sgt[], int l, int r, int x, int val) {
  if (l <= sgt[x].l && r >= sgt[x].r) {
    if (val == 2) {
      sgt[x].sgn = (sgt[x].sgn % 2 == 0 ? 2 - sgt[x].sgn : -sgt[x].sgn);
      sgt[x].lz = (sgt[x].lz % 2 == 0 ? 2 - sgt[x].lz : -sgt[x].lz);
    } else {
      sgt[x].sgn = val;
      sgt[x].lz = val;
    }
    return;
  }
  //...
}
//...
int main() {
  //...
  while (q--) {
    //...
    if (s == '>') {
      x++;
      //if (x == 0) { x++; }
      //...
    } else {
      x--;
      //if (x == 0) { x--; }
      //...
    }
  }
  for (int i = 0; i < n; i++) {
    //...
    printf("%d", a[i] * r);
    if (i == n - 1) {
      putchar('\n');
    } else {
      putchar(' ');
    }
  }
  return 0;
}