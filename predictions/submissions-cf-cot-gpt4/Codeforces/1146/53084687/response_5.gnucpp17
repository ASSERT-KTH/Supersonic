#include <algorithm>
#include <cstdio>
using namespace std;
const int X = 1e5;
struct node {
  int l, r;
  int lz;
  int sgn;
};
void pushup(node sgt[], int x) {
  if (sgt[x << 1].sgn == sgt[x << 1 | 1].sgn) {
    sgt[x].sgn = sgt[x << 1].sgn;
  } else {
    sgt[x].sgn = 0;
  }
}
void inv(int &x) { x = (x & 1) == 0 ? 2 - x : -x; }
void pushdown(node sgt[], int x) {
  if (sgt[x].lz) {
    if (sgt[x].lz == 2) {
      sgt[x << 1].sgn = -sgt[x << 1].sgn;
      sgt[x << 1 | 1].sgn = -sgt[x << 1 | 1].sgn;
      inv(sgt[x << 1].lz);
      inv(sgt[x << 1 | 1].lz);
      sgt[x].lz = 0;
    } else {
      sgt[x << 1].sgn = sgt[x].lz;
      sgt[x << 1 | 1].sgn = sgt[x].lz;
      sgt[x << 1].lz = sgt[x].lz;
      sgt[x << 1 | 1].lz = sgt[x].lz;
      sgt[x].lz = 0;
    }
  }
}
// remaining part of the code remains the same...
int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  // remaining part of the code remains the same...
  while (q--) {
    // remaining part of the code remains the same...
  }
  int a;
  for (int i = 0; i < n; i++) {
    scanf("%d", &a);
    int r = 0;
    if (a < 0) {
      r = query(sgt0, -a, 1);
    } else if (a > 0) {
      r = query(sgt1, a, 1);
    }
    printf("%d%c", a * r, i == n - 1 ? '\n' : ' ');
  }
  return 0;
}