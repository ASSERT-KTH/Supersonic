#include <bits/stdc++.h>

using namespace std;

#define int long long int
#define pb push_back
#define ppb pop_back
#define rep(i, a, n) for (int i = a; i < n; i++)
#define repr(i, n, a) for (int i = n; i >= a; i--)
#define yes cout << "YES\n"
#define no cout << "NO\n"
#define dbg(x) cout << #x << " " << x << " "
#define F first
#define S second
const int mod = 1e9 + 7;
const int INF = 1e18;

void solve() {
  const int N = 4e5 + 5;
  vector<int> seg_tree;
  seg_tree.reserve(4 * N + 5);
  vector<int> a;
  a.reserve(N);
  
  int n;
  cin >> n;
  rep(i, 1, n + 1) cin >> a[i], a[i + n] = a[i];
  build_tree(1, 1, 2 * n);
  int ans = 0, g = 0;
  rep(i, 1, n + 1) g = __gcd(g, a[i]);
  rep(i, 1, n + 1) {
    int r = 2 * n, l = i + 1, temp = INF, cnt = 0;
    if (a[i] == g)
      continue;
    while (l <= r) {
      int mid = (l + r) / 2;
      int x = query(1, 1, 2 * n, l, mid);
      int y = __gcd(x, a[i]);
      if (y == g)
        temp = min(temp, mid - l + 1 + cnt), r = mid - 1;
      else
        a[i] = __gcd(a[i], x), cnt += mid - l + 1, l = mid + 1;
    }
    ans = max(ans, temp);
  }
  cout << ans << '\n';
  return;
}

signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  
  int t = 1;
  cin >> t;
  rep(i, 1, t + 1) { solve(); }
  return 0;
}