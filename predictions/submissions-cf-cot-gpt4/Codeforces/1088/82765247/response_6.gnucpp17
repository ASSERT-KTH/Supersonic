#include <iostream>
#include <vector>
using namespace std;
using lli = long long int;
constexpr int S = 1000001;
constexpr int M = 1000000007;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  lli t;
  cin >> t;
  
  while (t--) {
    lli n;
    cin >> n;
    vector<lli> v(n + 1);
    vector<pair<lli, pair<lli, lli>>> pp;
    lli add = 0;

    for (lli i = 1; i <= n; i++) {
      cin >> v[i];
    }
    v[0] = -1;
    for (lli i = n; i >= 1; i--) {
      v[i] += add;
      if (v[i] > i) {
        lli rem = (v[i] - i) % (n + 1);
        pp.push_back({1, {i, n + 1 - rem}});
        add += n + 1 - rem;
      } else {
        pp.push_back({1, {i, i - v[i]}});
        add += i - v[i];
      }
    }
    pp.push_back({2, {n, n + 1}});
    cout << pp.size() << "\n";
    for (auto i : pp) {
      cout << i.first << " " << i.second.first << " " << i.second.second << "\n";
    }
  }
  return 0;
}