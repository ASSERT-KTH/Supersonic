#include <iostream>
#include <vector>
using namespace std;
typedef long long int lli;

struct ppStruct {
  lli first, second, third;
};

int main() {
  lli n;
  cin >> n;
  vector<lli> v;
  v.push_back(-1); // Pushing -1 at the 0th index
  vector<ppStruct> pp;
  for (lli i = 1; i <= n; i++) {
    lli temp;
    cin >> temp;
    v.push_back(temp);
  }
  for (lli i = n; i >= 1; i--) {
    lli addVal;
    if (v[i] > i) {
      lli rem = (v[i] - i) % (n + 1);
      pp.push_back({1, i, n + 1 - rem});
      addVal = n + 1 - rem;
    } else {
      pp.push_back({1, i, i - v[i]});
      addVal = i - v[i];
    }
    for (lli j = 1; j <= i; j++) {
      v[j] += addVal;
    }
  }
  pp.push_back({2, n, n + 1});
  cout << pp.size() << "\n";
  for (auto i : pp) {
    cout << i.first << " " << i.second << " " << i.third << "\n";
  }
  return 0;
}