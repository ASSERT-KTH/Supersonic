#include <bits/stdc++.h>
using namespace std;
#pragma GCC optimize("O3")
#ifdef LOCAL
#define D(a) cerr << #a << " = " << a << endl
#else
#define D(a)
#define cerr false && cerr
#endif
#define fastio ios_base::sync_with_stdio(0); cin.tie(0)
#define dforsn(i, s, n) for (int i = (n - 1); i >= (s); i--)
#define forsn(i, s, n) for (int i = (s); i < (n); i++)
#define forn(i, n) forsn(i, 0, n)
#define all(a) a.begin(), a.end()
#define si(a) ((a).size())
#define pb emplace_back
#define mp make_pair
#define snd second
#define fst first
using pii = pair<int, int>;
using vi = vector<int>;
using ll = long long;
int main() {
  fastio;
  mt19937_64 rnd(chrono::steady_clock::now().time_since_epoch().count());
  uniform_int_distribution<ll> distribution(0, n - 1);
  int n;
  cin >> n;
  vector<ll> a(n);
  forn(i, n) cin >> a[i];
  int m = n - n / 2;
  ll res = 0;
  forn(_, 13) {
    ll x = a[distribution(rnd)], s, va, vb;
    unordered_map<ll, int> d;
    d.max_load_factor(0.1);
    forn(i, n) {
      va = x, vb = a[i];
      while (vb != 0)
        s = va, va = vb, vb = s % vb;
      d.emplace(va, 0)++;
    }
    for (auto &i : d) {
      int c = i.snd;
      if (c >= m && i.fst > res)
        res = i.fst;
    }
  }
  cout << res << endl;
  return 0;
}