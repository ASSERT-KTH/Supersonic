#include <bits/stdc++.h>
using namespace std;
#pragma GCC optimize("O3")
#define fastio                                                                 \
  ios_base::sync_with_stdio(0);                                                \
  cin.tie(0)
#define forn(i, n) for(int i = 0; i < int(n); i++)
using ll = long long;

int main() {
  fastio;
  mt19937_64 rnd(chrono::steady_clock::now().time_since_epoch().count());
  int n;
  cin >> n;
  vector<ll> a;
  a.reserve(n); // reserve memory for the vector
  forn(i, n) {
    ll num;
    cin >> num;
    a.push_back(num);
  }
  int m = n - n / 2;
  ll res = 0;
  forn(_, 13) {
    ll x = a[rnd() % n], va, vb;
    unordered_map<ll, int> d;
    d.max_load_factor(0.1);
    forn(i, n) {
      va = x, vb = a[i];
      while (vb != 0)
        swap(va, vb), vb = vb % va;
      d[va]++;
    }
    for (auto &i : d) {
      int c = 0;
      for (auto &j : d) {
        int modResult = j.first % i.first; // save the result of the modulo operation
        if (modResult == 0)
          c += j.second;
      }
      if (c >= m && i.first > res)
        res = i.first;
    }
  }
  cout << res << endl;
  return 0;
}