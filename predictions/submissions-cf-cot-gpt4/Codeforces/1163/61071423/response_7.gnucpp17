#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;

struct pair_hash {
    template <class T1, class T2>
    std::size_t operator () (const std::pair<T1,T2> &p) const {
        auto h1 = std::hash<T1>{}(p.first);
        auto h2 = std::hash<T2>{}(p.second); 

        return h1 ^ h2;  
    }
};

// Rest of the code...

// Replace map<ip, set<pair<int, int>>> with unordered_map<ip, unordered_set<pair<int, int>, pair_hash>>
unordered_map<ip, unordered_set<pair<int, int>, pair_hash>, pair_hash> mp;
// Replace set<pair<ip, ip>> with unordered_set<pair<ip, ip>, pair_hash>
unordered_set<pair<ip, ip>, pair_hash> s;

// Rest of the code...