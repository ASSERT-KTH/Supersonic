#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> ip;
typedef map<ip, set<ip>> mip;

pair<int, int> slope(int x1, int y1, int x2, int y2) {
  int tmp1 = x2 - x1, tmp2 = y2 - y1;
  int tmp3 = __gcd(abs(tmp1), abs(tmp2));
  return {tmp2/tmp3, tmp1/tmp3};
}

pair<int, int> cept(int x1, int y1, int x2, int y2) {
  int tmp1 = y2 * x1 - x2 * y1, tmp2 = x2 - x1;
  int tmp3 = __gcd(abs(tmp1), abs(tmp2));
  return {tmp1/tmp3, tmp2/tmp3};
}

int main() {
  ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
  int n;
  scanf("%d", &n);
  ip a[n];
  for(int i = 0; i < n; i++) scanf("%d%d", &a[i].first, &a[i].second);
  set<pair<ip, ip>> s;
  mip mp;
  for(int i = 0; i < n; i++) {
    for(int j = i + 1; j < n; j++) {
      ip s1 = slope(a[i].first, a[i].second, a[j].first, a[j].second);
      ip c = cept(a[i].first, a[i].second, a[j].first, a[j].second);
      s.insert({s1, c});
      mp[s1].insert(c);
    }
  }
  long long x = 0;
  for(auto i : mp) {
    int si = i.second.size();
    x += 1LL * si * (si - 1) / 2;
  }
  long long si = s.size();
  printf("%lld\n", si * (si - 1) / 2 - x);
  return 0;
}