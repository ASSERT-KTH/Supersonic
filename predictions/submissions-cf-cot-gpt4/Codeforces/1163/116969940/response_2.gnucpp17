#include <iostream>
#include <set>
#include <map>
#include <cstring>

using namespace std;

void solve() {
    int n;
    cin >> n;
    multiset<int> st;
    int mp[100005];
    memset(mp, 0, sizeof(mp));
    int ans = 0;
    map<int, int> cnt;
    set<int> cst;
    for (int i = 0; i < n; ++i) {
        int x;
        cin >> x;
        if (mp[x]) {
            auto idx = st.find(mp[x]);
            cnt[mp[x]]--;
            st.erase(idx);
        }
        mp[x]++;
        cnt[mp[x]]++;
        cst.insert(x);
        st.insert(mp[x]);
        auto f = *st.begin();
        auto sec = st.upper_bound(f);
        if (sec == st.end())
            sec--;
        auto s = *sec;
        int w = cnt[f], y = cnt[s];
        if (cst.size() == 1)
            ans = i;
        if (max(w, y) == i + 1 && f == 1)
            ans = i;
        if (f * w + s * y == i + 1) {
            if (y == 1) {
                if (s == 1 || s - 1 == f)
                    ans = i;
            } else if (w == 1) {
                if (f == 1 || f - 1 == s)
                    ans = i;
            } else if (y == 1 && w == 1) {
                if (max(f, s) - 1 == min(f, s) || min(f, s) == 1)
                    ans = i;
            }
        }
    }
    ans++;
    cout << ans << "\n";
}

int main() {
    solve();
    return 0;
}