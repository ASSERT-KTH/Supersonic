#include <bits/stdc++.h>
#define pb push_back
#define ld long double
#define ll long long
#define lld long double
#define print(x) cerr << "[" << #x << ": " << x << "]";
#define println(x) cerr << "[" << #x << ": " << x << "]\n";
#define show(v) for (int i = 0; i < (int)v.size(); ++i) cout << v[i] << (i == (int)v.size() - 1 ? "\n" : " ");
#define debug(v) for (int i = 0; i < (int)v.size() - 1; ++i) { print(i); cout << "   "; println(v[i]) }
using namespace std;
clock_t time_p = clock();
void Time() {
  time_p = clock() - time_p;
  cerr << "Time Taken : " << (float)(time_p) / CLOCKS_PER_SEC << "\n";
}
const int INF = 1e9 + 7;
lld pi = 3.1415926535897932;
const long long INF64 = 9e18;
const long long mod = 1e9 + 7;
const int mxN = 1e9 + 5;
int mp[100005]; // Moved to global scope
void solve() {
  int n;
  cin >> n;
  int ans = 0;
  int cnt[100005] = {0}; // Replaced map with array
  int unique_count = 0; // Replaced set with integer
  int f = 0, s = 0; // Replaced multiset with two integers
  for (int i = 0; i < n; ++i) {
    int x;
    cin >> x;
    if (mp[x]) {
      cnt[mp[x]]--;
    } else {
      unique_count++;
    }
    mp[x]++;
    cnt[mp[x]]++;
    f = min(f, mp[x]);
    s = max(s, mp[x]);
    if (unique_count == 1)
      ans = i;
    if (max(f, s) == i + 1 && f == 1)
      ans = i;
    if (f * f + s * s == i + 1) {
      if (s == 1) {
        if (s == 1 || s - 1 == f)
          ans = i;
      } else if (f == 1) {
        if (f == 1 || f - 1 == s)
          ans = i;
      } else if (s == 1 && f == 1) {
        if (max(f, s) - 1 == min(f, s) || min(f, s) == 1)
          ans = i;
      }
    }
  }
  ans++;
  cout << ans << endl;
}
int main() {
  ios_base ::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
  cout.precision(35);
  int t;
  solve();
  Time();
  return 0;
}