#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cstring>
using namespace std;
typedef long long int ll;
typedef pair<ll, ll> pll;
typedef vector<ll> vll;
typedef vector<pll> vpll;
const ll MAX = 1e7 + 12;
const ll MOD = 1e9 + 7;
ll a[MAX], mp[MAX];

inline void sum_of_divisors() {
  for (int i = 1; i <= MAX; i++)
    for (int j = i; j <= MAX; j += i)
      a[j] += i;
  for (int i = MAX; i >= 0; i--)
    if (a[i] <= MAX)
      mp[a[i]] = i;
}

inline void solve_case() {
  int c;
  cin >> c;
  if (mp[c])
    cout << mp[c] << '\n';
  else
    cout << -1 << '\n';
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  sum_of_divisors();
  ll t;
  cin >> t;
  while (t--) solve_case();
  return 0;
}