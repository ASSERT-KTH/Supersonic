#include <stdio.h>
#include <string.h>

int t, n, m, G;
char maze[51][51] = {0};
bool visited[51][51] = {0};
int dir[4][2] = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};

bool block(int r, int c) {
  for (int i = 0; i < 4; i++) {
    int nr = r + dir[i][0];
    int nc = c + dir[i][1];
    if (nr >= 1 && nr <= n && nc >= 1 && nc <= m) {
      if (maze[nr][nc] == 'G' || (nr == n && nc == m && G > 0)) {
        return false;
      }
      if (maze[nr][nc] == '.') {
        maze[nr][nc] = '#';
      }
    }
  }
  return true;
}

void dfs(int r, int c) {
  if (r < 1 || c < 1 || r > n || c > m || maze[r][c] == '#' || visited[r][c])
    return;
  visited[r][c] = 1;
  if (maze[r][c] == 'G') {
    G--;
  }
  for (int i = 0; i < 4; i++) {
    dfs(r + dir[i][0], c + dir[i][1]);
  }
}

int main() {
  scanf("%d", &t);
  while (t--) {
    scanf("%d %d", &n, &m);
    bool flag = false;
    G = 0;
    memset(visited, 0, sizeof(visited));
    for (int i = 1; i <= n; i++) {
      for (int j = 1; j <= m; j++) {
        scanf(" %c", &maze[i][j]);
      }
    }
    for (int i = 1; i <= n && !flag; i++) {
      for (int j = 1; j <= m && !flag; j++) {
        if (maze[i][j] == 'B') {
          if (!block(i, j)) {
            printf("No\n");
            flag = true;
            break;
          }
        } else if (maze[i][j] == 'G') {
          G++;
        }
      }
    }
    if (flag) {
      continue;
    }
    dfs(n, m);
    if (G == 0) {
      printf("Yes\n");
    } else {
      printf("No\n");
    }
  }
  return 0;
}