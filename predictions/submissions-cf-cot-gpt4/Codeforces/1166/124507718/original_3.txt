In this given code, the function 'ans' is never used. We can remove it to save memory space. 

In the main() function, the variable 'd' is declared but never used. We can remove that as well. 

The 'v' vector is a vector of vector of integers. Only the last vector is used in the program. Instead of storing all the vectors, we can keep track of the last valid vector and use that. This reduces memory usage.

In the loop to fill the 'vow', we're calculating 'icopy' twice in each iteration. We can calculate 'icopy' once and use it.

The optimized code is:

```cpp
#include <bits/stdc++.h>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int n;
  cin >> n;
  
  if (n < 25) {
    cout << -1 << endl;
  } 
  else {
    int r = -1, c = -1;
    for (int i = 1; i <= sqrt(n); i++) {
      if (n % i == 0) {
        r = i;
        c = n / i;
      }
    }
    
    if (r >= 5 && c >= 5) {
      char vow[] = {'a', 'e', 'i', 'o', 'u'};
      int imain = 0;
      for (int i = 0; i < r; i++) {
        int icopy = imain % 5;
        for (int j = 0; j < c; j++) {
          cout << vow[icopy];
          icopy = (icopy + 1) % 5;
        }
        imain = (imain + 1) % 5;
      }
    } 
    else {
      cout << -1 << endl;
    }
  }
}
```
In this optimized code, 'r' and 'c' are the last pair of factors of 'n'. They replace the 'v' vector, thus saving memory. In the loop to fill 'vow', 'icopy' is calculated once per iteration, saving computation.