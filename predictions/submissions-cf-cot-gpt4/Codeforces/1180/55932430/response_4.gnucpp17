#include <iostream>
#include <cstdio>
#include <deque>
#include <vector>
#include <utility>

typedef unsigned long long ULL;
typedef long long LL;

#define FOR(i, a, b) for (int i = (a); i <= (b); ++i)
#define REP(i, n) FOR(i, 0, (int)(n - 1))

int pop_front(std::deque<int> &d) {
  int a = d.front();
  d.pop_front();
  return a;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  
  int n, q;
  std::cin >> n >> q;
  std::deque<int> deq;
  std::vector<std::pair<int, int>> v;
  v.reserve(n);
  
  int mx = -1;
  int pos;
  REP(i, n) {
    int temp;
    scanf("%d", &temp);
    deq.push_back(temp);
    if (temp > mx) {
      mx = temp;
      pos = i;
    }
  }
  
  std::vector<int> finalarray;
  finalarray.reserve(n);
  
  int cnt = 0;
  while (true) {
    if (deq.front() == mx) {
      while (!deq.empty()) {
        finalarray.emplace_back(pop_front(deq));
      }
      break;
    }
    
    int a = pop_front(deq);
    int b = pop_front(deq);
    if (a > b) {
      deq.push_front(a);
      deq.push_back(b);
    } else {
      deq.push_front(b);
      deq.push_back(a);
    }
    v.emplace_back(a, b);
    cnt++;
  }

  REP(i, q) {
    LL query;
    std::cin >> query;
    if (query <= cnt) {
      printf("%d %d\n", v[query - 1].first, v[query - 1].second);
    } else {
      query -= cnt + 1;
      query %= n - 1;
      printf("%d %d\n", mx, finalarray[query + 1]);
    }
  }
  return 0;
}