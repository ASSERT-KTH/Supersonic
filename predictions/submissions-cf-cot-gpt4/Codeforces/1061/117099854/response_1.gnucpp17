#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

typedef std::vector<long long> vll;
typedef std::pair<long long, long long> pll;

const long long mod = 1000000007;
const long long N = 1e6 + 15;
const long long inf = 1e18;

void solve() {
  long long n;
  scanf("%lld", &n);
  vll dp(N);
  dp[0] = 1;
  vll divs;
  for (long long i = 1; i <= n; i++) {
    long long x;
    scanf("%lld", &x);
    divs.clear();
    for (long long j = 1; j * j <= x; j++) {
      if (x % j == 0) {
        divs.push_back(j);
        if (j * j != x)
          divs.push_back(x / j);
      }
    }
    sort(divs.rbegin(), divs.rend());
    for (auto x : divs) {
      dp[x] += dp[x - 1];
      dp[x] = std::fmod(dp[x], mod);
    }
  }
  long long ans = 0;
  for (long long i = 1; i <= n; i++)
    ans += dp[i], ans = std::fmod(ans, mod);
  printf("%lld", ans);
}

int main() {
  solve();
  return 0;
}