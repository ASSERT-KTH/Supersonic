#include <iostream>
#include <vector>
#include <algorithm>
const long long int mod = 1000000007;
const int N = 1e6 + 15;

void solve() {
  long long int n;
  std::cin >> n;
  std::vector<long long int> dp(N);
  dp[0] = 1;
  for (long long int i = 1; i <= n; i++) {
    long long int x;
    std::cin >> x;
    std::vector<long long int> divs;
    for (long long int j = 1; j * j <= x; j++) {
      if (x % j == 0) {
        divs.push_back(j);
        if (j * j != x)
          divs.push_back(x / j);
      }
    }
    sort(divs.rbegin(), divs.rend());
    for (auto x : divs) {
      dp[x] += dp[x - 1];
      dp[x] %= mod;
    }
  }
  long long int ans = 0;
  for (auto i : dp) {
    ans += i; 
    ans %= mod;
  }
  std::cout << ans << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int t = 1;
  while (t--) {
    solve();
  }
  return 0;
}