#include <iostream>
#include <vector>
#include <algorithm>
#include <utility>

const long long MOD = 1000000007;
const int N = 1e6 + 15;
const long long inf = 1e18;

void solve() {
  long long n;
  std::cin >> n;
  std::vector<long long> dp(N);
  dp[0] = 1;
  std::vector<long long> divs;
  for (long long i = 1; i <= n; i++) {
    long long x;
    std::cin >> x;
    divs.clear();
    for (long long j = 1; j * j <= x; j++) {
      if (x % j == 0) {
        divs.push_back(j);
        if (j * j != x)
          divs.push_back(x / j);
      }
    }
    std::sort(divs.rbegin(), divs.rend());
    for (auto x : divs) {
      dp[x] += dp[x - 1];
      dp[x] %= MOD;
    }
  }
  long long ans = 0;
  for (long long i = 1; i <= n; ++i)
    ans += dp[i], ans %= MOD;
  std::cout << ans << '\n';
}

int main() {
  std::ios_base::sync_with_stdio(false);                                               
  std::cin.tie(nullptr);                                                                 
  std::cout.tie(nullptr);
  solve();
}