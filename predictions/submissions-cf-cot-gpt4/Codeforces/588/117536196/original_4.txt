This code is already quite optimized for running time and memory usage. However, there are still a few slight improvements that we can make.

Optimization Steps:

1. Instead of using `bits/stdc++.h`, include only the necessary header files. `bits/stdc++.h` includes a lot of unnecessary header files which may increase the compilation time. In this program, we only need `iostream` for input-output operations.

2. Use `std::ios_base::sync_with_stdio(false);` and `std::cin.tie(NULL);`. These two lines can speed up the cin and cout operations.

3. Avoid using `std::endl` in favor of '\n' as `std::endl` causes unnecessary flushing of the buffer which slows down the output.

Here is the optimized code:

```cpp
#include <iostream>
using namespace std;
int main() {
  ios_base::sync_with_stdio(false); 
  cin.tie(NULL);
  int n;
  cin >> n;
  short a, p, m = 101;
  long int sum = 0;
  while (n--) {
    cin >> a >> p;
    m = m > p ? p : m;
    sum += a * m;
  }
  cout << sum << '\n';
  return 0;
}
```

The changes in this optimized code are minor as the initial code was already efficient. The changes primarily aim at speeding up the I/O operations and reducing unnecessary overheads.