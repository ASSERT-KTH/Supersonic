This C++ program is quite optimized. However, we can make a minor change to improve the running time slightly. The improvement is that we can use `std::ios::sync_with_stdio(false);` to decouple the standard C++ streams with their corresponding standard C streams. This can potentially speed up I/O operations.

The `cin.tie(NULL);` line is used to untie `cin` from `cout`, which are tied by default. By default, before each I/O operation on `cin`, `cout` is flushed. If we untie them, this flushing doesn't happen, which can lead to faster I/O.

Here's the optimized code:

```cpp
#include <bits/stdc++.h>
using namespace std;
int main() {
  std::ios::sync_with_stdio(false);
  cin.tie(NULL);
  int n;
  cin >> n;
  short a, p, m = 101;
  long int sum = 0;
  while (n--) {
    cin >> a >> p;
    m = m > p ? p : m;
    sum += a * m;
  }
  cout << sum;
  return 0;
}
```

Please note that this optimization has more noticeable effects on large inputs. Also, `std::ios::sync_with_stdio(false);` and `cin.tie(NULL);` should be used carefully because they can lead to unexpected results in some cases. For example, if you mix C and C++ style I/O in your program.