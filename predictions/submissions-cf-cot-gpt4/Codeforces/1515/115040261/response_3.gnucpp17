#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>

using namespace std;

const int N = 2e5 + 15;
const int MOD = 998244353;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int t;
  cin >> t;

  while (t--) {
    int n, l, r, aux;
    cin >> n >> l >> r;

    unordered_map<int, int> a;
    unordered_map<int, int> b;
    unordered_set<int> color;

    for (int i = 1; i <= n; ++i) {
      cin >> aux;
      if (i <= l) {
        ++a[aux];
      } else {
        ++b[aux];
      }
      color.insert(aux);
    }

    for (int x : color) {
      int elim = min(a[x], b[x]);
      a[x] -= elim;
      l -= elim;
      b[x] -= elim;
      r -= elim;
    }

    if (l < r) {
      swap(l, r);
      swap(a, b);
    }

    int ans = 0;
    for (int x : color) {
      int change = min(a[x] / 2 * 2, l - r);
      ans += change / 2;
      l -= change;
    }

    ans += (l - r) / 2 + (l + r) / 2;
    cout << ans << '\n';

    a.erase(a.begin(), a.end());
    b.erase(b.begin(), b.end());
    color.erase(color.begin(), color.end());
  }

  return 0;
}