#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long
#define fin std::cin
#define sz(x) (int)(x).size()
#define all(v) v.begin(), v.end()
#define output(x) ((int)x && std::cout << "YES\n") || std::cout << "NO\n";
#define LSB(x) ((-x) & x)

const int N = 2e5 + 15;
const int MOD = 998244353;
int t;
int n, l, r, aux;
std::vector<int> a(N), b(N);
std::vector<bool> color(N);

int main() {
  fin >> t;
  while (t--) {
    fin >> n >> l >> r;
    for (int i = 1; i <= n; ++i) {
      fin >> aux;
      if (i <= l) {
        ++a[aux];
      } else {
        ++b[aux];
      }
      color[aux] = true;
    }
    for (int x = 1; x < N; ++x) {
      if (color[x]) {
        int elim = std::min(a[x], b[x]);
        a[x] -= elim;
        l -= elim;
        b[x] -= elim;
        r -= elim;
      }
    }
    if (l < r) {
      std::swap(l, r);
      std::swap(a, b);
    }
    int ans = 0;
    for (int x = 1; x < N; ++x) {
      if (color[x]) {
        int change = std::min(a[x] / 2 * 2, l - r);
        ans += change / 2;
        l -= change;
      }
    }
    ans += (l - r) / 2 + (l + r) / 2;
    std::cout << ans << '\n';
    std::fill(a.begin(), a.end(), 0);
    std::fill(b.begin(), b.end(), 0);
    std::fill(color.begin(), color.end(), false);
  }
  return 0;
}