The provided code is quite compact and uses a lot of bitwise operations to optimize performance. However, it sacrifices readability and maintainability. Therefore, I will focus on improving readability and maintainability while minimizing any performance impact. 

Upon analyzing the code, I have identified several potential optimizations:

1. Replace the use of the `map` data structure with a more efficient data structure, such as an adjacency list or a 2D array, to represent the graph.
2. Remove the use of bitwise operations and replace them with more readable arithmetic operations.
3. Avoid the use of the `bits/stdc++.h` header, which includes unnecessary headers and slows down compilation time.
4. Replace the use of the `main` function with the standard `int main()` declaration.
5. Add appropriate comments to improve code understanding.

Now, let's optimize the code step by step.