#include <iostream>
#include <vector>
#include <map>

int solve(int n, std::vector<int>& ans, const std::vector<int>& a, std::map<int, int>& m) {
  std::vector<bool> check(n + 1, false);
  int c = 0;
  for (int i = 1; i <= n; i++) {
    if (!check[a[i]]) {
      m[a[i]] = i;
      check[a[i]] = true;
      c++;
    }
  }
  int h = 1;
  for (int i = 1; i <= n; i++) {
    if (!check[i]) {
      ans[i] = i;
      h++;
    }
  }
  for (int i = 1; i <= n; i++) {
    if (ans[i] == 0) {
      ans[i] = h++;
    }
  }
  return c;
}

void print(const std::vector<int>& ans, int c) {
  std::cout << c << '\n';
  for (int i = 1; i <= ans.size(); i++) {
    std::cout << ans[i] << ' ';
  }
  std::cout << '\n';
}

int main() {
  int t;
  std::cin >> t;
  while (t--) {
    int n;
    std::cin >> n;
    std::vector<int> a(n + 1);
    for (int i = 1; i <= n; i++) {
      std::cin >> a[i];
    }
    std::vector<int> ans(n + 1);
    std::map<int, int> m;
    solve(n, ans, a, m);
    std::map<int, int> k;
    for (int i = 1; i <= n; i++) {
      k[i] = a[i];
    }
    for (int i = 1; i <= n; i++) {
      if (ans[i] == i) {
        ans[i] = k[i];
        ans[m[a[i]]] = i;
      }
    }
    print(ans, solve(n, ans, a, m));
  }
}