Step 1: Remove unnecessary header files
- The program does not use any functions from the `math.h` and `string.h` header files, so we can remove them.

Step 2: Remove unnecessary variable initializations
- The variables `temp` and `hasil` are unnecessarily initialized to 0. We can remove these initializations since they are assigned values within the loops.

Step 3: Optimize the inner loop
- Instead of reading input `y` three times within the inner loop, we can directly check if `y` is equal to 1 using an `if` statement. This eliminates the need for the `temp` variable.

Step 4: Optimize the outer loop
- Instead of using a nested loop to iterate `n` times, we can simplify the logic by directly checking the input values and incrementing `hasil` accordingly. This eliminates the need for the outer loop.

Step 5: Print `hasil` without a new line
- We can use `cout` without `endl` to print the final value of `hasil` without a new line character.

Optimized code:

```cpp
#include <iostream>
using namespace std;

int main() {
  int n, hasil = 0;
  cin >> n;

  int y;
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < 3; j++) {
      cin >> y;
      if (y == 1) {
        hasil++;
        if (hasil >= 2) {
          break;
        }
      }
    }
  }

  cout << hasil;
  return 0;
}
```