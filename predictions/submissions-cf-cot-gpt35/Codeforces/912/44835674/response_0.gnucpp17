#ifndef DBG
#define NDEBUG
#endif

#include <iostream>
#include <vector>
#include <cassert>
#include <algorithm>

using namespace std;

constexpr int maxN = 16;
int p[maxN];
int n;

bool prime(int x) {
  if (x < 2) return false;
  for (int d = 2; d * d <= x; ++d) {
    if (x % d == 0)
      return false;
  }
  return true;
}

void gen_all(const vector<int>& src, vector<long long>& dest, long long cur = 1, int ind = 0) {
  if (ind == src.size()) {
    dest.push_back(cur);
    return;
  }
  while (cur != -1) {
    gen_all(src, dest, cur, ind + 1);
    if (cur <= LLONG_MAX / src[ind])
      cur *= src[ind];
    else
      cur = -1;
  }
}

long long cnt(long long val, const vector<long long>& A, const vector<long long>& B) {
  int ind = B.size() - 1;
  long long res = 0;
  for (auto e : A) {
    if (e > val)
      break;
    res += upper_bound(B.begin(), B.end(), val / e) - B.begin();
  }
  return res;
}

int main() {
#ifdef MY
  freopen("input.txt", "r", stdin);
#else
#define TASKNAME ""
#endif
  ios_base::sync_with_stdio(false);
  cin.tie(0);

  cin >> n;
  for (int i = 0; i < n; ++i)
    cin >> p[i];

  const int B_sz = 9;
  vector<int> pA;
  for (int i = B_sz; i < n; ++i)
    pA.push_back(p[i]);
  vector<long long> A;
  gen_all(pA, A);

  vector<int> pB;
  for (int i = 0; i < min(B_sz, n); ++i)
    pB.push_back(p[i]);
  vector<long long> B;
  gen_all(pB, B);

  int k;
  cin >> k;

  long long l = 0, r = LLONG_MAX;
  while (l + 1 != r) {
    long long m = (l + r) / 2;
    if (cnt(m, A, B) >= k)
      r = m;
    else
      l = m;
  }

  cout << r;
}