#ifndef DBG
#define NDEBUG
#endif
#include <iostream>
#include <cassert>
#include <vector>
#include <algorithm>
using namespace std;

#define FOR(i, from, to) for (int i = (from); i <= (to); ++i)

using ll = long long;

int main() {
#ifdef MY
  freopen("input.txt", "r", stdin);
#else
#define TASKNAME ""
#endif
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  
  int n;
  cin >> n;
  vector<int> p(n);
  FOR(i, 0, n-1)
    cin >> p[i];
  
  vector<ll> A, B;
  FOR(i, 9, n-1)
    A.push_back(p[i]);
  
  FOR(i, 0, min(9, n)-1)
    B.push_back(p[i]);
  
  ll k;
  cin >> k;
  
  sort(A.begin(), A.end());
  sort(B.begin(), B.end());

  ll l = 0, r = 1e18;
  while (l < r) {
    ll m = (l + r) / 2;
    ll res = 0;
    for (auto e : A) {
      if (e > m)
        break;
      res += upper_bound(B.begin(), B.end(), m / e) - B.begin();
    }
    if (res >= k)
      r = m;
    else
      l = m + 1;
  }
  cout << r;
}