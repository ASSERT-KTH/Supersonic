To optimize the given program, we can make the following modifications:

1. Remove unnecessary header files: The program includes the entire `<bits/stdc++.h>` header file, which is not recommended as it slows down the compilation process. Instead, we can include only the necessary header files, such as `<iostream>` and `<vector>`.

2. Remove unnecessary macros: The program defines macros `vl`, `pb`, `mp`, `all`, and `int` which are not used. We can remove these macros to simplify the code.

3. Avoid unnecessary variable declarations: The program declares variables `i` and `j` which are not used. We can remove these variable declarations to improve readability.

4. Simplify the logic inside the `while` loop: The logic inside the `while` loop can be simplified by removing unnecessary `if` conditions. We can calculate the result directly using simple arithmetic operations.

Here is the optimized code:

```cpp
#include <iostream>
#include <vector>
using namespace std;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int t = 1;
    while (t--) {
        int n, k;
        cin >> n >> k;

        if (n & 1) {
            cout << 2 * k - 1 << endl;
        } else {
            cout << 2 * k - (n / 2) << endl;
        }
    }

    return 0;
}
```