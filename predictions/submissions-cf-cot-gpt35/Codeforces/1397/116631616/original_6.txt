Step 1: Remove unnecessary includes and using statements.
- The program includes unnecessary headers such as `<random>`, `<bits/stdc++.h>`, and `<cmath>`.
- The program also has a using statement for `namespace std` which is generally considered bad practice.

Step 2: Optimize the `print2d` function.
- The `print2d` function is not used in the program and can be removed.

Step 3: Optimize the `debug` function.
- The `debug` function is not used in the program and can be removed.

Step 4: Optimize the `print` and `read` functions.
- The `print` and `read` functions are defined for vectors but are not used in the program. These functions can be removed.

Step 5: Optimize the `checkPrime` function.
- The `checkPrime` function is not used in the program and can be removed.

Step 6: Optimize the `binpow` function.
- The `binpow` function is not used in the program and can be removed.

Step 7: Optimize the `to_int` function.
- The `to_int` function is not used in the program and can be removed.

Step 8: Optimize the `gcd` function.
- The `gcd` function is not used in the program and can be removed.

Step 9: Optimize the `lcm` function.
- The `lcm` function is not used in the program and can be removed.

Step 10: Optimize the `sumofDigits` function.
- The `sumofDigits` function is not used in the program and can be removed.

Step 11: Optimize the `isPalindrome` function.
- The `isPalindrome` function is not used in the program and can be removed.

Step 12: Optimize the `toBinary` function.
- The `toBinary` function is not used in the program and can be removed.

Step 13: Optimize the `toDecimal` function.
- The `toDecimal` function is not used in the program and can be removed.

Step 14: Optimize the `modInverse` function.
- The `modInverse` function is not used in the program and can be removed.

Step 15: Optimize the `NcR` function.
- The `NcR` function is not used in the program and can be removed.

Step 16: Optimize the `seive` function.
- The `seive` function is not used in the program and can be removed.

Step 17: Optimize the `isPowerof2` function.
- The `isPowerof2` function is not used in the program and can be removed.

Step 18: Optimize the `ceil` function.
- The `ceil` function is not used in the program and can be removed.

Step 19: Optimize the `rotateArray` function.
- The `rotateArray` function is not used in the program and can be removed.

Step 20: Optimize the `kadaneAlgo` function.
- The `kadaneAlgo` function is not used in the program and can be removed.

Step 21: Remove unnecessary debug statements.
- The `debug` macro is not used in the program and can be removed.

Step 22: Remove unnecessary comments.
- There are some unnecessary comments in the code that can be removed.

Step 23: Optimize the sorting algorithm.
- The program uses the `sort` function to sort the input array. We can optimize this by using the `nth_element` function instead, which has a lower time complexity.

Step 24: Optimize the loop condition.
- The loop condition in the main loop can be optimized by using `1e5` as the upper limit instead of `1e18`.

Optimized code: