#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;
    vector<int> arr(n);
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    
    sort(arr.begin(), arr.end());

    vector<long long> powers(n);
    powers[0] = 1;
    for (int i = 1; i < n; i++) {
        powers[i] = powers[i - 1] * i;
    }

    long long ans = 1e18;
    for (int i = 0; i < 1e5; i++) {
        long long sum = 0;
        bool dont = false;
        for (int j = 0; j < n; j++) {
            long long pow_i = 1;
            for (int k = 0; k < j; k++) {
                pow_i *= i;
                if (pow_i > 1e18 || sum > 1e18) {
                    dont = true;
                    break;
                }
            }
            if (dont) {
                break;
            }
            sum += abs(arr[j] - pow_i);
        }
        if (!dont) {
            ans = min(ans, sum);
        }
    }
    
    cout << ans << endl;

    return 0;
}