#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;
using ll = long long;

void testcase();

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  testcase();

  return 0;
}

void testcase() {
  int n;
  cin >> n;

  vector<ll> vec(n);
  ll sum = 0;

  for (int i = 0; i < n; i++) {
    cin >> vec[i];
    sum += vec[i];
  }

  sort(vec.begin(), vec.end());

  ll count = 576460752303423487;
  unsigned int counter = (int)pow(vec[n - 1], 1.0 / (n - 1)) + n + 1;

  ll c = 1;
  ll newcount = 0;
  ll xx = 1;

  while (counter--) {
    newcount = 0;

    for (int i = 0; i < n; i++) {
      newcount += abs(xx - vec[i]);
      xx *= c;
      if (newcount > count)
        break;
    }

    count = min(newcount, count);

    if (count == 0)
      break;

    c++;
    xx = pow(c, n - 1);
  }

  count = min(count, min(sum - n, sum));

  printf("%lld\n", count);
}