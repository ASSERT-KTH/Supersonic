#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

using ll = long long;

void testcase();

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  
  int t = 1;
  while (t--) {
    testcase();
  }
  
  return 0;
}

void testcase() {
  int n;
  cin >> n;
  
  vector<ll> vec(n);
  ll sum = 0;
  
  for (int i = 0; i < n; i++) {
    cin >> vec[i];
    sum += vec[i];
  }
  
  sort(vec.begin(), vec.end());
  
  ll count = 576460752303423487;
  ll counter = 1;
  
  ll low = 1, high = vec[n - 1];
  
  while (low <= high) {
    ll mid = low + (high - low) / 2;
    ll newcount = 0;
    ll xx = 1;
    
    for (int i = 0; i < n; i++) {
      newcount += abs(xx - vec[i]);
      xx *= mid;
      if (newcount > count)
        break;
    }
    
    if (newcount < count)
      count = newcount;
    
    if (newcount == 0)
      break;
    
    if (newcount <= sum - n)
      low = mid + 1;
    else
      high = mid - 1;
  }
  
  if (sum - n < count) {
    count = n;
  }
  
  if (sum < count) {
    count = sum;
  }
  
  cout << count << endl;
}