#include <iostream>
#include <vector>
#include <cmath>
using namespace std;
using ll = long long;
const unsigned int MOD = 1000000007;
const ll INF = 1e18;

void testcase();

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  
  int t = 1;
  while (t > 0) {
    testcase();
    t--;
  }
  
  return 0;
}

void testcase() {
  int n;
  cin >> n;
  
  vector<ll> vec(n);
  ll sum = 0;
  
  for (int i = 0; i < n; i++) {
    cin >> vec[i];
    sum += vec[i];
  }
  
  ll c = 1;
  ll newcount = 0;
  ll count = 576460752303423487;
  
  unsigned int counter = vec[n - 1] + n;
  counter++;
  
  while (count > 0) {
    newcount = 0;
    ll xx = 1;
    
    for (int i = 0; i < n && newcount <= count; i++, xx *= c) {
      newcount += abs(xx - vec[i]);
    }
    
    if (newcount < count)
      count = newcount;
    
    if (count == 0)
      break;
    
    c++;
  }
  
  count = min(count, min(sum - n, sum));
  
  cout.tie(nullptr);
  cout << count << endl;
}