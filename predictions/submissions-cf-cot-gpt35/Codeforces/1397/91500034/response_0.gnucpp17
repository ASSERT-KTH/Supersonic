#include <iostream>
#include <algorithm>
#include <numeric>
#include <cmath>

using namespace std;

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int n;
  cin >> n;

  int a[n];
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }

  sort(a, a + n);

  int ans = accumulate(a, a + n, 0);
  int powers[n];
  powers[0] = 1;

  for (int i = 1; i < n; i++) {
    powers[i] = powers[i - 1] * c;
  }

  int left = 1;
  int right = *max_element(a, a + n);
  int best_c = 0;

  while (left <= right) {
    int mid = left + (right - left) / 2;
    int sum = 0;

    for (int i = 0; i < n; i++) {
      sum += abs(powers[i] - a[i]);
      if (sum >= ans) {
        break;
      }
    }

    if (sum < ans) {
      ans = sum;
      best_c = mid;
      left = mid + 1;
    } else {
      right = mid - 1;
    }
  }

  cout << ans << endl;

  return 0;
}