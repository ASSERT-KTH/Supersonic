#include <iostream>
#include <vector>
using namespace std;

typedef long long LL;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    LL n, m;
    cin >> n >> m;

    vector<vector<bool>> a(n + 1, vector<bool>(m + 1));
    for (LL i = 1; i <= n; i++) {
        for (LL j = 1; j <= m; j++) {
            char c;
            cin >> c;
            a[i][j] = (c == '.');
        }
    }

    vector<vector<LL>> ng(n + 1, vector<LL>(m + 1));
    vector<vector<LL>> dc(n + 1, vector<LL>(m + 1));

    for (LL i = 1; i <= n; i++) {
        for (LL j = 1; j <= m; j++) {
            ng[i][j] = ng[i][j - 1] + a[i][j - 1];
            dc[i][j] = dc[i - 1][j] + a[i - 1][j];
        }
    }

    LL q;
    cin >> q;
    while (q--) {
        LL t, x, b, y, res = 0;
        cin >> t >> x >> b >> y;
        for (LL i = t; i <= b; i++) {
            res += ng[i][y] - ng[i][x - 1];
            if (a[i][x] && a[i][x - 1])
                res--;
        }
        for (LL i = x; i <= y; i++) {
            res += dc[b][i] - dc[t - 1][i];
            if (a[t][i] && a[t - 1][i])
                res--;
        }
        cout << res << endl;
    }

    return 0;
}