#include <iostream>
#include <unordered_map>
#include <unordered_set>

using namespace std;

const int N = 2e5 + 15;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int t;
  cin >> t;

  while (t--) {
    int n, l, r, aux;
    unordered_map<int, int> a;
    unordered_map<int, int> b;
    unordered_set<int> color;

    cin >> n >> l >> r;

    for (int i = 1; i <= n; ++i) {
      cin >> aux;
      if (i <= l) {
        a.insert({aux, a[aux] + 1});
      } else {
        b.insert({aux, b[aux] + 1});
      }
      color.insert(aux);
    }

    int ans = 0;
    int diff = l - r;
    int numColors = color.size();

    for (auto it = color.begin(); it != color.end(); ++it) {
      int x = *it;
      int elim = min(a[x], b[x]);
      a[x] -= elim;
      b[x] -= elim;
      diff -= elim;
      numColors -= (a[x] == 0 && b[x] == 0);

      int change = min(a[x] / 2 * 2, diff);
      ans += change / 2;
      diff -= change;
    }

    ans += diff / 2 + (l + r) / 2;
    cout << ans << '\n';
  }

  return 0;
}