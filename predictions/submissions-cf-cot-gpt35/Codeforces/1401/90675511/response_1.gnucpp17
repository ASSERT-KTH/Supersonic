#include <iostream>
#include <vector>
#include <algorithm>

int main() {
    std::ios_base::sync_with_stdio(false);

    int t;
    std::cin >> t;
    while (t--) {
        int n;
        std::cin >> n;
        std::vector<int> a(n);

        int m = INT_MAX;
        for (int i = 0; i < n; i++) {
            std::cin >> a[i];
            if (a[i] < m)
                m = a[i];
        }

        std::vector<std::pair<int, int>> pairs;
        for (int i = 0; i < n; i++) {
            if (a[i] % m == 0)
                pairs.push_back(std::make_pair(i, a[i]));
        }

        std::partial_sort(pairs.begin(), pairs.begin() + pairs.size(), pairs.end(),
                          [](const std::pair<int, int>& p1, const std::pair<int, int>& p2) {
                              return p1.second < p2.second;
                          });

        for (int i = 0; i < pairs.size(); i++)
            a[pairs[i].first] = pairs[i].second;

        if (std::is_sorted(a.begin(), a.end()))
            std::cout << "YES\n";
        else
            std::cout << "NO\n";
    }

    return 0;
}