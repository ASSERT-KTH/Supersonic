#include <iostream>
#include <vector>
#include <deque>
using namespace std;

int pop_front(deque<int>& d) {
  int a = d.front();
  d.pop_front();
  return a;
}

int main() {
  int n, q;
  cin >> n >> q;

  deque<int> deq;
  vector<pair<int, int>> v;
  
  REP(i, n) {
    int temp;
    cin >> temp;
    deq.push_back(temp);
    if (deq[i] > deq[pos]) {
      pos = i;
    }
  }
  
  vector<int> finalarray;
  
  while (true) {
    if (deq.front() == deq[pos]) {
      while (!deq.empty()) {
        finalarray.push_back(pop_front(deq));
      }
      break;
    }
    int a = pop_front(deq);
    int b = pop_front(deq);
    if (a > b) {
      deq.push_front(a);
      deq.push_back(b);
    } else {
      deq.push_front(b);
      deq.push_back(a);
    }
    v.push_back(make_pair(a, b));
  }
  
  REP(i, q) {
    LL query;
    cin >> query;
    if (query <= v.size()) {
      cout << v[query - 1].first << " " << v[query - 1].second << endl;
    } else {
      query %= n;
      cout << deq[pos] << " " << finalarray[query] << endl;
    }
  }
  
  return 0;
}