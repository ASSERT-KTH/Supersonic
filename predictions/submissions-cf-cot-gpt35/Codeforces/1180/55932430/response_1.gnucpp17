#include <iostream>
#include <deque>
#include <vector>
#include <utility>

int pop_front(std::deque<int>& d) {
  int a = d.front();
  d.pop_front();
  return a;
}

int main() {
  int n, q;
  std::cin >> n >> q;
  std::deque<int> deq;
  int mx = -1;
  int pos;
  for (int i = 0; i < n; ++i) {
    int temp;
    std::cin >> temp;
    deq.push_back(temp);
    if (temp > mx) {
      mx = temp;
      pos = i;
    }
  }
  int cnt = 0;
  while (true) {
    if (deq.front() == mx) {
      while (!deq.empty()) {
        std::cout << pop_front(deq) << ' ';
      }
      break;
    }
    int a = pop_front(deq);
    int b = pop_front(deq);
    if (a > b) {
      deq.push_front(a);
      deq.push_back(b);
    } else {
      deq.push_front(b);
      deq.push_back(a);
    }
    cnt++;
  }
  for (int i = 0; i < q; ++i) {
    long long query;
    std::cin >> query;
    if (query <= cnt) {
      for (int j = 0; j < query; ++j) {
        std::cout << v[j].first << ' ' << v[j].second << '\n';
      }
    } else {
      query -= cnt + 1;
      query %= n - 1;
      std::cout << mx << ' ' << finalarray[query + 1] << '\n';
    }
  }
  return 0;
}