#include <iostream>
#include <deque>
#include <vector>
#include <algorithm>

using namespace std;

int& pop_front(deque<int>& d) {
    return d.front();
}

int main() {
    int n, q;
    cin >> n >> q;
    
    deque<int> deq;
    vector<pair<int, int>> v;
    
    int mx = -1;
    int pos;
    
    for (int i = 0; i < n; ++i) {
        int temp;
        cin >> temp;
        deq.push_back(temp);
        
        if (temp > mx) {
            mx = temp;
            pos = i;
        }
    }
    
    int cnt = 0;
    
    while (true) {
        if (deq.front() == mx) {
            break;
        }
        
        int& a = pop_front(deq);
        int& b = pop_front(deq);
        
        if (a > b) {
            deq.push_front(a);
            deq.push_back(b);
        } else {
            deq.push_front(b);
            deq.push_back(a);
        }
        
        v.push_back(make_pair(a, b));
        cnt++;
    }
    
    for (int i = 0; i < q; ++i) {
        int query;
        cin >> query;
        
        if (query <= cnt) {
            printf("%d %d\n", v[query - 1].first, v[query - 1].second);
        } else {
            query = (query - cnt - 1) % (n - 1);
            printf("%d %d\n", mx, deq[query + 1]);
        }
    }
    
    return 0;
}