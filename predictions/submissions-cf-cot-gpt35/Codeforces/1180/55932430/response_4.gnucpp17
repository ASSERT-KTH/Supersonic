#include <iostream>
#include <deque>
#include <vector>

using namespace std;

int pop_front(deque<int> &d) {
  int a = d.front();
  d.pop_front();
  return a;
}

int main() {
  int n, q;
  cin >> n >> q;

  deque<int> deq;
  vector<int> finalarray;
  vector<pair<int, int>> v;
  int mx = -1;
  int pos;

  for (int i = 0; i < n; ++i) {
    int temp;
    cin >> temp;
    deq.push_back(temp);
    if (temp > mx) {
      mx = temp;
      pos = i;
    }
  }

  int cnt = 0;

  while (true) {
    if (deq.front() == mx) {
      while (!deq.empty()) {
        finalarray.push_back(pop_front(deq));
      }
      break;
    }

    int a = pop_front(deq);
    int b = pop_front(deq);

    if (a > b) {
      deq.push_front(a);
      deq.push_back(b);
    } else {
      deq.push_front(b);
      deq.push_back(a);
    }

    v.emplace_back(a, b);
    cnt++;
  }

  for (int i = 0; i < q; ++i) {
    int query;
    cin >> query;

    if (query <= cnt) {
      cout << v[query - 1].first << " " << v[query - 1].second << endl;
    } else {
      query -= cnt + 1;
      query %= n - 1;
      cout << mx << " " << finalarray[query + 1] << endl;
    }
  }

  return 0;
}