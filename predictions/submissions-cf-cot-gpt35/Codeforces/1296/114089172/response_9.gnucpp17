#include <iostream>
#include <unordered_map>
using namespace std;

const int INF = 1e9;

void run_case() {
  int n;
  cin >> n;
  string s;
  cin >> s;
  unordered_map<long long, int> mp;
  long long sum = 0;
  mp[0] = 1;
  int l = 0, r = 0;
  int ans = INF;
  for (int i = 0; i < n; i++) {
    switch (s[i]) {
      case 'L':
        sum += INF;
        break;
      case 'R':
        sum -= INF;
        break;
      case 'U':
        sum += 7;
        break;
      case 'D':
        sum -= 7;
        break;
    }
    if (mp.count(sum)) {
      int left = mp[sum];
      int right = i + 1;
      if (right - left + 1 < ans) {
        ans = right - left + 1;
        l = left;
        r = right;
      }
    }
    mp[sum] = i + 2;
  }
  if (ans == INF) {
    cout << "-1\n";
  } else {
    cout << l << " " << r << "\n";
  }
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  int tc = 1;
  cin >> tc;
  while (tc--) {
    run_case();
  }
  return 0;
}