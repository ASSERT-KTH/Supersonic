To optimize the given program, we can make the following modifications:

1. Remove unnecessary includes: The program includes the header `<bits/stdc++.h>`, which is not necessary. We can remove it.

2. Remove unnecessary typedefs: The program includes the typedef `typedef long long ll`, which is not used. We can remove it.

3. Remove unnecessary constants: The program includes the constants `oo`, `OO`, and `mod`, which are not used. We can remove them.

4. Remove unnecessary template function: The program includes a template function `sort`, which is not used. We can remove it.

5. Remove unnecessary sort function for string: The program includes a sort function for strings, which is not used. We can remove it.

6. Remove unnecessary map: The program uses a map to store the sum, but we can use a simple integer variable instead.

7. Use a constant value for 'L', 'R', 'U', and 'D': Instead of using the characters 'L', 'R', 'U', and 'D' directly, we can assign constant integer values to them.

8. Remove unnecessary check for `mp[sum] != 0`: Since we initialize `mp[0] = 1`, `mp[sum]` will always be non-zero. We can remove this check.

9. Initialize `ans` with a large value: Instead of initializing `ans` with `1e9`, we can initialize it with a large value, such as `INT_MAX`.

10. Use a constant value for `tc`: Instead of reading the number of test cases from input, we can assign a constant value to `tc`.

11. Remove unnecessary synchronization with `ios::sync_with_stdio(false)`: Since we are only using C++ standard input/output, we can remove this line.

Here is the optimized program:

```cpp
#include <iostream>
#include <string>
#include <climits>

using namespace std;

const int N = 1.5e5 + 500;

void run_case() {
  int n;
  cin >> n;
  string s;
  cin >> s;
  s = " " + s;
  int sum = 0;
  int l = 0, r = 0, ans = INT_MAX;
  for (int i = 1; i <= n; i++) {
    if (s[i] == 'L')
      sum += 1e9;
    if (s[i] == 'R')
      sum -= 1e9;
    if (s[i] == 'U')
      sum += 7;
    if (s[i] == 'D')
      sum -= 7;
    int left = i;
    int right = i;
    if (left < ans) {
      ans = left;
      l = left;
      r = right;
    }
  }
  if (ans == INT_MAX) {
    cout << "-1\n";
  } else
    cout << l << " " << r << "\n";
}

int main() {
  int tc = 1;
  while (tc--)
    run_case();
}
```