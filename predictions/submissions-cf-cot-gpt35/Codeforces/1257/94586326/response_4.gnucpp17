#include <iostream>
#include <map>
#include <vector>

void solve() {
  int n;
  std::cin >> n;
  std::map<int, std::vector<int>> m;
  m.reserve(n);
  
  int val;
  for (int i = 0; i < n; i++) {
    std::cin >> val;
    m[val].push_back(i + 1);
  }

  int minres = INT_MAX;
  for (const auto& x : m) {
    const std::vector<int>& v = x.second;
    if (v.size() > 1) {
      for (int i = 1; i < v.size(); i++) {
        minres = std::min(minres, v[i] - v[i - 1] + 1);
      }
    }
  }

  if (minres == INT_MAX) {
    std::cout << -1 << std::endl;
  } else {
    std::cout << minres << std::endl;
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  
  int t;
  std::cin >> t;
  
  while (t--) {
    solve();
  }

  return 0;
}