#include <iostream>
#include <map>
#include <vector>

void solve() {
  int n;
  scanf("%d", &n);
  std::map<int, std::vector<int>> m;
  for (int i = 0; i < n; i++) {
    int val;
    scanf("%d", &val);
    m[val].push_back(i + 1);
  }
  int minres = n + 1;
  for (const auto& x : m) {
    const std::vector<int>& v = x.second;
    if (v.size() > 1) {
      for (size_t i = 1; i < v.size(); i++) {
        if ((v[i] - v[i - 1]) > 0) {
          minres = std::min(minres, v[i] - v[i - 1] + 1);
        }
      }
    }
  }
  if (minres == n + 1) {
    printf("-1\n");
  } else {
    printf("%d\n", minres);
  }
}

int main() {
  int t;
  scanf("%d", &t);
  while (t--) {
    solve();
  }
  return 0;
}