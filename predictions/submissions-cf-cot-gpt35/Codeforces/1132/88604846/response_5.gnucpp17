#include <iostream>
const int N = 200 * 1000 + 13;
const int INF = 1e9;
int n, k;
int a[N];
int b[N];
int qr[N][N];
bool check(int x) {
  int cur = 0;
  for (int i = 0; i < n; i++) {
    int t = (a[i] + b[i] - 1) / b[i];
    cur += t;
    if (cur > k) return false;
    if (cur == k) return true;
    qr[t][cur] = i;
  }
  int lst = 0;
  for (int t = 0; t < k; t++) {
    while (lst < k && qr[t][lst] == 0) {
      lst++;
    }
    if (lst <= t) return false;
    if (lst == k) return true;
    int i = qr[t][lst];
    a[i] -= b[i] * (k - t);
    qr[t + 1][lst] = i;
  }
  return true;
}
int main() {
  std::cin >> n >> k;
  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
  }
  for (int i = 0; i < n; i++) {
    std::cin >> b[i];
  }
  int l = 0, r = INF;
  while (l < r - 1) {
    int m = (l + r) / 2;
    if (check(m)) {
      r = m;
    } else {
      l = m;
    }
  }
  if (!check(r)) {
    std::cout << -1 << std::endl;
  } else {
    std::cout << (check(l) ? l : r) << std::endl;
  }
  return 0;
}