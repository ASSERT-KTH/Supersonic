#include <iostream>
#include <algorithm>
#include <cmath>
using namespace std;

typedef long long int ll;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int tc;
    cin >> tc;
    while (tc--) {
        int n;
        cin >> n;
        pair<ll, ll> ab[n];
        for (int i = 0; i < n; i++) {
            cin >> ab[i].first;
        }
        for (int i = 0; i < n; i++) {
            cin >> ab[i].second;
        }
        ll ma = ab[0].first, mo = ab[0].second;
        for (int i = 1; i < n; i++) {
            ma = min(ma, ab[i].first);
            mo = min(mo, ab[i].second);
        }
        ll ans = 0;
        for (int i = 0; i < n; i++) {
            ll diff_a = ab[i].first - ma;
            ll diff_b = ab[i].second - mo;
            if (diff_a > 0 && diff_b > 0) {
                ll x = min(diff_a, diff_b);
                ab[i].first -= x;
                ab[i].second -= x;
                ans += x;
            }
            ans += max(diff_a, diff_b);
        }
        cout << ans << "\n";
    }
    return 0;
}