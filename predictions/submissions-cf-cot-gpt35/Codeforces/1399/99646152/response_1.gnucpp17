#include <iostream>
#include <algorithm>
using namespace std;

typedef long long int ll;

ll binpow(ll a, ll b) {
  ll res = 1;
  while (b > 0) {
    if (b & 1)
      res *= a;
    a *= a;
    b >>= 1;
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int tc;
  cin >> tc;

  while (tc--) {
    int n;
    cin >> n;
    ll a[n], b[n];

    for (int i = 0; i < n; i++) cin >> a[i];
    for (int i = 0; i < n; i++) cin >> b[i];

    ll ma = *min_element(a, a + n);
    ll mo = *min_element(b, b + n);

    ll ans = 0;

    for (int i = 0; i < n; i++) {
      if (a[i] > ma && b[i] > mo) {
        int x = min(a[i] - ma, b[i] - mo);
        a[i] -= x;
        b[i] -= x;
        ans += x;
      }
      if (a[i] > ma)
        ans += a[i] - ma;
      else if (b[i] > mo)
        ans += b[i] - mo;
    }

    cout << ans << "\n";
  }

  return 0;
}