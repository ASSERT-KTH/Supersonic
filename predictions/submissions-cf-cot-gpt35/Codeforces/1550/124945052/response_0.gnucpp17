#include <iostream>
#include <vector>
using namespace std;

typedef long long ll;

void solve() {
  ll n;
  cin >> n;
  vector<ll> ans;
  vector<bool> mark(5001, false);
  ans.push_back(1);
  n--;
  mark[1] = true;
  ll lastPush = 1;
  
  // Calculate the number of iterations required
  ll iterations = min(n / 2, lastPush + 1);
  for (int i = 0; i < iterations; i++) {
    lastPush += 2;
    ans.push_back(lastPush);
    mark[lastPush] = true;
    n -= lastPush;
  }
  
  // Check if there is a remaining value of n
  if (n > 0 && !mark[n]) {
    ans.push_back(n);
  }
  
  cout << ans.size() << "\n";
}

int main() {
  int t;
  cin >> t;
  while (t-- > 0) {
    solve();
  }
  return 0;
}