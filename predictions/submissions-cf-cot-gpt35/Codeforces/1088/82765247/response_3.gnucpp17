#include <iostream>
#include <vector>
#include <utility>

using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    vector<int> v;
    vector<pair<int, pair<int, int>>> pp;
    int n;
    cin >> n;
    v.resize(n + 1);
    for (int i = 1; i <= n; ++i) {
        cin >> v[i];
    }
    v[0] = -1;
    for (int i = n; i >= 1; --i) {
        if (v[i] > i) {
            int rem = (v[i] - i) & -i;
            pp.emplace_back(1, make_pair(i, n + 1 - rem));
            int val = n + 1 - rem;
            for (int j = 1; j <= i; ++j) {
                v[j] += val;
            }
        } else {
            pp.emplace_back(1, make_pair(i, i - v[i]));
            int val = i - v[i];
            for (int j = 1; j <= i; ++j) {
                v[j] += val;
            }
        }
    }
    pp.emplace_back(2, make_pair(n, n + 1));
    cout << pp.size() << "\n";
    for (const auto& i : pp) {
        cout << i.first << " " << i.second.first << " " << i.second.second << "\n";
    }
    return 0;
}