#include <iostream>
#include <vector>
#include <utility>

int main() {
    int n;
    std::cin >> n;
    std::vector<int> v(n);
    std::vector<std::pair<int, std::pair<int, int>>> pp;
    
    for (int i = 0; i < n; i++) {
        std::cin >> v[i];
    }
    
    for (int i = 0; i < n; i++) {
        if (v[i] > i + 1) {
            int rem = (v[i] - (i + 1)) % (n + 1);
            pp.push_back({1, {i + 1, n + 1 - rem}});
            std::transform(v.begin(), v.begin() + (i + 1), v.begin(), [rem, n](int x) {
                return x + n + 1 - rem;
            });
        } else {
            pp.push_back({1, {i + 1, i + 1 - v[i]}});
            std::transform(v.begin(), v.begin() + (i + 1), v.begin(), [i, v](int x) {
                return x + i + 1 - v[i];
            });
        }
    }
    
    pp.push_back({2, {n, n + 1}});
    
    std::cout << pp.size() << "\n";
    for (auto i : pp) {
        std::cout << i.first << " " << i.second.first << " " << i.second.second << "\n";
    }
    
    return 0;
}