#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

void solve();

int main() {
    solve();
    return 0;
}

void solve() {
    int n;
    std::cin >> n;
    std::vector<long long int> arr(n);
    for (int i = 0; i < n; i++) {
        std::cin >> arr[i];
        arr[i] -= i;
        if (arr[i] <= 0) {
            std::cout << i + 1 << std::endl;
            return;
        }
        arr[i] = std::ceil(static_cast<double>(arr[i]) / n);
    }
    auto minElement = std::min_element(arr.begin(), arr.end());
    int mni = std::distance(arr.begin(), minElement);
    std::cout << mni + 1 << std::endl;
}