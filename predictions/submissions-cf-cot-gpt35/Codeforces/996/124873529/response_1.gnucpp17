#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

int fun(int m, int n) {
  static vector<vector<int>> memo(m + 1, vector<int>(n + 1, -1));
  if (n == 1)
    return 1;
  if (n > m)
    return 0;
  if (memo[m][n] != -1)
    return memo[m][n];
  memo[m][n] = fun(m - 1, n) + fun(m / 2, n - 1);
  return memo[m][n];
}

void solve() {
  int n;
  cin >> n;
  vector<long long> arr(n);
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
    arr[i] -= i;
    if (arr[i] <= 0) {
      cout << i + 1 << endl;
      return;
    }
    arr[i] = (arr[i] + n - 1) / n;
  }
  auto it = min_element(arr.begin(), arr.end());
  cout << distance(arr.begin(), it) + 1 << endl;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  solve();
  return 0;
}