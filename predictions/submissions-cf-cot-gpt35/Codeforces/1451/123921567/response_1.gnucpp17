#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

#define int long long

int m, p;
int cnt = 0;

bool check(int x, const vector<bool>& b) {
  cout << x << '\n';
  cout.flush();
  cin >> x;
  if (x == 0)
    return false;
  return (x == -1) ^ b[(cnt++) % p];
}

signed main() {
  ios::sync_with_stdio(false);
  int n;
  cin >> n;
  int x[n] = {0}, ans[n] = {0};
  vector<pair<int, int>> v(n, {0, 0});
  
  for (int i = 2; i <= n; i++) {
    cout << "XOR " << 1 << " " << i << "\n";
    cout.flush();
    cin >> x[i - 1];
    v[i - 1] = {x[i - 1], i - 1};
  }
  
  stable_sort(v.begin(), v.end());
  
  int index1, index2;
  for (int i = 0; i < n - 1; i++) {
    if (v[i].first == v[i + 1].first) {
      index1 = v[i].second;
      index2 = v[i + 1].second;
      break;
    }
  }
  
  if (index1) {
    cout << "AND " << index1 + 1 << " " << index2 + 1 << "\n";
    cout.flush();
    int a;
    cin >> a;
    ans[0] = a ^ x[index1];
    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }
    cout << "! ";
    for (int i = 0; i < n; i++) {
      cout << ans[i] << ' ';
    }
    cout << '\n';
    cout.flush();
  } else {
    cout << "AND " << 1 << " " << v[1].second + 1 << "\n";
    cout.flush();
    int a;
    cin >> a;
    ans[0] = a;
    cout << "AND " << 1 << " " << v[n - 2].second + 1 << "\n";
    cout.flush();
    cin >> a;
    ans[0] |= a;
    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }
    cout << "! ";
    for (int i = 0; i < n; i++) {
      cout << ans[i] << ' ';
    }
    cout << '\n';
    cout.flush();
  }
  
  return 0;
}