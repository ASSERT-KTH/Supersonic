#include <cstdio>
#include <vector>
#include <algorithm>

int main() {
  int n;
  scanf("%d", &n);
  std::vector<int> x(n, 0), ans(n, 0);
  std::vector<std::pair<int, int>> v(n, {0, 0});
  
  for (int i = 2; i <= n; i++) {
    printf("XOR 1 %d\n", i);
    fflush(stdout);
    scanf("%d", &x[i - 1]);
    v[i - 1] = {x[i - 1], i - 1};
  }
  
  std::sort(v.begin(), v.end());
  
  bool b = false;
  int index1, index2;
  
  for (int i = 0; i < n - 1; i++) {
    if (v[i].first == v[i + 1].first) {
      b = true;
      index1 = v[i].second;
      index2 = v[i + 1].second;
      break;
    }
  }
  
  if (b) {
    printf("AND %d %d\n", index1 + 1, index2 + 1);
    fflush(stdout);
    int a;
    scanf("%d", &a);
    ans[0] = a ^ x[index1];
    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }
    printf("! ");
    for (int i = 0; i < n; i++) {
      printf("%d ", ans[i]);
    }
    printf("\n");
    fflush(stdout);
  } else {
    printf("AND 1 %d\n", v[1].second + 1);
    fflush(stdout);
    int a;
    scanf("%d", &a);
    ans[0] = a;
    printf("AND 1 %d\n", v[n - 2].second + 1);
    fflush(stdout);
    scanf("%d", &a);
    ans[0] |= a;
    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }
    printf("! ");
    for (int i = 0; i < n; i++) {
      printf("%d ", ans[i]);
    }
    printf("\n");
    fflush(stdout);
  }

  return 0;
}