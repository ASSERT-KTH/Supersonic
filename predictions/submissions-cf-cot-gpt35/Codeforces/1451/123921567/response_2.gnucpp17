#include <algorithm>
#include <iostream>
#include <vector>

const int inf = 1e9 + 7;

int main() {
  std::cin.tie(0);
  std::cout.tie(0);
  std::ios::ios_base::sync_with_stdio(false);

  int n;
  std::cin >> n;

  std::vector<int> x(n, 0), ans(n, 0);
  std::vector<std::pair<int, int>> v(n, {0, 0});

  for (int i = 2; i <= n; i++) {
    std::cout << "XOR 1 " << i << "\n";
    std::cin >> x[i - 1];
    v[i - 1] = {x[i - 1], i - 1};
  }

  std::stable_sort(v.begin(), v.end());

  bool b = false;
  int index1, index2;

  for (int i = 0; i < n - 1; i++) {
    if (v[i].first == v[i + 1].first) {
      b = true;
      index1 = v[i].second;
      index2 = v[i + 1].second;
      break;
    }
  }

  if (b) {
    std::cout << "AND " << index1 + 1 << " " << index2 + 1 << "\n";
    int a;
    std::cin >> a;
    ans[0] = a ^ x[index1];

    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }

    std::cout << "! ";
    for (int i = 0; i < n; i++) {
      std::cout << ans[i] << ' ';
    }
    std::cout << "\n" << std::flush;
  } else {
    std::cout << "AND 1 " << v[1].second + 1 << "\n";
    int a;
    std::cin >> a;
    ans[0] = a;

    std::cout << "AND 1 " << v[n - 2].second + 1 << "\n";
    std::cin >> a;
    ans[0] |= a;

    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }

    std::cout << "! ";
    for (int i = 0; i < n; i++) {
      std::cout << ans[i] << ' ';
    }
    std::cout << "\n" << std::flush;
  }

  return 0;
}