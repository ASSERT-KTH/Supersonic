#include <cstdio>
#include <iostream>
#include <map>
#include <vector>

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    int n;
    std::scanf("%d", &n);
    std::vector<int> x(n, 0), ans(n, 0);
    std::map<int, int> xor_map;

    for (int i = 2; i <= n; i++) {
        std::printf("XOR 1 %d\n", i);
        std::fflush(stdout);
        std::scanf("%d", &x[i - 1]);
        xor_map[x[i - 1]] = i - 1;
    }

    int index1, index2;
    bool found = false;

    for (const auto& it : xor_map) {
        if (xor_map.count(it.first) > 1) {
            found = true;
            index1 = xor_map[it.first];
            index2 = it.second;
            break;
        }
    }

    if (found) {
        std::printf("AND %d %d\n", index1 + 1, index2 + 1);
        std::fflush(stdout);
        int a;
        std::scanf("%d", &a);
        ans[0] = a ^ x[index1];
        for (int i = 1; i < n; i++) {
            ans[i] = ans[0] ^ x[i];
        }
    } else {
        std::printf("AND 1 %d\n", xor_map.begin()->second + 1);
        std::fflush(stdout);
        int a;
        std::scanf("%d", &a);
        ans[0] = a;
        std::printf("AND 1 %d\n", xor_map.rbegin()->second + 1);
        std::fflush(stdout);
        std::scanf("%d", &a);
        ans[0] |= a;
        for (int i = 1; i < n; i++) {
            ans[i] = ans[0] ^ x[i];
        }
    }

    std::printf("! ");
    for (int i = 0; i < n; i++) {
        std::printf("%d ", ans[i]);
    }
    std::printf("\n");
    std::fflush(stdout);

    return 0;
}