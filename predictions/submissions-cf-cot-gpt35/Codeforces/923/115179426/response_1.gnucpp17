#include <iostream>
#include <vector>
#include <algorithm>
#include <array>
using namespace std;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  const int mxn = 32 * 3e5;
  array<array<int, 2>, mxn> tr;
  int n;
  cin >> n;
  vector<int> a;
  a.reserve(n);
  for (int i = 0; i < n; ++i) {
    int num;
    cin >> num;
    a.push_back(num);
  }
  array<int, mxn> cnt;
  int tot = 1;
  auto ins = [&](int x) {
    int p = 1;
    ++cnt[p];
    for (int i = 30; i >= 0; --i) {
      int b = (x & (1 << i)) != 0;
      if (!tr[p][b]) {
        tr[p][b] = ++tot;
      }
      p = tr[p][b];
      ++cnt[p];
    }
    ++cnt[p];
  };
  auto qry = [&](int x) {
    int p = 1;
    --cnt[p];
    int res = 0;
    for (int i = 30; i >= 0; --i) {
      int b = (x & (1 << i)) != 0;
      if (cnt[tr[p][b]] > 0) {
        p = tr[p][b];
      } else {
        p = tr[p][!b];
        res += (1 << i);
      }
      --cnt[p];
    }
    --cnt[p];
    return res;
  };
  for (int i = 0; i < n; ++i) {
    int b;
    cin >> b;
    ins(b);
  }
  for (int i = 0; i < n; ++i) {
    cout << qry(a[i]) << ' ';
  }
  cout << '\n';
  return 0;
}