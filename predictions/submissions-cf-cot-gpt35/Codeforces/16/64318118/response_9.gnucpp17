#include <iostream>
#include <vector>
#include <iomanip>

#define N 200005

typedef long long ll;

inline void solve() {
  int n;
  std::cin >> n;

  std::vector<double> m(N * N, 0);
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      std::cin >> m[i * N + j];
    }
  }

  std::vector<double> dp(1 << n, 0);
  dp[(1 << n) - 1] = 1;

  for (int i = (1 << n) - 1; i >= 0; i--) {
    for (int j = 0; j < n; j++) {
      for (int k = j + 1; k < n; k++) {
        if (((i >> j) & 1) && ((i >> k) & 1)) {
          int ruby = 0;

          for (int g = 0; g < n; g++) {
            if (((i >> g) & 1))
              ruby++;
          }

          int a = i & ~(1 << j);
          int b = i & ~(1 << k);

          dp[b] += 2 * dp[i] / (ruby * (ruby - 1)) * m[j * N + k];
          dp[a] += 2 * dp[i] / (ruby * (ruby - 1)) * m[k * N + j];
        }
      }
    }
  }

  for (int i = 0; i < n; i++) {
    std::cout << std::fixed << std::setprecision(20) << dp[1 << i] << ' ';
  }
}

int main() {
  solve();
  return 0;
}