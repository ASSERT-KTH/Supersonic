#include <iostream>
#include <vector>
#include <iomanip>

#define N 200005

typedef long long ll;

void solve() {
    int n;
    std::cin >> n;
    std::vector<std::vector<double>> m(n, std::vector<double>(n, 0));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            std::cin >> m[i][j];
        }
    }
    double dp[1 << N];
    dp[(1 << n) - 1] = 1;
    for (int i = (1 << n) - 1; i >= 0; i--) {
        for (int j = 0; j < n; j++) {
            for (int k = j + 1; k < n; k++) {
                int bitmask = (1 << j) | (1 << k);
                if ((i & bitmask) == bitmask) {
                    int a = 0, b = 0;
                    int ruby = 0;
                    for (int g = 0; g < n; g++) {
                        if ((i >> g) & 1)
                            ruby++;
                        if (g != j && ((i >> g) & 1))
                            a += (1 << g);
                        if (g != k && ((i >> g) & 1))
                            b += (1 << g);
                    }
                    dp[b] += 2 * dp[i] / (ruby * (ruby - 1)) * m[j][k];
                    dp[a] += 2 * dp[i] / (ruby * (ruby - 1)) * m[k][j];
                }
            }
        }
    }
    for (int i = 0; i < n; i++)
        std::cout << std::fixed << std::setprecision(20) << dp[1 << i] << ' ';
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    std::cout.tie(0);
    solve();
    return 0;
}