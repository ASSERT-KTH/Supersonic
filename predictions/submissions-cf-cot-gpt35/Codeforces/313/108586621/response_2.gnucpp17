#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

using ll = long long;

const int N = 2e6 + 6;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);

  int n;
  cin >> n;

  vector<ll> a;
  a.reserve(n + 1);
  for (int i = 0; i < n; i++) {
    ll x;
    cin >> x;
    a.push_back(x);
  }

  sort(a.begin(), a.end(), greater<ll>());

  int root = n - 1;
  ll sum = 0;
  priority_queue<int> q;
  q.push(n);

  while (!q.empty()) {
    int top = q.top();
    q.pop();

    sum += a[top - 1];
    if (top == 1)
      break;

    q.push(top);
    int count = min(root, 3);
    root -= count;
    while (count--)
      q.push(root--);
  }

  cout << sum;

  return 0;
}