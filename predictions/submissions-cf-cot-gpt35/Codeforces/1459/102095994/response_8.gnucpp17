#include <iostream>
#include <vector>
#include <iomanip>
#include <numeric>
#include <cstring>

using namespace std;

const int N = 2e2 + 10;
const int inf = 1e18 + 10;

int n, a[N], b[N];
double dp[N * N][N];

void solve() {
  cin >> n;
  for (int i = 1; i <= n; i++) {
    cin >> a[i] >> b[i];
  }
  double total = accumulate(b + 1, b + 1 + n, 0.0);

  memset(dp, -inf, sizeof(dp));
  dp[0][0] = 0.0;

  double ans = -inf;
  int cap = 0;

  for (int i = 1; i <= n; i++) {
    cap += a[i];
    for (int c = cap; c >= a[i]; c--) {
      for (int k = 1; k <= n; k++) {
        dp[c][k] = max(dp[c - a[i]][k - 1] + b[i], dp[c][k]);
      }
    }
  }

  for (int k = 1; k <= n; k++) {
    ans = -inf;
    for (int c = 1; c <= cap; c++) {
      ans = max(min(dp[c][k] + (total - dp[c][k]) / 2.0, (double)c), ans);
    }
    cout << fixed << setprecision(20) << ans << " ";
  }
}

int main() {
  solve();
  return 0;
}