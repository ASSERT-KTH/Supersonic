#include <algorithm>
#include <iostream>
#include <vector>

const int N = 2e2 + 10;

int n, a[N], b[N];
double dp[N * N][N];

void solve() {
  std::cin >> n;
  for (int i = 1; i <= n; ++i) {
    std::cin >> a[i] >> b[i];
  }
  double total = 0;
  for (int i = 1; i <= n; ++i) {
    total += b[i];
  }
  double ans = 0;
  int cap = 0;
  for (int i = 1; i <= n; ++i) {
    cap += a[i];
    for (int c = cap; c >= a[i]; --c) {
      for (int k = n; k >= 1; --k) {
        dp[c][k] = std::max(dp[c - a[i]][k - 1] + b[i], dp[c][k]);
      }
    }
  }
  for (int k = 1; k <= n; ++k) {
    ans = 0;
    for (int c = 1; c <= cap; ++c) {
      ans = std::max(std::min(dp[c][k] + (total - dp[c][k]) / 2.0, (double)c), ans);
    }
    std::cout << ans << " ";
  }
}

int main() {
  solve();
  return 0;
}