#include <iostream>
#include <vector>
#include <iomanip>

using namespace std;

void solve() {
  int n;
  cin >> n;
  
  vector<int> a(n + 1);
  vector<int> b(n + 1);
  for (int i = 1; i <= n; i++) {
    cin >> a[i] >> b[i];
  }
  
  double total = 0;
  for (int i = 1; i <= n; i++) {
    total += b[i];
  }
  
  vector<vector<double>> dp(n + 1, vector<double>(n + 1, -1e18));
  dp[0][0] = 0;
  
  double ans = -1e18;
  for (int i = 1; i <= n; i++) {
    for (int c = a[i]; c <= 100 * 100 + 10; c++) {
      for (int k = 1; k <= n; k++) {
        dp[c][k] = max(dp[c - a[i]][k - 1] + static_cast<double>(b[i]), dp[c][k]);
      }
    }
  }
  
  for (int k = 1; k <= n; k++) {
    ans = -1e18;
    for (int c = 1; c <= 100 * 100 + 10; c++) {
      ans = max(min(dp[c][k] + (total - dp[c][k]) / 2.0, static_cast<double>(c)), ans);
    }
    cout << fixed << setprecision(20) << ans << " ";
  }
}

int main() {
  solve();
  return 0;
}