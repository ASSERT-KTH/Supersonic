#include <cstdio>
#include <cstring>
#include <algorithm>

const int maxn = 1e6 + 10;
const int mod = 1e9 + 7;
int prime[maxn];
bool vis[maxn];
int ans[maxn];

void euler(int n) {
  std::fill(vis, vis + n, false);
  for (int i = 2; i * i < n; ++i) {
    if (!vis[i])
      prime[++prime[0]] = i;
    for (int j = 1; j <= prime[0] && i * prime[j] < n; ++j) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
}

int main() {
  euler(maxn - 9);
  vis[1] = true;
  for (int i = 1; i <= maxn; ++i)
    ans[i] = ans[i - 1] + (int)(!vis[i]);

  int t;
  std::scanf("%d", &t);
  while (t--) {
    int n;
    std::scanf("%d", &n);
    int l = 1, r = prime[0];
    while (l + 1 < r) {
      int mid = l + (r - l) / 2;
      if ((long long)prime[mid] * prime[mid] <= (long long)n)
        l = mid;
      else
        r = mid;
    }
    std::printf("%d\n", ans[n] - ans[prime[l]] + 1);
  }
  return 0;
}