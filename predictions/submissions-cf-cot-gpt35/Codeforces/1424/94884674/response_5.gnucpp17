#include <cstdio>
#include <cstring>
#include <cmath>

const int INF = 0x3f3f3f3f;
const double PI = acos(-1);
const double eps = 1e-8;

#define pii pair<int, int>
#define X first
#define Y second
#define lowbit a &(-a)

using namespace std;

const int maxn = 1e6 + 10;
const int mod = 1e9 + 7;

int prime[maxn];
bool vis[maxn];
int ans[maxn];

void euler(int n) {
  memset(vis, 0, sizeof(vis));
  for (int i = 2; i < n; ++i) {
    if (!vis[i])
      prime[++prime[0]] = i;
    for (int j = 1; j <= prime[0] && i * prime[j] < n; ++j) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
}

int main() {
  euler(maxn - 9);
  vis[1] = 1;

  for (int i = 2; i < maxn; ++i) {
    ans[i] = ans[i - 1] + (int)(!vis[i]);
  }

  int t;
  scanf("%d", &t);

  while (t--) {
    int n;
    scanf("%d", &n);

    if (n <= 3) {
      printf("%d\n", n);
      continue;
    }

    int l = 1, r = prime[0];
    while (l + 1 < r) {
      int mid = l + (r - l) / 2;
      if ((ll)prime[mid] * prime[mid] <= (ll)n)
        l = mid;
      else
        r = mid;
    }

    printf("%d\n", ans[n] - ans[prime[l]] + 1);
  }

  return 0;
}