#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>

using namespace std;

const int maxn = 1e6 + 10;
const int mod = 1e9 + 7;

int prime[maxn];
bool vis[maxn];
int prefix_sum[maxn];

void euler(int n) {
  memset(vis, 0, sizeof(vis));
  for (int i = 2; i <= sqrt(n); ++i) {
    if (!vis[i]) {
      for (int j = i * i; j < n; j += i) {
        vis[j] = true;
      }
    }
  }
  
  prime[0] = 0;
  for (int i = 2; i < n; ++i) {
    if (!vis[i]) {
      prime[++prime[0]] = i;
    }
  }
}

int main() {
  euler(maxn - 9);
  
  prefix_sum[0] = 0;
  for (int i = 1; i <= maxn; ++i) {
    prefix_sum[i] = prefix_sum[i - 1] + (int)(!vis[i]);
  }
  
  int t;
  scanf("%d", &t);
  
  while (t--) {
    int n;
    scanf("%d", &n);
    
    if (n <= 3) {
      printf("%d\n", n);
      continue;
    }
    
    int l = 1, r = prime[0];
    
    while (l + 1 < r) {
      int mid = (r + l) / 2;
      if ((ll)prime[mid] * prime[mid] <= (ll)n) {
        l = mid;
      } else {
        r = mid;
      }
    }
    
    printf("%d\n", prefix_sum[n] - prefix_sum[prime[l]] + 1);
  }
  
  return 0;
}