#include <iostream>
#include <cstring>
#include <cstdio>

const int INF = 0x3f3f3f3f;
const int maxn = 1e6 + 10;

int prime[maxn];
bool vis[maxn];

void euler(int n) {
  memset(vis, 0, sizeof(vis));
  for (int i = 2; i < n; ++i) {
    if (!vis[i])
      prime[++prime[0]] = i;
    for (int j = 1; j <= prime[0] && i * prime[j] < n; ++j) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
}

int main() {
  euler(maxn - 9);
  vis[1] = 1;
  
  int n;
  std::cin >> n;
  
  int ans[n + 1];
  ans[0] = 0;
  for (int i = 1; i <= n; ++i)
    ans[i] = ans[i - 1] + (int)(!vis[i]);
  
  while (n--) {
    int num;
    std::cin >> num;
    
    int l = 1, r = prime[0];
    while (l + 1 < r) {
      int mid = (r + l) / 2;
      int square = (ll)prime[mid] * prime[mid];
      if (square <= (ll)num)
        l = mid;
      else
        r = mid;
    }
    
    std::cout << ans[num] - ans[prime[l]] + 1 << "\n";
  }
  
  return 0;
}