#include <iostream>
#include <vector>

void sieve(std::vector<bool>& isPrime) {
  int n = isPrime.size();
  for (int i = 2; i * i <= n; i++) {
    if (isPrime[i]) {
      for (int j = i * i; j <= n; j += i) {
        isPrime[j] = false;
      }
    }
  }
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);

  int n;
  long long num;
  std::vector<bool> isPrime(1000001, true);
  sieve(isPrime);

  std::cin >> n;
  for (int i = 0; i < n; i++) {
    std::cin >> num;
    long long temp = static_cast<long long>(std::sqrt(num));
    if (temp * temp == num && isPrime[temp]) {
      std::cout << "YES\n";
    } else {
      std::cout << "NO\n";
    }
  }

  return 0;
}