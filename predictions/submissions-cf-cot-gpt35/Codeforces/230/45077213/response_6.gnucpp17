#include <cmath>
#include <cstring>
#include <iostream>
using namespace std;

const int MAX_VALUE = 1000000;
bool flag[MAX_VALUE + 1];

void Prem();
bool isPerfectSquare(long long n);

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  
  long long a;
  int n;
  
  memset(flag, true, sizeof(flag));
  flag[1] = false;
  Prem();
  
  cin >> n;
  for (int i = 0; i < n; i++) {
    cin >> a;
    
    if (!isPerfectSquare(a) || !flag[(int)sqrt(a)])
      cout << "NO\n";
    else
      cout << "YES\n";
  }
  
  return 0;
}

void Prem() {
  vector<long long> k;
  
  for (long long i = 2; i * i <= MAX_VALUE; i++) {
    if (flag[i]) {
      k.push_back(i);
      for (long long j = i * i; j <= MAX_VALUE; j += i)
        flag[j] = false;
    }
  }
}

bool isPerfectSquare(long long n) {
  long long root = sqrt(n);
  return (root * root == n);
}