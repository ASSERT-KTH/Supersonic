#include <iostream>
#include <cmath>
#include <cstring>

using namespace std;

bool isPrime[1000001];

void sieve(int maxPrime) {
  memset(isPrime, true, sizeof(isPrime));
  isPrime[0] = isPrime[1] = false;
  for (int i = 2; i * i <= maxPrime; i++) {
    if (isPrime[i]) {
      for (int j = i * i; j <= maxPrime; j += i) {
        isPrime[j] = false;
      }
    }
  }
}

bool isPerfectSquare(long long n) {
  long long sqrtN = sqrt(n);
  return n == sqrtN * sqrtN;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(0);

  int n;
  cin >> n;

  sieve(1000000);

  for (int i = 0; i < n; i++) {
    long long a;
    cin >> a;

    if (isPerfectSquare(a) && isPrime[(int)sqrt(a)]) {
      cout << boolalpha << true << endl;
    } else {
      cout << boolalpha << false << endl;
    }
  }

  return 0;
}