#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>

using ll = long long;

struct Range {
  int l, r;
  int w;
};

bool compareRange(const Range& a, const Range& b) {
  return a.w < b.w;
}

int main() {
  std::ios_base::sync_with_stdio(0);
  std::cin.tie(0);
  std::cout.tie(0);

  int n, m;
  std::cin >> n >> m;

  std::vector<Range> s;
  for (int i = 0; i < n; i++) {
    int l, r, w;
    std::cin >> l >> r >> w;
    s.push_back({l, r - 1, w});
  }

  std::sort(s.begin(), s.end(), compareRange);

  int ptr = -1, ans = INT_MAX;
  int sum = 0;
  for (int i = 0; i < s.size(); i++) {
    if (i > 0)
      sum -= 1;
    while (ptr + 1 < s.size() && sum == 0) {
      ++ptr;
      sum += 1;
    }
    if (sum)
      ans = std::min(ans, s[ptr].w - s[i].w);
  }

  std::cout << ans;

  return 0;
}