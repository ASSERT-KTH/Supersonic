#include <iostream>
#include <vector>
#include <limits>
using namespace std;

int recurse(const vector<int>& a, const vector<int>& b, vector<vector<int>>& dp, int index = 0, int OR = 0) {
  if (index == a.size()) {
    return OR;
  }
  if (dp[index][OR] != -1) {
    return dp[index][OR];
  }
  int answer = INT_MAX;
  for (size_t i = 0; i < b.size(); ++i) {
    int ret = recurse(a, b, dp, index + 1, OR | (a[index] & b[i]));
    answer = min(answer, ret);
  }
  return dp[index][OR] = answer;
}

int main() {
  int n, m;
  cin >> n >> m;
  vector<int> a, b;
  a.reserve(n);
  b.reserve(m);
  for (int i = 0; i < n; ++i) {
    int num;
    cin >> num;
    a.push_back(num);
  }
  for (int i = 0; i < m; ++i) {
    int num;
    cin >> num;
    b.push_back(num);
  }
  vector<vector<int>> dp(n, vector<int>(1 << 9, -1));
  cout << recurse(a, b, dp) << '\n';
  return 0;
}