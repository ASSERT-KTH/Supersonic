Optimization Steps:
1. Remove unnecessary header files.
2. Remove the `IOS` macro and the `frfr` macro as they are not being used.
3. Use `reserve` function to preallocate memory for the `odd` and `even` vectors.
4. Swap the order of the loops to iterate over the array only once.
5. Use a single loop to print the elements of both `odd` and `even` vectors.

Here's the optimized C++ program:

```cpp
#include <iostream>
#include <vector>

using namespace std;

void solve(int te) {
  int n;
  cin >> n;
  int arr[n];
  vector<int> odd, even;
  odd.reserve(n);
  even.reserve(n);
  
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
    if (arr[i] % 2) {
      odd.push_back(arr[i]);
    } else {
      even.push_back(arr[i]);
    }
  }
  
  if (odd.size() >= even.size()) {
    for (int i : odd) {
      cout << i << " ";
    }
    for (int i : even) {
      cout << i << " ";
    }
  } else {
    for (int i : even) {
      cout << i << " ";
    }
    for (int i : odd) {
      cout << i << " ";
    }
  }
  cout << endl;
}

int main() {
  int te;
  cin >> te;
  for (int i = 1; i <= te; ++i) {
    solve(i);
  }
  return 0;
}
```