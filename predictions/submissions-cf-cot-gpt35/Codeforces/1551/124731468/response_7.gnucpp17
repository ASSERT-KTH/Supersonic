#include <iostream>
#include <unordered_map>
#include <vector>

const int maxn = 2e5 + 50;

int main() {
  int t;
  std::cin >> t;
  
  while (t--) {
    int n, k;
    std::cin >> n >> k;
    
    std::vector<int> arr(n + 1);
    std::vector<int> ans(n + 1);
    std::unordered_map<int, std::vector<int>> m1;
    
    for (int i = 1; i <= n; i++) {
      std::cin >> arr[i];
      m1[arr[i]].push_back(i);
    }
    
    int cnt = 0;
    int color = 0;
    
    for (const auto& x : m1) {
      int len = x.second.size();
      
      if (len >= k) {
        for (int i = 0; i < len; i++) {
          if (i == k) {
            break;
          } else {
            ans[x.second[i]] = ++color;
            color %= k;
          }
        }
      } else {
        cnt += len;
      }
    }
    
    cnt -= cnt % k;
    
    for (const auto& s : m1) {
      for (const auto& x : s.second) {
        if (cnt <= 0) {
          goto _out;
        }
        
        if (ans[x] == 0) {
          ans[x] = ++color;
          color %= k;
          
          if (--cnt <= 0) {
            goto _out;
          }
        }
      }
    }
    
  _out:
    for (int i = 1; i <= n; i++) {
      if (ans[i] == -1) {
        ans[i] = 0;
      }
    }
    
    for (int i = 1; i <= n; i++) {
      std::cout << ans[i] << " ";
    }
    
    std::cout << std::endl;
  }
  
  return 0;
}