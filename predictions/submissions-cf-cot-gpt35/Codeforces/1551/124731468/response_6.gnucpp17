#include <iostream>
#include <vector>
#include <unordered_map>

const int maxn = 2e5 + 50;
int arr[maxn];
int ans[maxn];

int main() {
  int t;
  std::cin >> t;

  while (t--) {
    std::unordered_map<int, std::vector<int>> m1;

    int n, k;
    std::cin >> n >> k;

    for (int i = 1; i <= n; i++) {
      std::cin >> arr[i];
      m1[arr[i]].push_back(i);
    }

    int cnt = 0;
    int color = 0;

    for (auto& kv : m1) {
      auto& indices = kv.second;

      if (indices.size() >= k) {
        int len = indices.size();

        for (int i = 0; i < len; i++) {
          if (i >= k) {
            ans[indices[i]] = -1;
          } else {
            ans[indices[i]] = ++color;
            color %= k;
          }
        }
      } else {
        cnt += indices.size();
      }
    }

    cnt -= cnt % k;

    for (auto& kv : m1) {
      auto& indices = kv.second;

      for (auto x : indices) {
        if (cnt <= 0)
          break;

        if (ans[x] == 0) {
          ans[x] = ++color;
          color %= k;
          if (--cnt <= 0)
            break;
        }
      }
    }

    for (int i = 1; i <= n; i++) {
      if (ans[i] == -1) {
        ans[i] = 0;
      }
    }

    for (int i = 1; i <= n; i++) {
      std::cout << ans[i] << ' ';
    }

    std::cout << '\n';
  }

  return 0;
}