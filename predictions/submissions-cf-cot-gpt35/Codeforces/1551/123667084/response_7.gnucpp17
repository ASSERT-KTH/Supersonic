#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void solve() {
  string s;
  cin >> s;
  int n, k;
  n = s.size(), k = 2;
  vector<pair<int, int>> a(n, {0, 0});
  for (int i = 0; i < n; ++i) {
    a[i].second = i;
    a[i].first = s[i];
  }
  
  vector<int> count(256, 0);
  for (auto& p : a) {
    count[p.first]++;
  }
  for (int i = 1; i < 256; ++i) {
    count[i] += count[i - 1];
  }
  
  vector<int> res(n, 0);
  vector<int> g(n, 0);
  for (int i = n - 1; i >= 0; --i) {
    g[--count[a[i].first]] = a[i].second;
  }
  
  int mn = g.size() / k;
  for (int i = 1; i <= k; ++i) {
    for (int j = 0; j < mn; ++j) {
      res[g[i * k + j]] = i;
    }
  }
  
  int ans = 0;
  for (auto x : res) {
    ans += (x != 0);
  }
  cout << ans / 2 << '\n';
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);
  
  int t = 1;
  cin >> t;
  while (t--) {
    solve();
  }
  
  return 0;
}