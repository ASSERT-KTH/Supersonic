#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void solve() {
  string s;
  cin >> s;
  int n, k;
  n = s.size(), k = 2;
  vector<pair<char, int>> a(n);
  for (int i = 0; i < n; ++i) {
    a[i].second = i;
    a[i].first = s[i];
  }
  sort(a.begin(), a.end(), [](const auto& x, const auto& y){
    return x.first < y.first;
  });

  vector<int> res(n, 0);
  vector<int> g(k + 1, 0);
  for (int i = 0, p = 0; i < n; ++i, ++p) {
    int pos = p % k + 1;
    if (g[pos] == 0)
      g[pos] = a[i].second;
    else if (a[i - k].first != a[i].first)
      g[pos] = a[i].second;
    else
      --p;
  }
  for (int i = 1; i <= k; ++i) {
    for (int j = g[i]; j < n; j += k) {
      res[j] = i;
    }
  }
  int ans = count(res.begin(), res.end(), 0);
  cout << ans / 2 << '\n';
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  
  int t = 1;
  cin >> t;
  while (t--)
    solve();
}