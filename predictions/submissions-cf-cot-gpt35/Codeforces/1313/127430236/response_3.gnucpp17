#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);

  int n;
  std::cin >> n;

  std::vector<int> a(n+1), node(4 * n), l(n+1), r(n+1), res(n+1);

  for (int i = 1; i <= n; i++)
    std::cin >> a[i];

  int id = 0;
  for (int i = 1; i <= n; i++) {
    id = find(1, 1, n, 1, i - 1, a[i], node);
    update(1, 1, n, i, a[i], node);
    l[i] = l[id] + a[i] * (i - id);
  }

  node.assign(4 * n, 0);

  for (int i = n; i >= 1; i--) {
    id = find(1, 1, n, 1, n - i, a[i], node);
    update(1, 1, n, i, a[i], node);
    r[i] = r[id] + a[i] * (id - i);
  }

  int pos = std::max_element(l.begin(), l.end() + 1) - l.begin();
  int minn = a[pos];
  res[pos] = a[pos];

  for (int i = pos - 1; i >= 1; i--) {
    minn = std::min(minn, a[i]);
    res[i] = minn;
  }

  minn = a[pos];
  for (int i = pos + 1; i <= n; i++) {
    minn = std::min(minn, a[i]);
    res[i] = minn;
  }

  for (int i = 1; i <= n; i++)
    std::cout << res[i] << " ";

  return 0;
}