#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);

  int n;
  std::cin >> n;
  std::vector<int> t(n);
  int sum = 0;
  for (int i = 0; i < n; i++) {
    std::cin >> t[i];
    sum += t[i];
  }
  if (sum > 2 * n * (n - 1) || sum < 2 * n - 2) {
    std::cout << "NO";
    return 0;
  }
  std::vector<int> one, two;
  for (int i = 0; i < n; i++) {
    if (t[i] == 1)
      one.emplace_back(i);
    else
      two.emplace_back(i);
  }
  std::vector<std::pair<int, int>> ans;
  for (int i = 1; i < two.size(); i++) {
    ans.emplace_back(two[i - 1], two[i]);
    t[two[i - 1]]--, t[two[i]]--;
  }
  int f2 = std::min(2, static_cast<int>(one.size()));
  for (int i = 0; i < f2; i++) {
    if (i == 0)
      ans.emplace_back(one[i], two[0]), t[two[0]]--;
    else
      ans.emplace_back(one[i], two.back()), t[two.back()]--;
  }
  
  std::sort(two.rbegin(), two.rend());
  for (int i = f2; i < one.size(); i++) {
    int x = two.back();
    two.pop_back();
    if (t[x] == 0) {
      std::cout << "NO";
      return 0;
    }
    ans.emplace_back(one[i], x);
    t[x]--;
    two.emplace_back(x);
  }
  std::cout << "YES " << two.size() + f2 - 1 << '\n';
  std::cout << ans.size() << '\n';
  for (const auto& x : ans)
    std::cout << x.first + 1 << ' ' << x.second + 1 << '\n';
}