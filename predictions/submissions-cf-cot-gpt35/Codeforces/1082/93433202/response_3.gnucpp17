#include <iostream>
#include <vector>
#include <queue>
#include <utility>
using namespace std;

const int md = 1e9 + 7;

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int n;
    cin >> n;

    int t[n];
    int sum = 0;
    for (int i = 0; i < n; i++) {
        cin >> t[i];
        sum += t[i];
    }

    if (sum > 2 * n * (n - 1) || sum < 2 * n - 2) {
        cout << "NO";
        return 0;
    }

    vector<int> one, two;
    one.reserve(n);
    two.reserve(n);
    for (int i = 0; i < n; i++) {
        if (t[i] == 1)
            one.push_back(i);
        else
            two.push_back(i);
    }

    vector<pair<int, int>> ans;
    ans.reserve(n);
    for (int i = 1; i < two.size(); i++) {
        ans.push_back({two[i - 1], two[i]});
        t[two[i - 1]]--;
        t[two[i]]--;
    }

    int f2 = min(2, static_cast<int>(one.size()));
    for (int i = 0; i < f2; i++) {
        if (i == 0)
            ans.push_back({one[i], two[0]}), t[two[0]]--;
        else
            ans.push_back({one[i], two[two.size() - 1]}), t[two[two.size() - 1]]--;
    }

    for (int i = f2; i < one.size(); i++) {
        int x = two[two.size() - 1];
        two.pop_back();
        if (t[x] == 0) {
            cout << "NO";
            return 0;
        }
        ans.push_back({one[i], x});
        t[x]--;
        two.push_back(x);
    }

    printf("YES %d\n", static_cast<int>(two.size()) + f2 - 1);
    printf("%d\n", static_cast<int>(ans.size()));
    for (auto x : ans)
        printf("%d %d\n", x.first + 1, x.second + 1);
}