#include <iostream>
#include <vector>
#include <queue>
#include <tuple>

using namespace std;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  int n;
  cin >> n;

  vector<int> t(n);
  int sum = 0;
  for (int& x : t) {
    cin >> x;
    sum += x;
  }

  if (sum > 2 * n * (n - 1) || sum < 2 * n - 2) {
    cout << "NO";
    return 0;
  }

  vector<int> one, two;
  one.reserve(n);
  two.reserve(n);
  for (int i = 0; i < n; i++) {
    if (t[i] == 1)
      one.emplace_back(i);
    else
      two.emplace_back(i);
  }

  vector<pair<int, int>> ans;
  for (int i = 1; i < two.size(); i++) {
    ans.emplace_back(tie(two[i - 1], two[i]));
    t[two[i - 1]]--;
    t[two[i]]--;
  }

  int f2 = min(2, static_cast<int>(one.size()));
  for (int i = 0; i < f2; i++) {
    if (i == 0)
      ans.emplace_back(tie(one[i], two[0])), t[two[0]]--;
    else
      ans.emplace_back(tie(one[i], two.back())), t[two.back()]--;
  }

  priority_queue<pair<int, int>> q;
  for (auto x : two) {
    q.emplace(t[x], x);
  }

  for (int i = f2; i < one.size(); i++) {
    int x = q.top().second;
    q.pop();
    if (t[x] == 0) {
      cout << "NO";
      return 0;
    }
    ans.emplace_back(tie(one[i], x));
    t[x]--;
    q.emplace(t[x], x);
  }

  cout << "YES" << " " << two.size() + f2 - 1 << "\n";
  cout << ans.size() << "\n";
  for (auto& x : ans) {
    cout << x.first + 1 << " " << x.second + 1 << "\n";
  }

  return 0;
}