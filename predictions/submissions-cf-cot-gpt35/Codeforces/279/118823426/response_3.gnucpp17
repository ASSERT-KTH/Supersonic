#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

ll gcd(ll a, ll b) {
  while (b != 0) {
    ll temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}

ll pow(ll n, ll k) {
  if (k < 0)
    return 0;
  ll ret = 1;
  while (k > 0) {
    if (k & 1)
      ret *= n;
    n *= n;
    k /= 2;
  }
  return ret;
}

ll modexp(ll n, ll k, ll md) {
  ll ret = 1;
  n %= md;
  while (k > 0) {
    if (k % 2 == 1) {
      ret *= n;
      ret %= md;
    }
    n *= n;
    n %= md;
    k /= 2;
  }
  return ret;
}

ll popcount(ll n) {
  return __builtin_popcountll(n);
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(nullptr);
  
  ll n, t;
  cin >> n >> t;
  vector<ll> a(n);
  for (ll i = 0; i < n; i++)
    cin >> a[i];
  
  vector<ll> b(n + 1);
  ll sum = 0;
  for (ll i = 0; i < n; i++) {
    sum += a[i];
    b[i + 1] = sum;
  }
  
  int maxlen = 0;
  for (ll i = 1; i <= n; i++) {
    ll to = b[i - 1] + t;
    auto it = upper_bound(b.begin(), b.end(), to);
    int len = (it - b.begin()) - i;
    maxlen = max(maxlen, len);
  }
  
  cout << maxlen << " ";
}