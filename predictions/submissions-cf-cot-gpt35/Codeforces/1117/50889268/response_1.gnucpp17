#include <iostream>
#include <vector>
using namespace std;

const long long INF = 1e18;

bool check(vector<long long>& x, vector<long long>& y, int n, long long pos) {
  long long current_x = x[pos % n] + (pos / n) * x[n];
  long long current_y = y[pos % n] + (pos / n) * y[n];
  return abs(x[n] - current_x) + abs(y[n] - current_y) <= pos;
}

int main() {
  int n;
  string s;
  cin >> n >> s;
  
  vector<long long> x(n + 1, 0), y(n + 1, 0);
  for (int i = 0; i < n; ++i) {
    if (s[i] == 'U')
      y[i + 1]++;
    if (s[i] == 'D')
      y[i + 1]--;
    if (s[i] == 'L')
      x[i + 1]--;
    if (s[i] == 'R')
      x[i + 1]++;
    x[i + 1] += x[i];
    y[i + 1] += y[i];
  }
  
  long long l = 0, r = INF;
  while (r - l > 1) {
    long long mid = (l + r) / 2;
    if (check(x, y, n, mid)) {
      r = mid;
    } else {
      l = mid;
    }
  }
  
  if (r >= INF) {
    cout << -1;
  } else {
    cout << r;
  }
  return 0;
}