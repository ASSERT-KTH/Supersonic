Step 1: Remove unnecessary header file inclusion
- The program includes `<bits/stdc++.h>` which is not necessary for this program. We can remove it.

Step 2: Remove unnecessary global variables
- The program declares `n`, `i`, `mx`, `cnt`, and `ans` as global variables. It is better to declare them inside the `main` function.

Step 3: Remove the unnecessary check in the second loop
- The second loop checks if `arr[i] == mx` and increments `cnt`. However, since we have already found the maximum element in the array, we can simplify the loop by directly counting the number of occurrences of the maximum element.

Step 4: Optimize the loop by starting from index 2
- Since we have already counted the number of occurrences of the maximum element, we can start the loop from index 2 instead of 1.

Step 5: Remove the unnecessary variable `ans`
- The variable `ans` is not necessary as we can directly output the maximum of `cnt` and the previous maximum.

Here is the optimized program:

```cpp
#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    int mx = -1;
    int cnt = 0;
    int prevMax = 0;

    for (int i = 1; i <= n; i++) {
        int num;
        cin >> num;

        if (num > mx) {
            mx = num;
            cnt = 1;
        } else if (num == mx) {
            cnt++;
        } else {
            prevMax = max(prevMax, cnt);
            cnt = 0;
        }
    }

    cout << max(prevMax, cnt) << '\n';

    return 0;
}
```