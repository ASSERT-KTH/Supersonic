#include <iostream>
#include <vector>
using namespace std;

const int N = 17000005;

vector<int> lpf(N);

void sieve() {
  for (int i = 2; i < N; i++) {
    if (lpf[i] == 0) {
      lpf[i] = i;
      for (int j = 2 * i; j < N; j += i) {
        if (lpf[j] == 0)
          lpf[j] = i;
      }
    }
  }
}

int gcd(int a, int b) {
  while (b != 0) {
    int temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}

int main() {
  sieve();
  
  int n;
  cin >> n;
  
  vector<int> arr(n);
  int mcd = 0;
  
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
    if (i == 0)
      mcd = arr[i];
    else
      mcd = gcd(mcd, arr[i]);
  }
  
  for (int i = 0; i < n; i++)
    arr[i] /= mcd;
  
  vector<int> cont;
  
  for (int i = 0; i < n; i++) {
    while (arr[i] > 1) {
      int f = lpf[arr[i]];
      cont.push_back(f);
      while (arr[i] % f == 0)
        arr[i] /= f;
    }
  }
  
  if (cont.empty())
    cout << -1 << '\n';
  else {
    int freq[N] = {0};
    int maxi = 0;
    for (int i = 0; i < cont.size(); i++) {
      freq[cont[i]]++;
      maxi = max(maxi, freq[cont[i]]);
    }
    cout << n - maxi << '\n';
  }
  
  return 0;
}