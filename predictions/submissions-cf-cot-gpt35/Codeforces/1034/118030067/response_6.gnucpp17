#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <cmath>

using namespace std;

int gcd(int x, int y) {
  return y ? gcd(y, x % y) : x;
}

void solve() {
  int n;
  cin >> n;
  vector<int> v(n);
  int gcdIs = 0;
  for (int i = 0; i < n; i++) {
    cin >> v[i];
    gcdIs = gcd(gcdIs, v[i]);
  }
  for (int i = 0; i < n; i++) {
    v[i] /= gcdIs;
  }
  unordered_map<int, int> countOfFactors;
  for (int eleInArray : v) {
    for (int i = 2; i <= sqrt(eleInArray); i++) {
      while (eleInArray % i == 0) {
        countOfFactors[i]++;
        eleInArray /= i;
      }
    }
    if (eleInArray > 1) {
      countOfFactors[eleInArray]++;
    }
  }
  int keep = 0;
  for (auto i : countOfFactors) {
    keep = max(keep, i.second);
  }
  keep ? (cout << n - keep) : (cout << "-1");
}

int main() {
  solve();
  return 0;
}