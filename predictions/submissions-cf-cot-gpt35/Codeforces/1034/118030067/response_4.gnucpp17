#include <iostream>
#include <vector>
#include <map>
using namespace std;

int gcd(int x, int y) {
  return y ? gcd(y, x % y) : x;
}

void factorize(int n, map<int, int>& countOfFactors) {
  map<int, int> primeFactors;
  while (n != 1) {
    primeFactors[n]++;
    n /= primeFactors[n];
  }
  for (auto i : primeFactors)
    countOfFactors[i.first]++;
}

void solve() {
  int n;
  cin >> n;
  vector<int> v(n);
  int gcdIs = 0;
  for (int i = 0; i < n; i++) {
    cin >> v[i];
    gcdIs = gcd(gcdIs, v[i]);
  }
  for (int i = 0; i < n; i++) {
    v[i] /= gcdIs;
  }
  map<int, int> countOfFactors;
  for (int eleInArray : v) {
    factorize(eleInArray, countOfFactors);
  }
  int keep = 0;
  for (auto i : countOfFactors) {
    keep = max(keep, i.second);
  }
  keep ? (cout << n - keep) : (cout << "-1");
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  solve();

  return 0;
}