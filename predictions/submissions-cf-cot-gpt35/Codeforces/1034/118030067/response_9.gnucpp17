#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int gcd(int x, int y) {
    return __gcd(x, y);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;
    vector<int> v(n);
    int gcdIs = 0;
    for (int i = 0; i < n; i++) {
        cin >> v[i];
        gcdIs = gcd(gcdIs, v[i]);
    }
    for (int i = 0; i < n; i++) {
        v[i] /= gcdIs;
    }
    int keep = 0;
    int countOfFactors = 0;
    for (int eleInArray : v) {
        int count = 0;
        for (int i = 2; i * i <= eleInArray; i++) {
            while (eleInArray % i == 0) {
                eleInArray /= i;
                count++;
            }
        }
        if (eleInArray > 1) {
            count++;
        }
        countOfFactors = max(countOfFactors, count);
    }
    if (countOfFactors > 0) {
        cout << n - countOfFactors;
    } else {
        cout << "-1";
    }

    return 0;
}