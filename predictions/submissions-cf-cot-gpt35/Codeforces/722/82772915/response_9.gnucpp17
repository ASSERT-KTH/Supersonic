#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long

void run() {
  int n;
  std::cin >> n;
  
  std::vector<ll> a(n + 1), sum(n + 1), fk(n + 1), q(n + 1);
  for (int i = 1; i <= n; ++i) {
    std::cin >> a[i];
    sum[i] = a[i];
  }

  std::vector<ll> par(n + 1, -1);
  
  for (int i = 1; i <= n; ++i) {
    std::cin >> q[i];
  }
  
  ll ans = 0;
  std::vector<bool> vis(n + 1, false);
  
  for (int i = n; i >= 1; --i) {
    fk[i] = ans;
    vis[q[i]] = true;
    ans = std::max(ans, a[q[i]]);
    if (vis[q[i] - 1]) {
      int x = (par[q[i]] < par[q[i] - 1]) ? q[i] : q[i] - 1;
      int y = (par[q[i]] < par[q[i] - 1]) ? q[i] - 1 : q[i];
      ans = std::max(ans, sum[x] + sum[y]);
      par[x] += par[y];
      par[y] = x;
      sum[x] += sum[y];
    }
    if (vis[q[i] + 1]) {
      int x = (par[q[i]] < par[q[i] + 1]) ? q[i] : q[i] + 1;
      int y = (par[q[i]] < par[q[i] + 1]) ? q[i] + 1 : q[i];
      ans = std::max(ans, sum[x] + sum[y]);
      par[x] += par[y];
      par[y] = x;
      sum[x] += sum[y];
    }
  }
  
  for (int i = 1; i <= n; ++i) {
    std::cout << fk[i] << '\n';
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  
  int tc = 1;
  
  for (int i = 0; i < tc; ++i) {
    run();
  }
  
  return 0;
}