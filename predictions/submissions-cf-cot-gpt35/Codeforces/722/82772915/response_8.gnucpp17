#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int N = 5e5 + 7;

int par[N], sum[N], q[N];

int root(int v) {
  return par[v] < 0 ? v : (par[v] = root(par[v]));
}

void merge(int x, int y) {
  if ((x = root(x)) == (y = root(y)))
    return;
  if (par[y] < par[x])
    swap(x, y);
  par[x] += par[y];
  par[y] = x;
  sum[x] += sum[y];
}

void run() {
  int n;
  cin >> n;
  vector<int> a(n + 1), vis(n + 1), fk(n + 1);
  
  for (int i = 1; i <= n; ++i) {
    cin >> a[i];
    sum[i] = a[i];
    par[i] = -1;
  }
  
  for (int i = 1; i <= n; ++i)
    cin >> q[i];
  
  int ans = 0;
  for (int i = n; i >= 1; --i) {
    fk[i] = ans;
    vis[q[i]] = 1;
    ans = max(ans, a[q[i]]);
    if (vis[q[i] - 1])
      merge(q[i], q[i] - 1);
    if (vis[q[i] + 1])
      merge(q[i], q[i] + 1);
  }
  
  for (int i = 1; i <= n; ++i)
    cout << fk[i] << endl;
}

int main() {
  int tc = 1;
  for (int i = 0; i < tc; ++i)
    run();
  return 0;
}