#include <iostream>
#include <vector>
#include <algorithm>

int findbestr(const std::vector<int>& arr, int i) {
  int elem = arr[i];
  auto it = std::lower_bound(arr.begin() + i + 1, arr.end(), 2 * elem);
  return std::distance(arr.begin(), it);
}

int main() {
  int n;
  std::cin >> n;
  std::vector<int> arr(n);
  for (int i = 0; i < n; ++i) {
    int inp;
    std::cin >> inp;
    arr[i] = std::abs(inp);
  }
  std::sort(arr.begin(), arr.end());
  int l = 0, count = 0;
  for (int i = 0; i < n; ++i) {
    l = findbestr(arr, i);
    count += i - l;
  }
  std::cout << count;
  return 0;
}