#include <iostream>
#include <vector>
#include <unordered_map>
#include <cmath>
using namespace std;

const int MAX_N = 1e7 + 1;

vector<int> a(MAX_N);
unordered_map<int, int> mp;

void sum_of_divisors() {
  for (int i = 1; i < MAX_N; i++) {
    for (int j = i; j < MAX_N; j += i) {
      a[j] += i;
    }
  }
  for (int i = MAX_N - 1; i >= 0; i--) {
    if (a[i] < MAX_N) {
      mp[a[i]] = i;
    }
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  sum_of_divisors();

  int t;
  cin >> t;
  while (t--) {
    int c;
    cin >> c;
    if (mp.count(c)) {
      cout << mp[c] << '\n';
    } else {
      cout << -1 << '\n';
    }
  }

  return 0;
}