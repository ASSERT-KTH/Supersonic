#include <iostream>
#include <vector>
#include <map>
#include <queue>

const int mX = 1e7 + 12;

void sum_of_divisors(std::vector<int>& a, std::map<int, int>& mp) {
  for (int i = 1; i <= 1e7; i++) {
    for (int j = i; j <= 1e7; j += i) {
      a[j] += i;
    }
  }
  for (int i = 1e7; i >= 0; i--) {
    if (a[i] <= 1e7) {
      mp[a[i]] = i;
    }
  }
}

void case_i() {
  int c;
  std::cin >> c;
  std::map<int, int> mp;
  std::vector<int> a(mX, 0);
  sum_of_divisors(a, mp);
  if (mp.find(c) != mp.end()) {
    std::cout << mp[c] << '\n';
  } else {
    std::cout << -1 << '\n';
  }
}

int main() {
  int _;
  std::cin >> _;
  while (_--) {
    case_i();
  }
  return 0;
}