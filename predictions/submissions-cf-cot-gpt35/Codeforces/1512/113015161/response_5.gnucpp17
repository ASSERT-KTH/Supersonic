#include <iostream>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>

using namespace std;

const int MX = 1e7 + 12;

void sum_of_divisors(vector<int>& a, vector<long long>& mp) {
    for (int i = 1; i <= MX; i++) {
        for (int j = i; j <= MX; j += i) {
            a[j] += i;
        }
    }
    for (int i = MX; i >= 0; i--) {
        if (a[i] <= MX) {
            mp[a[i]] = i;
        }
    }
}

void solve() {
    int c;
    cin >> c;
    vector<int> a(MX);
    vector<long long> mp(MX);
    sum_of_divisors(a, mp);
    if (mp[c]) {
        cout << mp[c] << endl;
    } else {
        cout << -1 << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int t;
    cin >> t;
    while (t--) {
        solve();
    }

    return 0;
}