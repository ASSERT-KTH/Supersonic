#include <iostream>
#include <vector>
using namespace std;

const int N = 1e6 + 15;
const int mod = 1000000007;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int n;
    cin >> n;
    vector<long long int> dp(N);
    dp[0] = 1;

    for (int i = 1; i <= n; i++) {
        int x;
        cin >> x;
        vector<int> divs;
        for (int j = 1; j * j <= x; j++) {
            if (x % j == 0) {
                divs.push_back(j);
                if (j * j != x)
                    divs.push_back(x / j);
            }
        }

        for (int k = divs.size() - 1; k >= 0; k--) {
            int d = divs[k];
            dp[d] += dp[d - 1];
            dp[d] %= mod;
        }
    }

    long long int ans = 0;
    for (int i = 1; i <= n; i++) {
        ans += dp[i];
        ans %= mod;
    }

    cout << ans;

    return 0;
}