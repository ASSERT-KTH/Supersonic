#include <iostream>
#include <vector>

const int N = 1e6 + 15;
const int mod = 1000000007;

void solve() {
  int n;
  std::cin >> n;
  std::vector<long long> dp(N);
  dp[0] = 1;
  for (int i = 1; i <= n; i++) {
    int x;
    std::cin >> x;
    std::vector<int> divs;
    for (int j = 1; j * j <= x; j++) {
      if (x % j == 0) {
        divs.push_back(j);
        if (j * j != x)
          divs.push_back(x / j);
      }
    }
    dp[1] += dp[0];
    dp[1] %= mod;
    for (int j = divs.size() - 1; j >= 0; j--) {
      dp[divs[j]] += dp[divs[j] - 1];
    }
  }
  long long ans = 0;
  for (int i = 1; i <= n; i++)
    ans += dp[i];
  std::cout << ans % mod;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);
  
  int t = 1;
  while (t--) {
    solve();
  }
}