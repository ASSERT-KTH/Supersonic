#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

const int N = 1e6 + 15;
const int mod = 1000000007;

void solve() {
  int n;
  cin >> n;
  vector<long long int> dp(N);
  dp[0] = 1;
  for (int i = 1; i <= n; i++) {
    long long int x;
    cin >> x;
    vector<long long int> divs;
    for (long long int j = 1; j <= sqrt(x); j++) {
      if (x % j == 0) {
        divs.push_back(j);
        if (j * j != x)
          divs.push_back(x / j);
      }
    }
    for (auto x : divs) {
      dp[x] += dp[x - 1];
      dp[x] %= mod;
    }
  }
  long long int ans = 0;
  for (int i = 1; i <= n; i++)
    ans = (ans + dp[i]) % mod;
  cout << ans;
}

int main() {
  int t = 1;
  while (t--) {
    solve();
  }
  return 0;
}