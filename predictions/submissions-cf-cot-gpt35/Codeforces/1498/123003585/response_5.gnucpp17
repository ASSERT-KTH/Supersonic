#include <algorithm>
#include <iostream>
#include <map>
using namespace std;

int main() {
  int n_sets;
  cin >> n_sets;
  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    cin >> n >> W;
    int a[n];
    for (int i = 0; i < n; i++)
      cin >> a[i];
    sort(a, a + n);
    reverse(a, a + n);
    map<int, int> x;
    x[W] = 200000;
    for (int i : a) {
      int remain = W - i;
      int best_w = W;
      auto it = x.lower_bound(remain);
      if (it != x.end() && it->second != 0 && it->first < remain) {
        best_w = it->first;
        remain = it->first - i;
      }
      --x[best_w];
      if (x[best_w] == 0)
        x.erase(best_w);
      x.insert(it, make_pair(remain, 1));
    }
    cout << 200000 - x[W] << endl;
  }
  return 0;
}