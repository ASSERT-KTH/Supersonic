#include <algorithm>
#include <iostream>
#include <vector>

int main() {
  int n_sets;
  std::cin >> n_sets;
  for (int set_number = 1; set_number <= n_sets; set_number++) {
    int n, W;
    std::cin >> n >> W;
    std::vector<int> a(n);
    for (int i = 0; i < n; i++)
      std::cin >> a[i];
    std::partial_sort(a.begin(), a.begin() + n, a.end(), std::greater<int>());
    std::vector<int> remainders(W + 1, 0);
    remainders[W] = 200000;
    int count = 0;
    for (int i : a) {
      int remain = W - i;
      int best_w = W;
      for (int k = 0; k <= W; k++) {
        if (k - i >= 0 && remainders[k] != 0 && k - i < remain) {
          best_w = k;
          remain = k - i;
        }
      }
      remainders[best_w]--;
      if (remainders[best_w] == 0)
        count--;
      remainders[remain]++;
      if (remainders[remain] == 1)
        count++;
    }
    std::cout << 200000 - count << std::endl;
  }
  return 0;
}