Explanation of the optimization steps:

1. Remove unnecessary include: The program includes the `<cstdio>` header, but it is not used in the code. Therefore, we can remove this unnecessary include.

2. Remove unnecessary optimization directive: The program includes `#pragma G++ optimize("-O2")`, which is used to enable the `-O2` optimization level. However, this optimization level is already enabled by default in modern compilers, so the directive is unnecessary and can be removed.

3. Simplify the first loop: The first loop in the program is incrementing the loop variable `i` twice and subtracting 1 from it. This loop has no practical purpose and can be removed entirely.

4. Simplify the second loop: The second loop is using the variable `n` to print the remainder of `n` divided by 2. Since `n` is not modified inside the loop, we can simplify the loop condition to `while (n > 0)` instead of `for (scanf("%d", &n); n--; ...)`.

Optimized program:

```
#include <cstdio>
int n;
int main() {
  scanf("%d", &n);
  while (n > 0) {
    printf("%d", n % 2);
    n--;
  }
  return 0;
}
```