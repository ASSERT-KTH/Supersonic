#include <iostream>
#include <vector>
using namespace std;

const int MAXN = 1000000;
int freq[MAXN];
int cfreq[MAXN];

bool isvalid(int n, int m, int x, int y) {
  if (x < 1 || x > n || y < 1 || y > m)
    return false;
  
  fill(cfreq, cfreq + MAXN, 0);
  int dx = abs(x - 1);
  int dy = abs(y - 1);
  int index = dx + dy;
  cfreq[index]++;
  
  for (int i = 1; i < n * m; i++) {
    int next_dx = i % n;
    int next_dy = i / n;
    int diff = abs(next_dx - dx) + abs(next_dy - dy);
    cfreq[diff]++;
  }
  
  for (int i = 0; i < MAXN; i++) {
    if (cfreq[i] != freq[i])
      return false;
  }
  
  return true;
}

int main() {
  int T;
  cin >> T;
  
  fill(freq, freq + MAXN, 0);
  int b = -1;
  
  for (int t = 0; t < T; t++) {
    int k;
    cin >> k;
    freq[k]++;
    b = max(b, k);
  }
  
  int x = 0;
  
  for (int t = 1; t < T; t++) {
    if (freq[t] != (t << 2))
      break;
    x = t;
  }
  
  int n = 1;
  int sqrtT = sqrt(T);
  
  while (n * n <= T) {
    if (T % n == 0) {
      int m = T / n;
      int y = n + m - b - x;
      
      if (isvalid(n, m, x, y)) {
        cout << n << " " << m << endl;
        cout << x << " " << y << endl;
        goto l1;
      } else if (isvalid(m, n, x, y)) {
        cout << m << " " << n << endl;
        cout << x << " " << y << endl;
        goto l1;
      }
    }
    n++;
  }
  
  cout << -1 << endl;
  
l1:
  return 0;
}