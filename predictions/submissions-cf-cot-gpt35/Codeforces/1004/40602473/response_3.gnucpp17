#include <cstdio>
#include <vector>
using namespace std;

const int MAXN = 1000; // Maximum possible number of unique values

int freq[MAXN];
int cfreq[MAXN];

bool isvalid(int n, int m, int x, int y) {
  if (x < 1 || x > n || y < 1 || y > m)
    return false;
  fill(cfreq, cfreq + MAXN, 0);
  int i, j;
  x--;
  y--;
  for (i = 0; i < n; i++) {
    for (j = 0; j < m; j++) {
      cfreq[(abs(x - i) + abs(y - j))]++;
    }
  }
  for (i = 0; i < MAXN; i++) {
    if (cfreq[i] != freq[i])
      return false;
  }
  return true;
}

int main() {
  int T;
  scanf("%d", &T);

  int t, b = -1, x;
  for (t = 0; t < T; t++) {
    int k;
    scanf("%d", &k);
    freq[k]++;
    b = max(b, k);
    if (t > 0 && (freq[t] != (t << 2)))
      break;
    x = t;
  }

  int n, m, y;
  for (n = 1; n * n <= T; n++) {
    if (T % n == 0) {
      m = T / n;
      y = n + m - b - x;
      if (isvalid(n, m, x, y)) {
        printf("%d %d\n", n, m);
        printf("%d %d\n", x, y);
        return 0;
      } else if (isvalid(m, n, x, y)) {
        printf("%d %d\n", m, n);
        printf("%d %d\n", x, y);
        return 0;
      }
    }
  }
  printf("-1\n");
  return 0;
}