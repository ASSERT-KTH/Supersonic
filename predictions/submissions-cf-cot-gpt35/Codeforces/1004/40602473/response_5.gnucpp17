#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

const int MAXN = 1000000;
int freq[MAXN];
int cfreq[MAXN];

bool isvalid(int n, int m, int x, int y) {
  if (x < 1 || x > n || y < 1 || y > m)
    return false;
  
  std::fill(cfreq, cfreq + MAXN, 0);
  int i, j;
  
  for (i = 0; i < n; i++) {
    for (j = 0; j < m; j++) {
      cfreq[std::abs(x - i) + std::abs(y - j)]++;
    }
  }
  
  return std::equal(freq, freq + MAXN, cfreq);
}

int main() {
  std::fill(freq, freq + MAXN, 0);
  
  int T;
  std::cin >> T;
  
  int k, b = -1, x = 0;
  
  for (int t = 0; t < T; t++) {
    std::cin >> k;
    freq[k]++;
    b = std::max(b, k);
    if (t > 0 && freq[t] != (t << 2)) {
      x = t;
      break;
    }
  }
  
  int n, m, y;
  
  for (n = 1; n * n <= T; n++) {
    if (T % n == 0) {
      m = T / n;
      y = n + m - b - x;
      if (isvalid(n, m, x, y)) {
        std::cout << n << " " << m << std::endl;
        std::cout << x << " " << y << std::endl;
        return 0;
      } else if (isvalid(m, n, x, y)) {
        std::cout << m << " " << n << std::endl;
        std::cout << x << " " << y << std::endl;
        return 0;
      }
    }
  }
  
  std::cout << -1 << std::endl;
  
  return 0;
}