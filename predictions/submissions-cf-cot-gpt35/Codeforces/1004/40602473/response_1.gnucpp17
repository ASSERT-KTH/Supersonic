#include <algorithm>
#include <iostream>
#include <vector>
#include <cmath>

const int MAXN = 1000000;

int freq[MAXN];
int cfreq[MAXN];

bool isvalid(int n, int m, int x, int y) {
  if (x < 1 || x > n || y < 1 || y > m)
    return false;
  std::fill(cfreq, cfreq + MAXN, 0);
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      cfreq[std::abs(x - i) + std::abs(y - j)]++;
    }
  }
  for (int i = 0; i < MAXN; ++i) {
    if (cfreq[i] != freq[i])
      return false;
  }
  return true;
}

int main() {
  std::fill(freq, freq + MAXN, 0);
  int T;
  std::cin >> T;
  int b = -1, x;
  for (int t = 0; t < T; ++t) {
    int k;
    std::cin >> k;
    freq[k]++;
    b = std::max(b, k);
  }
  int t = 0;
  for (; t < T; ++t) {
    if (t > 0 && (freq[t] != (t << 2)))
      break;
  }
  x = t;
  int n, m, y;
  int sqrt_b = std::sqrt(b);
  for (n = 1; n <= sqrt_b; ++n) {
    if (T % n == 0) {
      m = T / n;
      y = n + m - b - x;
      if (isvalid(n, m, x, y)) {
        std::cout << n << " " << m << std::endl;
        std::cout << x << " " << y << std::endl;
        return 0;
      } else if (isvalid(m, n, x, y)) {
        std::cout << m << " " << n << std::endl;
        std::cout << x << " " << y << std::endl;
        return 0;
      }
    }
  }
  std::cout << -1 << std::endl;
  return 0;
}