#include <iostream>
#include <unordered_map>
#include <climits>

void solve() {
    std::unordered_map<int, int> m;
    int n;
    std::cin >> n;
    int mi = INT_MAX;
    int uniqueCount = 0;

    for (int i = 0; i < n; i++) {
        int num;
        std::cin >> num;
        m[num]++;
        
        if (m[num] == 1) {
            uniqueCount++;
        }
        
        while (uniqueCount == i + 1) {
            mi = std::min(mi, i + 1);
            int numToRemove = a[i - mi + 1];
            m[numToRemove]--;
            if (m[numToRemove] == 0) {
                uniqueCount--;
            }
            mi = std::min(mi, i + 1);
        }
    }

    if (mi == INT_MAX) {
        std::cout << 0 << "\n";
    } else {
        std::cout << mi << "\n";
    }
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);

    int t = 1;
    while (t--) {
        solve();
    }

    return 0;
}