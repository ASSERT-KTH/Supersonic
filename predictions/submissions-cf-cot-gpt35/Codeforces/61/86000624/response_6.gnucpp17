#include <iostream>
#include <vector>
#include <queue>
using namespace std;

constexpr int maxn = 100005;

int main() {
  int n;
  cin >> n;
  int sum = 0;
  vector<pair<int, int>> adj[maxn];
  for (int i = 0; i < n; i++) {
    int x, y, w;
    cin >> x >> y >> w;
    adj[x - 1].emplace_back(y - 1, w);
    adj[y - 1].emplace_back(x - 1, w);
    sum += w;
  }
  queue<pair<int, int>> q;
  bool visited[n] = {};
  q.emplace(0, 0);
  visited[0] = true;
  int big = 0;
  while (!q.empty()) {
    const pair<int, int>& s = q.front();
    q.pop();
    big = max(big, s.second);
    for (const auto& t : adj[s.first]) {
      if (!visited[t.first]) {
        visited[t.first] = true;
        q.emplace(t.first, s.second + t.second);
      }
    }
  }
  cout << (2 * sum) - big << endl;
}