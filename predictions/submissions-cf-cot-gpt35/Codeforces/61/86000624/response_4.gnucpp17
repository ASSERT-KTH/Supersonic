#include <iostream>
#include <vector>
#include <queue>
#include <bitset>
using namespace std;

const int maxn = 100005;
vector<pair<int, int>> adj[maxn];

int main() {
  int n;
  cin >> n;
  int sum = 0;
  for (int i = 0; i < n - 1; i++) {
    int x, y, w;
    cin >> x >> y >> w;
    adj[x - 1].push_back(make_pair(y - 1, w));
    adj[y - 1].push_back(make_pair(x - 1, w));
    sum += w;
  }
  queue<int> q;
  bitset<maxn> seen;
  q.push(0);
  seen[0] = true;
  int big = -1;
  while (!q.empty()) {
    int s = q.front();
    q.pop();
    for (int i = 0; i < adj[s].size(); i++) {
      int t = adj[s][i].first;
      int weight = adj[s][i].second;
      if (!seen[t]) {
        seen[t] = true;
        q.push(t);
        big = max(big, weight);
      }
    }
  }
  cout << (2 * sum) - big << endl;
}