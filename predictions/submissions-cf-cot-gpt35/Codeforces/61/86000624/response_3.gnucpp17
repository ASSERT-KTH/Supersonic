#include <iostream>
#include <vector>
#include <queue>
using namespace std;

#define int long long

const int maxn = 100005;

signed main() {
  int n;
  cin >> n;
  int sum = 0;
  for (int i = 0; i < n; i++) {
    int x, y, w;
    cin >> x >> y >> w;
    sum += w;
  }

  vector<pair<int, int>> adj[maxn];
  adj[0].reserve(n);
  
  for (int i = 0; i < n - 1; i++) {
    int x, y, w;
    cin >> x >> y >> w;
    adj[x - 1].push_back(make_pair(y - 1, w));
    adj[y - 1].push_back(make_pair(x - 1, w));
  }

  queue<pair<int, int>> q;
  int seen[maxn] = {};
  q.push(make_pair(0, 0));
  seen[0] = 1;
  int big = -1;
  int max_value = 0;
  
  while (!q.empty()) {
    pair<int, int> s = q.front();
    q.pop();
    big = max(big, s.second);
    max_value = max(max_value, s.second);
    
    for (auto t : adj[s.first]) {
      if (!seen[t.first]) {
        seen[t.first] = 1;
        q.push(make_pair(t.first, s.second + t.second));
      }
    }
  }
  
  cout << (2 * sum) - max_value << endl;
}