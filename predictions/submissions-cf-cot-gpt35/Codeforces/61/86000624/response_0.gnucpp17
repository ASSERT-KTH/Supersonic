#include <iostream>
#include <vector>
#include <deque>
#include <utility>

const int maxn = 100005;

int main() {
  int n;
  std::cin >> n;
  
  std::vector<std::pair<int, int>> adj[maxn];
  
  for (int i = 0; i < n - 1; i++) {
    int x, y, w;
    std::cin >> x >> y >> w;
    adj[x - 1].push_back(std::make_pair(y - 1, w));
    adj[y - 1].push_back(std::make_pair(x - 1, w));
  }
  
  std::deque<std::pair<int, int>> q;
  std::vector<bool> seen(n + 1, false);
  
  q.push_back(std::make_pair(0, 0));
  seen[0] = true;
  
  int big = 0;
  int sum = 0;
  
  while (!q.empty()) {
    std::pair<int, int> s = q.front();
    q.pop_front();
    
    big = std::max(big, s.second);
    sum += s.second;
    
    for (auto t : adj[s.first]) {
      if (!seen[t.first]) {
        seen[t.first] = true;
        q.push_back(std::make_pair(t.first, s.second + t.second));
      }
    }
  }
  
  std::cout << (2 * sum) - big << std::endl;
  
  return 0;
}