#include <iostream>
#include <vector>
#include <queue>

typedef long long int ll;

const int maxn = 100000;

int main() {
  int n;
  std::cin >> n;
  int sum = 0;
  for (int i = 0; i < n - 1; i++) {
    int x, y, w;
    std::cin >> x >> y >> w;
    std::vector<std::pair<int, int>> adj_x = std::vector<std::pair<int, int>>();
    std::vector<std::pair<int, int>> adj_y = std::vector<std::pair<int, int>>();
    adj_x.push_back({y - 1, w});
    adj_y.push_back({x - 1, w});
    sum += w;
  }
  std::queue<std::pair<int, int>> q;
  std::vector<int> seen(n + 1, 0);
  q.push({0, 0});
  seen[0] = 1;
  int max_dist = -1;
  for (; !q.empty(); q.pop()) {
    std::pair<int, int> s = q.front();
    max_dist = std::max(max_dist, s.second);
    for (auto t : adj[s.first]) {
      if (seen[t.first] == 0) {
        seen[t.first] = 1;
        q.push({t.first, s.second + t.second});
      }
    }
  }
  std::cout << (2 * sum) - max_dist << std::endl;
}