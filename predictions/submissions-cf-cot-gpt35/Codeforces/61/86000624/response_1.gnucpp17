#include <iostream>
#include <vector>
#include <queue>
using namespace std;

typedef long long ll;

const int maxn = 100005;

vector<pair<int, int>> adj[maxn];

int main() {
  int n;
  cin >> n;
  ll sum = 0;
  
  adj[0].reserve(n-1);
  
  for (int i = 0; i < n - 1; i++) {
    int x, y, w;
    cin >> x >> y >> w;
    adj[x - 1].emplace_back(y - 1, w);
    adj[y - 1].emplace_back(x - 1, w);
    sum += w;
  }
  
  queue<pair<int, int>> q;
  int seen[maxn] = {};
  q.reserve(n);
  
  q.emplace(0, 0);
  seen[0] = 1;
  int big = -1;
  
  while (!q.empty()) {
    auto& s = q.front();
    q.pop();
    big = max(big, s.second);
    const auto& adj_s = adj[s.first];
    for (const auto& t : adj_s) {
      if (!seen[t.first]) {
        seen[t.first] = 1;
        q.emplace(t.first, s.second + t.second);
      }
    }
  }
  
  cout << (2 * sum) - big << endl;
}