#include <cstdio>
#include <cstdlib>
#include <unordered_set>
#include <unordered_map>

typedef long long ll;

const int mx = 1e6 + 123;

int n, a[mx];
std::unordered_set<int> s;
std::unordered_map<int, int> m;

int compare(const void *a, const void *b) {
    return (*(int *)a - *(int *)b);
}

void _case_() {
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }
    qsort(a, n, sizeof(int), compare);
    for (int i = 0; i < n; i++) {
        if (a[i] != 1 && m[a[i] - 1] == 0) {
            s.insert(a[i] - 1);
            m[a[i] - 1]++;
        } else if (m[a[i]] == 0) {
            s.insert(a[i]);
            m[a[i]]++;
        } else if (m[a[i] + 1] == 0) {
            s.insert(a[i] + 1);
            m[a[i] + 1]++;
        }
    }
    printf("%d\n", s.size());
}

int main() {
    _case_();
    return 0;
}