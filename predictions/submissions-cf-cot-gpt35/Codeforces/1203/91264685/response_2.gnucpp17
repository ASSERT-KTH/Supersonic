#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>

using namespace std;

long long gcd(long long a, long long b) {
    return __gcd(a, b);
}

long long lcm(long long a, long long b) {
    return a * (b / gcd(a, b));
}

void _case_() {
    int n;
    cin >> n;
    
    vector<int> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    
    sort(a.begin(), a.end());
    
    unordered_set<int> s;
    unordered_map<int, int> m;
    
    for (int i = 0; i < n; i++) {
        if (a[i] != 1 && m[a[i] - 1] == 0) {
            s.insert(a[i] - 1);
            m[a[i] - 1]++;
        } else if (m[a[i]] == 0) {
            s.insert(a[i]);
            m[a[i]]++;
        } else if (m[a[i] + 1] == 0) {
            s.insert(a[i] + 1);
            m[a[i] + 1]++;
        }
    }
    
    cout << s.size() << endl;
}

int main() {
    _case_();
    return 0;
}