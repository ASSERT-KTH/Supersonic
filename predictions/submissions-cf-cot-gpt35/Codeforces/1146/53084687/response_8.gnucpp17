#include <cstdio>
using namespace std;

const int X = 1e5;
int sgt0[X * 4 + 1], sgt1[X * 4 + 1];

void build(int l, int r, int x) {
  if (l == r) {
    sgt0[x] = sgt1[x] = 1;
    return;
  }
  int mid = (l + r) >> 1;
  build(l, mid, x << 1);
  build(mid + 1, r, x << 1 | 1);
}

void update(int l, int r, int x, int val) {
  if (l <= r) {
    if (val == 2) {
      sgt0[x] = -sgt0[x];
      sgt1[x] = -sgt1[x];
    } else {
      sgt0[x] = sgt1[x] = val;
    }
  }
}

int query(int a, int x) {
  if (a == x) {
    return sgt0[x];
  }
  int mid = (a + x) >> 1;
  if (a <= mid) {
    return query(a, x << 1);
  } else {
    return query(a, x << 1 | 1);
  }
}

int main() {
  int n, q;
  scanf("%d %d", &n, &q);
  int a[n];
  for (int i = 0; i < n; i++) {
    scanf("%d", &a[i]);
  }
  getchar();
  build(1, X, 1);
  while (q--) {
    char s;
    int x;
    scanf("%c %d\n", &s, &x);
    if (s == '>') {
      x++;
      if (x == 0) {
        x++;
      }
      if (x > 0) {
        update(x, X, 1, 1);
        update(x, X, 1, -1);
      } else {
        update(1, -x, 1, 2);
        update(-x + 1, X, 1, 1);
        update(-x + 1, X, 1, -1);
      }
    } else {
      x--;
      if (x == 0) {
        x--;
      }
      if (x < 0) {
        update(-x, X, 1, -1);
        update(-x, X, 1, 1);
      } else {
        update(1, x, 1, 2);
        update(x + 1, X, 1, -1);
        update(x + 1, X, 1, 1);
      }
    }
  }
  for (int i = 0; i < n; i++) {
    int r = 0;
    if (a[i] < 0) {
      r = query(-a[i], 1);
    } else if (a[i] > 0) {
      r = query(a[i], 1);
    }
    printf("%d%c", a[i] * r, i == n - 1 ? '\n' : ' ');
  }
  return 0;
}