#include <iostream>
#include <vector>
using namespace std;

int countPeaksAndValleys(const vector<int>& arr) {
    int count = 0;
    int n = arr.size();
    
    for (int i = 1; i < n - 1; i++) {
        if ((arr[i] > arr[i + 1] && arr[i] > arr[i - 1]) ||
            (arr[i] < arr[i - 1] && arr[i] < arr[i + 1])) {
            count++;
        }
    }
    
    return count;
}

int main() {
    int t;
    cin >> t;
    
    while (t--) {
        int n;
        cin >> n;
        
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        
        int initialCount = countPeaksAndValleys(arr);
        int maxCount = 0;
        
        for (int i = 1; i < n - 1; i++) {
            int temp = initialCount;
            int val = arr[i];
            
            if (i - 1 >= 0) {
                arr[i] = arr[i - 1];
                if ((arr[i] > arr[i + 1] && arr[i] > arr[i - 1]) ||
                    (arr[i] < arr[i - 1] && arr[i] < arr[i + 1])) {
                    temp++;
                }
            }
            
            maxCount = max(maxCount, temp);
            
            if (i + 1 < n) {
                arr[i] = arr[i + 1];
                if ((arr[i] > arr[i + 1] && arr[i] > arr[i - 1]) ||
                    (arr[i] < arr[i - 1] && arr[i] < arr[i + 1])) {
                    temp--;
                }
            }
            
            maxCount = max(maxCount, temp);
            
            arr[i] = val;
        }
        
        cout << initialCount - maxCount << endl;
    }
    
    return 0;
}