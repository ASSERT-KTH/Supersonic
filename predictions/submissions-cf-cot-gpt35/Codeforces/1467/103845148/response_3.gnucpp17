#include <iostream>
#include <vector>

std::vector<int> a;

int kitne(const std::vector<int>& a, size_t ind) {
  size_t n = a.size();
  int cnt = 0;
  
  if (ind - 1 >= 0 && ind + 1 < n) {
    for (size_t i = ind - 1; i <= ind + 1; i++) {
      if ((a[i] > a[i + 1] && a[i] > a[i - 1]) ||
          (a[i] < a[i - 1] && a[i] < a[i + 1])) {
        cnt++;
      }
    }
  }
  
  return cnt;
}

void hn_bhai() {
  size_t n;
  std::cin >> n;
  
  a.resize(n);
  for (size_t i = 0; i < n; i++) {
    std::cin >> a[i];
  }
  
  int tot = 0;
  for (size_t i = 1; i < n - 1; i++) {
    if ((a[i] > a[i + 1] && a[i] > a[i - 1]) ||
        (a[i] < a[i - 1] && a[i] < a[i + 1])) {
      tot++;
    }
  }
  
  int p = 0;
  for (size_t i = 1; i < n - 1; i++) {
    int temp = kitne(a, i);
    int val = a[i];
    
    if (i - 1 >= 0) {
      a[i] = a[i - 1];
    }
    p = std::max(p, temp - kitne(a, i));
    
    if (i + 1 < n) {
      a[i] = a[i + 1];
    }
    p = std::max(p, temp - kitne(a, i));
    
    a[i] = val;
  }
  
  std::cout << tot - p << std::endl;
}

int main() {
  int t;
  std::cin >> t;
  
  while (t--) {
    hn_bhai();
  }
  
  return 0;
}