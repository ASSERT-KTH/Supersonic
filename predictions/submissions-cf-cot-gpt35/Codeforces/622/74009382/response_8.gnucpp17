#include <iostream>
using namespace std;

const int MOD = 1000000007;
const int N = 1000005;

int pw(int a, int b, int p) {
  int result = 1;
  while (b > 0) {
    if (b & 1)
      result = (1LL * result * a) % p;
    a = (1LL * a * a) % p;
    b >>= 1;
  }
  return result;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int n, k;
  cin >> n >> k;

  int *P = new int[k + 4];
  int *ele = new int[k + 4];

  for (int i = 1; i < k + 4; i++) {
    int j = i;
    P[i] = (P[i - 1] + pw(j, k, MOD)) % MOD;
  }

  if (n <= k + 2) {
    cout << P[n] << endl;
    return 0;
  }

  ele[1] = 1;
  for (int i = 1; i < k + 2; i++) {
    ele[1] = (1LL * ele[1] * (MOD + n - i - 1)) % MOD;
    ele[1] = (1LL * ele[1] * pw(MOD - i, MOD - 2, MOD)) % MOD;
  }

  int ans = 0;
  ans = (1LL * ans + 1LL * ele[1] * P[1]) % MOD;

  for (int i = 2; i < k + 3; i++) {
    ele[i] = (1LL * ele[i - 1] * (MOD - k + i - 3)) % MOD;
    ele[i] = (1LL * ele[i] * pw(i - 1, MOD - 2, MOD)) % MOD;
    ele[i] = (1LL * ele[i] * pw(MOD + n - i, MOD - 2, MOD)) % MOD;
    ele[i] = (1LL * ele[i] * (MOD + n - i + 1)) % MOD;
    ans = (1LL * ans + 1LL * ele[i] * P[i]) % MOD;
  }

  cout << ans << endl;

  delete[] P;
  delete[] ele;

  return 0;
}