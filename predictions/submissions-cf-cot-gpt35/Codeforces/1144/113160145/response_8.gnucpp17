#include <iostream>
#include <vector>
#include <map>
using namespace std;

typedef pair<int, int> pii;

const int cons = 200005;
vector<int> g[cons];
int u[cons][2] = {0};

void dfs(int node, int pv) {
    u[node][0] = pv;
    u[node][1] = pv ^ 1;
    for (int child : g[node]) {
        if (u[child][0] == 0) {
            dfs(child, pv ^ 1);
        }
    }
}

int main() {
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);

    int n, m;
    cin >> n >> m;

    vector<pii> v;
    for (int i = 0; i < m; i++) {
        int j, k;
        cin >> j >> k;
        g[j].push_back(k);
        g[k].push_back(j);
        v.push_back({j, k});
    }

    dfs(1, 0);

    int M = 0;
    for (int i = 0; i < m; i++) {
        if (u[v[i].first][0] != u[v[i].second][0]) {
            M = 1;
            break;
        }
    }

    if (M) {
        cout << "NO" << endl;
    } else {
        cout << "YES" << endl;
        for (int i = 0; i < m; i++) {
            cout << u[v[i].first][0];
        }
    }

    return 0;
}