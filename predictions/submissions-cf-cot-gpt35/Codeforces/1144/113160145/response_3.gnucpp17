#include <iostream>
#include <vector>

using namespace std;

typedef pair<int, int> pii;

const int MAXN = 200005;

int N, M;
vector<int> g[MAXN], vis(MAXN);
vector<int> u[MAXN];

void dfs(int node, int pv) {
    vis[node] = 1;
    for (int child : g[node]) {
        if (vis[child] == 0) {
            u[node][child] = pv;
            u[child][node] = pv ^ 1;
            dfs(child, pv ^ 1);
        } else {
            if (u[node][child] != pv) {
                M = 1;
            }
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> N >> M;
    vector<pii> v;
    for (int i = 0; i < M; i++) {
        int j, k;
        cin >> j >> k;
        g[j].push_back(k);
        g[k].push_back(j);
        v.push_back({j, k});
    }

    dfs(1, 0);

    if (M) {
        cout << "NO" << endl;
    } else {
        cout << "YES" << endl;
        for (int i = 0; i < M; i++) {
            cout << u[v[i].first][v[i].second];
        }
    }

    return 0;
}