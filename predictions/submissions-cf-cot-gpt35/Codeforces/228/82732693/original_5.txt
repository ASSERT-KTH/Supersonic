Step 1: Remove unnecessary header file inclusion
The program includes the `<bits/stdc++.h>` header file, which is not necessary and can be removed.

Step 2: Optimize the loop bounds
In the first loop, the loop condition is `i < 4`, which can be optimized to `i < 3` since the array `mas` has a size of 4.

Step 3: Optimize the second loop
In the second loop, the loop condition is `i < 3`, which can be optimized to `i < 2` since we are only checking adjacent elements.

Step 4: Remove unnecessary variable initialization
The variable `ans` is initially set to 3, but it can be removed since it is only used to count the number of distinct elements.

Here is the optimized program:

```cpp
#include <iostream>
#include <algorithm>

int main() {
  int mas[4];
  for (int i = 0; i < 3; ++i) {
    std::cin >> mas[i];
  }
  std::sort(mas, mas + 3);
  int ans = 3;
  for (int i = 0; i < 2; ++i) {
    if (mas[i] != mas[i + 1]) {
      --ans;
    }
  }
  std::cout << ans;
}
```