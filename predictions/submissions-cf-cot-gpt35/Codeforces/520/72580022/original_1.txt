Optimization steps:

1. Remove unnecessary header files: The program includes several unnecessary header files, such as `<algorithm>`, `<cmath>`, `<cstdlib>`, `<ctime>`, `<deque>`, `<iomanip>`, `<map>`, `<queue>`, `<set>`, `<stack>`, `<stdexcept>`, `<stdlib.h>`, `<vector>`. These header files are not used in the program and can be removed.

2. Remove unnecessary preprocessor macros: The program defines several unnecessary preprocessor macros, such as `sf(a)`, `sfl(a)`, `sff(a, b)`, `sffl(a, b)`, `sfff(a, b, c)`, `sfffl(a, b, c)`, `ll gcd(ll a, ll b)`, `ll lcm(ll a, ll b)`, `my_sizeof(type)`, `watch(w)`, `all(v)`, `per(i, a, n)`, `rep(i, a, n)`, `ppr(i, n)`, `REP(i, n)`, `sz(v)`, `vec`, `MAX(a, b)`, `MIN(a, b)`, `ll long long`, `endl`, `pi`. These macros are not used in the program and can be removed.

3. Optimize the `isprime` function: The `isprime` function can be optimized to improve performance. Instead of checking all numbers up to the square root of `n`, we can check only odd numbers up to the square root of `n`. Additionally, we can return false immediately if `n` is divisible by 2.

4. Optimize the loop in the main function: Instead of using a range-based for loop to iterate over the characters in the string `s`, we can use a simple for loop with an index variable. This can improve performance slightly.

5. Optimize the counting of distinct characters: Instead of using a map to count the frequency of each character, we can use an array of size 26 to count the frequency of each lowercase letter. This reduces the memory usage and improves performance.

Optimized code:

```cpp
#include <iostream>
#include <string>
using namespace std;

bool isprime(int n) {
  if (n < 2)
    return false;
  if (n == 2)
    return true;
  if (n % 2 == 0)
    return false;
  for (int i = 3; i * i <= n; i += 2) {
    if (n % i == 0)
      return false;
  }
  return true;
}

int main() {
  string s;
  int n, c = 0;
  cin >> n >> s;
  int freq[26] = {0};
  for (int i = 0; i < s.size(); i++) {
    s[i] = tolower(s[i]);
    freq[s[i] - 'a']++;
  }
  for (int i = 0; i < 26; i++) {
    if (freq[i] >= 1)
      c++;
  }
  if (c == 26)
    cout << "YES";
  else
    cout << "NO";
  return 0;
}
```
