#include <chrono>
#include <iostream>
#include <string>
#include <vector>

void solve() {
  std::string s;
  std::cin >> s;
  int n = s.size();
  int ans = 1e9;
  std::vector<int> next(n * 4, -1);
  next[n * 4 - 4 + s[n - 1] - '0'] = n - 1;
  for (int i = n - 2; i >= 0; i--) {
    next[i * 4 + s[i] - '0'] = i;
    for (int digit = 1; digit <= 3; digit++) {
      if (next[(i + 1) * 4 + digit] == -1) {
        continue;
      }
      int len;
      if (s[i] == '1') {
        len = std::max(next[(i + 1) * 4 + 2], next[(i + 1) * 4 + 3]) - i;
      } else if (s[i] == '2') {
        len = std::max(next[(i + 1) * 4 + 1], next[(i + 1) * 4 + 3]) - i;
      } else {
        len = std::max(next[(i + 1) * 4 + 1], next[(i + 1) * 4 + 2]) - i;
      }
      ans = ans < len ? ans : len;
    }
  }
  std::cout << (ans == 1e9 ? 0 : ans + 1) << '\n';
}

int main() {
  std::ios::sync_with_stdio(0);
  std::cin.tie(NULL);
  std::cout.tie(NULL);
  srand(std::chrono::steady_clock::now().time_since_epoch().count());
  int TC;
  std::cin >> TC;
  while (TC--) {
    solve();
  }
}