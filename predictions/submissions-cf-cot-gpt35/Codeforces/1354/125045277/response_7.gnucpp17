#include <iostream>
#include <string>
#include <vector>

const int INF = 1e9;

void solve() {
    std::string s;
    std::cin >> s;
    int n = s.size();
    int ans = INF;
    std::vector<int> last(4, -1);
    for (int i = n - 1; i >= 0; i--) {
        last[s[i] - '0'] = i;
        if (last[1] == -1 || last[2] == -1 || last[3] == -1) {
            continue;
        }
        int len;
        if (s[i] == '1') {
            len = std::max(last[2], last[3]) - i;
        } else if (s[i] == '2') {
            len = std::max(last[1], last[3]) - i;
        } else {
            len = std::max(last[1], last[2]) - i;
        }
        ans = std::min(ans, len);
    }
    if (ans == INF) {
        std::cout << 0 << std::endl;
    } else {
        std::cout << (ans + 1) << std::endl;
    }
}

int main() {
    std::ios::sync_with_stdio(0);
    std::cin.tie(NULL);
    std::cout.tie(NULL);
    int TC;
    std::cin >> TC;
    while (TC--) {
        solve();
    }
    return 0;
}