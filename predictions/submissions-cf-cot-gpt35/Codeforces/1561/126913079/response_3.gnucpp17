#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  
  int T;
  std::cin >> T;
  
  while (T--) {
    int N;
    std::cin >> N;
    
    std::vector<std::pair<int, int>> v;
    v.reserve(N);
    
    int start = 0;
    int end = 0;
    
    for (int i = 0; i < N; i++) {
      int M;
      std::cin >> M;
      
      int max_value = -1e9;
      
      for (int j = 0; j < M; j++) {
        int x;
        std::cin >> x;
        max_value = std::max(max_value, x - j + 1);
      }
      
      int current_start = max_value;
      int current_end = M + current_start;
      
      if (current_start >= end) {
        start += current_start - end;
        end = current_end;
      } else {
        end += current_end - current_start;
      }
      
      v.emplace_back(current_start, current_end);
    }
    
    std::sort(v.begin(), v.end());
    
    std::cout << start << '\n';
  }

  return 0;
}