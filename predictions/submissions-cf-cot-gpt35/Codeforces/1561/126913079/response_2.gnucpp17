#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int T;
  scanf("%d", &T);
  while (T--) {
    int N;
    scanf("%d", &N);
    vector<pair<int, int>> v;
    for (int i = 0; i < N; i++) {
      int M;
      scanf("%d", &M);
      int start = 0;
      vector<int> mx(M);
      for (int j = 0; j < M; j++) {
        scanf("%d", &mx[j]);
        mx[j] -= j + 1;
      }
      start = *max_element(mx.begin(), mx.end()) + 1;
      int end = M + start;
      v.push_back({start, end});
    }
    sort(v.begin(), v.end(), [](const pair<int, int>& a, const pair<int, int>& b) {
      return a.first < b.first;
    });
    int start = 0;
    int end = 0;
    for (int i = 0; i < N; i++) {
      if (v[i].first >= end) {
        start += v[i].first - end;
        end = v[i].second;
      } else {
        end += v[i].second - v[i].first;
      }
    }
    printf("%d\n", start);
  }

  return 0;
}