#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
  int T;
  cin >> T;
  while (T--) {
    int N;
    cin >> N;
    vector<pair<int, int>> v;
    int start = 0;
    int end = 0;
    for (int i = 0; i < N; i++) {
      int M;
      cin >> M;
      int maxDiff = 0;
      for (int j = 0; j < M; j++) {
        int x;
        cin >> x;
        maxDiff = max(maxDiff, x - j + 1);
      }
      int currentEnd = M + maxDiff;
      v.emplace_back(maxDiff, currentEnd);
      end = max(end, currentEnd);
    }
    int totalDiff = 0;
    for (int i = 0; i < N; i++) {
      if (v[i].first >= end) {
        int diff = v[i].first - end;
        start += diff;
        end = v[i].second;
      } else {
        int diff = end - v[i].first;
        end = v[i].second + diff;
      }
    }
    cout << start << "\n";
  }
  return 0;
}