#include <cstdio>
#include <algorithm>

int main() {
  int T;
  scanf("%d", &T);
  
  while (T--) {
    int N;
    scanf("%d", &N);
    
    int v[N][2];
    for (int i = 0; i < N; i++) {
      int M;
      scanf("%d", &M);
      
      int start = 0;
      int mx[M];
      for (int j = 0; j < M; j++) {
        int x;
        scanf("%d", &x);
        mx[j] = x - j + 1;
      }
      
      start = *std::max_element(mx, mx + M);
      int end = M + start;
      v[i][0] = start;
      v[i][1] = end;
    }
    
    std::sort(v, v + N);
    
    int start = 0;
    int end = 0;
    for (int i = 0; i < N; i++) {
      if (v[i][0] >= end) {
        int diff = v[i][0] - end;
        start += diff;
        end = v[i][1];
      } else {
        int diff = end - v[i][0];
        end = v[i][1] + diff;
      }
    }
    
    printf("%d\n", start);
  }
}