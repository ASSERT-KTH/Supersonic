#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  int T;
  std::cin >> T;
  
  while (T--) {
    int N;
    std::cin >> N;
    
    std::vector<std::pair<int, int>> v;
    v.reserve(N); // Allocate memory for N elements
    
    int start = 0;
    int end = 0;
    
    for (int i = 0; i < N; i++) {
      int M;
      std::cin >> M;
      
      std::vector<int> mx;
      mx.reserve(M); // Allocate memory for M elements
      
      for (int j = 0; j < M; j++) {
        int x;
        std::cin >> x;
        mx.emplace_back(x - j + 1); // Construct elements in-place
      }
      
      int max_val = *std::max_element(mx.begin(), mx.end());
      int cur_start = max_val;
      int cur_end = M + max_val;
      
      if (cur_start >= end) {
        start += cur_start - end;
        end = cur_end;
      } else {
        end += cur_end - cur_start;
      }
    }
    
    std::cout << start << "\n";
  }
  
  return 0;
}