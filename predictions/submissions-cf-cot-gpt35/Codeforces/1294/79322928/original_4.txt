Optimization Steps:

1. Remove unnecessary header files: Remove `bits/stdc++.h` and `vector` as they are not used in the program.

2. Avoid unnecessary preprocessor definitions: Remove the preprocessor definitions for `ll`, `M`, `D`, and `PI` as they are not used in the program.

3. Avoid unnecessary function: Remove the `sortbysec` function as it is not used in the program.

4. Remove unnecessary input/output synchronization: Remove the line `ios_base::sync_with_stdio(false);` and `cin.tie(NULL);` as they are not required for this program.

5. Optimize the loop condition: Instead of using `tests-- > 0` in the `while` loop condition, use `tests > 0` and decrement `tests` after each iteration.

6. Optimize the set initialization: Instead of inserting `max(2 * q, q + 100)` numbers into the set, insert only `x` numbers into the set as `y % x` will always be less than `x`.

7. Avoid unnecessary variable initialization: Remove the initialization of `a[x]` with `{0}` as it is not necessary.

8. Use iterator instead of dereferencing: Replace `cout << *(s.begin()) << endl;` with `cout << *s.begin() << endl;`.

Optimized Code:

```cpp
#include <iostream>
#include <set>
using namespace std;

int main() {
  int tests = 1;
  while (tests > 0) {
    int q, x;
    cin >> q >> x;
    set<int> s;
    for (int i = 0; i < x; i++)
      s.insert(i);
    while (q > 0) {
      int y;
      cin >> y;
      int z = y % x;
      s.erase(z);
      cout << *s.begin() << endl;
      q--;
    }
    tests--;
  }
  return 0;
}
```