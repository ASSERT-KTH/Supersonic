Optimization Steps:
1. Remove unnecessary headers `<bits/stdc++.h>` and `<algorithm>`.
2. Remove unnecessary macro definitions `M`, `D`, and `PI`.
3. Remove the unused sortbysec function.
4. Remove the unnecessary `ios_base::sync_with_stdio(false)` and `cin.tie(NULL)` statements.
5. Remove the unnecessary `tests` variable and the while loop.
6. Use a vector instead of an array `a` to store the count of remainders.
7. Pre-allocate the vector `s` to avoid unnecessary resizing.
8. Iterate up to `q` instead of `max(2 * q, q + 100)` to reduce the size of the set.
9. Use `emplace_hint` instead of `erase` and `insert` to improve set operations.

Here is the optimized program:

```cpp
#include <iostream>
#include <set>
#include <vector>
using namespace std;

int main() {
  int q, x;
  cin >> q >> x;
  vector<int> a(x, 0);
  set<int> s;
  s.reserve(q);
  for (int i = 0; i < q; i++)
    s.emplace_hint(s.end(), i);
  for (int i = 0; i < q; i++) {
    int y;
    cin >> y;
    int z = a[y % x] * x + y % x;
    s.erase(z);
    a[y % x]++;
    cout << *(s.begin()) << endl;
  }
  return 0;
}
```