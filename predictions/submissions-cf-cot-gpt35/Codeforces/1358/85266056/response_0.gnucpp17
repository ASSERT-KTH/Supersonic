#include <iostream>
#include <vector>
using namespace std;

long long getSum(long long n) { return n * (n + 1) >> 1; }

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  long long n, x;
  cin >> n >> x;
  
  vector<long long> v(n);
  for (long long i = 0; i < n; i++)
    cin >> v[i];
    
  for (long long i = 1; i < n; i++) {
    v[i] += v[i - 1];
  }
  
  long long ans = 0;
  int s = 0, e = 0;
  long long days = 0;
  
  while (e < n) {
    days += v[e];
    e++;
    
    while (days > x) {
      if (days - v[s] < x) {
        break;
      }
      days -= v[s];
      s++;
    }
    
    long long diff = max(days - x, 0LL);
    ans = max(ans, v[e - 1] - (diff > 0 ? v[s - 1] : 0));
  }
  
  cout << ans;
  return 0;
}