#include <iostream>
#include <vector>
using namespace std;

long long getSum(long long n) {
  return n * (n + 1) / 2;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  long long n, x;
  cin >> n >> x;
  
  vector<long long> v(n);
  for (int i = 0; i < n; i++) {
    cin >> v[i];
  }
  
  for (int i = 0; i < n; i++) {
    v.push_back(v[i]);
  }
  
  n *= 2;
  
  vector<long long> z(n);
  long long sum = 0;
  long long sumOfSquares = 0;
  int s = 0, e = 0;
  long long days = 0;
  
  while (e < v.size()) {
    days += v[e];
    sum += getSum(v[e]);
    sumOfSquares += v[e] * (v[e] + 1) / 2;
    e++;
    while (days > x) {
      if (days - v[s] < x) {
        break;
      }
      days -= v[s];
      sum -= getSum(v[s]);
      sumOfSquares -= v[s] * (v[s] + 1) / 2;
      s++;
    }
    long long diff = max(days - x, 0LL);
    long long ans = sum - getSum(diff) + sumOfSquares;
    cout << ans << endl;
  }
  
  return 0;
}