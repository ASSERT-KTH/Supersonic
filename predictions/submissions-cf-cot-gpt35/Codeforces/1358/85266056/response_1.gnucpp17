#include <iostream>
#include <vector>
using namespace std;

long long getSum(long long n) { return n * (n + 1) / 2; }

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  long long n, x;
  cin >> n >> x;

  vector<long long> v(n);
  for (long long i = 0; i < n; i++)
    cin >> v[i];

  long long ans = 0;
  int s = 0, e = 0;
  long long days = 0, sums = 0, sumsquares = 0;

  while (e < n) {
    days += v[e];
    sums += getSum(v[e]);
    sumsquares += v[e] * (v[e] + 1) * (2 * v[e] + 1) / 6;
    e++;

    while (days > x) {
      days -= v[s];
      sums -= getSum(v[s]);
      sumsquares -= v[s] * (v[s] + 1) * (2 * v[s] + 1) / 6;
      s++;
    }

    long long diff = max(days - x, 0LL);
    ans = max(ans, sums - getSum(diff) + sumsquares - getSum(diff) * diff);
  }

  cout << ans;

  return 0;
}