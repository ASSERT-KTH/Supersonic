#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_set>

constexpr int MOD = 1e9 + 7;
using ll = long long;
const int N = 1200300;

std::pair<int, int> optimizeIndices(const std::vector<int>& a, int k) {
  int cnt[N] = {0};
  std::unordered_set<int> distinctElements;
  int idx1 = -1, idx2 = -1;
  int maxLength = 0;

  for (int i = 0, j = 0; i < a.size(); i++) {
    while (j < a.size()) {
      if (distinctElements.insert(a[j]).second)
        maxLength++;
      if (distinctElements.size() > k) {
        distinctElements.erase(a[j]);
        maxLength--;
        break;
      }
      j++;
    }

    if (j - i > maxLength) {
      idx1 = i;
      idx2 = j;
      maxLength = j - i;
    }

    distinctElements.erase(a[i]);
    maxLength--;
  }

  return {idx1 + 1, idx2};
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int n, k;
  std::cin >> n >> k;

  std::vector<int> a(n);
  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
  }

  std::pair<int, int> result = optimizeIndices(a, k);
  std::cout << result.first << ' ' << result.second << '\n';

  return 0;
}