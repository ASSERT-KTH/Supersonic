#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

typedef long long ll;

const int maxn = 2e5 + 10;

int main() {
  int q;
  cin >> q;

  while (q--) {
    int n, m;
    cin >> n >> m;

    vector<pair<ll, ll>> f(m);
    vector<ll> A(m);

    for (int i = 0; i < m; i++) {
      cin >> f[i].first >> f[i].second;
      A[i] = f[i].first;
    }

    nth_element(A.begin(), A.begin() + n, A.end(), greater<ll>());

    ll suf = 0;
    for (int i = n; i < m; i++) {
      suf += A[i];
    }

    ll ans = suf;

    for (int i = 0; i < m; i++) {
      ll temp = 0;
      int pos = 0;
      for (int j = 0; j < m; j++) {
        if (A[j] == f[i].second) {
          pos = j;
          break;
        }
      }

      if (pos <= m - n) {
        continue;
      }

      temp += suf;

      int num = n - (m - pos);
      if (f[i].first < f[i].second) {
        temp += f[i].first;
        num--;
      }

      temp += num * f[i].second;
      ans = max(ans, temp);
    }

    cout << ans << endl;
  }

  return 0;
}