#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

typedef long long ll;

int main() {
  int q;
  cin >> q;
  
  while (q--) {
    int n, m;
    cin >> n >> m;
    
    vector<pair<ll, ll>> f(m);
    for (int i = 0; i < m; i++) {
      cin >> f[i].first >> f[i].second;
    }
    
    ll ans = 0;
    ll maxSuffixSum = 0;
    
    sort(f.begin(), f.end());
    
    for (int i = 0; i < m; i++) {
      maxSuffixSum += f[i].first;
      
      if (i >= m - n) {
        ans = max(ans, maxSuffixSum);
      }
      
      int num = n - (m - i - 1);
      
      if (f[i].second > f[i].first && num > 0) {
        ll temp = maxSuffixSum;
        temp += (num - 1) * f[i].second;
        ans = max(ans, temp);
      }
    }
    
    cout << ans << endl;
  }
  
  return 0;
}