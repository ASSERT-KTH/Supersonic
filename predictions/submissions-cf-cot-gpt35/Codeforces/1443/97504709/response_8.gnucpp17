#include <iostream>
#include <vector>

template <typename T>
std::istream& operator>>(std::istream& input, std::vector<T>& v) {
  for (T& a : v) {
    T value;
    input >> value;
    a = value;
  }
  return input;
}

void answer(bool v) {
  constexpr const char* s[2] = {"NO", "YES"};
  std::cout << s[v] << '\n';
}

void solve(std::vector<int>& a) {
  const size_t n = a.size();
  for (size_t i = 1; i < n; ++i) {
    if (a[i - 1] < a[i]) {
      const int d = a[i] - a[i - 1];
      size_t j = i;
      while (j < n && a[j] >= d) {
        a[j] -= d;
        ++j;
      }
      if (j == n)
        return answer(true);
    }
  }
  answer(true);
}

void test_case() {
  size_t n;
  std::cin >> n;
  std::vector<int> a(n);
  std::cin >> a;
  solve(a);
}

int main() {
  size_t t;
  std::cin >> t;
  while (t-- > 0)
    test_case();
  return 0;
}