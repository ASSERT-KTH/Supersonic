#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
using namespace std;

int main() {
  int T;
  cin >> T;
  while (T--) {
    int n;
    cin >> n;
    pair<vector<int>, vector<int>> vec;
    vec.first.reserve(n);
    vec.second.reserve(n);
    for (int i = 0; i < n; i++) {
      int a;
      cin >> a;
      vec.first.emplace_back(a);
    }
    for (int i = 0; i < n; i++) {
      int b;
      cin >> b;
      vec.second.emplace_back(b);
    }
    sort(vec.first.begin(), vec.first.end());
    unordered_map<int, int> timeSum;
    int total = 0;
    for (int i = 0; i < n; i++) {
      total += vec.second[i];
      timeSum[vec.first[i]] += vec.second[i];
    }
    int ans = total;
    for (int i = 0; i < n; i++) {
      if (i > 0 && vec.first[i] == vec.first[i - 1])
        continue;
      int temp = vec.first[i] + max(0, (total - timeSum[vec.first[i]] - vec.first[i]));
      ans = min(ans, temp);
      total -= timeSum[vec.first[i]];
    }
    cout << ans << endl;
  }
}