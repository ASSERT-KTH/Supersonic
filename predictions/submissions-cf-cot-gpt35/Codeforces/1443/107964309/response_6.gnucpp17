#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
using namespace std;

int main() {
  int T;
  cin >> T;
  while (T--) {
    int n;
    cin >> n;
    
    vector<pair<int, int>> vec;
    vec.reserve(n);
    int total = 0;
    
    for (int i = 0; i < n; i++) {
      int a;
      cin >> a;
      vec.emplace_back(a, 0);
      total += a;
    }
    
    for (int i = 0; i < n; i++) {
      int b;
      cin >> b;
      vec[i].second = b;
    }
    
    sort(vec.begin(), vec.end());
    
    unordered_map<int, int> timeSum;
    for (int i = 0; i < n; i++) {
      timeSum[vec[i].first] += vec[i].second;
    }
    
    int ans = total;
    int remaining = total;
    
    for (int i = 0; i < n; i++) {
      if (i > 0 && vec[i].first == vec[i - 1].first)
        continue;
      
      remaining -= timeSum[vec[i].first];
      int temp = vec[i].first + max(0LL, remaining - vec[i].first);
      ans = min(ans, temp);
    }
    
    cout << ans << endl;
  }
}