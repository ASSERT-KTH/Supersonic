#include <iostream>
#include <vector>
#include <map>
#include <algorithm>

int main() {
  int T;
  std::cin >> T;

  while (T--) {
    int n;
    std::cin >> n;

    std::vector<std::pair<int, int>> vec;
    vec.reserve(n);

    for (int i = 0; i < n; i++) {
      int a;
      std::cin >> a;
      vec.emplace_back(a, 0);
    }

    for (int i = 0; i < n; i++) {
      int b;
      std::cin >> b;
      vec[i].second = b;
    }

    std::sort(vec.begin(), vec.end());

    std::map<int, int> timeSum;
    int total = 0;

    for (int i = 0; i < n; i++) {
      timeSum[vec[i].first] += vec[i].second;
      total += vec[i].second;
    }

    int ans = total;

    for (int i = 0; i < n; i++) {
      int temp = vec[i].first + std::max(0LL, (total - timeSum[vec[i].first] - vec[i].first));
      ans = std::min(ans, temp);
      total -= timeSum[vec[i].first];
    }

    std::cout << ans << std::endl;
  }
}