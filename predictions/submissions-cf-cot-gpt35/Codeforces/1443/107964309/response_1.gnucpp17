#include <iostream>
#include <vector>
#include <utility>
#include <algorithm>
#include <unordered_map>

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);

    int T;
    std::cin >> T;
    while (T--) {
        int n;
        std::cin >> n;
        std::vector<std::pair<int, int>> vec;
        vec.reserve(n);

        for (int i = 0; i < n; i++) {
            int a, b;
            std::cin >> a >> b;
            vec.emplace_back(a, b);
        }

        std::sort(vec.begin(), vec.end(), [](const auto& a, const auto& b) {
            return a.first < b.first;
        });

        std::unordered_map<int, int> timeSum;
        int total = 0;
        for (auto it = vec.begin(); it != vec.end(); ++it) {
            timeSum[(*it).first] += (*it).second;
            total += (*it).second;
        }

        int ans = INT_MAX;
        for (auto it = vec.begin(); it != vec.end(); ++it) {
            if (it != vec.begin() && (*it).first == (*(it - 1)).first)
                continue;

            int temp = (*it).first + std::max(0LL, (total - timeSum[(*it).first] - (*it).first));
            ans = std::min(ans, temp);
            total -= timeSum[(*it).first];
        }

        std::cout << ans << '\n';
    }

    return 0;
}