#include <cstdio>
#include <cstring>

const int N = 1234;
long long dp[N][N];
int v1, v2, t, d;

long long f(int tt, int speed) {
  if (tt == 1) {
    return speed == v1 ? v1 : -1e10;
  }
  if (dp[tt][speed] != -1) {
    return dp[tt][speed];
  }
  long long x = -1e9;
  for (int i = std::max(0, speed - d); i <= speed + d; ++i) {
    long long temp = std::max(x, f(tt + 1, i));
    if (speed - i >= 0) {
      temp = std::max(temp, f(tt + 1, speed - i));
    }
    x = temp;
  }
  return speed + x;
}

int main() {
  std::scanf("%d %d %d %d", &v1, &v2, &t, &d);
  std::memset(dp, -1, sizeof(dp));
  std::printf("%lld\n", f(t, v1));
  return 0;
}