#include <cstdio>
#include <cstring>
#include <algorithm>

int dp[1234][1234];

int f(int tt, int speed, int v2, int d) {
  if (tt == 1) {
    return speed == v2 ? v2 : INT_MIN;
  }
  if (dp[tt][speed] != 0) {
    return dp[tt][speed];
  }
  int x = INT_MIN;
  for (int i = 0; i <= d; ++i) {
    x = std::max(x, f(tt - 1, speed + i, v2, d));
    if (speed - i >= 0) {
      x = std::max(x, f(tt - 1, speed - i, v2, d));
    }
  }
  return dp[tt][speed] = x;
}

int maxSpeed(int v1, int v2, int t, int d) {
  memset(dp, 0, sizeof dp);
  return f(t, v1, v2, d);
}

int main() {
  int v1, v2, t, d;
  scanf("%d %d %d %d", &v1, &v2, &t, &d);
  printf("%d\n", maxSpeed(v1, v2, t, d));
  return 0;
}