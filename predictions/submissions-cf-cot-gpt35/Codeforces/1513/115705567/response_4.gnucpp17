#include <iostream>
#include <string>
#include <algorithm>

constexpr int MOD = 1e9 + 7;

int main() {
  constexpr int N = 2 * 1e5 + 10;
  long long dp[11][N] = {};

  for (int i = 0; i <= 9; i++) {
    dp[i][0] = 1;
  }

  for (int j = 1; j <= 200005; j++) {
    for (int i = 0; i <= 9; i++) {
      dp[i][j] = dp[(i + 1) % 10][j - 1];
      if (i == 9) {
        dp[i][j] += dp[0][j - 1];
      }
    }
  }

  int t;
  std::cin >> t;

  while (t--) {
    std::string s;
    int m;
    std::cin >> s >> m;

    long long ans = std::accumulate(s.begin(), s.end(), 0LL,
      [&](long long acc, char c) {
        return (acc + dp[c - '0'][m]) % MOD;
      }
    );

    std::cout << ans << '\n';
  }

  return 0;
}