#include <iostream>
#include <string>
#define ll long long
const int MOD = 1e9 + 7;
const int MAX_DIGITS = 10;
const int MAX_M = 200005;

ll dp[MAX_DIGITS + 1][MAX_M + 1];

int main() {
  std::string s;
  ll m;

  // Precalculate dp values
  for (ll i = 0; i <= MAX_DIGITS; i++) {
    dp[i][0] = 1;
  }
  for (ll j = 1; j <= MAX_M; j++) {
    for (ll i = 0; i <= MAX_DIGITS; i++) {
      if (i != MAX_DIGITS)
        dp[i][j] = dp[i + 1][j - 1];
      else
        dp[i][j] = (dp[0][j - 1] + dp[1][j - 1]) % MOD;
    }
  }

  ll queries;
  std::cin >> queries;

  // Process queries
  while (queries--) {
    std::cin >> s >> m;
    ll ans = 0;
    ll length = s.length();
    for (ll i = 0; i < length; i++) {
      ans = (ans + dp[s[i] - '0'][m]) % MOD;
    }
    std::cout << ans << std::endl;
  }

  return 0;
}