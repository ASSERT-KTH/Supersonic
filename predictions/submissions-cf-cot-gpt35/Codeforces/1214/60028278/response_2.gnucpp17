#include <iostream>
#include <queue>
#include <string>
using namespace std;
typedef pair<int, int> pii;
const int maxn = 1e6 + 5;

bool dfs(int x, int y, bool reset, string mz[], bool vis[]) {
  int n = mz.size();
  int m = mz[0].size();
  if (x >= n || y >= m || mz[x][y] == '#' || vis[x * m + y])
    return false;
  if (x == n - 1 && y == m - 1)
    return true;
  if (reset || x || y)
    vis[x * m + y] = true;
  return dfs(x + 1, y, false, mz, vis) || dfs(x, y + 1, false, mz, vis);
}

int main() {
  cin.sync_with_stdio(false);
  int n, m;
  cin >> n >> m;
  string mz[maxn];
  for (int i = 0; i < n; i++) {
    cin >> mz[i];
  }
  bool vis[maxn] = {false};
  if (!dfs(0, 0, true, mz, vis))
    cout << 0;
  else {
    vis[0] = false;
    if (!dfs(0, 0, false, mz, vis))
      cout << 1;
    else
      cout << 2;
  }
  return 0;
}