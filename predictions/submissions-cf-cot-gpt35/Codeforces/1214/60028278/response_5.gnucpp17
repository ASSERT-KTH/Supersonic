#include <iostream>
#include <queue>
using namespace std;

const int maxn = 1e6 + 5;

int n, m;
string mz[maxn];
int vis[maxn];

bool dfs(int x, int y) {
  if (x >= n || y >= m || mz[x][y] == '#' || (vis[x * m + y] & 1))
    return false;
  if (x == n - 1 && y == m - 1)
    return true;
  if (x || y)
    vis[x * m + y] |= 1;
  return dfs(x + 1, y) || dfs(x, y + 1);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  cin >> n >> m;
  for (int i = 0; i < n; i++) {
    cin >> mz[i];
  }

  if (!dfs(0, 0))
    cout << 0 << '\n';
  else {
    vis[0] &= ~1;
    if (!dfs(0, 0))
      cout << 1 << '\n';
    else
      cout << 2 << '\n';
  }

  return 0;
}