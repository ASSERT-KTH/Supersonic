#include <algorithm>
#include <cstring>
#include <iostream>
#include <vector>
using namespace std;

#define ll long long
typedef pair<int, int> pii;
const int maxn = 1e6 + 5;

int n, m, ans;
vector<vector<char>> mz; // Replace string array with vector of vector<char>
bool vis[maxn];

bool dfs(int x, int y) {
  if (x >= n || y >= m || mz[x][y] == '#' || vis[x * m + y])
    return false;
  if (x == n - 1 && y == m - 1)
    return true;
  if (x || y)
    vis[x * m + y] = 1;
  return dfs(x + 1, y) || dfs(x, y + 1);
}

int main() {
  ios_base::sync_with_stdio(false); // Disable sync_with_stdio
  cin.tie(NULL); // Disable tie
  scanf("%d %d", &n, &m); // Use scanf for faster input
  mz.resize(n); // Resize vector to appropriate size
  for (int i = 0; i < n; i++) {
    mz[i].resize(m); // Resize inner vector to appropriate size
    for (int j = 0; j < m; j++) {
      cin >> mz[i][j]; // Use cin for faster input
    }
  }
  if (!dfs(0, 0))
    printf("0"); // Use printf for faster output
  else {
    vis[0] = 0;
    if (!dfs(0, 0))
      printf("1"); // Use printf for faster output
    else
      printf("2"); // Use printf for faster output
  }
  return 0;
}