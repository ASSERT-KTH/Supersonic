#include <stdio.h>

const int maxn = 1e6 + 5;

int n, m;
const char* mz[maxn];
bool vis[maxn];

struct Cell {
  int x, y;
};

bool bfs() {
  const int dx[2] = {1, 0};
  const int dy[2] = {0, 1};

  Cell queue[maxn];
  int front = 0, rear = 0;

  queue[rear++] = {0, 0};
  vis[0] = true;

  while (front < rear) {
    Cell curr = queue[front++];

    if (curr.x == n - 1 && curr.y == m - 1)
      return true;

    for (int i = 0; i < 2; i++) {
      int nx = curr.x + dx[i];
      int ny = curr.y + dy[i];

      if (nx < n && ny < m && !vis[nx * m + ny]) {
        queue[rear++] = {nx, ny};
        vis[nx * m + ny] = true;
      }
    }
  }

  return false;
}

int main() {
  scanf("%d %d", &n, &m);

  for (int i = 0; i < n; i++) {
    char buf[maxn];
    scanf("%s", buf);
    mz[i] = buf;
  }

  if (!bfs())
    printf("0");
  else {
    vis[0] = false;
    if (!bfs())
      printf("1");
    else
      printf("2");
  }

  return 0;
}