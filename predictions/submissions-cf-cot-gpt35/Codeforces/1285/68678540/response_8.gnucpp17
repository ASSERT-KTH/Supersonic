#include <iostream>
#include <vector>
using namespace std;

int rec(vector<int>& A, int p, int start, int end) {
  if (p == -1)
    return 0;
  
  int countB = 0;
  for (int i = start; i <= end; i++) {
    if (A[i] & (1 << p))
      A[countB++] = A[i] & ~((1 << p));
  }
  
  int countC = countB;
  for (int i = start; i <= end; i++) {
    if (!(A[i] & (1 << p)))
      A[countC++] = A[i] & ~((1 << p));
  }
  
  int sizeB = countB - start;
  int sizeC = countC - countB;
  
  if (sizeB == end - start + 1) {
    return rec(A, p - 1, start, end);
  } else if (sizeC == end - start + 1) {
    return rec(A, p - 1, start, end);
  } else {
    return (1 << p) + min(rec(A, p - 1, start, start + sizeB - 1), rec(A, p - 1, start + sizeB, end));
  }
}

int main() {
  int n;
  cin >> n;
  vector<int> A(n);
  for (int i = 0; i < n; i++) {
    cin >> A[i];
  }
  cout << rec(A, 30, 0, n - 1) << endl;
}