#include <iostream>
using namespace std;

int rec(vector<int>& A, int start, int end, int p, int numSet, int numUnset) {
  if (p == -1)
    return 0;

  int numSetLeft = 0;
  int numUnsetLeft = 0;
  for (int i = start; i <= end; i++) {
    if (A[i] & (1 << p))
      numSetLeft++;
    else
      numUnsetLeft++;
  }

  int numSetRight = numSet - numSetLeft;
  int numUnsetRight = numUnset - numUnsetLeft;

  if (numSetLeft == 0 || numUnsetLeft == 0) {
    return rec(A, start, end, p - 1, numSetRight, numUnsetRight);
  } else if (numSetRight == 0 || numUnsetRight == 0) {
    return rec(A, start, end, p - 1, numSetLeft, numUnsetLeft);
  } else {
    return (1 << p) + min(rec(A, start, start + numSetLeft - 1, p - 1, numSetLeft, numUnsetLeft),
                          rec(A, start + numSetLeft, end, p - 1, numSetRight, numUnsetRight));
  }
}

int main() {
  int n;
  cin >> n;
  vector<int> A(n);
  for (int i = 0; i < n; i++) {
    cin >> A[i];
  }

  int numSet = 0;
  int numUnset = n;
  for (int i = 0; i < n; i++) {
    if (A[i] != 0)
      numSet++;
  }

  cout << rec(A, 0, n - 1, 30, numSet, numUnset) << endl;

  return 0;
}