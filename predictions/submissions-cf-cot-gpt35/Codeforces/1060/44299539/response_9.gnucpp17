#include <iostream>
#include <vector>
using namespace std;

int main() {
  int N, M, x;
  cin >> N >> M;
  
  vector<int> n(N + 1), m(M + 1);
  vector<int> n_sum(N + 1), m_sum(M + 1);
  int max_n = N;
  
  for (int i = 1; i <= N; i++) {
    cin >> n[i];
    n_sum[i] = n_sum[i - 1] + n[i];
  }
  
  for (int j = 1; j <= M; j++) {
    cin >> m[j];
    m_sum[j] = m_sum[j - 1] + m[j];
  }
  
  cin >> x;
  
  int ans = 0;
  for (int n_i = 1; n_i <= N; n_i++) {
    int min_m = 1;
    int max_m = M;
    
    while (min_m <= max_m) {
      int mid_m = (min_m + max_m) / 2;
      
      int s_n = n_sum[n_i] - n_sum[n_i - 1];
      int s_m = m_sum[mid_m] - m_sum[mid_m - 1];
      
      if (s_m * s_n <= x) {
        ans = max(ans, mid_m * n_i);
        min_m = mid_m + 1;
      } else {
        max_m = mid_m - 1;
      }
    }
  }
  
  cout << ans;
  return 0;
}