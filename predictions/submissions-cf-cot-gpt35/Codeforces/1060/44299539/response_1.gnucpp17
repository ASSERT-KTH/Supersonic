#include <iostream>
#include <algorithm>

using namespace std;

const int MAX_SIZE = 2001;

long long n[MAX_SIZE], m[MAX_SIZE];

int main() {
  long long s_n, s_m, t, num_n, num_m, x, mid_n, min_m = 1, max_m, mid_m, ans = 0;

  cin >> num_n >> num_m;

  for (int i = 1; i <= num_n; i++) {
    cin >> t;
    n[i] = t + n[i - 1];
  }

  for (int j = 1; j <= num_m; j++) {
    cin >> t;
    m[j] = t + m[j - 1];
  }

  cin >> x;

  for (int n_i = 1; n_i <= num_n; n_i++) {
    min_m = 1;
    max_m = num_m;
    s_n = 10e10; // Initialize s_n with a very large value

    while (min_m <= max_m) {
      mid_m = (min_m + max_m) / 2;

      s_m = 10e10; // Initialize s_m with a very large value

      for (int i = mid_m; i <= num_m; i++) {
        s_m = min(s_m, m[i] - m[i - mid_m]);
      }

      for (int i = n_i; i <= num_n; i++) {
        s_n = min(s_n, n[i] - n[i - n_i]);
      }

      if (s_m * s_n <= x) {
        ans = max(ans, mid_m * n_i);
        min_m = mid_m + 1;
      } else {
        max_m = mid_m - 1;
      }
    }
  }

  cout << ans;

  return 0;
}