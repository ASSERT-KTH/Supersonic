#include <iostream>
#include <climits>

int n[2001], m[2001];

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  
  int N, M, x;
  std::cin >> N >> M;

  for (int i = 1; i <= N; ++i) {
    int t;
    std::cin >> t;
    n[i] = t + n[i - 1];
  }

  for (int j = 1; j <= M; ++j) {
    int t;
    std::cin >> t;
    m[j] = t + m[j - 1];
  }

  std::cin >> x;

  int maxArea = 0;

  for (int n_i = 1; n_i <= N; ++n_i) {
    int min_m = 1;
    int max_m = M;

    while (min_m <= max_m) {
      int mid_m = (min_m + max_m) / 2;

      int s_n = INT_MAX;
      for (int i = n_i; i <= N; ++i)
        s_n = std::min(s_n, n[i] - n[i - n_i]);

      int s_m = INT_MAX;
      for (int i = mid_m; i <= M; ++i)
        s_m = std::min(s_m, m[i] - m[i - mid_m]);

      if (1LL * s_m * s_n <= x) {
        maxArea = std::max(maxArea, mid_m * n_i);
        min_m = mid_m + 1;
      } else {
        max_m = mid_m - 1;
      }
    }
  }

  std::cout << maxArea << '\n';

  return 0;
}