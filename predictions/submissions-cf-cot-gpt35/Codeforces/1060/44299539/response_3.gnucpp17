#include <iostream>
using namespace std;

const int MAX_N = 2001;

int n[MAX_N], m[MAX_N];
int prefix_n[MAX_N], prefix_m[MAX_N];

int main() {
  int N, M, x;
  cin >> N >> M;

  for (int i = 1; i <= N; i++) {
    cin >> n[i];
    prefix_n[i] = n[i] + prefix_n[i - 1];
  }

  for (int j = 1; j <= M; j++) {
    cin >> m[j];
    prefix_m[j] = m[j] + prefix_m[j - 1];
  }

  cin >> x;

  int ans = 0;
  for (int mid_m = 1; mid_m <= M; mid_m++) {
    int n_i = 1;
    int min_m = 1;
    int max_m = M;

    int s_n = prefix_n[N];
    int s_m = prefix_m[mid_m];

    while (n_i <= N && min_m <= max_m) {
      s_n = min(s_n, prefix_n[N] - prefix_n[N - n_i]);
      s_m = min(s_m, prefix_m[mid_m] - prefix_m[mid_m - n_i]);

      if (s_m * s_n <= x) {
        ans = max(ans, mid_m * n_i);
        min_m = mid_m + 1;
        n_i++;
      } else {
        max_m = mid_m - 1;
        n_i--;
      }
    }
  }

  cout << ans;

  return 0;
}