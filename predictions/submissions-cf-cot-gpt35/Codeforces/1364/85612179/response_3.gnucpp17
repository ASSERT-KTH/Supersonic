#include <iostream>
#include <vector>
#include <set>
#include <algorithm>

using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n;
  cin >> n;
  
  vector<int> v(n);
  set<int> s;

  for(int i = 0; i < n; i++) {
    cin >> v[i];
    s.insert(v[i]);

    if(v[i] > i + 1) {
      cout << -1 << '\n';
      return 0;
    }
  }

  vector<int> ans(n, -1);
  int start = 1;

  for(int i = 1; i < n; i++) {
    if(v[i - 1] != v[i]) {
      ans[i] = v[i - 1];
    }
  }

  for(int i = 0; i < n; i++) {
    if(ans[i] == -1) {
      while(s.find(start) != s.end()) {
        start++;
      }
      ans[i] = start++;
    }
  }

  copy(ans.begin(), ans.end(), ostream_iterator<int>(cout, " "));
  cout << '\n';

  return 0;
}