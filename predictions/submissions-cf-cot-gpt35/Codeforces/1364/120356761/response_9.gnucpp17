#include <iostream>
#include <vector>
#include <numeric>
#include <algorithm>

int main() {
  std::ios_base::sync_with_stdio(false);
  int t;
  std::cin >> t;
  while (t--) {
    int n, x;
    std::cin >> n >> x;
    std::vector<int> a(n);
    for (int i = 0; i < n; i++)
      std::cin >> a[i];
    for (int i = 0; i < n; i++)
      a[i] %= x;
    int sum = std::accumulate(a.begin(), a.end(), 0);
    if (sum % x) {
      std::cout << n << std::endl;
      continue;
    }
    auto first_non_zero = std::find_if(a.begin(), a.end(), [](int element) { return element != 0; });
    int pos = std::distance(a.begin(), first_non_zero) + 1;
    auto last_non_zero = std::find_if(std::make_reverse_iterator(a.end()), std::make_reverse_iterator(first_non_zero), [](int element) { return element != 0; });
    pos = std::min(pos, n - std::distance(std::make_reverse_iterator(a.end()), last_non_zero));
    std::cout << n - pos << std::endl;
  }
}