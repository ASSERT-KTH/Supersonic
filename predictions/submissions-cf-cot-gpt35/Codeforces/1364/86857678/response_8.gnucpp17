#include <iostream>
#include <vector>

const int mx = 1e6 + 5;

void dfs(int s, int des, int arr[]) {
  arr[s] = 1;
  if (s == des) {
    return;
  }
  for (int i = 0; i < vec[s].size(); i++) {
    if (!arr[vec[s][i]]) {
      dfs(vec[s][i], des, arr);
    }
  }
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);

  int t;
  std::cin >> t;

  while (t--) {
    int n;
    std::cin >> n;

    std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
      std::cin >> a[i];
    }

    std::vector<int> v;
    for (int i = 0; i < n; i++) {
      if (i == 0 || i == n - 1 || (a[i - 1] != a[i] && a[i] != a[i + 1])) {
        v.push_back(a[i]);
      }
    }
  }

  return 0;
}