Optimization Steps:
1. Remove unnecessary header files and preprocessor directives.
2. Remove unused global variables and constants.
3. Remove unnecessary print statements.
4. Remove unnecessary vector and array declarations.
5. Optimize the logic for finding the peaks and valleys in the array.

Optimized Program:

```cpp
#include <iostream>
#include <vector>
using namespace std;

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int i = 0; i < n; i++)
            cin >> a[i];
        
        vector<int> v;
        for (int i = 0; i < n; i++) {
            if (i == 0 || i == n-1 || (a[i-1] < a[i]) != (a[i] < a[i+1]))
                v.push_back(a[i]);
        }
        cout << v.size() << endl;
        for (auto it : v)
            cout << it << " ";
        cout << endl;
    }
    return 0;
}
```
