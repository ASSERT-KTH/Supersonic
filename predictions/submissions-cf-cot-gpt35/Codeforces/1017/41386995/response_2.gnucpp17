#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

inline int read() {
  char s;
  int k = 0, base = 1;
  while ((s = getchar()) != '-' && s != EOF && !(isdigit(s)))
    ;
  if (s == EOF)
    exit(0);
  if (s == '-')
    base = -1, s = getchar();
  while (isdigit(s)) {
    k = k * 10 + (s ^ '0');
    s = getchar();
  }
  return k * base;
}

int n, A, B, C, D;
int ans;

inline int f(int x) {
  return A * x * x * x + B * x * x + C * x + D;
}

int main() {
  ans = 0;
  n = read();
  A = read(), B = read(), C = read(), D = read();
  
  vector<bool> isPrime(n + 1, true);
  isPrime[0] = isPrime[1] = false;
  
  for (int i = 2; i <= sqrt(n); i++) {
    if (isPrime[i]) {
      for (int j = i * i; j <= n; j += i) {
        isPrime[j] = false;
      }
    }
  }
  
  for (int i = 2; i <= n; i++) {
    if (isPrime[i] || i == 2 || i == 3 || i == 5) {
      int j = i;
      int F1 = f(i);
      while (j <= n) {
        ans += (n / j) * F1;
        if (j > n / i)
          break;
        j *= i;
      }
    }
  }
  
  cout << ans;
  return 0;
}