#include <iostream>
#include <vector>

#define ll long long

unsigned int n, A, B, C, D;
unsigned int F;
std::vector<unsigned int> p;
std::vector<unsigned int> P;
unsigned int l;

inline unsigned int f(unsigned int x) {
  return A * x * x * x + B * x * x + C * x + D;
}

unsigned int qwq(int x) {
  return (unsigned int)(x - x / 2 - x / 3 - x / 5 + x / 6 + x / 10 + x / 15 - x / 30);
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);

  unsigned int ans = 0;
  n = read();
  std::cin >> A >> B >> C >> D;

  int xx = (1 << 6) - 1;
  p.resize(2500000 / 32 + 2);

  for (unsigned int i = 2; i <= n / 2; i++) {
    if (i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 &&
                                       !(p[qwq(i) / 32] & (1u << (qwq(i) % 32))))) {
      ++l;
      P.push_back(i);
      unsigned int j = i;
      unsigned int F1 = f(i);
      while (j <= n) {
        ans += (n / j) * F1;
        if ((ll)j * i > n) {
          break;
        }
        j *= i;
      }
    }

    while (!P.empty() && (ll)P.back() * i > n) {
      P.pop_back();
    }

    for (unsigned int j = 0; j < P.size() && (ll)P[j] * i <= n; j++) {
      unsigned int x = P[j] * i;
      if ((x & 1) && x % 3 != 0 && x % 5 != 0) {
        x = qwq(x);
        p[x / 32] |= (1u << (x % 32));
      }
      if (i % P[j] == 0) {
        break;
      }
    }
  }

  for (unsigned int i = n / 2 + 1; i <= n; i++) {
    if (i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 &&
                                       !(p[qwq(i) / 32] & (1u << (qwq(i) % 32))))) {
      unsigned int j = i;
      unsigned int F1 = f(i);
      while (j <= n) {
        ans += (n / j) * F1;
        if ((ll)j * i > n) {
          break;
        }
        j *= i;
      }
    }
  }

  std::cout << ans;

  return 0;
}