#include <iostream>
#include <cmath>
#define ll long long
using namespace std;

ll read() {
  ll k = 0, base = 1;
  cin >> k;
  return k;
}

unsigned int n, A, B, C, D;
unsigned int ans;
unsigned int p[2500000 + 2];
unsigned int P[1992], l;

unsigned int f(unsigned int x) {
  return A * x * x * x + B * x * x + C * x + D;
}

unsigned int qwq(int x) {
  return (unsigned int)(x - x / 2 - x / 3 - x / 5 + x / 6 + x / 10 + x / 15 - x / 30);
}

int main() {
  ans = 0;
  unsigned int i, j, x, F1;
  bool flag = false;

  n = read();
  A = read(), B = read(), C = read(), D = read();
  int xx = (1 << 6) - 1;

  for (i = 2; i <= n / 2; i++) {
    bool isPrime = true;
    for (j = 2; j <= sqrt(i); j++) {
      if (i % j == 0) {
        isPrime = false;
        break;
      }
    }

    if (isPrime || i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 && !(p[(x = qwq(i)) / 32] & (1 << (x % 32))))) {
      if (!flag) {
        ++l;
        P[l] = i;
      }
      j = i;
      F1 = f(i);
      while (j <= n) {
        ans += (n / j) * F1;
        if (j > n / i)
          break;
        j *= i;
      }
    }

    if (P[l] * i > n) {
      flag = true;
    }
    while (P[l] * i > n)
      l--;

    for (j = 1; j <= l && P[j] * i <= n; j++) {
      x = P[j] * i;
      if ((x & 1) && x % 3 != 0 && x % 5 != 0) {
        x = qwq(x);
        p[x / 32] |= 1 << (x % 32);
      }
      if (i % P[j] == 0)
        break;
    }
  }

  for (; i <= n; i++) {
    bool isPrime = true;
    for (j = 2; j <= sqrt(i); j++) {
      if (i % j == 0) {
        isPrime = false;
        break;
      }
    }

    if (isPrime || i == 2 || i == 3 || i == 5 || ((i & 1) && i % 3 != 0 && i % 5 != 0 && !(p[(x = qwq(i)) / 32] & (1 << (x % 32))))) {
      j = i;
      F1 = f(i);
      while (j <= n) {
        ans += (n / j) * F1;
        if (j > n / i)
          break;
        j *= i;
      }
    }
  }

  printf("%u\n", ans);
  return 0;
}