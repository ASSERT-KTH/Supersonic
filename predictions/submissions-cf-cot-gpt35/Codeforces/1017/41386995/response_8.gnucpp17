#include <iostream>
#include <cmath>
#include <bitset>
using namespace std;

#define ll long long

inline ll read() {
    ll x = 0;
    scanf("%lld", &x);
    return x;
}

unsigned int n, A, B, C, D;
unsigned int ans;
unsigned int F;
unsigned int p[2500000 / 32 + 2];
unsigned int P[1992], l;

inline unsigned int f(unsigned int x) {
    return A * x * x * x + B * x * x + C * x + D;
}

unsigned int qwq(int x) {
    return (unsigned int)(x - x/2 - x/3 - x/5 + x/6 + x/10 + x/15 - x/30);
}

int main() {
    ans = 0;
    unsigned int i, j, x, F1;
    bool flag = false;
    n = read();
    A = read(), B = read(), C = read(), D = read();
    int xx = (1 << 6) - 1;
    
    for (i = 2; i * i <= n; i++) {
        if (i == 2 || i == 3 || i == 5 ||
            ((i & 1) && i % 3 != 0 && i % 5 != 0 &&
             !(p[(x = qwq(i)) >> 5] & ((unsigned int)1 << (x & xx))))) {
            if (!flag) {
                ++l;
                P[l] = i;
            }
            j = i;
            F1 = f(i);
            while (j <= n) {
                ans += (n / j) * F1;
                if ((ll)j * i > n)
                    break;
                j *= i;
            }
        }
        if ((ll)P[l] * i > n) {
            flag = true;
        }
        while ((ll)P[l] * i > n)
            l--;
        for (j = 1; j <= l && (ll)P[j] * i <= n; j++) {
            x = P[j] * i;
            if ((x & 1) && x % 3 != 0 && x % 5 != 0) {
                x = qwq(x);
                p[x >> 5] |= (unsigned int)1 << (x & xx);
            }
            if (i % P[j] == 0)
                break;
        }
    }
    
    for (; i <= n; i++) {
        if (i == 2 || i == 3 || i == 5 ||
            ((i & 1) && i % 3 != 0 && i % 5 != 0 &&
             !(p[(x = qwq(i)) >> 5] & ((unsigned int)1 << (x & xx))))) {
            j = i;
            F1 = f(i);
            while (j <= n) {
                ans += (n / j) * F1;
                if ((ll)j * i > n)
                    break;
                j *= i;
            }
        }
    }
    
    cout << ans;
    return 0;
}