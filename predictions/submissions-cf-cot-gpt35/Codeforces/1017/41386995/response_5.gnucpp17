#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

unsigned long long n, A, B, C, D;
unsigned long long ans;

inline unsigned long long f(unsigned long long x) {
  return A * x * x * x + B * x * x + C * x + D;
}

unsigned long long calculateSum(unsigned long long n, unsigned long long p) {
  unsigned long long sum = 0;
  unsigned long long power = p;
  while (power <= n) {
    sum += n / power;
    power *= p;
  }
  return sum;
}

unsigned long long calculatePrimeSum(unsigned long long n) {
  vector<bool> isPrime(n + 1, true);
  unsigned long long sum = 0;
  for (unsigned long long p = 2; p <= n; p++) {
    if (isPrime[p]) {
      sum += f(p) * calculateSum(n, p);
      for (unsigned long long i = p * p; i <= n; i += p) {
        isPrime[i] = false;
      }
    }
  }
  return sum;
}

int main() {
  ans = 0;
  cin >> n >> A >> B >> C >> D;

  ans += calculatePrimeSum(n);
  
  cout << ans;
  return 0;
}