#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int MOD = 1000000007;

void solve() {
    int n;
    cin >> n;
    vector<pair<int, int>> v(n);
    for (int i = 0; i < n; i++) {
        cin >> v[i].first >> v[i].second;
    }
    if (n == 2) {
        cout << min(v[0].first + max(0, v[1].first - v[0].second),
                    v[1].first + max(0, v[0].first - v[1].second)) << "\n";
        return;
    }
    int cnt = 0, curr = v[0].first;
    for (int i = 0; i < n; i++) {
        cnt += curr;
        curr = max(0, v[(i + 1) % n].first - v[i].second);
    }
    int ans = cnt;
    for (int i = 1; i < n; i++) {
        cnt += v[i].first - max(0, v[i].first - v[(i - 1 + n) % n].second);
        cnt += max(0, v[(i - 1 + n) % n].first - v[(i - 2 + n) % n].second);
        cnt -= v[(i - 1 + n) % n].first;
        ans = min(ans, cnt);
    }
    cout << ans << "\n";
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int tc;
    cin >> tc;
    while (tc--) {
        solve();
    }
    return 0;
}