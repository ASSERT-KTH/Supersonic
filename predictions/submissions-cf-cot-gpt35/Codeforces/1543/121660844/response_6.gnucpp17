#include <iostream>
using namespace std;

int countPrimeFactors(int x) {
  int res = 0;
  for (int i = 2; i * i <= x; i++) {
    while (x % i == 0) {
      x /= i;
      res++;
    }
  }
  if (x > 1) {
    res++;
  }
  return res;
}

int modularExponentiation(int x, int n, int mod) {
  int result = 1;
  while (n > 0) {
    if (n % 2 == 1) {
      result = (result * x) % mod;
    }
    x = (x * x) % mod;
    n /= 2;
  }
  return result;
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  int N;
  scanf("%d", &N);

  while (N--) {
    int a, b;
    scanf("%d %d", &a, &b);
    
    if (a == 0 || b == 0) {
      printf("%d 0\n", max(a, b));
      continue;
    }
    
    if (a == b && a != 0) {
      printf("0 0\n");
      continue;
    }
    
    if (b > a) {
      swap(a, b);
    }
    
    int diff = a - b;
    int mod1 = a % diff;
    int mod2 = diff - mod1;
    
    printf("%d %d\n", diff, min(mod1, mod2));
  }

  return 0;
}