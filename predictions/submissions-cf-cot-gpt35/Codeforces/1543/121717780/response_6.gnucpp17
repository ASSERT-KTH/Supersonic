#include <iostream>
#include <iomanip>
#include <cstring>
using namespace std;

int c, m, p, v;
int nc, nm, nv, mx, mc;
double dp[1001][1001];

double getAns(double c, double m, double p, double v) {
  if (c <= 0 && m <= 0) {
    return 1.0;
  }
  double temp = 0.0;
  if (c > 0 && m > 0) {
    temp += c * getAns(c - v, m + min(c / 2, v / 2), p + min(c / 2, v / 2), v) +
            m * getAns(c + min(m / 2, v / 2), m - v, p + min(m / 2, v / 2), v) +
            p;
  } else if (c > 0) {
    temp += c * getAns(c - v, m, p + min(c, v), v) + p;
  } else {
    temp += m * getAns(c, m - v, p + min(m, v), v) + p;
  }
  return temp;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    cin >> c >> m >> p >> v;
    nc = c * 10000;
    nm = m * 10000;
    nv = v * 10000;
    mx = (nc + nv - 1) / nv + (nc + nm + nv - 1) / nv + 1;
    mc = (nc + nm + nv - 1) / nv;
    memset(dp, -1, sizeof(dp));
    cout << fixed << setprecision(15) << getAns(c, m, p, v) << endl;
  }
  return 0;
}