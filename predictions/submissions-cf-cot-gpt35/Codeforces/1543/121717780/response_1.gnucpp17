#include <iostream>
#include <iomanip>
#include <vector>
using namespace std;

double getAns(double c, double m, double p, double v) {
  double cntC = 0, cntM = 0;
  double temp = 0;
  while (c > 1e-14 || m > 1e-14) {
    if (c > 1e-14 && m > 1e-14) {
      double mn = min(c / 2, v / 2);
      temp += c * getAns(c - v, m + mn, p + mn, v) +
              m * getAns(c + mn, m - v, p + mn, v) +
              (cntC + cntM + 1) * p;
    } else if (c > 1e-14) {
      temp += c * getAns(c - v, m, p + min(c, v), v) +
              (cntC + cntM + 1) * p;
    } else {
      temp += m * getAns(c, m - v, p + min(m, v), v) +
              (cntC + cntM + 1) * p;
    }
    cntC++;
    cntM++;
  }
  return temp / (cntC + cntM + 1);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int t;
  cin >> t;
  while (t--) {
    double c, m, p, v;
    cin >> c >> m >> p >> v;
    cout << fixed << setprecision(15) << getAns(c, m, p, v) << endl;
  }
  return 0;
}