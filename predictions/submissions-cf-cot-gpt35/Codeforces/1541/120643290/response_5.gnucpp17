#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void fastIo() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
}

void solve() {
  int n, ans = 0;
  cin >> n;
  vector<pair<int, int>> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i].first;
    a[i].second = i + 1;
  }
  
  vector<int> count(n + 1, 0);
  for (int i = 0; i < n; i++) {
    count[a[i].first]++;
  }
  
  vector<int> sorted;
  for (int i = 1; i <= n; i++) {
    while (count[i] > 0) {
      sorted.push_back(i);
      count[i]--;
    }
  }
  
  for (int i = 0; i < n - 1; i++) {
    for (int j = i + 1; j < n; j++) {
      if ((sorted[i] * sorted[j]) >= 2 * n)
        break;
      else if ((sorted[i] * sorted[j]) == (a[i].second + a[j].second))
        ans++;
    }
  }
  
  cout << ans << endl;
}

int main() {
  fastIo();
  int t;
  cin >> t;
  while (t--)
    solve();
  return 0;
}