Optimization Steps:
1. Remove unnecessary header files.
2. Remove unnecessary macros and typedefs.
3. Use `vector` instead of arrays.
4. Use `unordered_map` instead of `map` for faster lookup.
5. Use prefix and suffix arrays to count the occurrences of elements.
6. Use a single loop to calculate the answer.

Here is the optimized C++ program:
```cpp
#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int n, k;
  cin >> n >> k;
  
  vector<int> arr(n);
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
  }
  
  unordered_map<int, int> pre, suf;
  pre[arr[0]]++;
  for (int i = n - 1; i >= 2; i--) {
    suf[arr[i]]++;
  }
  
  int ans = 0;
  for (int i = 1; i < n - 1; i++) {
    if (arr[i] % k == 0 && pre[arr[i] / k] > 0 && suf[arr[i] * k] > 0) {
      ans += pre[arr[i] / k] * suf[arr[i] * k];
    }
    pre[arr[i]]++;
    suf[arr[i + 1]]--;
  }
  
  cout << ans << "\n";
  return 0;
}
```