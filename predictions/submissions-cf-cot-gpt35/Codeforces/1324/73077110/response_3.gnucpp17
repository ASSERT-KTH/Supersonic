#include <iostream>
#include <vector>
#include <algorithm>

void solve() {
    int n;
    std::cin >> n;
    std::vector<int> a(n), b(n), v, v1;
    for (int i = 0; i < n; ++i) {
        std::cin >> a[i];
    }
    for (int i = 0; i < n; ++i) {
        std::cin >> b[i];
        v.push_back(a[i] - b[i]);
        v1.push_back(b[i] - a[i]);
    }
    std::sort(v.begin(), v.end(), std::greater<int>());
    std::sort(v1.begin(), v1.end(), std::greater<int>());
    int ans = 0;
    for (int i = 0; i < n; ++i) {
        auto it = std::lower_bound(v.begin(), v.end(), v1[i], std::greater<int>());
        if (it == v.end()) {
            continue;
        }
        int temp = v.end() - it;
        if (v1[i] < 0) {
            temp--;
        }
        ans += temp;
    }
    std::cout << ans / 2 << '\n';
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);
    int T = 1;
    while (T--) {
        solve();
    }
    return 0;
}