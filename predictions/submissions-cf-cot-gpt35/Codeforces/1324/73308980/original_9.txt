To optimize the given C/C++ program, we can make the following modifications:

1. Remove the unnecessary `#include` statements for `iostream` and `using namespace std`. These are not required for the given program.

2. Remove the synchronization with standard C I/O functions using `ios_base::sync_with_stdio(0);`. This is not required for the given program.

3. Remove the input/output file redirection using `freopen` statements. They are not required for the given program.

4. Instead of using separate variables `odd` and `even` to count the number of odd and even numbers, we can use a single variable `count` to keep track of the difference between the two counts. If `count` is non-zero, it means that there are both odd and even numbers. If `count` is zero, it means that there are either all odd or all even numbers.

5. Instead of multiplying `odd` and `even` to check if both counts are non-zero, we can directly check if `count` is non-zero.

Here is the optimized C/C++ program:

```cpp
#include <iostream>

int main() {
  int t, n, tmp, count;
  std::cin >> t;
  while (t--) {
    std::cin >> n;
    count = 0;
    for (int i = 0; i < n; i++) {
      std::cin >> tmp;
      if (tmp & 1)
        count++;
      else
        count--;
    }
    if (count)
      std::cout << "NO\n";
    else
      std::cout << "YES\n";
  }
  return 0;
}
```