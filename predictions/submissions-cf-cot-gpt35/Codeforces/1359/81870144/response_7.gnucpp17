#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int N = 1e5 + 1;
long long dp[N][61];

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  
  int n;
  cin >> n;
  vector<int> a(n);
  for (auto &z : a)
    cin >> z;

  for (int i = 0; i < n; i++) {
    int mn = *min_element(a.begin() + i, a.end());
    for (int j = mn; j <= 30; j++) {
      dp[i + 1][j] = max(dp[i + 1][j], dp[i][j - mn] + a[i]);
    }
  }

  long long ans = 0;
  for (int i = 0; i <= n; i++) {
    ans = max(ans, dp[i][30]);
  }

  cout << ans << endl;
  return 0;
}