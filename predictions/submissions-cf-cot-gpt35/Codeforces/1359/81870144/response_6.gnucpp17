#include <iostream>
#include <vector>
#include <map>

const long long N = 1e5 + 1;

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);

    long long n;
    std::cin >> n;
    std::vector<long long> a(n);
    for (auto& z : a)
        std::cin >> z;

    std::map<long long, long long> dp[N];
    for (int i = 0; i < n; i++) {
        for (int j = -30; j <= 30; j++) {
            long long to = std::max(a[i], j);
            dp[i + 1][to] = std::max(dp[i + 1][to], dp[i][j] + a[i]);
        }
    }

    long long ans = 0;
    for (int i = 0; i <= n; i++) {
        auto it = std::max_element(dp[i].begin(), dp[i].end());
        ans = std::max(ans, (it != dp[i].end() ? it->second : 0));
    }

    std::cout << ans;

    return 0;
}