#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int mod = 998244353;

lli n;
vector<lli> a;

lli maxSubArraySum(lli F) {
  lli max_so_far = (lli)INT_MIN, max_ending_here = 0;
  lli size = n;
  for (lli i = 0; i < size; i++) {
    max_ending_here = max(max_ending_here + a[i], 0);
    max_so_far = max(max_so_far, max_ending_here);
  }
  return max_so_far;
}

int main() {
  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
  lli T = 1;
  while (T--) {
    cin >> n;
    for (lli i = 0; i < n; i++) {
      cin >> a[i];
    }
    lli R = 0;
    for (lli i = -30; i < 31; i++) {
      R = max(R, maxSubArraySum(i) - i);
    }
    cout << R << endl;
  }
  return 0;
}