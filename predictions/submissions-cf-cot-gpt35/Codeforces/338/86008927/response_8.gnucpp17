#include <iostream>

#define fastIO \
  std::ios_base::sync_with_stdio(false); \
  std::cin.tie(0); \
  std::cout.tie(0)

using ll = long long;

const int N = 10100;

ll gcd(ll a, ll b) {
  if (b == 0) {
    return a;
  }
  return gcd(b, a % b);
}

ll lcm(ll a, ll b) {
  ll d = gcd(a, b);
  a /= d;
  if (a > (ll)2e18 / b) {
    std::cout << "NO\n";
    return 0;
  }
  return a * b;
}

ll binmul(ll a, ll b, ll mod) {
  if (b == 0) {
    return 0;
  }
  if (b % 2 == 0) {
    return binmul((a + a) % mod, b / 2, mod);
  } else {
    return (binmul(a, b - 1, mod) + a) % mod;
  }
}

ll solve(ll r1, ll mod1, ll r2, ll mod2) {
  ll g = gcd(mod1, mod2);
  if (r1 % g != r2 % g) {
    std::cout << "NO\n";
    return 0;
  }
  ll a = mod1 / g;
  ll b = (r2 - r1) / g;
  ll c = mod2 / g;
  ll x, y;
  ll d = gcd(a, c);
  if (d != 1) {
    std::cout << "NO\n";
    return 0;
  }
  x = (b * a) % c;
  ll k = (x % c + c) % c;
  ll ans = (r1 + k * mod1) % lcm(mod1, mod2);
  return ans;
}

void run() {
  ll n, m;
  ll k;
  std::cin >> n >> m >> k;
  ll a[N];
  for (ll i = 0; i < k; ++i) {
    std::cin >> a[i];
  }
  ll l = a[0];
  for (ll i = 1; i < k; ++i) {
    l = lcm(l, a[i]);
  }
  if (l > n) {
    std::cout << "NO\n";
    return;
  }
  ll eq[k][2];
  for (ll i = 0; i < k; ++i) {
    eq[i][1] = a[i];
    eq[i][0] = ((-i) % a[i] + a[i]) % a[i];
  }
  ll r1 = eq[0][0];
  ll mod1 = eq[0][1];
  for (ll i = 1; i < k; ++i) {
    ll curMod = lcm(mod1, eq[i][1]);
    ll curR = solve(r1, mod1, eq[i][0], eq[i][1]);
    r1 = (curR % curMod + curMod) % curMod;
    mod1 = curMod;
  }
  if (r1 == 0) {
    r1 += mod1;
  }
  if (r1 + k - 1 > m) {
    std::cout << "NO\n";
    return;
  }
  for (ll i = 0; i < k; ++i) {
    if (gcd(l, r1 + i) != a[i]) {
      std::cout << "NO\n";
      return;
    }
  }
  std::cout << "YES\n";
}

int main(void) {
  fastIO;
  run();
  return 0;
}