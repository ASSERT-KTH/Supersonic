#include <iostream>
#include <vector>
#include <cmath>

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.precision(20);

  int n;
  std::cin >> n;
  std::vector<double> a(n);
  double tol = 1.e-7;
  int ent = 0;
  double tot = 0.;

  for (int i = 0; i < n; i++) {
    std::cin >> a[i];
    double frac;
    if (std::modf(a[i], &frac) < tol) {
      ent++;
    }
    tot += std::floor(a[i]);
  }

  long long rem = std::llround(tot);
  std::cerr << "rem " << rem << std::endl;

  for (int i = 0; i < n; i++) {
    int rounded_floor = static_cast<int>(std::floor(a[i]));
    if (rem < 0 && std::abs(rounded_floor - a[i]) > tol) {
      std::cout << rounded_floor + 1 << "\n";
      rem++;
    } else {
      std::cout << rounded_floor << "\n";
    }
  }

  return 0;
}