#include <iostream>
#include <random>
#include <chrono>
using namespace std;

mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
const int mxN = 1e6;
int n;
unsigned long long val[mxN], adj[mxN];
long long ans;

void solve() {
  int mp[mxN] = {0};
  for (int i = 0; i < n; ++i)
    ans += mp[adj[i]]++;
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cin >> n;
  unsigned long long rngVal = rng();
  for (int i = 0; i < n; ++i)
    val[i] = rngVal;
  for (int i = 0; i < n - 1; ++i) {
    int u, v;
    cin >> u >> v, --u, --v;
    adj[u] += val[v];
    adj[v] += val[u];
  }
  solve();
  for (int i = 0; i < n; ++i)
    adj[i] += val[i];
  solve();
  cout << ans;
  return 0;
}