#include <iostream>
#include <algorithm>
#define MOD 1000000007

long long power(long long x, long long y) {
  long long res = 1;
  x = x % MOD;
  if (x == 0) {
    return 0;
  }
  while (y > 0) {
    if (y % 2 == 1) {
      res = (res * x) % MOD;
    }
    y /= 2;
    x = (x * x) % MOD;
  }
  return res;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int dx[] = {-1, 0, 1, 0};
  int dy[] = {0, 1, 0, -1};

  int n, m;
  std::cin >> n >> m;

  long long a[m+1], pows[m+1], c[m+1][m+1];

  for (int i = 1; i <= n; i++) {
    std::cin >> a[i];
  }
  std::sort(a + 1, a + m + 1);

  pows[0] = 1;
  pows[1] = 1;
  for (int i = 2; i <= m; i++) {
    pows[i] = (pows[i - 1] * 2) % MOD;
  }

  c[0][0] = 1;
  for (int i = 1; i <= m; i++) {
    c[i][0] = 1;
    for (int j = 1; j <= i; j++) {
      c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;
    }
  }

  long long sum = 1;
  int d = n - m;
  for (int i = 1; i <= m; i++) {
    sum = (sum * c[d][a[i] - a[i - 1] - 1]) % MOD;
    d -= a[i] - a[i - 1] - 1;
  }
  for (int i = 2; i <= m; i++) {
    sum = (sum * pows[a[i] - a[i - 1] - 1]) % MOD;
  }
  std::cout << sum << "\n";

  return 0;
}