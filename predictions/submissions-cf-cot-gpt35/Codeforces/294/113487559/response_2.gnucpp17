#include <iostream>
#include <algorithm>

#define ll long long
#define MOD 1000000007
#define M 1001

ll power(ll x, ll y) {
  ll res = 1;
  x = x % MOD;
  if (x == 0) {
    return 0;
  }
  while (y > 0) {
    if (y & 1) {
      res = (res * x) % MOD;
    }
    y >>= 1;
    x = (x * x) % MOD;
  }
  return res;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  ll pows[M];
  pows[0] = 1;
  for (ll i = 1; i <= 1000; i++) {
    pows[i] = (pows[i - 1] << 1) % MOD;
  }

  ll c[M][M];
  c[0][0] = 1;
  for (int i = 1; i <= 1000; i++) {
    c[i][0] = 1;
    for (int j = 1; j <= i; j++) {
      c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;
    }
  }

  {
    ll m, n;
    std::cin >> n >> m;
    ll a[M];
    for (ll i = 1; i <= n; i++) {
      std::cin >> a[i];
    }

    std::sort(a + 1, a + m + 1);

    ll sum = 1;
    ll d = n - m;
    for (int i = 1; i <= m; i++) {
      sum = (sum * c[d][a[i] - a[i - 1] - 1]) % MOD;
      d -= a[i] - a[i - 1] - 1;
      sum = (sum * pows[a[i] - a[i - 1] - 1]) % MOD;
    }

    std::cout << sum << "\n";
  }

  return 0;
}