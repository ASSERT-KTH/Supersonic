#include <iostream>
#include <algorithm>
using namespace std;

const int MOD = 1000000007;
const int M = 1001;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int pows[M] = {1};
  for (int i = 1; i <= M; i++) {
    pows[i] = (pows[i - 1] * 2) % MOD;
  }

  int c[M][M] = {{1}};
  for (int i = 1; i <= M; i++) {
    c[i][0] = 1;
    for (int j = 1; j <= i; j++) {
      c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;
    }
  }

  int n, m;
  cin >> n >> m;
  int a[M];
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
  }

  sort(a + 1, a + m + 1);

  int sum = 1;
  int d = n - m;
  for (int i = 1; i <= m; i++) {
    sum = (sum * c[d][a[i] - a[i - 1] - 1]) % MOD;
    d -= a[i] - a[i - 1] - 1;
    sum = (sum * pows[a[i] - a[i - 1] - 1]) % MOD;
  }

  cout << sum << "\n";

  return 0;
}