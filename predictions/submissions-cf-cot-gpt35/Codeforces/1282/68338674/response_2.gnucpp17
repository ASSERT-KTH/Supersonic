#include <algorithm>
#include <cstdio>
#include <vector>

void solve(int testNum) {
  int N, M, K;
  scanf("%d%d%d", &N, &M, &K);

  std::vector<int> A(N + 1);
  for (int i = 1; i <= N; ++i) {
    scanf("%d", &A[i]);
  }

  std::vector<int> psum(N + 1);
  for (int i = 1; i <= N; ++i) {
    psum[i] = psum[i - 1] + A[i];
  }

  if (psum[N] <= M) {
    printf("%d\n", N);
    return;
  }

  int cnt = 0;
  int maxCnt = 0;
  int maxPos = 0;

  for (int i = 0; i <= N; i += K) {
    if (psum[i] > M) {
      break;
    }
    cnt += K;
    int remaining = M - psum[i];

    int lo = i + 1;
    int hi = std::min(i + K, N);

    while (lo <= hi) {
      int mid = (lo + hi) / 2;
      if (A[mid] <= remaining) {
        lo = mid + 1;
        remaining -= A[mid];
        cnt++;
      } else {
        hi = mid - 1;
      }
    }

    if (cnt > maxCnt) {
      maxCnt = cnt;
      maxPos = i;
    }
  }

  printf("%d\n", maxCnt);
}

int main() {
  int T;
  scanf("%d", &T);
  for (int t = 1; t <= T; ++t) {
    solve(t);
  }
  return 0;
}