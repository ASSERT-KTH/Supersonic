#include <algorithm>
#include <iostream>
#define MAXN 200005

using namespace std;

int N, M, K;
int A[MAXN];
int psum[MAXN];

int func(int pos) {
  if (psum[pos] > M)
    return 0;
    
  int temp = M - psum[pos];
  int cnt = pos;
  
  int low = pos + K;
  int high = N;
  
  while (low <= high) {
    int mid = (low + high) / 2;
    
    if (A[mid] > temp) {
      high = mid - 1;
    } else {
      cnt = mid;
      low = mid + K;
    }
  }
  
  return cnt;
}

void solve(int testNum) {
  cin >> N >> M >> K;

  for (int i = 1; i <= N; ++i) {
    cin >> A[i];
  }
  
  sort(A + 1, A + 1 + N);
  
  for (int i = 1; i <= N; ++i)
    psum[i] = psum[i - 1] + A[i];
    
  if (psum[N] <= M) {
    cout << N << "\n";
    return;
  }
  
  int cnt = 0;
  
  int low = 0;
  int high = N;
  
  while (low <= high) {
    int mid = (low + high) / 2;
    cnt = max(cnt, func(mid));
    
    if (mid == N || psum[mid + 1] > M) {
      high = mid - 1;
    } else {
      low = mid + 1;
    }
  }
  
  cout << cnt << "\n";
}

int main() {
  int T;
  cin >> T;
  
  for (int t = 1; t <= T; ++t) {
    solve(t);
  }
  
  return 0;
}