#include <cstdio>
#include <algorithm>
using namespace std;

const int MAXN = 2e5 + 5;

int N, M, K;
int A[MAXN];
int psum[MAXN];

int func(int pos) {
  if (psum[pos] > M)
    return 0;
  
  int temp = M - psum[pos];
  int cnt = pos;
  
  int low = pos + K;
  int high = N;
  while (low <= high) {
    int mid = (low + high) / 2;
    if (A[mid] > temp) {
      high = mid - 1;
    } else {
      low = mid + 1;
      cnt += K;
    }
  }
  
  for (int j = low - K; j <= N; ++j) {
    if (A[j] <= temp) {
      temp -= A[j];
      ++cnt;
    } else {
      break;
    }
  }
  
  return cnt;
}

void solve(int testNum) {
  int i;
  scanf("%d%d%d", &N, &M, &K);
  for (i = 1; i <= N; ++i) {
    scanf("%d", &A[i]);
  }
  
  for (i = 1; i <= N; ++i)
    psum[i] = psum[i - 1] + A[i];
  
  if (psum[N] <= M) {
    printf("%d\n", N);
    return;
  }
  
  int cnt = 0;
  for (i = 0; i <= N; ++i) {
    cnt = max(cnt, func(i));
  }
  
  printf("%d\n", cnt);
}

int main() {
  int T;
  scanf("%d", &T);
  for (int t = 1; t <= T; ++t) {
    solve(t);
  }
  return 0;
}