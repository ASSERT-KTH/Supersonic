#include <iostream>
using namespace std;

const int nmmx = 31, kmx = 51;
int dp[nmmx][nmmx][kmx];

int solve(int n, int m, int k) {
  int &ans = dp[n][m][k];
  if (ans != -1)
    return ans;
  if (n * m == k || !k)
    return ans = 0;
  ans = 1e18;
  
  int temp1, temp2;
  
  for (int j = 0; j <= k; ++j) {
    temp1 = solve(1, m, j);
    temp2 = solve(n - 1, m, k - j);
    ans = min(ans, m * m + temp1 + temp2);
  }
  
  for (int j = 0; j <= k; ++j) {
    temp1 = solve(n, 1, j);
    temp2 = solve(n, m - 1, k - j);
    ans = min(ans, n * n + temp1 + temp2);
  }
  
  return ans;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int t;
  cin >> t;
  
  memset(dp, -1, sizeof(dp));
  
  while (t--) {
    int n, m, k;
    cin >> n >> m >> k;
    cout << solve(n, m, k) << endl;
  }
  
  return 0;
}