#include <bits/stdc++.h>
using namespace std;
#define int long long
#define endl '\n';
const int nmmx = 31, kmx = 51;
unordered_map<int, int> dp[nmmx][nmmx];
int solve(int n, int m, int k) {
  if (dp[n][m].count(k))
    return dp[n][m][k];
  if (n * m == k || !k)
    return dp[n][m][k] = 0;
  int ans = 1e18;
  for (int i = 1; i <= n - 1; ++i) {
    for (int j = 0; j <= k; ++j) {
      ans = min(ans, m * m + solve(i, m, j) + solve(n - i, m, k - j));
    }
  }
  for (int i = 1; i <= m - 1; ++i) {
    for (int j = 0; j <= k; ++j) {
      ans = min(ans, n * n + solve(n, i, j) + solve(n, m - i, k - j));
    }
  }
  return dp[n][m][k] = ans;
}
signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int n, m, k;
    cin >> n >> m >> k;
    cout << solve(n, m, k) << endl;
  }
  return 0;
}