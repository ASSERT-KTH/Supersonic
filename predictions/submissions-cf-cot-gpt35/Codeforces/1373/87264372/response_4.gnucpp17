#include <iostream>
#include <vector>
using namespace std;

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<int> ar(n);
    for (int i = 0; i < n; ++i) {
      cin >> ar[i];
    }
    vector<long long> dp(n + 1, 0);
    for (int i = 0; i < n; ++i) {
      dp[i + 1] = dp[i] + (i & 1 ? 0 : ar[i]);
      if (i + 2 <= n)
        dp[i + 2] = max(dp[i], dp[i + 1]) + ar[(i & 1 ? i + 1 : i)];
      dp[i + 1] = max({dp[i], dp[i + 1], dp[i + 2], dp[i + 1]}) +
                  (i & 1 ? 0 : ar[i]);
    }
    cout << max({dp[n], dp[n - 1], dp[n - 2]}) << endl;
  }
}