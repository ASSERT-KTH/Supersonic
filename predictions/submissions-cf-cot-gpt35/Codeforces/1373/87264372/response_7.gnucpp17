#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  
  int t;
  cin >> t;
  
  while (t--) {
    int n;
    cin >> n;
    
    vector<int> ar(n);
    for (int i = 0; i < n; ++i) {
      cin >> ar[i];
    }
    
    vector<vector<long long>> dp(3, vector<long long>(n + 1));
    long long max1 = 0, max2 = 0, max3 = 0;
    
    for (int i = 0; i < n; ++i) {
      dp[0][i + 1] = dp[0][i] + (i & 1 ? 0 : ar[i]);
      
      if (i + 2 <= n) {
        dp[1][i + 2] = max(dp[0][i], dp[1][i]) + ar[(i % 2 == 0 ? i + 1 : i)];
      }
      
      dp[2][i + 1] = max({dp[0][i], dp[1][i], dp[2][i], dp[2][i + 1]}) + (i & 1 ? 0 : ar[i]);
      
      max1 = max(max1, dp[0][i + 1]);
      max2 = max(max2, dp[1][i + 1]);
      max3 = max(max3, dp[2][i + 1]);
    }
    
    cout << max({max1, max2, max3}) << endl;
  }
  
  return 0;
}