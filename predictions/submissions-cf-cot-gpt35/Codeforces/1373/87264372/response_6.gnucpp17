#include <iostream>
#include <vector>
#include <algorithm>

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);
    
    int t;
    std::cin >> t;
    while (t--) {
        int n;
        std::cin >> n;
        std::vector<int> ar(n);
        for (int i = 0; i < n; ++i) {
            std::cin >> ar[i];
        }
        
        std::vector<std::vector<long long>> dp(3, std::vector<long long>(n + 1, 0ll));
        for (int i = 0; i < n; ++i) {
            dp[0][i + 1] = dp[0][i] + (i % 2 == 0 ? ar[i] : 0);
            if (i + 2 <= n) {
                dp[1][i + 2] = std::max(dp[0][i], dp[1][i]) + ar[i + 1];
            }
            dp[2][i + 1] = std::max({dp[0][i], dp[1][i], dp[2][i], dp[2][i + 1]}) + (i % 2 == 0 ? ar[i] : 0);
        }
        
        std::cout << *std::max_element(dp[0].begin(), dp[0].end()) << '\n';
    }
    
    return 0;
}