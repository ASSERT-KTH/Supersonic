#include <iostream>
#include <vector>
#include <set>
#include <tuple>
#include <algorithm>

void solve() {
    int t;
    std::cin >> t;
    while (t--) {
        int n;
        std::cin >> n;
        std::multiset<std::tuple<int, int, int>> a;
        for (int i = 0; i < n; i++) {
            int x, y;
            std::cin >> x >> y;
            a.insert(std::make_tuple(std::max(x, y), std::min(x, y), i));
        }
        auto prev = (*a.begin());
        auto best = prev;
        std::vector<int> res(n);
        for (const auto &person : a) {
            int h, w, i;
            std::tie(h, w, i) = person;
            if (std::get<0>(prev) == h) {
                if (std::get<1>(best) < w && std::get<0>(best) < h)
                    res[i] = std::get<2>(best) + 1;
                else {
                    res[i] = -1;
                }
            } else {
                if (std::get<1>(best) > std::get<1>(prev))
                    best = prev;
                if (std::get<1>(best) < w && std::get<0>(best) < h)
                    res[i] = std::get<2>(best) + 1;
                else
                    res[i] = -1;
                prev = person;
            }
        }
        for (const auto &p : res)
            std::cout << p << " ";
        std::cout << std::endl;
    }
}

int main() {
    solve();
    return 0;
}