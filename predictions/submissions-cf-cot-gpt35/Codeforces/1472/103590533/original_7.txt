Step 1: Remove unnecessary header files.

The program includes the header file `<bits/stdc++.h>`, which is not a standard C/C++ header file. This header file includes all the standard library headers, but it is not recommended to use in production code. We can remove this header file and include only the necessary standard headers.

Step 2: Remove unnecessary macros.

The program defines many macros that are not used in the code. We can remove these macros to simplify the code.

Step 3: Remove unnecessary comments.

The program has some comments that are not necessary for understanding the code. We can remove these comments to make the code more concise.

Step 4: Simplify the code.

The program uses some complex data structures and functions that are not necessary for solving the problem. We can simplify the code by using simpler data structures and functions.

Step 5: Optimize the loop.

The program uses a loop to iterate over the elements of `res` array. We can optimize this loop by using a range-based for loop.

Here is the optimized program:

```c++
#include <iostream>
#include <set>
#include <tuple>
#include <vector>
using namespace std;

void solve() {
  int t, n, x, y;
  cin >> t;
  while (t--) {
    cin >> n;
    set<tuple<int, int, int>> a;
    for (int i = 0; i < n; i++) {
      cin >> x >> y;
      a.insert(make_tuple(max(x, y), min(x, y), i));
    }
    auto prev = (*a.begin());
    auto best = prev;
    int res[n];
    for (const auto &person : a) {
      int h, w, i;
      tie(h, w, i) = person;
      if (get<0>(prev) == h) {
        if (get<1>(best) < w && get<0>(best) < h)
          res[i] = get<2>(best) + 1;
        else {
          res[i] = -1;
        }
      } else {
        if (get<1>(best) > get<1>(prev))
          best = prev;
        if (get<1>(best) < w && get<0>(best) < h)
          res[i] = get<2>(best) + 1;
        else
          res[i] = -1;
        prev = person;
      }
    }
    for (auto &p : res)
      cout << p << " ";
    cout << endl;
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);
  solve();
  return 0;
}
```