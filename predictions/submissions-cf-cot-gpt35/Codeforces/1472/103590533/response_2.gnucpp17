#include <iostream>
#include <set>
#include <tuple>
#include <algorithm>
#include <vector>

#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"

void solve() {
  int t;
  std::cin >> t;
  while (t--) {
    int n, x, y;
    std::cin >> n;
    std::set<std::tuple<int, int, int>> a;
    for (int i = 0; i < n; i++) {
      std::cin >> x >> y;
      a.insert(std::make_tuple(std::max(x, y), std::min(x, y), i));
    }
    auto prev = (*a.begin());
    auto best = prev;
    int res[n];
    for (const auto& person : a) {
      int h, w, i;
      std::tie(h, w, i) = person;
      if (std::get<0>(prev) == h) {
        if (std::get<1>(best) < w && std::get<0>(best) < h)
          res[i] = std::get<2>(best) + 1;
        else {
          res[i] = -1;
        }
      } else {
        if (std::get<1>(best) > std::get<1>(prev))
          best = prev;
        if (std::get<1>(best) < w && std::get<0>(best) < h)
          res[i] = std::get<2>(best) + 1;
        else
          res[i] = -1;
        prev = person;
      }
    }
    std::copy(res, res + n, std::ostream_iterator<int>(std::cout, " "));
    std::cout << endl;
  }
}

int main() {
  fastio;
  solve();
  return 0;
}