#include <iostream>
#include <vector>
#include <unordered_map>
#include <queue>
#include <algorithm>
#include <random>

using namespace std;

#define ll long long

void solve() {
  int n, m;
  cin >> n >> m;
  vector<ll> v(n);
  for (int i = 0; i < n; i++) {
    cin >> v[i];
  }

  unordered_map<ll, ll> d;
  queue<ll> q;
  for (int i = 0; i < n; i++) {
    d[v[i]] = 0LL;
    q.push(v[i]);
  }

  vector<ll> res;
  ll mini_sum = 0LL;
  while (!q.empty()) {
    if ((int)res.size() == m)
      break;
    ll cur = q.front();
    q.pop();
    if (d[cur] != 0) {
      res.push_back(cur);
      mini_sum += d[cur];
    }
    d[cur - 1] = d[cur] + 1;
    q.push(cur - 1);
    d[cur + 1] = d[cur] + 1;
    q.push(cur + 1);
  }

  cout << mini_sum << "\n";
  for (ll x : res)
    cout << x << " ";
  cout << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);

  int t = 1;
  while (t--) {
    solve();
  }

  return 0;
}