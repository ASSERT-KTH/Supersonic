#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <numeric>
#include <chrono>
#include <random>

using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    random_device rd;
    mt19937_64 rnd(rd());

    int n;
    cin >> n;
    vector<long long> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }

    int m = n - n / 2;
    long long res = 0;

    for (int _ = 0; _ < 13; _++) {
        long long x = a[rnd() % n];
        unordered_map<long long, int> d;
        d.max_load_factor(0.1);

        for (int i = 0; i < n; i++) {
            long long gcd = __gcd(x, a[i]);
            d[gcd]++;
        }

        for (auto &p : d) {
            int count = 0;
            for (auto &q : d) {
                if (q.first % p.first == 0) {
                    count += q.second;
                }
            }
            if (count >= m && p.first > res) {
                res = p.first;
            }
        }
    }

    cout << res << endl;

    return 0;
}