#include <iostream>
#include <vector>
#include <random>
#include <chrono>
#include <numeric>
#include <algorithm>

using namespace std;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);

  mt19937_64 rnd(chrono::steady_clock::now().time_since_epoch().count());

  int n;
  cin >> n;

  vector<long long> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }

  int m = n - n / 2;
  long long res = 0;

  for (int _ = 0; _ < 5; _++) {
    long long x = a[rnd() % n];
    vector<int> count(n, 0);

    for (int i = 0; i < n; i++) {
      long long gcd = __gcd(x, a[i]);
      count[gcd]++;
    }

    for (int i = 0; i < n; i++) {
      if (count[i] >= m && i > res) {
        res = i;
      }
    }
  }

  cout << res << endl;

  return 0;
}