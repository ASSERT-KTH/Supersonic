#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
using namespace std;

const int N = 200200;
const int mod = 1e9 + 7;

int n, m, k;
int ban[10][10][10], slf[10][10];
int cnt[10][10];

int res, all;
int used[10], sv[10][10];

vector<pair<int, int>> v[N], g[N];

void rec(int i) {
  if (i == k + 1) {
    res += 1;
    return;
  }
  for (int j = 0; j < i; j++) {
    if (used[i] & (1 << j) || slf[i][j])
      continue;
    for (int h = i + 1; h <= k; h++) {
      sv[i][h] = used[h];
      used[h] |= ban[i][j][h];
    }
    all += cnt[i][j];
    rec(i + 1);
    all -= cnt[i][j];
    for (int h = i + 1; h <= k; h++) {
      used[h] = sv[i][h];
    }
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  cin >> n >> m >> k;
  for (int i = 1; i <= m; i++) {
    int x, y, z;
    cin >> x >> y >> z;
    v[x].push_back({z, y});
  }
  
  for (int i = 1; i <= n; i++) {
    sort(v[i].begin(), v[i].end());
    for (int j = 0; j < v[i].size(); j++) {
      g[v[i][j].second].push_back({v[i].size(), j});
    }
  }
  
  for (int i = 1; i <= n; i++) {
    if (g[i].empty()) {
      cout << 0 << "\n";
      return 0;
    }
    
    sort(g[i].begin(), g[i].end());
    vector<pair<int, int>> ng;
    ng.push_back(g[i][0]);
    
    for (int j = 1; j < g[i].size(); j++) {
      if (g[i][j] != g[i][j - 1]) {
        ng.push_back(g[i][j]);
      } else {
        slf[g[i][j].first][g[i][j].second] = true;
      }
    }
    
    g[i] = ng;
    
    for (int j = 0; j < g[i].size(); j++) {
      cnt[g[i][j].first][g[i][j].second] += 1;
      for (int h = 0; h < g[i].size(); h++) {
        if (h != j) {
          ban[g[i][j].first][g[i][j].second][g[i][h].first] |= (1 << g[i][h].second);
        }
      }
    }
  }
  
  rec(1);
  
  cout << res << "\n";
  
  return 0;
}