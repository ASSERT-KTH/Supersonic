#include <iostream>
#include <vector>
#include <algorithm>

const int mod = 1e9 + 7;

void rec(int i, int k, std::vector<int>& used, std::vector<std::vector<int>>& ban, std::vector<std::vector<int>>& slf, std::vector<std::vector<int>>& cnt, std::vector<std::vector<int>>& sv, int& res, int& all) {
  if (i == k + 1) {
    res += 1;
    return;
  }
  for (int j = 0; j < i; j++) {
    if (used[i] & (1 << j) || slf[i][j])
      continue;
    for (int h = i + 1; h <= k; h++) {
      sv[i][h] = used[h];
      used[h] |= ban[i][j][h];
    }
    all += cnt[i][j];
    rec(i + 1, k, used, ban, slf, cnt, sv, res, all);
    all -= cnt[i][j];
    for (int h = i + 1; h <= k; h++) {
      used[h] = sv[i][h];
    }
  }
}

int main() {
  std::ios_base::sync_with_stdio(0);
  
  int n, m, k;
  std::cin >> n >> m >> k;
  
  std::vector<std::vector<std::pair<int, int>>> v(n + 1), g(n + 1);
  for (int i = 1; i <= m; i++) {
    int x, y, z;
    std::cin >> x >> y >> z;
    v[x].emplace_back(z, y);
  }
  
  std::vector<std::vector<int>> ban(k + 1, std::vector<int>(k + 1, std::vector<int>(k + 1)));
  std::vector<std::vector<int>> slf(k + 1, std::vector<int>(k + 1));
  std::vector<std::vector<int>> cnt(k + 1, std::vector<int>(k + 1));
  std::vector<std::vector<int>> sv(k + 1, std::vector<int>(k + 1));
  int res = 0, all = 0;
  
  for (int i = 1; i <= n; i++) {
    std::sort(v[i].begin(), v[i].end());
    for (int j = 0; j < v[i].size(); j++) {
      g[v[i][j].second].emplace_back(v[i].size(), j);
    }
  }
  
  std::vector<std::pair<int, int>> ng;
  for (int i = 1; i <= n; i++) {
    if (g[i].empty()) {
      std::cout << 0 << "\n";
      return 0;
    }
    std::sort(g[i].begin(), g[i].end());
    ng.clear();
    ng.push_back(g[i][0]);
    for (int j = 1; j < g[i].size(); j++) {
      if (g[i][j] == g[i][j - 1]) {
        slf[g[i][j].first][g[i][j].second] = true;
      } else {
        ng.push_back(g[i][j]);
      }
    }
    g[i] = ng;
    for (int j = 0; j < g[i].size(); j++) {
      cnt[g[i][j].first][g[i][j].second] += 1;
      for (int h = 0; h < g[i].size(); h++)
        if (h != j) {
          ban[g[i][j].first][g[i][j].second][g[i][h].first] |= (1 << g[i][h].second);
        }
    }
  }
  
  rec(1, k, used, ban, slf, cnt, sv, res, all);
  
  std::cout << res << "\n";
  return 0;
}