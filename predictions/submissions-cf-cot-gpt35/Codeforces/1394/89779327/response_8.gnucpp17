#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

const int N = 200200;
const int mod = 1e9 + 7;

int n, m, k;
int ban[10][10], slf[10][10];
int used[10], cnt[10][10];
int res, all;
vector<pair<int, int>> v[N];
unordered_map<int, vector<pair<int, int>>> g;

void rec(int i) {
  if (i == k + 1) {
    res += 1;
    return;
  }
  for (int j = 0; j < i; j++) {
    if (used[i] & (1 << j) || slf[i][j])
      continue;
    for (int h = i + 1; h <= k; h++) {
      int prevUsed = used[h];
      used[h] |= ban[i][j];
      rec(i + 1);
      used[h] = prevUsed;
    }
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin >> n >> m >> k;
  for (int i = 1; i <= m; i++) {
    int x, y, z;
    cin >> x >> y >> z;
    v[x].push_back({z, y});
  }
  for (int i = 1; i <= n; i++) {
    for (const auto& p : v[i]) {
      g[p.first].push_back({v[i].size(), p.second});
    }
  }
  for (auto& p : g) {
    vector<pair<int, int>>& pairs = p.second;
    for (int j = 0; j < pairs.size(); j++) {
      cnt[pairs[j].first][pairs[j].second] += 1;
      for (int h = 0; h < pairs.size(); h++) {
        if (h != j) {
          ban[pairs[j].first][pairs[j].second] |= (1 << pairs[h].second);
        }
      }
    }
  }
  rec(1);
  cout << res << "\n";
}