#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int N = 200200;
const int mod = 1e9 + 7;

int n, m, k;
int ban[10][10][10], slf[10][10];
int used[10], cnt[10][10];
int res, all;
pair<int, int> v[N], g[N];
int sv[10][10];

void rec(int i) {
  if (i == k + 1) {
    res += 1;
    return;
  }
  for (int j = 0; j < i; j++) {
    if (used[i] & (1 << j) || slf[i][j])
      continue;
    for (int h = i + 1; h <= k; h++) {
      sv[i][h] = used[h];
      used[h] |= ban[i][j][h];
    }
    all += cnt[i][j];
    rec(i + 1);
    all -= cnt[i][j];
    for (int h = i + 1; h <= k; h++) {
      used[h] = sv[i][h];
    }
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);

  cin >> n >> m >> k;
  
  for (int i = 1; i <= m; i++) {
    int x, y, z;
    cin >> x >> y >> z;
    v[i] = {z, y};
  }
  
  sort(v + 1, v + m + 1);
  
  int ptr = 1;
  for (int i = 1; i <= n; i++) {
    while (ptr <= m && v[ptr].first == i) {
      int y = v[ptr].second;
      g[y] = {ptr, g[y].first + 1};
      ptr++;
    }
  }

  vector<pair<int, int>> ng;
  for (int i = 1; i <= n; i++) {
    if (g[i].first == 0) {
      cout << 0 << "\n";
      return 0;
    }
    
    ng.clear();
    ng.push_back(g[i]);
    for (int j = 1; j < g[i].second; j++) {
      if (g[i].second[j] == g[i].second[j - 1]) {
        slf[g[i].first[j]][g[i].second[j]] = true;
      } else {
        ng.push_back(g[i]);
      }
    }
    g[i] = ng;
    
    for (int j = 0; j < g[i].second; j++) {
      cnt[g[i].first[j]][g[i].second[j]] += 1;
      for (int h = 0; h < g[i].second; h++)
        if (h != j) {
          ban[g[i].first[j]][g[i].second[j]][g[i].first[h]] |= (1 << g[i].second[h]);
        }
    }
  }
  
  rec(1);
  
  cout << res << "\n";
  return 0;
}