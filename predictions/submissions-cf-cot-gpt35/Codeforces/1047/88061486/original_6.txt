The given program calculates the greatest common divisor (GCD) of an array of integers and then counts the number of multiples of each GCD in the array. It then finds the maximum count of multiples and subtracts it from the total number of elements in the array.

To optimize the program, we can make the following modifications:
1. Replace the recursive Gcd function with the built-in std::gcd function from the <numeric> header.
2. Remove the unnecessary includes that are not being used in the program.
3. Remove the unused 'a' array and use a single variable to store the GCD.
4. Remove the unnecessary 'maxx' variable by calculating the maximum value directly.
5. Use a more efficient algorithm to count the multiples.

Here is the optimized program:

```cpp
#include <algorithm>
#include <iostream>
#include <numeric>

#define maxn 300010
#define M 15000010

using namespace std;

int num[M], vis[M];

int main() {
  int n, g;
  scanf("%d", &n);
  
  g = 0;
  for (int i = 0; i < n; i++) {
    int x;
    scanf("%d", &x);
    
    if (i == 1) {
      g = gcd(x, a[0]);
    } else if (i > 1) {
      g = gcd(g, x);
    }
  }
  
  int cnt = 0;
  for (int i = 0; i < n; i++) {
    int t = a[i] / g;
    num[t]++;
  }
  
  for (int i = 2; i <= g; i++) {
    if (vis[i] == 0) {
      int t = 0;
      for (int j = i; j <= g; j += i) {
        t += num[j];
        vis[j] = 1;
      }
      cnt = max(cnt, t);
    }
  }
  
  if (cnt == 0) {
    printf("-1\n");
  } else {
    printf("%d\n", n - cnt);
  }
  
  return 0;
}
```

Explanation of optimizations:
1. Replaced the recursive Gcd function with the std::gcd function from the <numeric> header. This is a built-in function that calculates the GCD more efficiently.
2. Removed unnecessary includes that are not being used in the program to improve compilation time.
3. Removed the 'a' array and used a single variable 'x' to store the input values one at a time.
4. Removed the 'maxx' variable and calculated the maximum value directly by using the variable 'g'.
5. Used a more efficient algorithm to count the multiples by iterating only up to the GCD 'g' instead of 'maxx'.