#include <iostream>
#include <vector>

void answer(bool v) {
  constexpr const char *s[2] = {"No", "Yes"};
  std::cout << s[v] << '\n';
}

void solve(const std::vector<size_t> &parent) {
  size_t n = parent.size();
  std::vector<unsigned> empty_child_count(n, 0);

  for (size_t i = 1; i < n; ++i) {
    size_t p = parent[i];
    empty_child_count[p]++;
  }

  for (size_t i = 0; i < n; ++i) {
    if (empty_child_count[i] < 3) {
      answer(false);
      return;
    }
  }

  answer(true);
}

int main() {
  size_t n;
  std::cin >> n;
  
  std::vector<size_t> parent(n);
  for (size_t i = 1; i < n; ++i) {
    unsigned p;
    std::cin >> p;
    parent[i] = p - 1;
  }

  solve(parent);
  
  return 0;
}