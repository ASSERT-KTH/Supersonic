Step by step optimization:

1. Remove unnecessary `#include` statements: The program includes unnecessary header files `<bits/stdc++.h>` and `<iostream>`. Since they are not being used, they can be removed.

2. Remove unnecessary macro definitions: The program defines several macros that are not being used. They can be removed to simplify the code.

3. Remove unnecessary namespace declarations: The program includes the `std` namespace using the `using namespace std;` statement, which is considered bad practice. It is better to explicitly prefix the standard library classes and functions with `std::`.

4. Remove unnecessary global variables: The program defines unnecessary global variables such as `mod` and `ordered_set`. Since they are not being used, they can be removed.

5. Optimize the loop condition: In the while loop, the condition `1` is used, which is equivalent to `true`. It is better to use `true` directly for clarity.

6. Optimize the loop termination condition: The loop terminates when `moves * (moves + 1) / 2` is greater than or equal to `x`. However, this condition can be simplified to `moves * (moves + 1) >= 2 * x`.

7. Optimize the calculation of `moves`: Instead of incrementing `moves` in each iteration, it can be calculated directly using the formula `moves = ceil((-1 + sqrt(1 + 8 * x)) / 2)`. This formula calculates the integer value of `moves` that satisfies the condition `moves * (moves + 1) / 2 >= x`.

8. Optimize the output statement: Instead of using `std::endl`, which flushes the output stream, it is better to use a newline character `'\n'` for better performance.

Optimized program:

```cpp
#pragma GCC optimize "trapv"
#include <iostream>
#include <cmath>

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);

  int t;
  std::cin >> t;
  while (t--) {
    long long x;
    std::cin >> x;
    long long moves = std::ceil((-1 + std::sqrt(1 + 8 * x)) / 2);
    if (moves * (moves + 1) / 2 == x + 1)
      moves++;
    std::cout << moves << '\n';
  }
}
```