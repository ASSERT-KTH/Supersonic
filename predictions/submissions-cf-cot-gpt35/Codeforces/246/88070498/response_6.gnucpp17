#include <iostream>
#include <vector>

typedef long long ll;
typedef long double ld;
typedef std::pair<int, int> pii;
typedef std::vector<int> vi;

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);

    int n, m;
    std::scanf("%d %d", &n, &m);

    std::vector<int> a(n + 1);
    std::vector<std::vector<int>> vk(n + 1);
    for (int i = 1; i <= n; i++) {
        std::scanf("%d", &a[i]);
        vk[a[i]].push_back(i);
    }

    std::vector<std::vector<int>> ad(n + 1);
    while (m--) {
        int u, v;
        std::scanf("%d %d", &u, &v);
        ad[u].push_back(v);
        ad[v].push_back(u);
    }

    int mx = 0, mxColor = INT_MAX;
    for (const auto& color : vk) {
        std::vector<bool> mp(n + 1, false);
        for (const auto& member : color) {
            for (const auto& neighbour : ad[member]) {
                if (a[neighbour] != a[member]) {
                    mp[a[neighbour]] = true;
                }
            }
        }
        if (mp.size() == mx && color < mxColor) {
            mxColor = color;
        } else if (mp.size() > mx) {
            mx = mp.size();
            mxColor = color;
        }
    }

    std::printf("%d\n", mxColor);

    return 0;
}