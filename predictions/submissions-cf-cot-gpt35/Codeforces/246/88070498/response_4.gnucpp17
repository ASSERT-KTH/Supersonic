#include <iostream>
#include <vector>
#include <climits>
using namespace std;
int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  int n, m;
  cin >> n >> m;
  vector<int> a(n + 1);
  vector<vector<int>> ad(n + 1);
  vector<int> colorCount(n + 1, 0);
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
    colorCount[a[i]]++;
  }
  while (m--) {
    int u, v;
    cin >> u >> v;
    ad[u].push_back(v);
    ad[v].push_back(u);
  }
  int mx = 0, mxColor = INT_MAX;
  for (int i = 1; i <= n; i++) {
    vector<int> neighborColors(n + 1, 0);
    for (auto &neighbour : ad[i]) {
      if (a[neighbour] != a[i])
        neighborColors[a[neighbour]] = 1;
    }
    int count = 0;
    for (int j = 1; j <= n; j++) {
      if (neighborColors[j])
        count++;
    }
    if (count == mx && i < mxColor)
      mxColor = i;
    else if (count > mx) {
      mx = count;
      mxColor = i;
    }
  }
  cout << mxColor;
  return 0;
}