The provided program can be optimized in the following steps:

1. Remove unnecessary includes: The program includes the entire `<bits/stdc++.h>` library, which is not necessary. We can remove it and include only the required libraries.

2. Remove unnecessary defines: The program defines `ll`, `endl`, and `MOD`, but they are not used. We can remove these defines.

3. Remove unnecessary variables: The variables `a`, `b`, and `c` are declared but not used. We can remove these variables.

4. Optimize loop ranges: The outer loop runs from 0 to 335 and the inner loop runs from 0 to 210. We can optimize these ranges by calculating the maximum values of `i` and `j` based on the given formula `p = 3 * i + 5 * j`. The maximum value of `i` can be calculated as `n / 3` and the maximum value of `j` can be calculated as `(n - 3 * i) / 5`. We can also initialize `i` and `j` inside the for loops.

5. Optimize the calculation of `z`: Instead of dividing `z` by 7 in each iteration, we can calculate it once outside the inner loop and use it in the condition.

6. Use `cout` once: Instead of printing `i`, `j`, and `z` separately, we can use a single `cout` statement to print them together.

7. Remove unnecessary `flag` variable: We can use a `return` statement to exit the function when the solution is found, instead of setting a boolean flag and breaking the loops.

8. Pre-calculate `tests`: Instead of reading the number of test cases in each iteration, we can read it once and store it in a variable before the while loop.

9. Remove unnecessary `return 0`: The `return 0` statement at the end of `main()` is not necessary.

Here is the optimized program:

```cpp
#include <iostream>

using namespace std;

void solve() {
  int n;
  cin >> n;

  int max_i = n / 3;
  int max_j = (n - 3 * max_i) / 5;

  for (int i = 0; i <= max_i; i++) {
    for (int j = 0; j <= max_j; j++) {
      int p = 3 * i + 5 * j;
      int z = (n - p) / 7;
      if (p + z * 7 == n && z >= 0) {
        cout << i << " " << j << " " << z << endl;
        return;
      }
    }
  }

  cout << -1 << endl;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int tests;
  cin >> tests;

  while (tests--) {
    solve();
  }
}
```