To optimize the given program, we can make the following modifications:

1. Remove unnecessary headers: The program includes the `<bits/stdc++.h>` header, which is not a standard C++ header and includes a lot of unnecessary headers. We can remove this line and include only the necessary headers.

2. Remove unnecessary macros: The program defines several macros that are not being used. We can remove these macros to simplify the code.

3. Remove unnecessary typedefs: The program typedefs several types that are not being used. We can remove these typedefs to simplify the code.

4. Replace `endl` with `"\n"`: The program uses `endl` to flush the output stream, but it is slower than using `"\n"`. We can replace `endl` with `"\n"` to improve performance.

5. Avoid unnecessary calculations: The program performs unnecessary calculations in the loop. We can simplify the calculations and avoid unnecessary divisions.

6. Use `cout` instead of `printf`: The program uses `printf` to output the results, but `cout` is faster and more convenient. We can replace `printf` with `cout` to improve performance.

Here is the optimized program:

```cpp
#include <iostream>
#include <vector>

using namespace std;

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--) {
        int a;
        cin >> a;

        cout << 2 << "\n";
        cout << a << " " << a - 1 << "\n";

        int x = (a + (a - 1) + 1) / 2;
        for (int i = a - 2; i >= 1; i--) {
            cout << x << " " << i << "\n";
            x = (x + i + 1) / 2;
        }
    }

    return 0;
}
```