#include <iostream>
#include <unordered_map>
#include <vector>
#include <cmath>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int t;
  cin >> t;

  while (t--) {
    int n;
    cin >> n;

    vector<long long> v(n);
    unordered_map<long long, long long> cnt;

    for (int i = 0; i < n; i++) {
      cin >> v[i];
      cnt[v[i]]++;
    }

    sort(v.begin(), v.end());

    vector<long long> dp(2e5 + 1, 0);
    long long best = 0;
    long long maxSqrt = sqrt(2e5);

    for (auto& c : cnt) {
      long long i = c.first;

      if (c.second == 0)
        continue;

      for (long long j = 2; j <= maxSqrt; j++) {
        if (i % j == 0) {
          dp[i] = max({dp[i], dp[j], dp[i / j]});
        }
      }

      dp[i] = max(dp[i], dp[1]);
      dp[i] += c.second;
      best = max(best, dp[i]);
    }

    cout << n - best << '\n';
  }
}