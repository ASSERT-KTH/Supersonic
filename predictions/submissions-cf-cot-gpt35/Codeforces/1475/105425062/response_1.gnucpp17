#include <algorithm>
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;

        vector<long long> v(n);
        vector<long long> cnt(2e5 + 1, 0);

        for (int i = 0; i < n; i++) {
            cin >> v[i];
            cnt[v[i]]++;
        }

        vector<long long> dp(2e5 + 1);
        long long best = 0;

        for (int i = 2; i <= sqrt(2e5); i++) {
            if (dp[i] != 0) {
                continue;
            }
            for (int j = i; j <= 2e5; j += i) {
                dp[j] = max(dp[j], dp[i]);
            }
        }

        for (int i = 1; i <= 2e5; i++) {
            dp[i] += cnt[i];
            best = max(best, dp[i]);
        }

        cout << n - best << '\n';
    }

    return 0;
}