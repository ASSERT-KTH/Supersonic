#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    
    vector<long long> v(n);
    vector<long long> cnt(n+1, 0);
    for (int i = 0; i < n; i++) {
      cin >> v[i];
      cnt[v[i]]++;
    }

    vector<long long> dp(n+1, 0);
    long long best = 0;
    for (int i = 1; i <= n; i++) {
      if (cnt[i] == 0)
        continue;

      long long max_dp = 0;
      for (int j = 2; j * j <= i; j++) {
        if (i % j == 0) {
          max_dp = max(max_dp, max(dp[j], dp[i/j]));
        }
      }
      dp[i] = max(max_dp, dp[1]) + cnt[i];
      best = max(best, dp[i]);
    }
    
    cout << n - best << '\n';
  }
  
  return 0;
}