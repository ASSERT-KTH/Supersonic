#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<int> v;
    v.reserve(n);
    vector<int> cnt(2e5 + 1, 0);
    for (int i = 0; i < n; i++) {
      int num;
      cin >> num;
      v.push_back(num);
      cnt[num]++;
    }
    sort(v.begin(), v.end());
    vector<int> dp(2e5 + 1, 0);
    int best = 0;
    for (int i = 1; i < dp.size(); i++) {
      if (cnt[i] == 0)
        continue;
      for (int j = 2; j <= sqrt(i); j++) {
        if (i % j == 0) {
          dp[i] = max(dp[i], max(dp[j], dp[i / j]));
        }
      }
      dp[i] = max(dp[i], dp[1]);
      dp[i] += cnt[i];
      best = max(best, dp[i]);
    }
    cout << n - best << '\n';
  }
}