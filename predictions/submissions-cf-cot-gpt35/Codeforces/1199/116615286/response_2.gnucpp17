#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
using namespace std;

int r[4] = {1, 0, 0, -1};
int c[4] = {0, -1, 1, 0};
char p[4] = {'D', 'L', 'R', 'U'};
int t, n, m;
vector<pair<int, int>> adj[300005];
vector<bool> match(300005);
vector<int> matching;
vector<int> v;

int main() {
  FAST;
  cin >> t;
  while (t--) {
    cin >> n >> m;
    matching.resize(n);
    for (int i = 1; i <= 3 * n; i++) {
      adj[i].clear();
    }
    fill(match.begin(), match.end(), false);
    for (int i = 1; i <= m; i++) {
      int x, y;
      cin >> x >> y;
      adj[x].push_back(make_pair(y, i));
    }
    for (int i = 1; i <= 3 * n; i++) {
      if (match[i])
        continue;
      for (auto& it : adj[i]) {
        int nd = it.first;
        int ed = it.second;
        if (!match[nd]) {
          matching.push_back(ed);
          match[nd] = true;
          match[i] = true;
          break;
        }
      }
    }
    if (matching.size() >= n) {
      cout << "Matching" << '\n';
      for (int i = 0; i < n; i++) {
        cout << matching[i] << " ";
      }
      cout << '\n';
      continue;
    }
    v.clear();
    for (int i = 1; i <= 3 * n; i++) {
      if (!match[i])
        v.push_back(i);
    }
    if (v.size() >= n) {
      cout << "IndSet" << '\n';
      for (int i = 0; i < n; i++) {
        cout << v[i] << " ";
      }
    } else {
      cout << "Impossible";
    }
    cout << '\n';
  }
}