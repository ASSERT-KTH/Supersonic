#include <iostream>
#include <vector>

using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int t;
  cin >> t;

  while (t--) {
    int n, m;
    cin >> n >> m;

    vector<vector<pair<int, int>>> adj(3 * n + 1);
    vector<bool> match(3 * n + 1, false);
    vector<int> matching;
    
    for (int i = 1; i <= m; i++) {
      int x, y;
      cin >> x >> y;
      adj[x].push_back(make_pair(y, i));
    }

    for (int i = 1; i <= 3 * n; i++) {
      if (match[i]) {
        continue;
      }
      
      for (auto it : adj[i]) {
        int nd = it.first;
        int ed = it.second;
        
        if (!match[nd]) {
          matching.push_back(ed);
          match[nd] = true;
          match[i] = true;
          break;
        }
      }
    }

    if (matching.size() >= n) {
      cout << "Matching" << '\n';
      for (int i = 0; i < n; i++) {
        cout << matching[i] << " ";
      }
      cout << '\n';
    } else {
      vector<int> v;
      for (int i = 1; i <= 3 * n; i++) {
        if (!match[i]) {
          v.push_back(i);
        }
      }

      if (v.size() >= n) {
        cout << "IndSet" << '\n';
        for (int i = 0; i < n; i++) {
          cout << v[i] << " ";
        }
      } else {
        cout << "Impossible";
      }

      cout << '\n';
    }
  }

  return 0;
}