#include <iostream>
#include <vector>
#include <set>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int t, n, m;
  cin >> t;
  
  while (t--) {
    cin >> n >> m;
    vector<set<int>> adj(3 * n + 1);
    vector<bool> match(3 * n + 1, false);
    vector<int> matching;

    for (int i = 1; i <= m; i++) {
      int x, y;
      cin >> x >> y;
      adj[x].insert(y);
    }

    for (int i = 1; i <= 3 * n; i++) {
      if (match[i] || adj[i].empty()) continue;
      int nd = *adj[i].begin();
      adj[i].erase(nd);
      if (!match[nd]) {
        matching.push_back(i);
        match[i] = true;
        match[nd] = true;
      }
    }

    if (matching.size() >= n) {
      cout << "Matching\n";
      for (int i = 0; i < n; i++) {
        cout << matching[i] << " ";
      }
      cout << '\n';
    } else {
      vector<int> v;
      for (int i = 1; i <= 3 * n; i++) {
        if (!match[i]) v.push_back(i);
      }
      if (v.size() >= n) {
        cout << "IndSet\n";
        for (int i = 0; i < n; i++) {
          cout << v[i] << " ";
        }
      } else {
        cout << "Impossible";
      }
      cout << '\n';
    }
  }
}