#include <iostream>
#include <vector>
#include <bitset>

#define MAX_N 500001

int n, m;
std::vector<int> graph[MAX_N];
int ans[MAX_N];

int num() {
  int res;
  scanf("%d", &res);
  return res;
}

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  std::vector<int> s;
  s.push_back(i);
  int list[MAX_N];
  std::bitset<MAX_N> bs;
  bs.set(i);
  int list_size = 0;
  while (!s.empty()) {
    int now = s.back();
    s.pop_back();
    list[list_size++] = now;
    for (int next : graph[now])
      if (!bs[next]) {
        bs.set(next);
        s.push_back(next);
      }
  }
  int res = list_size;
  for (int j = 0; j < list_size; j++)
    ans[list[j]] = res;
  return res;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);
  n = num();
  m = num();
  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    if (l < 0)
      continue;
    int a = num();
    while (l-- > 0) {
      int b = num();
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  for (int i = 1; i <= n; i++)
    printf("%d ", answer(i));
  printf("\n");
}