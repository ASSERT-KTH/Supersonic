#include <iostream>
#include <vector>
#include <queue>
#include <bitset>

using namespace std;

const int MAXN = 500001;

int n, m;
vector<int> graph[MAXN];
int ans[MAXN];

int num() {
  int res;
  scanf("%d", &res);
  return res;
}

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  
  queue<int> q;
  q.push(i);
  bitset<MAXN> bs;
  bs.set(i);
  
  int res = 0;
  while (!q.empty()) {
    int now = q.front();
    q.pop();
    res++;
    for (int next : graph[now])
      if (!bs[next]) {
        bs.set(next);
        q.push(next);
        ans[next] = res;
      }
  }
  
  return res;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
  
  n = num();
  m = num();
  
  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    if (l < 0)
      continue;
    int a = num();
    while (l-- > 0) {
      int b = num();
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  
  for (int i = 1; i <= n; i++)
    printf("%d ", answer(i));
  
  printf("\n");
  
  return 0;
}