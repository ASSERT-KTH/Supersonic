#include <iostream>
#include <vector>
#include <stack>
#include <bitset>
using namespace std;

const int MAXN = 500001;

int n, m;
vector<int> graph[MAXN];
int ans[MAXN];

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  stack<int> s;
  s.push(i);
  bitset<MAXN> bs;
  bs.set(i);
  int res = 0;
  while (!s.empty()) {
    int now = s.top();
    s.pop();
    res++;
    for (int next : graph[now]) {
      if (!bs[next]) {
        bs.set(next);
        s.push(next);
      }
    }
  }
  for (int next = 1; next <= n; next++) {
    if (bs[next])
      ans[next] = res;
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);

  cin >> n >> m;
  for (int i = 0; i < m; i++) {
    int l, a, b;
    cin >> l >> a;
    for (int j = 1; j < l; j++) {
      cin >> b;
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  for (int i = 1; i <= n; i++) {
    cout << answer(i) << " ";
  }
  cout << endl;

  return 0;
}