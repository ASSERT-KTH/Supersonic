#include <iostream>
#include <vector>
#include <stack>

int n, m;
std::vector<int> graph[500001];
int ans[500001];

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  
  std::stack<int> s;
  s.push(i);
  std::vector<int> list;
  std::vector<bool> visited(n + 1, false);
  visited[i] = true;
  
  while (!s.empty()) {
    int now = s.top();
    s.pop();
    list.push_back(now);
    
    for (int next : graph[now]) {
      if (!visited[next]) {
        visited[next] = true;
        s.push(next);
      }
    }
  }
  
  int res = static_cast<int>(list.size());
  
  for (int next : list) {
    ans[next] = res;
  }
  
  return res;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  
  std::cin >> n >> m;
  
  for (int i = 0; i < m; i++) {
    int l, a;
    std::cin >> l >> a;
    
    if (l < 0)
      continue;
    
    while (l-- > 0) {
      int b;
      std::cin >> b;
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  
  for (int i = 1; i <= n; i++) {
    std::cout << answer(i) << ' ';
  }
  
  std::cout << '\n';
  
  return 0;
}