#include <iostream>
#include <vector>
#include <bitset>
using namespace std;

const int MAXN = 500001;
int n, m;
vector<int> graph[MAXN];
int ans[MAXN];

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  vector<int> list;
  bitset<MAXN> bs;
  bs.set(i);
  list.push_back(i);
  for (int j = 0; j < list.size(); j++) {
    int now = list[j];
    for (int next : graph[now])
      if (!bs[next]) {
        bs.set(next);
        list.push_back(next);
      }
  }
  int res = list.size();
  for (int next : list)
    ans[next] = res;
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin >> n >> m;
  for (int i = 0; i < m; i++) {
    int l;
    cin >> l;
    if (l < 0)
      continue;
    int a;
    cin >> a;
    while (l-- > 0) {
      int b;
      cin >> b;
      graph[a].push_back(b);
      graph[b].push_back(a);
      a = b;
    }
  }
  for (int i = 1; i <= n; i++)
    cout << answer(i) << " ";
  cout << endl;
}