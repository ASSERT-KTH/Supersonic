#include <iostream>
#include <vector>
#include <stack>

int n, m;
std::vector<int> graph[500001];
std::vector<int> ans(500001, 0);

int num() {
  int res;
  std::cin >> res;
  return res;
}

int answer(int i) {
  if (ans[i] > 0)
    return ans[i];
  std::vector<int> list;
  std::vector<bool> visited(n + 1, false);
  std::stack<int> s;
  s.push(i);
  visited[i] = true;
  while (!s.empty()) {
    int now = s.top();
    s.pop();
    list.emplace_back(now);
    for (int next : graph[now])
      if (!visited[next]) {
        visited[next] = true;
        s.push(next);
      }
  }
  int res = list.size();
  for (int next : list)
    ans[next] = res;
  return res;
}

int main() {
  std::ios::sync_with_stdio(false);
  n = num();
  m = num();
  for (int i = 0; i < m; i++) {
    int l = num() - 1;
    if (l < 0)
      continue;
    int a = num();
    while (l-- > 0) {
      int b = num();
      graph[a].emplace_back(b);
      graph[b].emplace_back(a);
      a = b;
    }
  }
  for (int i = 1; i <= n; i++)
    std::cout << answer(i) << ' ';
  std::cout << '\n';
  std::cout.flush();
}