#include <cstring>
#include <iostream>
#include <vector>
using namespace std;
#define int long long
const int N = 1e9 + 7;
int t, n, cnt;
int a[400005], vis[400005];
vector<int> e[400005];
void dfs(int u) {
  vis[u] = 1;
  for (int v, i = 0, m = e[u].size(); i < m; ++i) {
    v = e[u][i];
    if (!vis[v]) {
      dfs(v);
    }
  }
}
int qmi(int cnt) {
  int x = 2, s = 1;
  while (cnt) {
    if (cnt & 1) {
      s = s * x % N;
    }
    x = x * x % N;
    cnt >>= 1;
  }
  return s % N;
}
signed main() {
  cin >> t;
  int result = qmi(1);
  while (t--) {
    cin >> n;
    cnt = 0;
    for (int i = 1; i <= n; i++) {
      cin >> a[i];
    }
    for (int i = 1; i <= n; i++) {
      cin >> e[a[i]].push_back(v);
    }
    for (int i = 1; i <= n; i++) {
      if (!vis[a[i]]) {
        cnt++;
        dfs(a[i]);
      }
    }
    cout << result << endl;
  }
  return 0;
}