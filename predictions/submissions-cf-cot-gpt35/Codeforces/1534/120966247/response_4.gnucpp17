#include <iostream>
#include <vector>

typedef long long ll;
const ll N = 1e9 + 7;

int t, n, cnt;
std::vector<int> a(400005), vis(400005);
std::vector<std::vector<int>> e(400005);

void dfs(int u) {
  vis[u] = 1;
  for (int v : e[u]) {
    if (!vis[v])
      dfs(v);
  }
}

ll qmi(int cnt) {
  ll x = 2, result = 1;
  while (cnt) {
    if (cnt & 1)
      result = (result * x) % N;
    x = (x * x) % N;
    cnt >>= 1;
  }
  return result;
}

int main() {
  std::cin >> t;
  while (t--) {
    std::cin >> n;
    cnt = 0;
    vis.assign(n + 1, 0);
    a.resize(n + 1);
    e.resize(n + 1);
    for (int i = 1; i <= n; i++) {
      std::cin >> a[i];
      e[i].clear();
    }
    for (int i = 1, v; i <= n; i++) {
      std::cin >> v;
      e[a[i]].emplace_back(v);
    }
    for (int i = 1; i <= n; i++) {
      if (!vis[a[i]]) {
        cnt++;
        dfs(a[i]);
      }
    }
    std::cout << qmi(cnt) << '\n';
  }
  return 0;
}