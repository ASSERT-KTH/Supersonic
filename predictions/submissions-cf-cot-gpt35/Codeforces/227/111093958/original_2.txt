Step 1: Remove unnecessary headers and namespace declaration. Since we are not using any specific functions from the `iostream` header, we can remove it. We can also remove the `using namespace std` declaration to avoid polluting the global namespace.

Step 2: Remove unnecessary `#define`. The `#define int long long` is unnecessary as we are not using `int` as a type anywhere in the code.

Step 3: Optimize the `was` array initialization. Currently, the `was` array is initialized with zeros for all elements. However, we can optimize this by using the fact that the array is already initialized to zeros by default. So, we can remove the loop that initializes the `was` array.

Step 4: Optimize the calculation of `first` and `second` variables. Instead of repeatedly accessing the `was` array inside the loop, we can calculate the values of `first` and `second` by summing the indices and the differences once, respectively.

Step 5: Optimize the input and output streams. Since we are not using any advanced features of input/output streams, we can improve the performance by using the `scanf` and `printf` functions instead of the `cin` and `cout` streams.

Here is the optimized program:

```cpp
#include <cstdio>

int n, m, a[100001], was[100001];

int main() {
  scanf("%d", &n);
  for (int i = 0; i < n; ++i)
    scanf("%d", &a[i]);
  for (int i = 0; i < n; ++i)
    was[a[i]] = i;
  scanf("%d", &m);
  int first = 0, second = 0;
  while (m--) {
    int x;
    scanf("%d", &x);
    first += was[x] + 1;
    second += n - was[x];
  }
  printf("%d %d", first, second);
  return 0;
}
```