Optimization Steps:
1. Remove unnecessary includes and using namespace std.
2. Remove the macro #define int long long as it is not required.
3. Use a more efficient data structure to store the 'was' array.
4. Instead of iterating over the 'was' array to find the index of each element, use a hash map to store the index directly.
5. Instead of performing n - was[x] calculation for each element, store the value in a separate array and calculate it only once.
6. Avoid using the 'ios_base::sync_with_stdio(0)' statement as it is not necessary for optimization purposes.

Here's the optimized code:

```cpp
#include <iostream>
#include <unordered_map>
#include <vector>

int main() {
    int n, m;
    std::cin >> n;
    
    std::vector<int> a(n);
    for (int i = 0; i < n; ++i)
        std::cin >> a[i];
    
    std::unordered_map<int, int> was;
    for (int i = 0; i < n; ++i)
        was[a[i]] = i;
    
    std::cin >> m;
    std::vector<int> second(m);
    int first = 0;
    for (int i = 0; i < m; ++i) {
        int x;
        std::cin >> x;
        first += was[x] + 1;
        second[i] = n - was[x];
    }
    
    int sumSecond = 0;
    for (int i = 0; i < m; ++i)
        sumSecond += second[i];
    
    std::cout << first << ' ' << sumSecond;
    return 0;
}
```