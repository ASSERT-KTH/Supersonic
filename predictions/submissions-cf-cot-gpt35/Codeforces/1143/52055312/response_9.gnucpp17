#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  int n, x, y, t;
  std::cin >> n;
  
  std::vector<int> parent(n + 1), height(n + 1), cost(n + 1);
  std::vector<bool> answer(n + 1, false);

  for (int i = 1; i <= n; i++) {
    std::cin >> x >> y;
    parent[i] = x;
    cost[i] = y;
    if (x != -1)
      height[i] = height[x] + 1;
    else
      t = i;
  }

  std::vector<int> sorted_nodes(n + 1);
  for (int i = 1; i <= n; i++)
    sorted_nodes[i] = i;
    
  std::sort(sorted_nodes.begin() + 1, sorted_nodes.end(), [&](int x, int y) {
    return height[x] > height[y];
  });

  for (int i = 1; i <= n; i++) {
    bool ok = false;
    for (int j = 1; j <= n; j++) {
      if (parent[sorted_nodes[i]] == sorted_nodes[j] && !cost[sorted_nodes[j]]) {
        ok = true;
        break;
      }
    }
    if (!cost[sorted_nodes[i]])
      ok = true;
    if (!ok)
      answer[sorted_nodes[i]] = true;
  }

  bool flag = false;
  for (int i = 1; i <= n; i++) {
    if (answer[i]) {
      std::cout << i << " ";
      flag = true;
    }
  }
  
  if (!flag)
    std::cout << -1;
}