#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>
using namespace std;

int main() {
    int n;
    cin >> n;

    vector<pair<int, int>> data(n);
    unordered_map<int, int> parent;
    unordered_map<int, int> height;
    unordered_set<int> leaves;
    bool yes = false;

    for (int i = 0; i < n; i++) {
        int x, y;
        cin >> x >> y;
        data[i] = {y, x};
        parent[i] = x;
        height[i] = (x == -1) ? 1 : height[x] + 1;
        if (x != -1)
            leaves.erase(x);
        leaves.insert(i);
        if (y == 0)
            yes = true;
    }

    vector<int> answer;
    for (auto& node : data) {
        int index = &node - &data[0];
        if (!node.first && !yes) {
            answer.push_back(index);
            yes = true;
        }
        if (!leaves.count(index))
            continue;
        if (!node.first) {
            answer.push_back(index);
            yes = true;
        }
    }

    if (answer.empty())
        cout << -1;
    else {
        for (int index : answer)
            cout << index << " ";
    }

    return 0;
}