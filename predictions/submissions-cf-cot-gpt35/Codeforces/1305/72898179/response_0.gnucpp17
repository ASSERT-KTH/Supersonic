#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <map>
#include <vector>
using namespace std;

const int N = 2e5 + 5;
const int M = 1e6 + 105;

int p0;
int p[M];

void sieve(int n) {
  bool bz[n+1] = {false};
  
  for (int i = 2; i <= n; i++) {
    if (!bz[i])
      p[++p0] = i;
      
    for (int j = 1; i * p[j] <= n; j++) {
      int k = i * p[j];
      bz[k] = true;
      
      if (i % p[j] == 0)
        break;
    }
  }
}

int n;
long long a[N];

long long ans;

void check(long long x) {
  long long s = 0;
  
  for (int i = 1; i <= n; i++) {
    if (a[i] >= x) {
      long long y = a[i] % x;
      s += min(y, x - y);
    } else {
      s += x - a[i];
    }
    
    if (s > ans)
      return;
  }
  
  ans = s;
}

int main() {
  srand(time(0) + clock());
  
  sieve(*max_element(a + 1, a + n + 1));
  
  scanf("%d", &n);
  
  for (int i = 1; i <= n; i++)
    scanf("%lld", &a[i]);
    
  random_shuffle(a + 1, a + n + 1);
  
  vector<long long> w;
  
  for (int i = 1; i <= min(n, 1000); i++) {
    for (int j = -1; j <= 1; j++) {
      long long x = a[i] + j;
      
      if (x > 1)
        w.push_back(x);
    }
  }
  
  ans = n;
  
  sort(w.begin(), w.end());
  w.erase(unique(w.begin(), w.end()), w.end());
  
  for (auto x : w)
    check(x);
    
  printf("%lld\n", ans);
  
  return 0;
}