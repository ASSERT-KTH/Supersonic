#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <map>
#include <set>

using namespace std;

const int M = 1e6 + 105;
const int N = 2e5 + 5;

vector<int> p;
vector<ll> a;
set<ll> w;
ll ans;

void sieve(int n) {
  vector<bool> bz(n + 1, false);
  for (int i = 2; i <= n; i++) {
    if (!bz[i])
      p.push_back(i);
    for (int j = 0; j < p.size() && i * p[j] <= n; j++) {
      int k = i * p[j];
      bz[k] = true;
      if (i % p[j] == 0)
        break;
    }
  }
}

void fen(ll n) {
  for (int i = 0; i < p.size() && (ll)p[i] * p[i] <= n; i++) {
    if (n % p[i] == 0) {
      w.insert(p[i]);
      while (n % p[i] == 0)
        n /= p[i];
    }
  }
  if (n > 1)
    w.insert(n);
}

void check(ll x) {
  ll s = 0;
  for (int i = 0; i < a.size(); i++) {
    if (a[i] >= x) {
      ll y = a[i] % x;
      s += min(y, x - y);
    } else
      s += x - a[i];
    if (s > ans)
      return;
  }
  ans = s;
}

int main() {
  int n;
  cin >> n;
  a.resize(n);
  for (int i = 0; i < n; i++)
    cin >> a[i];
  random_shuffle(a.begin(), a.end());
  sieve(1e6);
  
  for (int i = 0; i < min(n, 1000); i++) {
    for (int j = -1; j <= 1; j++) {
      ll x = a[i] + j;
      if (x > 1)
        fen(x);
    }
  }
  
  ans = n;
  for (auto it = w.begin(); it != w.end(); it++)
    check(*it);
  
  cout << ans << endl;
  return 0;
}