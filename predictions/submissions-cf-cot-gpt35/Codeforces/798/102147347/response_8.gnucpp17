#include <iostream>
#include <vector>
using namespace std;

const int mx = 2e6 + 5;
const int inf = 2e9;

int gcd(int a, int b) {
  while (b != 0) {
    int temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);

  int n;
  cin >> n;

  int a[mx];
  for (int i = 0; i < n; ++i) {
    cin >> a[i + 1];
  }

  int faust = gcd(a[1], a[2]);
  for (int i = 3; i <= n; ++i) {
    faust = gcd(faust, a[i]);
  }

  a[n + 1] = 2;

  int dp[mx][2];
  for (int i = 1; i <= n + 2; ++i) {
    dp[i][0] = inf;
    dp[i][1] = inf;
  }

  if (faust > 1) {
    cout << "YES" << endl;
    cout << 0 << endl;
    return 0;
  }

  for (int i = 1; i <= n; ++i) {
    if (a[i] % 2 && a[i + 1] % 2) {
      if (dp[i - 1][1] != inf) {
        dp[i][0] = dp[i - 1][1];
      }
      if (dp[i - 1][0] != inf) {
        dp[i][1] = dp[i - 1][0] + 1;
      }
    } else if (a[i] % 2 && a[i + 1] % 2 == 0) {
      if (dp[i - 1][1] != inf) {
        dp[i][0] = dp[i - 1][1];
      }
      if (dp[i - 1][0] != inf) {
        dp[i][1] = dp[i - 1][0] + 2;
      }
    } else if (a[i] % 2 == 0 && a[i + 1] % 2) {
      if (dp[i - 1][0] != inf && dp[i - 1][1] != inf) {
        dp[i][0] = min(dp[i - 1][0], dp[i - 1][1]);
      } else if (dp[i - 1][1] != inf) {
        dp[i][0] = dp[i - 1][1];
      } else if (dp[i - 1][0] != inf) {
        dp[i][0] = dp[i - 1][0];
      }

      if (dp[i - 1][0] != inf && dp[i - 1][1] != inf) {
        dp[i][1] = min(dp[i - 1][1] + 2, dp[i - 1][0] + 2);
      } else if (dp[i - 1][1] != inf) {
        dp[i][1] = dp[i - 1][1] + 2;
      } else if (dp[i - 1][0] != inf) {
        dp[i][1] = dp[i - 1][0] + 2;
      }
    } else if (a[i] % 2 == 0 && a[i + 1] % 2 == 0) {
      if (dp[i - 1][0] != inf && dp[i - 1][1] != inf) {
        dp[i][0] = min(dp[i - 1][0], dp[i - 1][1]);
      } else if (dp[i - 1][1] != inf) {
        dp[i][0] = dp[i - 1][1];
      } else if (dp[i - 1][0] != inf) {
        dp[i][0] = dp[i - 1][0];
      }
      
      dp[i][1] = dp[i][0];
    }
  }

  cout << "YES" << endl;
  if (inf == dp[n][0]) {
    cout << dp[n][1] << endl;
  } else {
    cout << dp[n][0] << endl;
  }

  return 0;
}