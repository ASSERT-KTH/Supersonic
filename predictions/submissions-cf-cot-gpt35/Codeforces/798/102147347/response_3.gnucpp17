#include <iostream>
#include <vector>

int gcd(int a, int b) {
  while (b) {
    int temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(0);

  int n;
  std::cin >> n;
  std::vector<int> a(n);
  for (int i = 0; i < n; ++i) {
    std::cin >> a[i];
  }

  int faust = gcd(a[0], a[1]);
  for (int i = 2; i < n; ++i) {
    faust = gcd(faust, a[i]);
  }

  std::vector<std::vector<int>> dp(n + 2, std::vector<int>(2, std::numeric_limits<int>::max()));
  dp[0][0] = 0;
  
  if (faust > 1) {
    std::cout << "YES" << std::endl;
    std::cout << 0 << std::endl;
    return 0;
  }

  for (int i = 1; i <= n; ++i) {
    if (a[i - 1] % 2 && a[i] % 2) {
      if (dp[i - 1][1] != std::numeric_limits<int>::max()) {
        dp[i][0] = dp[i - 1][1];
      }
      if (dp[i - 1][0] != std::numeric_limits<int>::max()) {
        dp[i][1] = dp[i - 1][0] + 1;
      }
    } else if (a[i - 1] % 2 && a[i] % 2 == 0) {
      if (dp[i - 1][1] != std::numeric_limits<int>::max()) {
        dp[i][0] = dp[i - 1][1];
      }
      if (dp[i - 1][0] != std::numeric_limits<int>::max()) {
        dp[i][1] = dp[i - 1][0] + 2;
      }
    } else if (a[i - 1] % 2 == 0 && a[i] % 2) {
      if (dp[i - 1][0] != std::numeric_limits<int>::max() && dp[i - 1][1] != std::numeric_limits<int>::max()) {
        dp[i][0] = std::min(dp[i - 1][0], dp[i - 1][1]);
      } else if (dp[i - 1][1] != std::numeric_limits<int>::max()) {
        dp[i][0] = dp[i - 1][1];
      } else if (dp[i - 1][0] != std::numeric_limits<int>::max()) {
        dp[i][0] = dp[i - 1][0];
      }
      if (dp[i - 1][0] != std::numeric_limits<int>::max() && dp[i - 1][1] != std::numeric_limits<int>::max()) {
        dp[i][1] = std::min(dp[i - 1][1] + 2, dp[i - 1][0] + 2);
      } else if (dp[i - 1][1] != std::numeric_limits<int>::max()) {
        dp[i][1] = dp[i - 1][1] + 2;
      } else if (dp[i - 1][0] != std::numeric_limits<int>::max()) {
        dp[i][1] = dp[i - 1][0] + 2;
      }
    } else if (a[i - 1] % 2 == 0 && a[i] % 2 == 0) {
      if (dp[i - 1][0] != std::numeric_limits<int>::max() && dp[i - 1][1] != std::numeric_limits<int>::max()) {
        dp[i][0] = std::min(dp[i - 1][0], dp[i - 1][1]);
      } else if (dp[i - 1][1] != std::numeric_limits<int>::max()) {
        dp[i][0] = dp[i - 1][1];
      } else if (dp[i - 1][0] != std::numeric_limits<int>::max()) {
        dp[i][0] = dp[i - 1][0];
      }
      dp[i][1] = dp[i][0];
    }
  }

  std::cout << "YES" << std::endl;
  if (dp[n][0] != std::numeric_limits<int>::max()) {
    std::cout << dp[n][0] << std::endl;
  } else {
    std::cout << dp[n][1] << std::endl;
  }

  return 0;
}