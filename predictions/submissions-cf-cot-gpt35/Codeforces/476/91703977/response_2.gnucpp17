#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")
#include <bits/stdc++.h>
using namespace std;

#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define int long long
#define ld long double

int nCr(int n, int r) {
    int num = 1, den = 1;
    for(int i = 1; i <= r; i++) {
        num *= (n - i + 1);
        den *= i;
    }
    return num / den;
}

void solve() {
    string a, b;
    cin >> a >> b;
    ld prob;
    
    int apos = count(a.begin(), a.end(), '+') - count(a.begin(), a.end(), '-');
    int amb = count(b.begin(), b.end(), '?');
    
    if (amb == 0 and apos == 0) {
        prob = 1;
        cout << prob << endl;
        return;
    } else if (amb == 0 and apos != 0) {
        prob = 0;
        cout << prob << endl;
        return;
    }
    
    int r = count(b.begin(), b.end(), '+') - count(b.begin(), b.end(), '-');
    int diff = apos - r;
    
    if ((amb + diff) & 1) {
        prob = 0;
        cout << prob << endl;
        return;
    }
    
    int u = (amb + diff) / 2;
    int v = amb - u;
    
    if (u < 0 or v < 0) {
        prob = 0;
        cout << prob << endl;
        return;
    }
    
    ld q = pow(2, amb);
    ld p = nCr(amb, u);
    prob = p / q;
    cout << prob << endl;
}

int32_t main() {
    fastio
    
    int t = 1;
    
    for (int i = 1; i <= t; i++) {
        solve();
    }
    
    return 0;
}