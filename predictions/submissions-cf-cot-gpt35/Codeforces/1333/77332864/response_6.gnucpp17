#include <iostream>
#include <map>

using namespace std;

int main() {
  int n;
  scanf("%d", &n);
  
  long long ans = n * 1LL * (n + 1) / 2LL;

  long long* v = new long long[n + 1];
  long long* cnt = new long long[n + 1]();
  
  for (int i = 1; i <= n; i++)
    scanf("%lld", &v[i]);
  
  map<long long, long long> mp;
  mp[0] = 0;

  long long mx = 0;

  for (int i = 1; i <= n; i++) {
    cnt[i] = cnt[i - 1] + v[i];
    if (mp.count(cnt[i])) {
      long long l = max(0LL, mp[cnt[i]] - mx);
      long long r = n - i;
      if (mp[cnt[i]] - mx >= 0) {
        ans -= (l * r) + l + r;
        if (i - mp[cnt[i]] != n || !mx)
          ans--;
      }
      mx = max(mp[cnt[i]] + 1, mx);
    }
    mp[cnt[i]] = i;
  }

  printf("%lld\n", ans);

  delete[] v;
  delete[] cnt;

  return 0;
}