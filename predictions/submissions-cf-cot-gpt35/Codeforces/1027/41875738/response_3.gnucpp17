#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define mp make_pair
using namespace std;
vector<int> v1[200010], v2[200010];
int cost[200010];
int par[200010];
void dfs(int source) {
  par[source] = -1;
  for (int i = 0; i < v1[source].size(); i++) {
    int child = v1[source][i];
    if (par[child] == 0) {
      dfs(child);
    }
  }
}
ll dfs2(int source, ll minCost) {
  par[source] = -1;
  ll totalCost = min(minCost, (ll)cost[source]);
  for (int i = 0; i < v2[source].size(); i++) {
    int parent = v2[source][i];
    if (par[parent] == 0) {
      totalCost += dfs2(parent, minCost);
    }
  }
  return totalCost;
}
int main() {
  int n;
  cin >> n;
  for (int i = 1; i <= n; i++) {
    scanf("%d", &cost[i]);
  }
  for (int i = 1; i <= n; i++) {
    int x;
    scanf("%d", &x);
    v1[i].pb(x);
    v2[x].pb(i);
  }
  ll ans = 0;
  for (int i = 1; i <= n; i++) {
    if (par[i] == 0) {
      dfs(i);
    }
  }
  for (int i = 1; i <= n; i++) {
    if (par[i] == -1) {
      ans += dfs2(i, cost[i]);
    }
  }
  cout << ans << endl;
  return 0;
}