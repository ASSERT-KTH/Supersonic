#include <iostream>
#include <vector>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef tree<pair<long long, long long>, null_type, less<pair<long long, long long>>, rb_tree_tag,
             tree_order_statistics_node_update> pbdsm;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  long long n, t, ans = 0;
  cin >> n >> t;

  vector<long long> v;
  v.reserve(n);
  v.push_back(0);

  pbdsm A;
  A.insert({0, 0});

  for (int i = 0; i < n; ++i) {
    long long x;
    cin >> x;
    v.push_back(v.back() + x);
    ans += A.size() - A.split({v.back() - t, 2e6}).first.size();
    A.insert({v.back(), 0});
  }

  cout << ans;
  return 0;
}