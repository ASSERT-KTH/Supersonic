#include <iostream>
#include <vector>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n, t;
  cin >> n >> t;

  vector<int> v(n + 1);
  for (int i = 1; i <= n; ++i) {
    cin >> v[i];
    v[i] += v[i - 1];
  }

  int ans = 0;
  tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,
       tree_order_statistics_node_update>
      A;

  for (int i = 1; i <= n; ++i) {
    ans += A.size() - A.order_of_key({v[i] - t, 0});
    A.insert({v[i], i});
  }

  cout << ans;

  return 0;
}