#include <iostream>
#include <vector>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> pbdsm;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  ll n, t, ans = 0, k = 1;
  cin >> n >> t;

  vector<ll> v;
  v.reserve(n + 1);
  v.push_back(0);

  pbdsm A;
  A.reserve(n + 1);
  A.emplace(0, 0);

  for (auto it = v.begin() + 1; it != v.end(); ++it) {
    cin >> *it;
    *it += *(it - 1);
    ans += A.size() - A.order_of_key({*it - t, 2e6});
    A.emplace(*it, k++);
  }

  cout << ans;

  return 0;
}