#include <iostream>
#include <vector>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,
             tree_order_statistics_node_update>
    pbdsm;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int n, t, ans = 0, k = 1;
  scanf("%d%d", &n, &t);
  vector<int> v(n);
  v.push_back(0);
  pbdsm A;
  A.insert({0, 0});
  for (int i = 0; i < n; ++i) {
    scanf("%d", &v[i]);
    v[i] += v[i - 1];
    int target = v[i] - t;
    ans += A.size() - A.order_of_key({target, 2e6});
    A.insert({v[i], k++});
  }
  printf("%d", ans);
  return 0;
}