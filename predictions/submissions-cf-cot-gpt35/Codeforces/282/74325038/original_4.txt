Step 1: Remove unnecessary header files

The current program includes the `<iostream>` and `<string>` header files, but it only uses the `string` class from `<string>`. Therefore, we can remove the `<iostream>` header file as it is not needed.

Step 2: Optimize input/output operations

The program uses `cin` to read input values, and `cout` to print the final result. However, these operations can be slow, especially when dealing with large inputs. To optimize this, we can use a faster input/output method like `scanf` and `printf` instead.

Step 3: Optimize the if statements

The current program uses multiple if statements to check the value of the input string. However, this can be simplified by using a switch statement instead.

Step 4: Remove unnecessary variable initialization

The variable `s` is initialized with a value of 0, which is not necessary as it will be overwritten in the loop. We can remove this initialization statement.

Here is the optimized program:

```cpp
#include <cstdio>

int main() {
  int n, s = 0;
  scanf("%d", &n);
  for (int i = 0; i < n; i++) {
    char str[4];
    scanf("%s", str);
    switch (str[0]) {
      case '+':
        s++;
        break;
      case '-':
        s--;
        break;
    }
  }
  printf("%d", s);
  return 0;
}
```