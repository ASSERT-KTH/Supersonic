To optimize the given program, we can eliminate the usage of the `string` class for comparison and instead use character comparisons. This will reduce the memory usage and improve the running time of the program.

Here is the optimized program:

```cpp
#include <iostream>
using namespace std;

int main() {
  int n, s = 0;
  cin >> n;
  
  for (int i = 0; i < n; i++) {
    char op1, op2;
    cin >> op1 >> op2;
    
    if (op1 == '+' && op2 == '+') {
      s = s + 1;
    }
    if (op1 == '-' && op2 == '-') {
      s = s - 1;
    }
  }
  
  cout << s;
  return 0;
}
```

Explanation of the optimization:
1. We removed the `string` library as it is not necessary for the given task.
2. Instead of reading the whole string, we now read two characters (`op1` and `op2`) from the input.
3. We changed the comparison conditions to check if `op1` is equal to `'+'` and `op2` is equal to `'+'` or if `op1` is equal to `'-'` and `op2` is equal to `'-'`.
4. By using character comparisons, we reduce the memory usage and improve the running time of the program.