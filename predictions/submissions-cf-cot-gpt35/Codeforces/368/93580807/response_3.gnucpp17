#include <iostream>
#include <vector>
#include <unordered_set>

void read(std::vector<int>& v) {
  for (auto& x : v)
    std::cin >> x;
}

void solve(int n, int m) {
  std::vector<int> v(n);
  read(v);
  
  std::unordered_set<int> s;
  int cont = 0;
  int size = v.size();
  
  // Pre-allocate buckets in the unordered_set
  s.reserve(size);
  
  for (int i = size - 1; i >= 0; i--) {
    if (s.find(v[i]) == s.end()) {
      s.insert(v[i]);
      cont++;
    }
    v[i] = cont;
  }
  
  int q;
  int qMinusOne;
  
  for (int i = 0; i < m; i++) {
    std::cin >> q;
    qMinusOne = q - 1;
    std::cout << v[qMinusOne] << '\n';
  }
}

int main() {
  int n, m;
  std::ios::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);
  std::cin >> n >> m;
  solve(n, m);
}