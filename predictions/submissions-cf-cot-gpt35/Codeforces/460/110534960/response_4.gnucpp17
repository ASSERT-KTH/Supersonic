#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

typedef long long ll;

const int N = 1e5 + 70;

ll n, m, w;
vector<ll> h(N);

bool check(ll x) {
  vector<ll> s(n, 0ll);
  ll cur = 0, mm = 0;
  for (int i = 0; i < n; ++i) {
    if (i - w >= 0)
      cur -= s[i - w];
    if (h[i] >= x)
      continue;
    if (h[i] + cur < x) {
      s[i] = x - h[i] - cur;
      cur += s[i];
      mm += s[i];
    }
    if (mm > m)
      return false;
  }
  return true;
}

void solve() {
  scanf("%lld%lld%lld", &n, &m, &w);
  ll mn = *min_element(h.begin(), h.begin() + n);
  for (int i = 0; i < n; ++i)
    scanf("%lld", &h[i]);
  ll l = 0, r = mn + m, ans = 0;
  while (l <= r) {
    ll md = l + ((r - l) >> 1);
    if (check(md)) {
      ans = max(ans, md);
      l = md + 1;
    } else {
      r = md - 1;
    }
  }
  printf("%lld\n", ans);
}

int main() {
  int t = 1;
  for (int tt = 1; tt <= t; ++tt) {
    solve();
  }
  return 0;
}