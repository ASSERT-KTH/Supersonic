#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

const int N = 1e5 + 70;

int n, m, w;
vector<int> h;

int gcd(int a, int b) {
  return b == 0 ? a : gcd(b, a % b);
}

int lcm(int a, int b) {
  return (a / gcd(a, b)) * b;
}

bool check(int x) {
  int cur = 0;
  int mm = 0;
  for (int i = 0; i < n; ++i) {
    if (i - w >= 0)
      cur -= h[i - w];
    if (h[i] >= x)
      continue;
    if (h[i] + cur < x) {
      int s = x - h[i] - cur;
      cur += s;
      mm += s;
    }
    if (mm > m)
      return false;
  }
  return true;
}

void solve() {
  scanf("%d%d%d", &n, &m, &w);
  int mn = 1e9;
  for (int i = 0; i < n; ++i) {
    scanf("%d", &h[i]);
    mn = min(mn, h[i]);
  }
  int l = 0, r = mn + m, ans = 0;
  while (l <= r) {
    int md = l + ((r - l) >> 1);
    if (check(md)) {
      ans = max(ans, md);
      l = md + 1;
    } else {
      r = md - 1;
    }
  }
  printf("%d\n", ans);
}

int main() {
  int t = 1;
  for (int tt = 1; tt <= t; ++tt) {
    solve();
  }
  return 0;
}