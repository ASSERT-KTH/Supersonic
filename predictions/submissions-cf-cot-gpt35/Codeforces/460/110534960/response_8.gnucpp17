#include <iostream>
#include <algorithm>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> pll;

const int N = 1e5 + 70;

ll gcd(ll a, ll b) {
    return !b ? a : gcd(b, a % b);
}

ll lcm(ll a, ll b) {
    return (a / gcd(a, b)) * b;
}

ll n, m, w, h[N];

bool check(ll x) {
    ll s[N] = {0};
    ll cur = 0, mm = 0;
    for (int i = 0; i < n; ++i) {
        if (i - w >= 0)
            cur -= s[i - w];
        if (cur < x - h[i]) {
            s[i] = x - h[i] - cur;
            cur += s[i];
            mm += s[i];
        }
        if (mm > m)
            return false;
    }
    return true;
}

void solve() {
    cin >> n >> m >> w;
    ll mn = 1e18;
    for (int i = 0; i < n; ++i) {
        cin >> h[i];
        mn = min(mn, h[i]);
    }
    ll l = 0, r = mn + m, ans = 0;
    while (l < r) {
        ll md = l + ((r - l) >> 1);
        if (check(md)) {
            ans = max(ans, md);
            l = md + 1;
        } else {
            r = md;
        }
    }
    cout << ans << endl;
}

int main() {
    int t = 1;
    for (int tt = 1; tt <= t; ++tt) {
        solve();
    }
    return 0;
}