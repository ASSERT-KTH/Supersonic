#include <iostream>
#include <vector>
#include <algorithm>

typedef long long ll;

ll gcd(ll a, ll b) { 
  return b == 0 ? a : gcd(b, a % b); 
}

bool check(ll x, const std::vector<ll>& h, ll m) {
  ll cur = 0, mm = 0;
  for (int i = 0; i < h.size(); ++i) {
    if (i >= w)
      cur -= h[i - w];
    if (h[i] >= x)
      continue;
    if (h[i] + cur < x) {
      ll diff = x - h[i] - cur;
      cur += diff;
      mm += diff;
    }
    if (mm > m)
      return false;
  }
  return true;
}

void solve() {
  ll n, m;
  std::cin >> n >> m >> w;
  
  std::vector<ll> h(n);
  ll mn = 1e18;
  for (int i = 0; i < n; ++i) {
    std::cin >> h[i];
    mn = std::min(mn, h[i]);
  }
  
  ll l = 0, r = mn + m, ans = 0;
  while (l <= r) {
    ll md = l + ((r - l) >> 1);
    if (check(md, h, m)) {
      ans = std::max(ans, md);
      l = md + 1;
    } else {
      r = md - 1;
    }
  }
  
  std::cout << ans << std::endl;
}

int main() {
  int t = 1;
  for (int tt = 1; tt <= t; ++tt) {
    solve();
  }
}