#include <iostream>
#include <queue>

using namespace std;

typedef pair<int, int> pii;

pii dp[6000][600];
int s, d;

int bfs() {
    queue<pii> q;
    q.push({s, 0});
    pii p;
    int mul, sum;
    while (!q.empty()) {
        p = q.front();
        q.pop();
        for (int i = 1; i < 10; i++) {
            sum = p.first - i;
            mul = (p.second * 10 + i) % d;
            if (sum == 0 && mul == 0) {
                dp[sum][mul] = {p.first, p.second};
                return 1;
            }
            if (sum >= 0 && dp[sum][mul] == make_pair(0, 0)) {
                q.push({sum, mul});
                dp[sum][mul] = {p.first, p.second};
            }
        }
    }
    return 0;
}

void print(int sum, int mul) {
    if (sum == s && mul == 0)
        return;
    print(dp[sum][mul].first, dp[sum][mul].second);
    cout << dp[sum][mul].first - sum;
}

int main() {
    cin >> d >> s;
    if (bfs() == 1) {
        print(0, 0);
    } else {
        cout << -1 << endl;
    }
    return 0;
}