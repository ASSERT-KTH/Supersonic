#include <iostream>
#include <queue>
#include <utility>
using namespace std;

typedef pair<int, int> pii;

int vis[6000][600];
pii dp[6000][600];
int s, d;

int gcd(int a, int b) {
  while (b != 0) {
    int temp = b;
    b = a % b;
    a = temp;
  }
  return a;
}

int lcm(int a, int b) { return a / gcd(a, b) * b; }

int bfs() {
  queue<pii> q;
  q.push(make_pair(s, 0));
  vis[s][0] = 1;
  pii p;
  int f = 1, mul, sum;
  while (!q.empty()) {
    p = q.front();
    q.pop();
    for (int i = f; i < 10; i++) {
      sum = p.first;
      sum -= i;
      mul = p.second;
      mul *= 10;
      mul += i;
      mul %= d;
      if (sum == 0 && mul == 0) {
        dp[sum][mul] = make_pair(p.first, p.second);
        return 1;
      }
      if (sum >= 0 && !vis[sum][mul]) {
        vis[sum][mul] = 1;
        q.push(make_pair(sum, mul));
        dp[sum][mul] = make_pair(p.first, p.second);
      }
    }
    f = 0;
  }
  return 0;
}

void print(int sum, int mul) {
  while (sum != s || mul != 0) {
    printf("%d", dp[sum][mul].first - sum);
    int temp_sum = dp[sum][mul].first;
    int temp_mul = dp[sum][mul].second;
    sum = temp_sum;
    mul = temp_mul;
  }
}

int main() {
  int tc = 1;
  scanf("%d%d", &d, &s);
  if (bfs() == 1) {
    print(0, 0);
  } else {
    printf("-1\n");
  }
  return 0;
}