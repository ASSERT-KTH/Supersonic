#include <iostream>
#include <vector>
#include <queue>
using namespace std;

struct pii {
  int ff, sn;
};

vector<vector<int>> vis(6000, vector<int>(600));
vector<vector<pii>> dp(6000, vector<pii>(600));

int s, d;

int bfs() {
  deque<pii> q;
  q.emplace_back(s, 0);
  vis[s][0] = 1;
  pii p;
  int f = 1, mul, sum;
  while (!q.empty()) {
    p = q.front();
    q.pop_front();
    for (int i = f; i < 10; i++) {
      sum = p.ff;
      sum -= i;
      mul = p.sn;
      mul *= 10;
      mul += i;
      mul %= d;
      if (sum == 0 && mul == 0) {
        dp[sum][mul] = make_pair(p.ff, p.sn);
        return 1;
      }
      if (!vis[sum][mul]) {
        vis[sum][mul] = 1;
        q.emplace_back(sum, mul);
        dp[sum][mul] = make_pair(p.ff, p.sn);
      }
    }
    f = 0;
  }
  return 0;
}

void print(int sum, int mul) {
  while (sum != s || mul != 0) {
    cout << dp[sum][mul].ff - sum;
    int temp_sum = dp[sum][mul].ff;
    int temp_mul = dp[sum][mul].sn;
    sum = temp_sum;
    mul = temp_mul;
  }
}

int main() {
  cin >> d >> s;
  if (bfs() == 1) {
    print(0, 0);
  } else {
    cout << -1 << endl;
  }
  return 0;
}