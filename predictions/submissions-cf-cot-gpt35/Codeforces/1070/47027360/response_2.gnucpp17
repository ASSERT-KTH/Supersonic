#include <cstdio>
#include <cstring>
#include <queue>

#define mx 6000

int vis[mx][600];
std::pair<int, int> dp[mx][600];
int s, d;

int gcd(int a, int b) {
  while (b != 0) {
    int t = b;
    b = a % b;
    a = t;
  }
  return a;
}

int lcm(int a, int b) {
  return a / gcd(a, b) * b;
}

int bfs() {
  std::queue<std::pair<int, int>> q;
  q.push({s, 0});
  vis[s][0] = 1;
  int f = 1;
  while (!q.empty()) {
    auto p = q.front();
    q.pop();
    for (int i = f; i < 10; i++) {
      int sum = p.first - i;
      int mul = (p.second * 10 + i) % d;
      if (sum == 0 && mul == 0) {
        dp[sum][mul] = p;
        return 1;
      }
      if (sum >= 0 && !vis[sum][mul]) {
        vis[sum][mul] = 1;
        q.push({sum, mul});
        dp[sum][mul] = p;
      }
    }
    f = 0;
  }
  return 0;
}

void print(int sum, int mul) {
  if (sum == s && mul == 0)
    return;
  print(dp[sum][mul].first, dp[sum][mul].second);
  printf("%d", dp[sum][mul].first - sum);
}

int main() {
  int tc = 1;
  scanf("%d %d", &d, &s);
  if (bfs() == 1) {
    print(0, 0);
    printf("\n");
  } else {
    printf("-1\n");
  }
  return 0;
}