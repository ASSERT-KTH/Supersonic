#include <iostream>
#include <vector>
#include <iterator>
#include <algorithm>

template <typename T>
std::istream& operator>>(std::istream& input, std::vector<T>& v) {
    std::copy(std::istream_iterator<T>(input), std::istream_iterator<T>(), std::back_inserter(v));
    return input;
}

void answer(const std::vector<int>& v) {
    std::copy(v.begin(), v.end(), std::ostream_iterator<int>(std::cout, " "));
    std::cout << '\n';
}

void solve(std::vector<int>& a, unsigned long long k) {
    int min = *std::min_element(a.begin(), a.end());
    int max = *std::max_element(a.begin(), a.end());

    std::transform(a.begin(), a.end(), a.begin(), [max](int x) { return max - x; });

    if (k % 2 == 0) {
        std::transform(a.begin(), a.end(), a.begin(), [min, max](int x) { return max - min - x; });
    }

    answer(a);
}

void test_case() {
    size_t n;
    std::cin >> n;
    unsigned long long k;
    std::cin >> k;

    std::vector<int> a(n);
    std::cin >> a;

    solve(a, k);
}

int main() {
    size_t t;
    std::cin >> t;

    while (t-- > 0)
        test_case();

    return 0;
}