#include <iostream>
#include <vector>
#include <unordered_set>
#include <map>

bool comp(int a, int b) {
  return a > b;
}

int main() {
  int t;
  std::cin >> t;
  while (t--) {
    size_t n, res = 0;
    std::cin >> n;
    std::vector<int> even;
    std::unordered_set<int> st;
    even.reserve(n);
    for (size_t i = 0; i < n; i++) {
      int x;
      std::cin >> x;
      if ((x & 1) == 0 && st.find(x) == st.end()) {
        even.push_back(x);
      }
      st.emplace(x);
    }
    std::sort(even.begin(), even.end(), comp);
    std::map<int, bool> used;
    for (const auto& num : even) {
      if (!used[num]) {
        int b = num;
        while ((b & 1) == 0) {
          used[b] = true;
          b >>= 1;
          ++res;
        }
      }
    }
    std::cout << res << std::endl;
  }
  return 0;
}