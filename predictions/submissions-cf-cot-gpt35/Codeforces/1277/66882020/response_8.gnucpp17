#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>
using namespace std;

bool comp(int a, int b) {
    return a > b;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int t;
    cin >> t;
    
    while (t--) {
        int n, res = 0;
        cin >> n;
        
        vector<int> even;
        unordered_set<int> st;
        for (int i = 0; i < n; i++) {
            int x;
            cin >> x;
            if (x % 2 == 0 && st.find(x) == st.end()) {
                even.push_back(x);
                st.insert(x);
            }
        }
        
        int k = even.size() / 2;
        nth_element(even.begin(), even.begin() + k, even.end(), comp);
        
        unordered_map<int, bool> used;
        for (int i = 0; i <= k; i++) {
            int b = even[i];
            while (b % 2 == 0) {
                used[b] = true;
                b >>= __builtin_ctzll(b);
                ++res;
            }
        }
        
        cout << res << endl;
    }
    
    return 0;
}