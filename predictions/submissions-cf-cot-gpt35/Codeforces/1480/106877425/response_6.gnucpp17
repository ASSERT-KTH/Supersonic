#include <iostream>
#include <algorithm>

void solve() {
  long long a, b, n;
  long long res = 0;
  std::cin >> a >> b >> n;
  long long attack[n], health[n];
  int k = 0;
  for (int i = 0; i < n; i++) {
    std::cin >> attack[i];
    if (attack[i] > attack[k]) {
      k = i;
    }
  }
  for (int i = 0; i < n; i++) {
    std::cin >> health[i];
    if (i != k) {
      res += ((health[i] + a - 1) / a) * attack[i];
    }
  }
  if (res >= b) {
    std::cout << "NO\n";
    return;
  }
  b -= res;
  long long x = (b + attack[k] - 1) / attack[k];
  long long y = (health[k] + a - 1) / a;
  if (x >= y) {
    std::cout << "YES\n";
  } else {
    std::cout << "NO\n";
  }
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(0);
  int tt = 1;
  std::cin >> tt;
  while (tt--) {
    solve();
  }
  return 0;
}