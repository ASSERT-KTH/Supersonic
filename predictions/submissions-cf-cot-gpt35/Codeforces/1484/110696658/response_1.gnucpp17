#include <iostream>
#include <vector>
#include <map>
using namespace std;

void test_cases() {
  int n, m;
  cin >> n >> m;
  vector<pair<int, vector<int>>> a(m);
  int fr[N] = {0};
  for (int i = 0; i < m; i++) {
    a[i].ff = i;
    int x;
    cin >> x;
    a[i].ss.resize(x);
    for (auto &x : a[i].ss) {
      cin >> x;
      fr[x]++;
      fr[x] = min(fr[x], (m + 1) / 2);
    }
  }
  priority_queue<pair<int, vector<int>>> pq;
  for (auto &p : a) {
    pq.push(make_pair(p.ss.size(), p));
  }
  vector<int> res(m, -1);
  while (!pq.empty()) {
    int idx = pq.top().ss.ff;
    vector<int> v = pq.top().ss.ss;
    pq.pop();
    int mn = 1e18;
    for (int x : v) {
      if (fr[x] > 0) {
        mn = min(mn, fr[x]);
      }
    }
    if (mn == 1e18) {
      cout << "NO" << endl;
      return;
    }
    int per = -1;
    for (int x : v) {
      if (mn == fr[x]) {
        per = x;
        break;
      }
    }
    res[idx] = per;
    fr[per]--;
  }
  cout << "YES" << endl;
  for (int i = 0; i < m; i++) {
    cout << res[i] << " ";
  }
  cout << endl;
}

int main() {
  int tt;
  cin >> tt;
  for (int T = 1; T <= tt; T++) {
    cerr << endl << "Case #" << T << ": " << endl;
    test_cases();
  }
}