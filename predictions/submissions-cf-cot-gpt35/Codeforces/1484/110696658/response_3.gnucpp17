#include <iostream>
#include <vector>
#include <map>
#include <algorithm>

std::vector<std::string> split(const std::string& s, char c) {
  std::vector<std::string> v;
  std::string::size_type i = 0;
  std::string::size_type j = s.find(c);

  while (j != std::string::npos) {
    v.emplace_back(s.substr(i, j - i));
    i = ++j;
    j = s.find(c, j);

    if (j == std::string::npos) {
      v.emplace_back(s.substr(i, s.length()));
    }
  }

  return v;
}

void test_cases() {
  int n, m;
  std::cin >> n >> m;
  
  std::map<int, int> fr;
  for (int i = 0; i < m; i++) {
    int x;
    std::cin >> x;
    
    for (int j = 0; j < x; j++) {
      int num;
      std::cin >> num;
      fr[num]++;
      fr[num] = std::min(fr[num], (m + 1) / 2);
    }
  }
  
  std::vector<int> res(m, -1);
  for (const auto& [idx, v] : fr) {
    int mn = 1e18;
    for (int x : v) {
      if (fr[x] > 0) {
        mn = std::min(mn, fr[x]);
      }
    }
    if (mn == 1e18) {
      std::cout << "NO\n";
      return;
    }
    int per = -1;
    for (int x : v) {
      if (mn == fr[x]) {
        per = x;
        break;
      }
    }
    res[idx] = per;
    fr[per]--;
  }
  
  std::cout << "YES\n";
  for (int i = 0; i < m; i++) {
    std::cout << res[i] << " ";
  }
  std::cout << "\n";
}

int main() {
  int tt = 1;
  std::cin >> tt;
  
  for (int T = 1; T <= tt; T++) {
    test_cases();
  }
  
  return 0;
}