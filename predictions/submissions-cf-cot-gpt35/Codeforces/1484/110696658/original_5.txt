The given program is a bit messy and includes unnecessary code. Here are the steps to optimize the program:

1. Remove unnecessary headers: The program includes some unnecessary headers like `<bits/stdc++.h>`, `<ext/pb_ds/assoc_container.hpp>`, and `<ext/pb_ds/tree_policy.hpp>`. These headers are not used in the program and can be safely removed.

2. Remove unused functions: The program includes some functions like `split` and `dbg_out` that are not used in the program. These functions can be safely removed.

3. Remove unused macros: The program includes some macros like `debugg`, `READ`, `endl`, `ff`, `ss`, `int`, `dd`, `ALL`, `FOR`, `FORR`, `getcurrtime`, and `pbds`. These macros are not used in the program and can be safely removed.

4. Optimize the sorting: The program sorts the vector `a` using the lambda function `([&](auto &a, auto &b) { return a.ss.size() < b.ss.size(); })`. This lambda function can be simplified to `([&](const auto &a, const auto &b) { return a.ss.size() < b.ss.size(); })` to avoid unnecessary copies.

5. Optimize the minimum calculation: The program uses `mn = 1e18` as the initial value for the minimum calculation. Instead, we can use `mn = INT_MAX` to avoid unnecessary floating-point calculations.

6. Optimize the output loop: The program uses a loop to output the vector `res` with a space after each element. Instead, we can use the `copy` algorithm to copy the elements of `res` to `cout` with spaces between them.

Here is the optimized program:

```cpp
#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

void test_cases() {
  int n, m;
  cin >> n >> m;
  vector<pair<int, vector<int>>> a(m);
  map<int, int> fr;
  for (int i = 0; i < m; i++) {
    a[i].first = i;
    int x;
    cin >> x;
    a[i].second.resize(x);
    for (auto &x : a[i].second) {
      cin >> x;
      fr[x]++;
      fr[x] = min(fr[x], (m + 1) / 2);
    }
  }
  sort(a.begin(), a.end(), [&](const auto &a, const auto &b) { return a.second.size() < b.second.size(); });
  vector<int> res(m, -1);
  for (int i = 0; i < m; i++) {
    int idx = a[i].first;
    vector<int> v = a[i].second;
    int mn = INT_MAX;
    for (int x : v) {
      if (fr[x] > 0) {
        mn = min(mn, fr[x]);
      }
    }
    if (mn == INT_MAX) {
      cout << "NO" << endl;
      return;
    }
    int per = -1;
    for (int x : v) {
      if (mn == fr[x]) {
        per = x;
        break;
      }
    }
    res[idx] = per;
    fr[per]--;
  }
  cout << "YES" << endl;
  copy(res.begin(), res.end(), ostream_iterator<int>(cout, " "));
  cout << endl;
}

int main() {
  int tt = 1;
  cin >> tt;
  for (int T = 1; T <= tt; T++) {
    cerr << endl << "Case #" << T << ": " << endl;
    test_cases();
  }
}
```