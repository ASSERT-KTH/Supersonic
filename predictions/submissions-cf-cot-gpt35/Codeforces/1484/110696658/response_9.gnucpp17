#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>

using namespace std;

vector<string> split(const string& s, char c) {
    vector<string> v;
    string x;
    istringstream ss(s);
    while (getline(ss, x, c))
        v.emplace_back(x);
    return v;
}

void test_cases() {
    int n, m;
    cin >> n >> m;
    vector<pair<int, vector<int>>> a(m);
    unordered_map<int, int> fr;
    for (int i = 0; i < m; i++) {
        a[i].first = i;
        int x;
        cin >> x;
        a[i].second.reserve(x);
        for (int j = 0; j < x; j++) {
            int val;
            cin >> val;
            fr[val]++;
            fr[val] = min(fr[val], (m + 1) / 2);
            a[i].second.emplace_back(val);
        }
    }
    sort(a.begin(), a.end(), [&](const auto& a, const auto& b) {
        return a.second.size() < b.second.size();
    });
    vector<int> res(m, -1);
    for (int i = 0; i < m; i++) {
        int idx = a[i].first;
        const vector<int>& v = a[i].second;
        int mn = 1e18;
        for (int x : v) {
            if (fr[x] > 0) {
                mn = min(mn, fr[x]);
            }
        }
        if (mn == 1e18) {
            cout << "NO\n";
            return;
        }
        int per = -1;
        for (int x : v) {
            if (mn == fr[x]) {
                per = x;
                break;
            }
        }
        res[idx] = per;
        fr[per]--;
    }
    cout << "YES\n";
    cout.tie(nullptr);
    for (int i = 0; i < m; i++) {
        cout << res[i] << " ";
    }
    cout << '\n';
}

int main() {
    int tt = 1;
    cin >> tt;
    for (int T = 1; T <= tt; T++) {
        cout << "\nCase #" << T << ":\n";
        test_cases();
    }
}