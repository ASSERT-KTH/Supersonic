#include <iostream>
#include <cstring>
using namespace std;

const int MAX_N = 100005;
const int MAX_Z = 6;

int f(int n, int k, int z, int arr[]) {
    int dp[MAX_N][MAX_Z] = {0};
    int ans = arr[0];
    
    for (int i = 1; i <= k; i++) {
        for (int j = 0; j <= z; j++) {
            int left = 0;
            int right = 0;
            
            if (j > 0 && i > 1) {
                left = dp[i - 1][j - 1];
            }
            
            right = dp[i - 1][j];
            
            dp[i][j] = arr[i] + max(left, right);
            
            if (i == k && j == z) {
                ans = max(ans, dp[i][j]);
            }
        }
    }
    
    return ans;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int t;
    cin >> t;
    
    while (t--) {
        int n, k, z;
        cin >> n >> k >> z;
        
        int arr[MAX_N];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        
        int ans = arr[0] + f(n, k, z, arr);
        cout << ans << endl;
    }
    
    return 0;
}