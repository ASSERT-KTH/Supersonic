#include <iostream>
#include <cstring>
#include <vector>
using namespace std;

constexpr int N = 100005;
constexpr int mod = 1000000007;

long long int f(int n, int k, int z, const vector<int>& arr) {
    long long int dp[n][6] = {0};
    
    for (int i = 0; i < n; i++) {
        dp[i][0] = arr[i] + (i > 0 ? dp[i-1][0] : 0);
        for (int j = 1; j <= k; j++) {
            dp[i][j] = max(dp[i][j], arr[i] + dp[i+1][j-1]);
            if (j <= z && i > 0) {
                dp[i][j] = max(dp[i][j], arr[i] + dp[i-1][j-1]);
            }
        }
    }

    return dp[n-1][k];
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    cin >> t;
    
    while (t--) {
        int n, k, z;
        cin >> n >> k >> z;
        
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        
        long long int ans = arr[0] + f(n, k, z, arr);
        cout << ans << endl;
    }

    return 0;
}