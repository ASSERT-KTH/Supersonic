#include <iostream>
#include <cstdint>
#include <cstring>
using namespace std;

int64_t f(const int arr[], int n, int k, int z) {
  int64_t dp[100001][6] = {0};
  int64_t ans = arr[0];
  for (int i = 1; i <= k; i++) {
    for (int j = 0; j <= z && j <= i; j++) {
      int64_t left = 0;
      if (j > 0) {
        left = dp[i - 1][j - 1];
      }
      int64_t right = dp[i - 1][j];
      dp[i][j] = arr[i] + max(left, right);
      if (i == k) {
        ans = max(ans, dp[i][j]);
      }
    }
  }
  return ans;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int n, k, z;
    cin >> n >> k >> z;
    int arr[n];
    for (int i = 0; i < n; i++) {
      cin >> arr[i];
    }
    int64_t ans = arr[0] + f(arr, n, k, z);
    cout << ans << endl;
  }
  return 0;
}