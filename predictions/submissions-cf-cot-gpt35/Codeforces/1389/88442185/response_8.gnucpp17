#include <iostream>
#include <cstring>
using namespace std;

const int N = 100005;
const int MOD = 1000000007;

long long dp[N];

long long f(int i, int k, int z, bool lef) {
  if (k == 0 || i < 0)
    return 0;
  if (dp[i])
    return dp[i];
  long long left = 0;
  long long right = 0;
  if (z && lef) {
    lef = false;
    left = f(i - 1, k - 1, z - 1, lef);
  }
  lef = true;
  right = f(i + 1, k - 1, z, lef);
  dp[i] = arr[i] + max(left, right);
  return dp[i];
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int t;
  cin >> t;
  while (t--) {
    int n, k, z;
    cin >> n >> k >> z;
  
    long long ans = 0;
    memset(dp, 0, sizeof(dp));
  
    for (int i = 0; i < n; i++) {
      cin >> arr[i];
    }
  
    ans = arr[0] + f(1, k, z, true);
    cout << ans << endl;
  }
  
  return 0;
}