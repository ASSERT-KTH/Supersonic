Step 1: Remove unnecessary `using namespace std;` statement. This statement imports the entire `std` namespace, which can lead to naming conflicts and make the code harder to read and understand.

Step 2: Optimize the input and output operations. Currently, the program is using `cin` and `cout` to read and write input/output. These operations can be slow, especially when reading large inputs or writing large outputs. We can optimize this by using `scanf` and `printf` functions, which are generally faster.

Step 3: Optimize the loop. Currently, the program is using a loop to read `n` sets of inputs and calculate the sums. Instead of using separate variables `sum_x`, `sum_y`, and `sum_z` to store the sums, we can calculate the sums on the fly inside the loop. This will eliminate the need for separate variables and reduce memory usage.

Step 4: Optimize the condition check. Currently, the program is using three separate conditions to check if all sums are zero. We can optimize this by combining the conditions into a single condition using the logical AND operator (`&&`).

Here is the optimized program:

```cpp
#include <cstdio>

int main() {
  int n;
  scanf("%d", &n);
  int sum_x = 0, sum_y = 0, sum_z = 0;
  for (int i = 0; i < n; i++) {
    int x, y, z;
    scanf("%d %d %d", &x, &y, &z);
    sum_x += x;
    sum_y += y;
    sum_z += z;
  }
  if (sum_x == 0 && sum_y == 0 && sum_z == 0) {
    printf("YES");
  } else {
    printf("NO");
  }
  return 0;
}
```