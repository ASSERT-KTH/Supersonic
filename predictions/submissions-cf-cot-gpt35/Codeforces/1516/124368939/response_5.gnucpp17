#include <iostream>
#include <vector>
#include <cmath>

typedef long long int ll;

ll phin(ll n) {
  ll number = n;
  for (ll i = 2; i <= std::sqrt(n); i++) {
    if (n % i == 0) {
      while (n % i == 0)
        n /= i;
      number = (number / i * (i - 1));
    }
  }
  if (n > 1)
    number = (number / n * (n - 1));
  return number;
}

std::vector<ll> sieve(int n) {
  std::vector<ll> vect;
  for (int i = 2; i <= n; i++) {
    bool is_prime = true;
    for (int j = 2; j * j <= i; j++) {
      if (i % j == 0) {
        is_prime = false;
        break;
      }
    }
    if (is_prime)
      vect.push_back(i);
  }
  return vect;
}

ll modulo_pow(ll a, ll b, ll mod) {
  ll result = 1;
  while (b > 0) {
    if (b & 1)
      result = (result * a) % mod;
    a = (a * a) % mod;
    b >>= 1;
  }
  return result;
}

void prefact(std::vector<ll>& fact, ll l, ll mod) {
  fact[0] = 1;
  for (ll i = 1; i <= l; i++) {
    fact[i] = (fact[i - 1] * i) % mod;
  }
}

void preinvfact(std::vector<ll>& invfact, const std::vector<ll>& fact, ll n, ll mod) {
  invfact[0] = 1;
  for (int i = 1; i <= n; i++) {
    invfact[i] = modulo_pow(fact[i], mod - 2, mod);
  }
}

ll ncr(const std::vector<ll>& fact, const std::vector<ll>& invfact, ll n, ll r, ll mod) {
  if (n < r || n < 0 || r < 0)
    return 0;
  return ((fact[n] * invfact[r]) % mod * invfact[n - r]) % mod;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int t;
  std::cin >> t;
  while (t--) {
    int n;
    std::cin >> n;
    std::vector<ll> v(n);
    ll d = 0;
    for (int i = 0; i < n; i++) {
      std::cin >> v[i];
      d ^= v[i];
    }
    std::vector<ll> pref(n + 1, 0);
    for (int i = 1; i <= n; i++) {
      pref[i] = pref[i - 1] ^ v[i - 1];
    }
    std::vector<ll> suff(n + 2, 0);
    for (int i = n; i >= 1; i--) {
      suff[i] = suff[i + 1] ^ v[i - 1];
    }
    int ans = 0;
    for (int i = 1; i <= n - 1; i++) {
      if (pref[i] == suff[i + 1]) {
        ans = 1;
        break;
      }
    }
    std::cout << (ans ? "YES" : (d == 0 && ans == 0 ? "NO" : (ncr(pref, suff, n, 3, d) && d == 0 ? "YES" : "NO"))) << '\n';
  }

  return 0;
}