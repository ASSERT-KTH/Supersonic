#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

typedef long long int ll;

vector<ll> sieve(int n) {
  vector<ll> primes;
  vector<bool> isPrime(n + 1, true);
  isPrime[0] = isPrime[1] = false;

  for (int i = 2; i <= n; i++) {
    if (isPrime[i]) {
      primes.push_back(i);
      for (int j = i * i; j <= n; j += i) {
        isPrime[j] = false;
      }
    }
  }

  return primes;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int t;
  cin >> t;

  while (t--) {
    int n;
    cin >> n;

    vector<ll> v(n, 0);
    ll d = 0;

    for (int i = 0; i < n; i++) {
      cin >> v[i];
      d ^= v[i];
    }

    bool ans = false;

    if (d == 0) {
      ans = true;
    } else {
      ll k = 0;
      int c = 0;

      for (int i = 0; i < n; i++) {
        k ^= v[i];
        if (k == d) {
          k = 0;
          c++;
        }
      }

      if (k == 0 && c >= 3) {
        ans = true;
      }
    }

    if (ans) {
      cout << "YES" << endl;
    } else {
      cout << "NO" << endl;
    }
  }

  return 0;
}