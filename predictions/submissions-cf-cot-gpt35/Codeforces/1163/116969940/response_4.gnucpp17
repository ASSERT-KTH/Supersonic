#include <iostream>
#include <map>
#include <set>
#include <cstring>
using namespace std;

const int MAXN = 100005;

void solve() {
  int n;
  cin >> n;
  int mp[MAXN] = {0};
  int ans = 0;
  int cnt[MAXN] = {0};
  int maxCnt = 0;
  set<int> cst;
  for (int i = 0; i < n; ++i) {
    int x;
    cin >> x;
    if (mp[x]) {
      cnt[mp[x]]--;
      if (cnt[mp[x]] == 0 && maxCnt == mp[x]) {
        maxCnt--;
      }
    }
    mp[x]++;
    cnt[mp[x]]++;
    maxCnt = max(maxCnt, mp[x]);
    cst.insert(x);
    if (cst.size() == 1) {
      ans = i;
    }
    if (max(cnt[1], cnt[maxCnt]) == i + 1 && mp[x] == 1) {
      ans = i;
    }
    if (mp[x] * cnt[mp[x]] + maxCnt * cnt[maxCnt] == i + 1) {
      if (cnt[maxCnt] == 1) {
        if (maxCnt == 1 || maxCnt - 1 == mp[x]) {
          ans = i;
        }
      } else if (cnt[mp[x]] == 1) {
        if (mp[x] == 1 || mp[x] - 1 == maxCnt) {
          ans = i;
        }
      } else if (cnt[maxCnt] == 1 && cnt[mp[x]] == 1) {
        if (max(maxCnt, mp[x]) - 1 == min(maxCnt, mp[x]) || min(maxCnt, mp[x]) == 1) {
          ans = i;
        }
      }
    }
  }
  ans++;
  cout << ans << endl;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
  
  solve();

  return 0;
}