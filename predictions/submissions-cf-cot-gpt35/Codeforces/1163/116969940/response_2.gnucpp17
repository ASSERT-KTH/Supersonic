#include <iostream>
#include <vector>
#include <cstring>
#include <algorithm>
using namespace std;

const int mxN = 1e5 + 5;

void solve() {
    int n;
    cin >> n;
    vector<int> mp(mxN, 0);
    int ans = 0;
    vector<int> cnt(n + 1, 0);
    int distinct = 0;
    for (int i = 0; i < n; ++i) {
        int x;
        cin >> x;
        if (mp[x]) {
            cnt[mp[x]]--;
        }
        mp[x]++;
        cnt[mp[x]]++;
        if (cnt[mp[x]] == 1) {
            distinct++;
        }
        if (cnt[mp[x] - 1] == 1) {
            distinct--;
        }
        int f = mp[x], s = mp[x];
        while (cnt[s] == 0) {
            s--;
        }
        int w = cnt[f], y = cnt[s];
        if (distinct == 1 || max(w, y) == i + 1) {
            ans = i;
        }
        if (f * w + s * y == i + 1) {
            if ((y == 1 && (s == 1 || s - 1 == f)) || (w == 1 && (f == 1 || f - 1 == s)) || (y == 1 && w == 1 && (max(f, s) - 1 == min(f, s) || min(f, s) == 1))) {
                ans = i;
            }
        }
    }
    ans++;
    cout << ans << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t;
    solve();
    return 0;
}