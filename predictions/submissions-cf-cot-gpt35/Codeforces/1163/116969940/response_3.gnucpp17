#include <iostream>
#include <map>
#include <set>

using namespace std;

const int mxN = 1e9 + 5;

void solve() {
  int n;
  cin >> n;
  int mp[mxN] = {0};
  int ans = 0;
  int cnt[mxN] = {0};
  set<int> cst;
  for (int i = 0; i < n; ++i) {
    int x;
    cin >> x;
    if (mp[x]) {
      cnt[mp[x]]--;
    }
    mp[x]++;
    cnt[mp[x]]++;
    cst.insert(x);
    auto f = cnt[1];
    auto sec = cnt[mp[x]];
    if (sec == 0)
      sec = mp[x];
    int w = cnt[f], y = cnt[sec];
    if (cst.size() == 1)
      ans = i;
    if (max(w, y) == i + 1 && f == 1)
      ans = i;
    if (f * w + sec * y == i + 1) {
      if (y == 1) {
        if (sec == 1 || sec - 1 == f)
          ans = i;
      } else if (w == 1) {
        if (f == 1 || f - 1 == sec)
          ans = i;
      } else if (y == 1 && w == 1) {
        if (max(f, sec) - 1 == min(f, sec) || min(f, sec) == 1)
          ans = i;
      }
    }
  }
  ans++;
  cout << ans << endl;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  solve();
  return 0;
}