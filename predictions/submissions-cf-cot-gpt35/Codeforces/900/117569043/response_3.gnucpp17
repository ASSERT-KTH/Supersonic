#include <iostream>
#include <vector>
#include <map>
using namespace std;

#define mod 1000000007

int power(int x, int y, int p) {
  int res = 1;
  x = x % p;
  if (x == 0)
    return 0;
  while (y > 0) {
    if (y & 1)
      res = (res * x) % p;
    y = y >> 1;
    x = (x * x) % p;
  }
  return res;
}

void solve() {
  int x, y;
  cin >> x >> y;
  if (y % x != 0) {
    cout << 0 << endl;
    return;
  }
  if (y / x == 1) {
    cout << 1 << endl;
    return;
  }
  int sum = y / x;
  int ans = power(2, sum - 1, mod);
  ans = (ans - 1 + mod) % mod;
  map<int, int> mp;
  for (int i = 2; i <= sum; i++) {
    int cur = power(2, i - 1, mod);
    for (int p = 2; p * p <= i; p++) {
      if (i % p == 0) {
        cur = (cur - mp[p] + mod) % mod;
        if (p * p != i) {
          cur = (cur - mp[i / p] + mod) % mod;
        }
      }
    }
    mp[i] = (cur - 1 + mod) % mod;
    ans = (ans - (cur - 1) + mod) % mod;
  }
  cout << ans << endl;
}

int main() {
  solve();
  return 0;
}