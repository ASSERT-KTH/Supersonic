#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <map>

using namespace std;

#define mod 1000000007

typedef long long ll;

ll power(ll x, ll y, ll p) {
  ll res = 1;
  x = x % p;
  if (x == 0)
    return 0;
  while (y > 0) {
    if (y & 1)
      res = (res * x) % p;
    y = y >> 1;
    x = (x * x) % p;
  }
  return res;
}

vector<ll> divisors(ll n) {
  vector<ll> v;
  for (ll i = 2; i <= sqrt(n); i++) {
    if (n % i == 0) {
      if (n / i == i)
        v.push_back(i);
      else {
        v.push_back(i);
        v.push_back(n / i);
      }
    }
  }
  return v;
}

ll calculateAnswer(ll sum) {
  map<ll, ll> mp;
  ll ans = power(2, sum - 1, mod);
  ans = (ans - 1 + mod) % mod;
  
  vector<ll> div = divisors(sum);
  sort(div.begin(), div.end());
  
  for (ll i = 0; i < div.size(); i++) {
    ll cur = power(2, div[i] - 1, mod);
    vector<ll> div1 = divisors(div[i]);
    for (ll p : div1) {
      cur = (cur - mp[p] + mod) % mod;
    }
    mp[div[i]] = (cur - 1 + mod) % mod;
    ans = (ans - (cur - 1) + mod) % mod;
  }
  
  return ans;
}

void solve() {
  ll x, y;
  cin >> x >> y;
  if (y % x != 0) {
    cout << 0 << endl;
    return;
  }
  if (y / x == 1) {
    cout << 1 << endl;
    return;
  }
  
  ll sum = y / x;
  ll ans = calculateAnswer(sum);
  
  cout << ans << endl;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  solve();
  
  return 0;
}