#include <iostream>
#include <vector>
#include <cmath>

const int N = 5e6 + 2;
const int M = 1e8;
const int tox[4] = {1, -1, 0, 0};
const long long inf = 1e18;
const int toy[4] = {0, 0, 1, -1};

std::vector<int> val(N);
std::vector<bool> is(N);
std::vector<int> cnt(N);
std::vector<long long> pref(N);

const int to = sqrt(N) + 1;

void precalc() {
    for (int i = 2; i < to; i++) {
        if (is[i])
            continue;
        for (int j = 2 * i; j < N; j += i) {
            is[j] = true;
            while (val[j] % i == 0) {
                val[j] /= i;
                cnt[j]++;
            }
        }
    }

    for (int i = 1; i < N; i++) {
        if (val[i] != 1) {
            cnt[i]++;
        }
    }

    for (int i = 1; i < N; i++) {
        pref[i] = pref[i - 1] + cnt[i];
    }
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);

    precalc();

    int t;
    std::cin >> t;

    while (t--) {
        int a, b;
        std::cin >> a >> b;
        std::cout << pref[a] - pref[b] << '\n';
    }

    return 0;
}