Explanation of the optimization steps:

1. Remove unnecessary header file: The `bits/stdc++.h` header file includes a lot of unnecessary standard library headers. We can remove it and include only the necessary ones.

2. Use more efficient data types: Instead of using `int_least64_t` for `k`, we can use a smaller data type such as `int`. Since `k` is an input value and it is not specified to be a very large number, using `int` should be sufficient.

3. Avoid unnecessary multiplication inside the loop: Instead of multiplying `i` with `k` in each iteration of the loop, we can calculate the total sum `dem` by using the formula for the sum of an arithmetic series. The sum of the first `w` terms in the sequence `1, 2, 3, ..., w` is `(w * (w + 1)) / 2`. Therefore, we can directly calculate `dem` as `(w * (w + 1) * k) / 2`.

4. Simplify the output calculation: Instead of using an if-else statement to calculate the output, we can simplify it to `cout << max(0, dem - n);`. This will output `0` if `dem` is less than or equal to `n`, and `dem - n` otherwise.

Optimized program:

```cpp
#include <iostream>
using namespace std;

int main() {
  int k, n, w;
  cin >> k >> n >> w;

  int dem = (w * (w + 1) * k) / 2;
  cout << max(0, dem - n);

  return 0;
}
```