Step 1: Remove unnecessary header inclusion
- The program includes `<bits/stdc++.h>`, which is not necessary for this program.
- We can remove this line to improve compilation time and reduce memory usage.

Step 2: Remove unused variables
- The variable `int_least64_t k` is not used in the program.
- We can remove this variable to improve memory usage.

Step 3: Optimize the loop
- The loop iterates from 1 to `w` and calculates `dem += i * k` in each iteration.
- We can optimize this loop by using the formula for the sum of an arithmetic series: `sum = (first_term + last_term) * num_terms / 2`.
- In this case, the first term is `k`, the last term is `k * w`, and the number of terms is `w`.
- We can calculate `dem` using this formula instead of the loop.

Step 4: Simplify the if-else statement
- The if-else statement checks if `dem <= n` and prints either `0` or `dem - n`.
- We can simplify this by directly calculating the difference `diff = dem - n` and then printing `max(diff, 0)`.

Here is the optimized C++ program:

```cpp
#include <iostream>
using namespace std;

int main() {
  int n, w;
  cin >> n >> w;

  long long dem = (1LL * w * (w + 1) / 2) * k;
  long long diff = dem - n;
  cout << max(diff, 0LL);

  return 0;
}
```