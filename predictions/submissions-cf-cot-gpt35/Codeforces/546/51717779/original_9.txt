Step 1: Remove unnecessary header inclusion

The `#include <bits/stdc++.h>` is a non-standard header that includes all the standard library headers. This can result in unnecessary code bloat and slower compilation times. We can remove this line and include only the necessary headers.

Step 2: Use a more efficient loop

The current loop iterates from 1 to `w`, calculating `dem` by adding `i * k` in each iteration. However, we can optimize this by using a mathematical formula to calculate the sum directly.

Step 3: Remove unnecessary variable declaration

The variable `dem` is unnecessary and can be replaced with a direct calculation.

Step 4: Optimize the conditional statement

The current conditional statement checks if `dem` is less than or equal to `n`, and if true, prints 0. Otherwise, it prints `dem - n`. We can optimize this by directly calculating the result and printing it without the need for an `if` statement.

Here is the optimized code:

```cpp
#include <iostream>

int main() {
  int_least64_t k, n, w;
  std::cin >> k >> n >> w;

  int_least64_t total = k * (w * (w + 1)) / 2;
  int_least64_t result = (total > n) ? total - n : 0;

  std::cout << result;

  return 0;
}
```