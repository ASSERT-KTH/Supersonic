Explanation of the optimization steps:

1. Remove unnecessary include: The program includes the `<bits/stdc++.h>` header, which is not necessary for this program. We can remove it.

2. Remove unused variable: The variable `dem` is not needed after the calculation. We can remove it.

3. Optimize the loop: The loop is currently iterating from 1 to `w` and calculating `dem` by multiplying `i` with `k`. We can optimize this by using the formula for the sum of an arithmetic series: `sum = (first term + last term) * number of terms / 2`. In this case, the first term is `k` and the last term is `k * w`. The number of terms is `w`. We can calculate `dem` directly using this formula.

4. Simplify the conditional statement: The conditional statement can be simplified by directly calculating the difference between `dem` and `n`. If the difference is less than or equal to 0, output 0; otherwise, output the difference.

Here is the optimized program:

```cpp
#include <iostream>
using namespace std;

int main() {
  int_least64_t k, n, w;
  cin >> k >> n >> w;
  
  int_least64_t dem = (k + k * w) * w / 2;

  cout << max(0LL, dem - n);
  
  return 0;
}
```