#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#include <unordered_map>
#define endl "\n"
#define all(v) v.begin(), v.end()
#define allr(s) s.rbegin(), s.rend()
#define RT(s) return cout << s, 0
#define watch(x) cout << (#x) << " = " << x << endl
#define sz(s) (int)(s.size())
#define PI acos(-1)
#define EPS 1e-8
using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
int dy[] = {1, -1, 0, 0, -1, 1, 1, -1};
int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
void file() {
#ifndef ONLINE_JUDGE
  freopen("in.txt", "r", stdin);
#else
#endif
}
void fast() {
  std::ios_base::sync_with_stdio(0);
  cin.tie(NULL);
}
const int N = 29;
ll k, grid[N][N];
map<ll, int> mp[N][N];
int n, m;
int main() {
  file();
  fast();
  cin >> n >> m >> k;
  for (int i = 1; i <= n; i++)
    for (int j = 1; j <= m; j++)
      cin >> grid[i][j];
  ll ans = 0;
  int num = (n + m - 2 + 1) / 2;
  for (int i = 0; i < (1 << num); i++) {
    int row = 1, col = 1;
    ll x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j))
        row++;
      else
        col++;
      x ^= grid[row][col];
    }
    mp[row][col][x]++;
  }
  num = n + m - 2 - num;
  for (int i = 0; i < (1 << num); i++) {
    int row = n, col = m;
    ll x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j))
        row--;
      else
        col--;
      if (row < 1 || col < 1)
        break;
      x ^= grid[row][col];
    }
    if (row >= 1 && col >= 1) {
      x ^= grid[row][col];
      ans += mp[row][col][x ^ k];
    }
  }
  cout << ans << endl;
  return 0;
}
