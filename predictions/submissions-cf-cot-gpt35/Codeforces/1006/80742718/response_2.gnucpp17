#include <iostream>
#include <vector>
#include <unordered_map>

constexpr int N = 29;

void file() {
#ifndef ONLINE_JUDGE
  freopen("in.txt", "r", stdin);
#else
#endif
}

void fast() {
  std::ios_base::sync_with_stdio(0);
  std::cin.tie(NULL);
}

int main() {
  file();
  fast();
  
  int n, m;
  long long k;
  std::cin >> n >> m >> k;

  std::vector<std::vector<long long>> grid(n + 1, std::vector<long long>(m + 1));
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= m; j++) {
      std::cin >> grid[i][j];
    }
  }

  long long ans = 0;
  int num = (n + m - 2 + 1) / 2;
  int numIterations = 1 << num;
  
  std::vector<std::vector<std::unordered_map<long long, int>>> mp(n + 1, std::vector<std::unordered_map<long long, int>>(m + 1));

  for (int i = 0; i < numIterations; i++) {
    int row = 1, col = 1;
    long long x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j))
        ++row;
      else
        ++col;
      x ^= grid[row][col];
    }
    mp[row][col][x]++;
  }

  num = n + m - 2 - num;
  numIterations = 1 << num;

  for (int i = 0; i < numIterations; i++) {
    int row = n, col = m;
    long long x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j))
        --row;
      else
        --col;
      if (row < 1 || col < 1)
        break;
      x ^= grid[row][col];
    }
    if (row >= 1 && col >= 1) {
      x ^= grid[row][col];
      ans += mp[row][col][x ^ k];
    }
  }
  
  std::cout << ans << std::endl;
  
  return 0;
}