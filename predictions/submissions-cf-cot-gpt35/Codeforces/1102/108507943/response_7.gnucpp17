#include <iostream>
#include <vector>
#include <string>

void forward(std::string& s, int x, int n, std::vector<int>& count) {
  int target_count = n / 3;
  for (int i = 0; i < n && count[x] < target_count; i++) {
    if (count[x] < target_count && s[i] - '0' > x && count[s[i] - '0'] > target_count) {
      count[x]++;
      count[s[i] - '0']--;
      s[i] = x + '0';
    }
  }
}

void backward(std::string& s, int x, int n, std::vector<int>& count) {
  int target_count = n / 3;
  for (int i = n - 1; i >= 0 && count[x] < target_count; i--) {
    if (count[x] < target_count && s[i] - '0' < x && count[s[i] - '0'] > target_count) {
      count[x]++;
      count[s[i] - '0']--;
      s[i] = x + '0';
    }
  }
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);

  int n;
  std::cin >> n;
  std::string s;
  std::cin >> s;

  std::vector<int> count(3, 0);
  for (int i = 0; i < n; i++) {
    count[s[i] - '0']++;
  }

  forward(s, 0, n, count);
  forward(s, 1, n, count);
  backward(s, 2, n, count);
  backward(s, 1, n, count);

  std::cout << s;

  return 0;
}