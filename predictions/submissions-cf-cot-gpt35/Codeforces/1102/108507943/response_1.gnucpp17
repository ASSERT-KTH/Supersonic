#include <iostream>
#include <vector>
#include <algorithm>

void optimizeString(std::string& s, int x, int n, std::vector<int>& count) {
    int minCount = std::min(count[x], n/3);
    for (int i = 0; i < n; i++) {
        int digit = s[i] - '0';
        if (count[digit] > n/3 && digit > x && count[x] < minCount) {
            count[digit]--;
            count[x]++;
            s[i] = x + '0';
        }
    }
}

int main() {
    int n;
    std::cin >> n;
    std::string s;
    std::cin >> s;

    std::vector<int> count(3, 0);
    for (char c : s) {
        count[c - '0']++;
    }

    optimizeString(s, 0, n, count);
    optimizeString(s, 1, n, count);
    optimizeString(s, 2, n, count);

    std::cout << s;

    return 0;
}