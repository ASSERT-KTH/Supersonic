#include <iostream>
#include <vector>
using namespace std;

void process(string &s, int x, int n, vector<int> &count, bool isForward) {
  int start = isForward ? 0 : n - 1;
  int end = isForward ? n : -1;
  int step = isForward ? 1 : -1;
  
  if (count[x] >= n / 3) {
    return;
  }

  for (int i = start; i != end; i += step) {
    if (count[s[i] - '0'] > n / 3 && ((isForward && s[i] - '0' > x) || (!isForward && s[i] - '0' < x))) {
      count[x]++;
      count[s[i] - '0']--;
      s[i] = x + '0';
    }
  }
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int n;
  cin >> n;
  
  string s;
  cin >> s;
  
  vector<int> count(3, 0);
  for (int i = 0; i < n; i++) {
    count[s[i] - '0']++;
  }
  
  process(s, 0, n, count, true);
  process(s, 1, n, count, true);
  process(s, 2, n, count, false);
  process(s, 1, n, count, false);
  
  cout << s;

  return 0;
}