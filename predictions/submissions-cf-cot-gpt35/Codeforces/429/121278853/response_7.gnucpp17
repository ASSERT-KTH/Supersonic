#include <iostream>
#include <vector>
using namespace std;

const int MAX = 100100;
int n, ans;
int init[MAX], goal[MAX];
vector<int> g[MAX], res;

void dfs(int node, int par, int ppre) {
  if (ppre) {
    init[node] ^= 1;
  }
  if (init[node] != goal[node]) {
    ans++;
    res.push_back(node);
    ppre ^= 1;
  }
  for (int v : g[node]) {
    if (v == par) continue;
    dfs(v, node, ppre);
  }
}

void solve() {
  scanf("%d", &n);
  for (int i = 0; i < n - 1; i++) {
    int a, b;
    scanf("%d %d", &a, &b);
    g[a].push_back(b);
    g[b].push_back(a);
  }
  for (int i = 1; i <= n; i++) {
    scanf("%d", &init[i]);
  }
  for (int i = 1; i <= n; i++) {
    scanf("%d", &goal[i]);
  }
  dfs(1, 0, 0);
  printf("%d\n", ans);
  for (int v : res) {
    printf("%d\n", v);
  }
}

int main() {
  solve();
  return 0;
}