```c++
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define umap unordered_map
#define pii pair<int, int>
#define pll pair<ll, ll>
#define frw(i, a, b) for (auto i = (a); i < (b); i++)
#define bck(i, a, b) for (auto i = (a); i > (b); i--)
#define T()                                                                    \
  int testcases;                                                               \
  cin >> testcases;                                                            \
  frw(TC, 1, testcases + 1)
#define tez                                                                    \
  ios::sync_with_stdio(0);                                                     \
  cin.tie(0);                                                                  \
  cout.tie(0);
#define endl "\n"
#define fi first
#define se second
#define pub push_back
#define in insert
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define sz(a) int(a.size())
#define sq(a) ((a) * (a))
const int MOD = 1e9 + 7;
int main() {
  tez int n, k;
  cin >> n >> k;
  vector<vector<int>> dp(n + 1, vector<int>(k + 1, 0));
  bck(i, n, 0) {
    dp[i][1] = 1;
    frw(j, 2, k + 1) {
      for (int l = 2 * i; l <= n; l += i) {
        dp[i][j] += dp[l][j - 1];
        dp[i][j] %= MOD;
      }
      dp[i][j] += dp[i][j - 1];
      dp[i][j] %= MOD;
    }
  }
  int ans = accumulate(dp.begin()+1, dp.end(), 0, [&](int a, auto& b){ return (a + b[k]) % MOD; });
  cout << ans;
}
```