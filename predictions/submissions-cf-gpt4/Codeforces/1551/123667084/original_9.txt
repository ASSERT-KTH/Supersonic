```cpp
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int MaxN = 1e5 + 5;

void solve() {
  string s;
  cin >> s;
  int n = s.size();
  vector<pair<int, int>> a(n);
  for (int i = 0; i < n; ++i) {
    a[i].second = i;
    a[i].first = s[i];
  }
  sort(a.begin(), a.end());
  vector<int> res(n, 0);
  vector<vector<int>> g(3);
  for (int i = 0, p = 0; i < n; ++i) {
    int pos = p % 2 + 1;
    if (g[pos].empty() || a[i - 2].first != a[i].first) {
      g[pos].push_back(a[i].second);
      ++p;
    }
  }
  int mn = min(g[1].size(), g[2].size());
  for (int i = 1; i <= 2; ++i) {
    for (int j = 0; j < mn; ++j) {
      res[g[i][j]] = i;
    }
  }
  int ans = count_if(res.begin(), res.end(), [](int x) { return x != 0; });
  cout << ans / 2 << '\n';
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);
  int t;
  cin >> t;
  while (t--)
    solve();
  return 0;
}
```