#include <iostream>
#include <vector>
#include <algorithm>
#include <string>

using namespace std;

void solve() {
    string s;
    cin >> s;
    int n = s.size(), k = 2;
    vector<pair<int, int>> a(n);
    for (int i = 0; i < n; ++i) {
        a[i] = {s[i], i};
    }
    sort(a.begin(), a.end());
    vector<int> res(n, 0);
    vector<vector<int>> g(k + 1);
    int p = 0;
    for (int i = 0; i < n; ++i) {
        int pos = p % k + 1;
        if (g[pos].empty() || a[i - k].first != a[i].first) {
            g[pos].push_back(a[i].second);
            ++p;
        }
    }
    int mn = g[k].size();
    for (int i = 1; i <= k; ++i) {
        for (int j = 0; j < mn; ++j) {
            res[g[i][j]] = i;
        }
    }
    int ans = 0;
    for (auto x : res) {
        ans += (x != 0);
    }
    cout << ans / 2 << '\n';
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t = 1;
    cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}