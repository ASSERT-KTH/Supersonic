#include <iostream>
#include <vector>
#include <unordered_map>
#include <cstring>

const int maxn = 200005;
int arr[maxn];
int ans[maxn];

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int t;
  std::cin >> t;
  while (t--) {
    std::unordered_map<int, std::vector<int>> m1;
    std::memset(arr, 0, sizeof(arr));
    std::memset(ans, 0, sizeof(ans));
    int n, k;
    std::cin >> n >> k;
    for (int i = 1; i <= n; i++) {
      std::cin >> arr[i];
      m1[arr[i]].push_back(i);
    }
    int cnt = 0;
    int color = 0;
    for (auto &x : m1) {
      if (x.second.size() >= k) {
        for (int i = 0; i < k; i++) {
          ans[x.second[i]] = i + 1;
        }
      } else {
        cnt += x.second.size();
      }
    }
    cnt = cnt - cnt % k;
    for (auto &s : m1) {
      for (auto &x : s.second) {
        if (ans[x] == 0 && cnt > 0) {
          ans[x] = ++color;
          color %= k;
          --cnt;
        }
      }
    }
    for (int i = 1; i <= n; i++) {
      std::cout << ans[i] << " ";
    }
    std::cout << "\n";
  }
  return 0;
}