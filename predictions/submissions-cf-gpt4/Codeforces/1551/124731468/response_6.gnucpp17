#include <iostream>
#include <unordered_map>
#include <vector>
#include <cstring>

constexpr int maxn = 2e5 + 50;
int arr[maxn];
int ans[maxn];

int main() {
  std::ios_base::sync_with_stdio(false); 
  std::cin.tie(NULL);

  int t;
  std::cin >> t;
  while (t--) {
    memset(arr, 0, sizeof(arr));
    memset(ans, 0, sizeof(ans));
    std::unordered_map<int, std::vector<int>> m1;
    int n, k;
    std::cin >> n >> k;
    for (int i = 1; i <= n; i++) {
      std::cin >> arr[i];
      m1[arr[i]].push_back(i);
    }
    int cnt = 0;
    int color = 0;
    for (auto &x : m1) {
      if (x.second.size() >= k) {
        int len = x.second.size();
        for (int i = 0; i < len; i++) {
          if (i >= k) {
            ans[x.second[i]] = -1;
          } else {
            ans[x.second[i]] = ++color;
            color %= k;
          }
        }
      } else {
        int len = x.second.size();
        cnt += len;
      }
    }
    cnt -= cnt % k;
    for (auto &s : m1) {
      for (auto x : s.second) {
        if (cnt <= 0)
          goto _out;
        if (ans[x] == 0) {
          ans[x] = ++color;
          color %= k;
          if (--cnt <= 0)
            goto _out;
        }
      }
    }
  _out:
    for (int i = 1; i <= n; i++) {
      if (ans[i] == -1) {
        ans[i] = 0;
      }
      std::cout << ans[i] << ' ';
    }
    std::cout << '\n';
  }
  return 0;
}