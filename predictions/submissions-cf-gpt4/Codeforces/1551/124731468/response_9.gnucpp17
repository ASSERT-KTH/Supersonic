#include <iostream>
#include <unordered_map>
#include <vector>

constexpr int MAXN = 2e5 + 50;
int arr[MAXN];
int ans[MAXN];

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int t;
  std::cin >> t;

  while (t--) {
    std::unordered_map<int, std::vector<int>> m1;
    int n, k;
    std::cin >> n >> k;

    for (int i = 1; i <= n; i++) {
      std::cin >> arr[i];
      m1[arr[i]].push_back(i);
    }

    int cnt = 0;
    int color = 0;

    for (auto& x : m1) {
      if (x.second.size() >= k) {
        for (size_t i = 0; i < x.second.size(); i++) {
          if (i >= k) {
            ans[x.second[i]] = -1;
          } else {
            ans[x.second[i]] = ++color;
            if (color == k) color = 0;
          }
        }
      } else {
        cnt += x.second.size();
      }
    }

    cnt -= cnt % k;

    for (auto& s : m1) {
      for (auto& x : s.second) {
        if (cnt <= 0)
          break;
        if (ans[x] == 0) {
          ans[x] = ++color;
          if (color == k) color = 0;
          --cnt;
        }
      }
      if (cnt <= 0)
        break;
    }

    for (int i = 1; i <= n; i++) {
      if (ans[i] == -1) {
        ans[i] = 0;
      }
    }

    for (int i = 1; i <= n; i++) {
      std::cout << ans[i] << ' ';
    }
    std::cout << '\n';
  }

  return 0;
}