```cpp
#include <iostream>
#include <vector>

typedef long long int ll;

ll init[100100], goal[100100], ans;
std::vector<ll> g[100100], res;

void dfs(ll node, ll par, ll pre, ll ppre) {
  if (ppre) {
    init[node] ^= 1;
  }
  if (init[node] != goal[node]) {
    ans++;
    res.push_back(node);
    ppre ^= 1;
  }
  for (auto v : g[node]) {
    if (v == par)
      continue;
    dfs(v, node, ppre, pre);
  }
}

int main() {
  std::ios::sync_with_stdio(false);
  ll n;
  std::cin >> n;
  for(ll i = 0; i < n-1; ++i) {
    ll a, b;
    std::cin >> a >> b;
    g[a].push_back(b);
    g[b].push_back(a);
  }
  for(ll i = 0; i < n; ++i) { std::cin >> init[i + 1]; }
  for(ll i = 0; i < n; ++i) { std::cin >> goal[i + 1]; }
  dfs(1, 0, 0, 0);
  std::cout << ans << "\n";
  for (auto v : res) {
    std::cout << v << "\n";
  }
}
```