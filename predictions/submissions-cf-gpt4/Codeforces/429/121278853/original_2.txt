```cpp
#include <iostream>
#include <vector>
typedef long long int ll;
using namespace std;

ll n, ans;
vector<ll> init(100100), goal(100100), g[100100], res;

void dfs(ll node, ll par, ll pre, ll ppre) {
  if (ppre) {
    init[node] ^= 1;
  }
  if (init[node] != goal[node]) {
    ans++;
    res.push_back(node);
    ppre ^= 1;
  }
  for (auto v : g[node]) {
    if (v == par)
      continue;
    dfs(v, node, ppre, pre);
  }
}

void solve() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  cin >> n;
  for(ll i=0; i<n-1; i++) {
    ll a, b;
    cin >> a >> b;
    g[a].push_back(b);
    g[b].push_back(a);
  }
  for(ll i=0; i<n; i++) { cin >> init[i + 1]; }
  for(ll i=0; i<n; i++) { cin >> goal[i + 1]; }
  dfs(1, 0, 0, 0);
  cout << ans << '\n';
  for (auto v : res) {
    cout << v << '\n';
  }
}

int main() {
  solve();
  return 0;
}
```