```c++
#include <iostream>
#include <vector>
#define int long long

const int nmmx = 31, kmx = 51;
std::vector<std::vector<std::vector<int>>> dp (nmmx, std::vector<std::vector<int>>(nmmx, std::vector<int>(kmx, -1)));

int solve(int n, int m, int k) {
  int &ans = dp[n][m][k];
  if (ans != -1)
    return ans;
  if (n * m == k || !k)
    return ans = 0;
  ans = 1e18;
  for (int i = 1; i <= n - 1; ++i) {
    for (int j = 0; j <= k; ++j) {
      ans = std::min(ans, m * m + solve(i, m, j) + solve(n - i, m, k - j));
    }
  }
  for (int i = 1; i <= m - 1; ++i) {
    for (int j = 0; j <= k; ++j) {
      ans = std::min(ans, n * n + solve(n, i, j) + solve(n, m - i, k - j));
    }
  }
  return ans;
}

signed main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);
  solve(30, 30, 50);
  int t;
  std::cin >> t;
  while (t--) {
    int n, m, k;
    std::cin >> n >> m >> k;
    std::cout << solve(n, m, k) << '\n';
  }
  return 0;
}
```