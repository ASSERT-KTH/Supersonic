```
#include<iostream>
#include<cstring>
#include<climits>

#define int long long
#define endl '\n'
constexpr int nmmx = 31, kmx = 51;
int dp[nmmx][nmmx][kmx];

int solve(int n, int m, int k) {
  int &ans = dp[n][m][k];
  if (ans != -1)
    return ans;
  if (n * m == k || !k)
    return ans = 0;
  ans = LONG_MAX;
  for (int i = 1; i <= n - 1; ++i) {
    for (int j = 0; j <= k; ++j) {
      if(j <= i * m)
        ans = std::min(ans, m * m + solve(i, m, j) + solve(n - i, m, k - j));
    }
  }
  for (int i = 1; i <= m - 1; ++i) {
    for (int j = 0; j <= k; ++j) {
      if(j <= i * n)
        ans = std::min(ans, n * n + solve(n, i, j) + solve(n, m - i, k - j));
    }
  }
  return ans;
}

signed main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);
  std::memset(dp, -1, sizeof(dp));
  solve(30, 30, 50);
  int t;
  std::cin >> t;
  while (t--) {
    int n, m, k;
    std::cin >> n >> m >> k;
    std::cout << solve(n, m, k) << endl;
  }
  return 0;
}
```