#include <iostream>
#include <cmath>
#include <algorithm>
#define MAXN 200005
#define ll long long
int A[MAXN];
ll prefix[MAXN];

int main() {
  std::ios_base::sync_with_stdio(false); 
  std::cin.tie(NULL);
  int T;
  std::cin >> T;
  while (T--) {
    int N, M, K;
    std::cin >> N >> M >> K;
    for (int i = 1; i <= N; ++i) {
      std::cin >> A[i];
      prefix[i] = prefix[i - 1] + A[i];
    }
    std::sort(A + 1, A + 1 + N, std::greater<int>());
    for (int i = 1; i <= N; ++i)
      prefix[i] = prefix[i - 1] + A[i];
    int ans = 0;
    for (int i = 1; i <= N; ++i) {
      ll sum = M;
      int cnt = 0;
      for (int j = i; j <= N; j += K) {
        if (sum >= prefix[j]) {
          sum -= prefix[j];
          cnt += j;
        } else {
          int l = j - K + 1, r = j;
          while (l <= r) {
            int mid = (l + r) / 2;
            if (prefix[mid] <= sum) {
              cnt += mid;
              sum -= prefix[mid];
              l = mid + 1;
            } else {
              r = mid - 1;
            }
          }
          break;
        }
      }
      ans = std::max(ans, cnt);
    }
    std::cout << ans << "\n";
  }
  return 0;
}