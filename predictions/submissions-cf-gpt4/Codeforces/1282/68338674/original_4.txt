```c++
#include <cstdio>
#include <algorithm>
#define MAXN 200005
#define ll long long
int N, M, K, T;
int A[MAXN], psum[MAXN];
int func(int pos) {
  if (psum[N] - psum[pos] > M)
    return 0;
  int temp = M - psum[pos], cnt = pos;
  for (int i = pos + K; i <= N; i += K) {
    if (A[i] > temp) {
      for (int j = i - K + 1; j <= N; ++j) {
        if (A[j] <= temp) {
          temp -= A[j];
          ++cnt;
        } else
          break;
      }
      break;
    } else {
      temp -= A[i];
      cnt += K;
    }
  }
  return cnt;
}
int main() {
  scanf("%d", &T);
  while (T--) {
    scanf("%d%d%d", &N, &M, &K);
    for (int i = 1; i <= N; ++i) {
      scanf("%d", &A[i]);
    }
    std::sort(A + 1, A + 1 + N);
    psum[0] = 0;
    for (int i = 1; i <= N; ++i)
      psum[i] = psum[i - 1] + A[i];
    if (psum[N] <= M) {
      printf("%d\n", N);
      continue;
    }
    int cnt = 0;
    for (int i = 0; i <= N; ++i) {
      cnt = std::max(cnt, func(i));
    }
    printf("%d\n", cnt);
  }
  return 0;
}
```