```cpp
#include <bits/stdc++.h>
#define int long long
using namespace std;
const int MAXN = 100100;
vector<vector<int>> adj;
int n, a[MAXN], q;
struct dat {
  pair<int, int> mx;
  pair<int, int> mn;
} t[4 * MAXN];
dat zero;
dat combine(dat x, dat y) {
  dat res;
  res.mx = max(x.mx, y.mx);
  res.mn = min(x.mn, y.mn);
  return res;
}
void build(int v, int tl, int tr) {
  if (tl == tr) {
    t[v].mn = {tl, n + 1};
    t[v].mx = {tl, n + 2};
  } else {
    int tm = (tl + tr) / 2;
    build(2 * v, tl, tm);
    build(2 * v + 1, tm + 1, tr);
    t[v] = combine(t[2 * v], t[2 * v + 1]);
  }
}
dat get(int v, int tl, int tr, int l, int r) {
  if (l > r)
    return zero;
  if (l == tl && r == tr)
    return t[v];
  int tm = (tl + tr) / 2;
  return combine(get(v * 2, tl, tm, l, min(r, tm)),
                 get(v * 2 + 1, tm + 1, tr, max(l, tm + 1), r));
}
int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cin >> n >> q;
  zero.mx = {n + 2, n + 2};
  zero.mn = {n + 1, n + 1};
  adj.resize(n + 1);
  for (int i = 1; i < n; i++) {
    int x;
    cin >> x;
    adj[x - 1].pb(i);
  }
  a[n + 1] = INT_MAX;
  a[n + 2] = 0;
  for (int i = 0; i < n; i++) {
    a[i] = i;
  }
  build(1, 0, n - 1);
  while (q--) {
    int l, r;
    cin >> l >> r;
    l--;
    r--;
    dat cur = get(1, 0, n - 1, l, r);
    if (r - l < 2) {
      cout << cur.mn.second + 1 << endl;
    } else {
      cout << cur.mx.second + 1 << endl;
    }
  }
  return 0;
}
```