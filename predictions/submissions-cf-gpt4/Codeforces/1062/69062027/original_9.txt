```cpp
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int MAXN = 100100;
vector<int> adj[MAXN];

int n, a[MAXN], q, tin[MAXN], tout[MAXN], dep[MAXN], par[MAXN], cnt;
pair<int, int> t[4 * MAXN];

void dfs(int u, int p, int d) {
    tin[u] = cnt++;
    par[u] = p;
    dep[u] = d;
    for (int v : adj[u]) {
        if (v == p) continue;
        dfs(v, u, d + 1);
    }
    tout[u] = cnt;
}

int lca(int u, int v) {
    while (par[u] != par[v]) {
        if (dep[par[u]] > dep[par[v]]) swap(u, v);
        v = par[par[v]];
    }
    return dep[u] < dep[v] ? u : v;
}

void build(int v, int tl, int tr) {
    if (tl == tr) {
        t[v] = {a[tl], tl};
    } else {
        int tm = (tl + tr) / 2;
        build(v*2, tl, tm);
        build(v*2+1, tm+1, tr);
        t[v] = max(t[v*2], t[v*2+1]);
    }
}

pair<int, int> get(int v, int tl, int tr, int l, int r) {
    if (l > r) return {-1, -1};
    if (l <= tl && tr <= r) return t[v];
    int tm = (tl + tr) / 2;
    return max(get(v*2, tl, tm, l, min(r, tm)), get(v*2+1, tm+1, tr, max(l, tm+1), r));
}

int main() {
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    cin >> n >> q;
    for (int i = 1; i < n; i++) {
        int x; cin >> x; --x;
        adj[x].push_back(i);
        adj[i].push_back(x);
    }

    dfs(0, 0, 0);

    for (int i = 0; i < n; i++) {
        a[tin[i]] = i;
    }

    build(1, 0, n - 1);

    while (q--) {
        int l, r; cin >> l >> r; --l; --r;
        pair<int, int> u = get(1, 0, n - 1, l, r);
        pair<int, int> v = get(1, 0, n - 1, l, tin[u.second]-1);
        pair<int, int> w = get(1, 0, n - 1, tout[u.second], r);
        cout << (max(v, w).second + 1) << " " << dep[lca(u.second, max(v, w).second)] << "\n";
    }

    return 0;
}
```