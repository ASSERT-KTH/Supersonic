```c++
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

constexpr char p[] = "abacaba";

int countPatternOccurrence(const std::string& s) {
  int count = 0;
  std::string::size_type pos = 0;
  while ((pos = s.find(p, pos)) != std::string::npos) {
    ++count;
    pos += sizeof(p) - 1;
  }
  return count;
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  int t;
  std::cin >> t;
  while (t--) {
    int n;
    std::cin >> n;
    std::string s;
    std::cin >> s;
    for (int i = 0; i <= n - sizeof(p); ++i) {
      std::string temp = s;
      bool valid = true;
      for (int j = 0; j < sizeof(p) - 1; ++j) {
        if (temp[i + j] == '?' || temp[i + j] == p[j]) {
          temp[i + j] = p[j];
        } else {
          valid = false;
          break;
        }
      }
      if (valid && countPatternOccurrence(temp) == 1) {
        std::replace(temp.begin(), temp.end(), '?', 'd');
        std::cout << "YES\n" << temp << '\n';
        goto NEXT;
      }
    }
    std::cout << "NO\n";
  NEXT:;
  }
  return 0;
}
```