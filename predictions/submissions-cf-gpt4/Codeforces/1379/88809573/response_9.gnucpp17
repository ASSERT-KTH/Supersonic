#include <algorithm>
#include <iostream>
#include <vector>

typedef long long ll;

int main() {
    int q;
    std::ios::sync_with_stdio(false);
    std::cin.tie(0);
    std::cin >> q;
    while (q--) {
        int n, m;
        std::cin >> n >> m;
        std::vector<ll> A(m+1), suf(m+2), ans(m+1);
        std::vector<std::pair<ll, ll>> f(m+1);
        for (int i = 1; i <= m; i++) {
            std::cin >> f[i].first >> f[i].second;
            A[i] = f[i].first;
        }
        std::sort(A.begin()+1, A.end());
        for (int i = m; i >= 1; i--)
            suf[i] = suf[i + 1] + A[i];
        if (n <= m)
            ans = suf[m - n + 1];
        for (int i = 1; i <= m; i++) {
            ll temp = 0;
            int pos = std::lower_bound(A.begin()+1, A.end(), f[i].second) - A.begin();
            if (pos <= m - n + 1)
                continue;
            temp += suf[pos];
            int num = n - (m - pos + 1);
            if (f[i].first < f[i].second)
                temp += f[i].first, num--;
            temp += num * f[i].second;
            ans = std::max(ans, temp);
        }
        std::cout << ans << "\n";
    }
    return 0;
}