#include <cstdio>
#include <algorithm>
#include <cstring>
#define MAX_N 200010
typedef long long ll;
struct Node { ll a, b; } f[MAX_N];
ll A[MAX_N], suf[MAX_N], ans;
int main() {
    int q, n, m;
    scanf("%d", &q);
    while (q--) {
        scanf("%d%d", &n, &m);
        for (int i = 1; i <= m; i++) {
            scanf("%lld %lld", &f[i].a, &f[i].b);
            A[i] = f[i].a;
        }
        std::sort(A + 1, A + m + 1);
        suf[m + 1] = 0;
        for (int i = m; i >= 1; i--) suf[i] = suf[i + 1] + A[i];
        ans = n <= m ? suf[m - n + 1] : 0;
        for (int i = 1; i <= m; i++) {
            int pos = std::lower_bound(A + 1, A + m + 1, f[i].b) - A;
            if (pos <= m - n + 1) continue;
            ll temp = suf[pos] + f[i].b * std::max(0, n - (m - pos + 1) + (f[i].a < f[i].b ? -1 : 0)) + (f[i].a < f[i].b ? f[i].a : 0);
            ans = std::max(ans, temp);
        }
        printf("%lld\n", ans);
    }
    return 0;
}