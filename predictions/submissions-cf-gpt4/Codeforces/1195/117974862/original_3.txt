```cpp
#include <iostream>
#include <vector>
#include <algorithm>
#define pb push_back
#define REP(i, a, b) for (int i = a; i < b; i++)
#define f0r(i, n) for (int i = 0; i < n; ++i)
#define r0f(i, n) for (int i = n - 1; i >= 0; i--)
#define fori(i, a, b) for (int i = (a); i < (b); ++i)
#define all(v) v.begin(), v.end()
#define sz(a) (int)a.size()
const int INF = 1e9;
const int maxn = 100005;
using namespace std;
typedef long long ll;
ll arr1[maxn], arr2[maxn];
ll dp[maxn][3];
int n;
ll dpF(int i, int last) {
  if(i == n) return 0LL;
  if(dp[i][last] != -1) return dp[i][last];
  ll op1 = 0LL, op2 = 0LL, op3 = 0LL;
  if(last != 1) op1 = arr1[i] + dpF(i + 1, 1);
  if(last != 2) op2 = arr2[i] + dpF(i + 1, 2);
  op3 = dpF(i + 1, 0);
  return dp[i][last] = max({op1, op2, op3});
}
void solve() {
  fill(&dp[0][0], &dp[0][0] + sizeof(dp) / sizeof(dp[0][0]), -1);
  cin >> n;
  f0r(i, n) cin >> arr1[i];
  f0r(i, n) cin >> arr2[i];
  cout << dpF(0, 0) << "\n";
}
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  solve();
  return 0;
}
```