#include <bits/stdc++.h>
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define PRECISION std::cout << std::fixed << std::setprecision(20);
#define MAXN 200005

int n, q, arr[MAXN], cnt[MAXN], t[4 * MAXN];

void build(int a[], int v, int tl, int tr) {
    if (tl == tr) {
        t[v] = a[tl];
    } else {
        int tm = (tl + tr) / 2;
        build(a, v*2, tl, tm);
        build(a, v*2+1, tm+1, tr);
        t[v] = (cnt[t[v*2]] > cnt[t[v*2+1]]) ? t[v*2] : t[v*2+1];
    }
}

int query(int v, int tl, int tr, int l, int r) {
    if (l > r) return 0;
    if (l == tl && r == tr) return t[v];
    int tm = (tl + tr) / 2;
    int left = query(v*2, tl, tm, l, min(r, tm));
    int right = query(v*2+1, tm+1, tr, max(l, tm+1), r);
    return (cnt[left] > cnt[right]) ? left : right;
}

int main() {
    FASTIO;
    PRECISION;

    cin >> n >> q;

    for (int i = 0; i < n; ++i) {
        cin >> arr[i];
        cnt[arr[i]]++;
    }
    
    build(arr, 1, 0, n - 1);

    while (q--) {
        int l, r;
        cin >> l >> r;
        l--;
        r--;
        int x = query(1, 0, n - 1, l, r);
        int len = r - l + 1;
        int mx = cnt[x];
        int extra = len - mx;
        int left = max(0, mx - extra - 1);
        cout << 1 + left << "\n";
    }

    return 0;
}