#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#define lli int
#define ve vector<lli>
using namespace std;

const int R = 1000005;
ve a(R + 5, 0);
ve logtwo(R + 5);
vector<ve> table(R + 5, ve(22));

lli f(lli a, lli b) { return max(a, b); }

void build_sparse(){
    logtwo[1] = 0;
    for (int i = 2; i < R + 1; i++){ logtwo[i] = logtwo[i / 2] + 1; }
    for (int i = R - 1; i > -1; i--){
        table[i][0] = a[i];
        for (int j = 1; i + (1LL << j) - 1 < R; j++){
            table[i][j] = f(table[i][j - 1], table[i + (1 << (j - 1))][j - 1]);
        }
    }
}

lli query(lli l, lli r) {
    lli temp = logtwo[r - l + 1];
    return f(table[l][temp], table[r - (1LL << temp) + 1][temp]);
}

void solve() {
    int n;
    cin >> n;
    for (int i = 0; i < n; i++){
        lli x;
        cin >> x;
        a[x] = x;
    }
    build_sparse();
    lli maxi = 0;
    for (lli i = 2; i < R + 1; i++) {
        if (!a[i]) continue;
        for (lli j = i; j < R + 1; j += i) {
            lli temp = query(j, min(j + i - 1, R)) - j;
            maxi = max(maxi, temp);
        }
    }
    cout << maxi << '\n';
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    solve();
}