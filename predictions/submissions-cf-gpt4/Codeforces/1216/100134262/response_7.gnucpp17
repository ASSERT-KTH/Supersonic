#include <iostream>
#include <vector>
#include <string>
#include <limits>
#define int long long
using namespace std;
const int MAXN = 2e6 + 5;
const int INF = numeric_limits<int>::max();
int dp[MAXN], pre[MAXN];
int n, k;
string s;
void solve() {
    cin >> n >> k;
    cin >> s;
    s = " " + s;
    for(int i = 1; i <= n; ++i) dp[i] = INF;
    dp[0] = 0;
    for(int i = 1; i <= n; ++i) {
        pre[i] = pre[i-1] + (s[i] == '1');
        if(s[i] == '1') dp[i] = min(dp[i], dp[max(0LL, i-k-1)] + i);
        if(i != n) dp[i+1] = min(dp[i+1], dp[pre[i]] + i + 1);
    }
    cout << dp[n] << '\n';
}
signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    solve();
    return 0;
}