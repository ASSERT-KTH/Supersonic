#include <iostream>
#include <vector>
#include <algorithm>
#define int long long
using namespace std;
const int MAXN = 2000200;
int dp[MAXN];

void solve() {
    int n, k;
    cin >> n >> k;
    string s;
    cin >> s;
    fill(dp, dp + n + 1, 1e18);
    dp[0] = 0;
    vector<int> pos;
    pos.push_back(-k-1);
    for (int i = 0; i < n; ++i) {
        if (s[i] == '1') {
            pos.push_back(i);
        }
        if (pos.size() > 1) {
            dp[i+1] = min(dp[i+1], dp[pos[pos.size()-2]+1] + i+1);
        }
        dp[i+1] = min(dp[i+1], dp[i] + i+1);
    }
    cout << dp[n] << "\n";
}

signed main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    solve();
}