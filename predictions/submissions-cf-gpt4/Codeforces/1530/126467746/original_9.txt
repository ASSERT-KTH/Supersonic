```
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void solve() {
    int n;
    cin >> n;
    vector<int> a(n), b(n), ans(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        b[i] = a[i];
    }
    sort(b.begin(), b.end());
    b.erase(unique(b.begin(), b.end()), b.end());
    for (int i = 0; i < n; i++) {
        auto it = lower_bound(b.begin(), b.end(), a[i]);
        if (it != b.end() && *it == a[i] && ans[it - b.begin()] == 0) {
            ans[it - b.begin()] = a[i];
        }
    }
    int unused = 0;
    for (int i = 0; i < n; i++) {
        if (ans[i] == 0) {
            while (binary_search(b.begin(), b.end(), unused + 1)) {
                unused++;
            }
            ans[i] = ++unused;
        }
    }
    cout << b.size() << "\n";
    for (int i = 0; i < n; i++) {
        cout << ans[i] << " ";
    }
    cout << "\n";
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}
```