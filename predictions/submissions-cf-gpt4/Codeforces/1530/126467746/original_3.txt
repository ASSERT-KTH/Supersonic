```cpp
#include <iostream>
#include <vector>
#include <unordered_set>
#include <algorithm>

using namespace std;

void solve() {
    int n;
    cin >> n;
    vector<int> a(n + 1);
    for (int i = 1; i <= n; i++)
        cin >> a[i];

    unordered_set<int> distinct;
    for (int i = 1; i <= n; i++)
        distinct.insert(a[i]);

    vector<int> missing;
    for (int i = 1; i <= n; i++) {
        if (distinct.find(i) == distinct.end())
            missing.push_back(i);
    }

    vector<int> ans(n + 1);
    int j = 0;
    for (int i = 1; i <= n; i++) {
        if (distinct.find(a[i]) != distinct.end()) {
            ans[i] = a[i];
            distinct.erase(a[i]);
        } else {
            ans[i] = missing[j++];
        }
    }

    cout << missing.size() << "\n";
    for (int i = 1; i <= n; i++)
        cout << ans[i] << " ";
    cout << "\n";
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;
    while (t--)
        solve();
    return 0;
}
```