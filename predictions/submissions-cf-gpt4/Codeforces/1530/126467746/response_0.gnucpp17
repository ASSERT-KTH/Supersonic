#include <bits/stdc++.h>
using namespace std;

int solve(int n, vector<int> &ans, vector<int> &a, unordered_map<int, int> &m) {
  vector<bool> check(n + 1, false);
  int c = 0;
  for (int i = 1; i <= n; i++) {
    if (!check[a[i]]) {
      ans[i] = a[i];
      m[a[i]] = i;
      check[a[i]] = true;
      c++;
    }
  }

  deque<int> k;
  for (int i = 1; i <= n; i++) {
    if (!check[i]) {
      k.push_back(i);
    }
  }

  for (int i = 1; i <= n; i++) {
    if (ans[i] == 0) {
      ans[i] = k.back();
      k.pop_back();
    }
  }

  return c;
}

void print(const vector<int> &ans, int c) {
  cout << c << "\n";
  for (int i = 1; i < ans.size(); i++)
    cout << ans[i] << " ";
  cout << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<int> a(n + 1);
    for (int i = 1; i <= n; i++)
      cin >> a[i];

    vector<int> ans(n + 1);
    unordered_map<int, int> m;

    int number = solve(n, ans, a, m);
    unordered_map<int, int> k(a.begin(), a.end());

    for (int i = 1; i <= n; i++) {
      if (ans[i] == i) {
        swap(ans[i], ans[m[a[i]]]);
      }
    }

    print(ans, number);
  }
}