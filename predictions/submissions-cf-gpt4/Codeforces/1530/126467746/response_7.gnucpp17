#include <iostream>
#include <vector>
#include <unordered_set>
#include <algorithm>

using namespace std;

void solve() {
    int n;
    cin >> n;
    vector<int> a(n + 1);
    for (int i = 1; i <= n; ++i)
        cin >> a[i];

    vector<int> ans(n + 1);
    unordered_set<int> distinct_elements;

    for (int i = 1; i <= n; ++i) {
        if (distinct_elements.find(a[i]) == distinct_elements.end()) {
            ans[i] = a[i];
            distinct_elements.insert(a[i]);
        }
    }

    vector<int> unused_elements;
    for (int i = 1; i <= n; ++i) {
        if (distinct_elements.find(i) == distinct_elements.end()) {
            unused_elements.push_back(i);
        }
    }

    int h = unused_elements.size();
    for (int i = 1; i <= n; ++i) {
        if (ans[i] == 0) {
            ans[i] = unused_elements[h - 1];
            --h;
        }
    }

    cout << distinct_elements.size() << "\n";
    for (int i = 1; i <= n; ++i)
        cout << ans[i] << ' ';
    cout << '\n';
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t;
    cin >> t;
    while (t--)
        solve();

    return 0;
}