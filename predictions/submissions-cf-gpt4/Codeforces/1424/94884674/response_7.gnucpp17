#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 1e6 + 10;
bool vis[maxn];
int prime[maxn], ans[maxn];

void euler() {
  for (int i = 2; i < maxn; ++i) {
    if (!vis[i])
      prime[++prime[0]] = i;
    for (int j = 1; j <= prime[0] && i * prime[j] < maxn; ++j) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
  vis[1] = 1;
  for (int i = 1; i < maxn; ++i)
    ans[i] = ans[i - 1] + (int)(!vis[i]);
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  euler();
  int t, n;
  cin >> t;
  while (t--) {
    cin >> n;
    if (n <= 3) {
      cout << n << "\n";
      continue;
    }
    int l = 1, r = prime[0];
    while (l + 1 < r) {
      int mid = (l + r) / 2;
      if ((ll)prime[mid] * prime[mid] <= (ll)n)
        l = mid;
      else
        r = mid;
    }
    cout << ans[n] - ans[prime[l]] + 1 << "\n";
  }
  return 0;
}