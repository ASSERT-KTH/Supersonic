#include <cstdio>
#include <vector>

#define MAXN 1000006

std::vector<int> prime;
std::vector<int> prime_count;
bool vis[MAXN];

void euler() {
  prime.push_back(2);
  for (int i = 3; i < MAXN; i += 2) {
    if (!vis[i])
      prime.push_back(i);
    for (int j = 0; j < prime.size() && i * prime[j] < MAXN; j++) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
}

int main() {
  euler();
  prime_count.push_back(0);
  for (int i = 1; i < MAXN; ++i)
    prime_count.push_back(prime_count.back() + (int)(!vis[i]));

  int t;
  scanf("%d", &t);
  while (t--) {
    int n;
    scanf("%d", &n);
    if (n <= 3) {
      printf("%d\n", n);
      continue;
    }
    int l = 0, r = prime.size()-1;
    while (l < r) {
      int mid = l + (r - l + 1) / 2;
      if ((long long)prime[mid] * prime[mid] <= n)
        l = mid;
      else
        r = mid - 1;
    }
    printf("%d\n", prime_count[n] - prime_count[prime[l]] + 1);
  }
  return 0;
}