#include <iostream>
#include <vector>

const int maxn = 1e6 + 10;
std::vector<int> prime(maxn, 0);
std::vector<bool> vis(maxn, false);
std::vector<int> ans(maxn, 0);

void euler(int n) {
  for (int i = 2; i < n; ++i) {
    if (!vis[i])
      prime[++prime[0]] = i;
    for (int j = 1; j <= prime[0] && i * prime[j] < n; ++j) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
}

int main() {
  euler(maxn - 9);
  vis[1] = true;
  for (int i = 1; i < maxn; ++i)
    ans[i] = ans[i - 1] + static_cast<int>(!vis[i]);
  int t;
  std::cin >> t;
  while (t--) {
    int n;
    std::cin >> n;
    if (n <= 3) {
      std::cout << n << "\n";
      continue;
    }
    int l = 1, r = prime[0];
    while (l + 1 < r) {
      int mid = (r + l) / 2;
      if (static_cast<long long>(prime[mid]) * prime[mid] <= static_cast<long long>(n))
        l = mid;
      else
        r = mid;
    }
    std::cout << ans[n] - ans[prime[l]] + 1 << "\n";
  }
  return 0;
}