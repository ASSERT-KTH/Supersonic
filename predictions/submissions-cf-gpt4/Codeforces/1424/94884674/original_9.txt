```cpp
#include <cstdio>
#include <cstring>
const int maxn = 1e6 + 10;
const int mod = 1e9 + 7;
int prime[maxn];
bool vis[maxn];
void euler(int n) {
  memset(vis, 0, sizeof(vis));
  prime[0] = 0;
  for (int i = 2; i < n; ++i) {
    if (!vis[i])
      prime[++prime[0]] = i;
    for (int j = 1; j <= prime[0] && i * prime[j] < n; ++j) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
}
int ans[maxn];
inline void read(int &x) {
  char ch;
  x = 0;
  int f = 1;
  while (!isdigit(ch = getchar())) {
    if (ch == '-')
      f = -1;
  }
  while (isdigit(ch)) {
    x = x * 10 + ch - '0';
    ch = getchar();
  }
  x = x * f;
}
int main() {
  euler(maxn - 9);
  vis[1] = 1;
  for (int i = 1; i < maxn; ++i)
    ans[i] = ans[i - 1] + (int)(!vis[i]);
  int t;
  read(t);
  while (t--) {
    int n;
    read(n);
    if (n <= 3) {
      printf("%d\n", n);
      continue;
    }
    int l = 1, r = prime[0];
    while (l + 1 < r) {
      int mid = (r + l) >> 1;
      if ((long long)prime[mid] * prime[mid] <= n)
        l = mid;
      else
        r = mid;
    }
    printf("%d\n", ans[n] - ans[prime[l]] + 1);
  }
  return 0;
}
```