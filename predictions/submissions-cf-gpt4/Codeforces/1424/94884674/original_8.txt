```cpp
#include <iostream>
#include <vector>

constexpr int MAXN = 1e6 + 10;
std::vector<int> prime;
std::vector<bool> vis(MAXN);
std::vector<int> ans(MAXN);

void euler(int n) {
  vis.assign(n, false);
  for (int i = 2; i < n; ++i) {
    if (!vis[i])
      prime.push_back(i);
    for (int j = 0; j < prime.size() && i * prime[j] < n; ++j) {
      vis[i * prime[j]] = true;
      if (i % prime[j] == 0)
        break;
    }
  }
}

int main() {
  euler(MAXN - 9);
  vis[1] = 1;
  for (int i = 1; i <= MAXN; ++i)
    ans[i] = ans[i - 1] + (int)(!vis[i]);
  int t;
  std::cin >> t;
  while (t--) {
    int n;
    std::cin >> n;
    if (n <= 3) {
      std::cout << n << '\n';
      continue;
    }
    int l = 0, r = prime.size() - 1;
    while (l + 1 < r) {
      int mid = (l + r) / 2;
      if ((long long)prime[mid] * prime[mid] <= (long long)n)
        l = mid;
      else
        r = mid;
    }
    std::cout << ans[n] - ans[prime[l]] + 1 << '\n';
  }
  return 0;
}
```