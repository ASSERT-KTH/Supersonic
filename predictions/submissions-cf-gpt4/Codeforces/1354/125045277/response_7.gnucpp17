#pragma GCC optimize("-Ofast")
#pragma GCC optimize("unroll-loops")
#include <algorithm>
#include <chrono>
#include <iostream>
#include <vector>
using namespace std;
#define INF (int)1e9
#define endl '\n'
#define V vector
#define str string
#define rep(i, a, b) for (int i = (a); i < (b); i++)
#define tsc                                                                    \
  ll TC;                                                                       \
  cin >> TC;                                                                   \
  while (TC--)                                                                 \
    solve();
void solve() {
  string s;
  cin >> s;
  int n = s.size();
  int ans = INF;
  V<int> last(4, -1);
  for (int i = 0; i < n; i++) {
    last[s[i] - '0'] = i;
    if (last[1] != -1 && last[2] != -1 && last[3] != -1) {
      ans = min(ans, i - min({last[1], last[2], last[3]}) + 1);
    }
  }
  cout << (ans == INF ? 0 : ans) << endl;
}
int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  srand(chrono::steady_clock::now().time_since_epoch().count());
  tsc;
}