#pragma GCC optimize("-Ofast")
#pragma GCC optimize("unroll-loops")
#include <iostream>
#include <string>
#include <vector>
using namespace std;
#define INF (int)1e9
#define V vector
#define str string

void solve() {
  string s;
  cin >> s;
  int n = s.size();
  int ans = INF;
  V<V<int>> next(n, V<int>(4, -1));
  next[n - 1][s[n - 1] - '0'] = n - 1;
  for (int i = n - 2; i >= 0; i--) {
    next[i] = next[i + 1];
    next[i][s[i] - '0'] = i;
    if (next[i][1] != -1 && next[i][2] != -1 && next[i][3] != -1) {
      int len = max({next[i][1], next[i][2], next[i][3]}) - i;
      ans = min(ans, len);
    }
  }
  ans = (ans == INF) ? 0 : ans + 1;
  cout << ans << endl;
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int TC;
  cin >> TC;
  while (TC--)
    solve();
}