#include <iostream>
#include <vector>
using namespace std;
const long long MOD = 1e9 + 7;

inline long long getSum(long long n) { return n * (n + 1) / 2; }

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  long long n, x;
  cin >> n >> x;
  vector<long long> v(n);
  for (long long &x : v)
    cin >> x;
  v.insert(v.end(), v.begin(), v.end());
  vector<long long> u = v;
  for (long long i = 1; i < 2*n; i++) {
    u[i] += u[i - 1];
  }
  for (long long i = 1; i < 2*n; i++) {
    v[i] = v[i - 1] + v[i] * (v[i] + 1) / 2;
  }
  long long ans = 0;
  for (long long i = 0, j = 0, total = 0; i < 2*n; i++) {
    while (total + v[i] > x) {
      total -= v[j];
      j++;
    }
    total += v[i];
    ans = max(ans, total + (j ? u[j - 1] : 0) * ((u[j - 1] + 1) / 2));
  }
  cout << ans;
  return 0;
}