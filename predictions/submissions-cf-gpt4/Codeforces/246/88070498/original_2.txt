```cpp
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  int n, m;
  cin >> n >> m;
  vi a(n + 1);
  vector<unordered_set<int>> vk(n + 1);
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
    vk[a[i]].insert(i);
  }
  vector<vi> ad(n + 1);
  while (m--) {
    int u, v;
    cin >> u >> v;
    ad[u].push_back(v);
    ad[v].push_back(u);
  }
  int mx = 0, mxColor = INT_MAX;
  for (int color = 1; color <= n; ++color) {
    if (vk[color].empty()) continue;
    unordered_set<int> mp;
    for (const auto &member : vk[color]) {
      for (const auto &neighbour : ad[member]) {
        if (a[neighbour] != color)
          mp.insert(a[neighbour]);
      }
    }
    if (mp.size() > mx || (mp.size() == mx && color < mxColor)) {
      mx = mp.size();
      mxColor = color;
    }
  }
  cout << mxColor;
  return 0;
}
```