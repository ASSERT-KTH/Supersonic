#include <bits/stdc++.h>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int n, m;
  cin >> n >> m;
  vector<int> a(n + 1);
  vector<vector<int>> adj(n + 1);
  unordered_map<int, set<int>> vk;

  for (int i = 1; i <= n; i++) {
    cin >> a[i];
    vk[a[i]].insert(i);
  }

  while (m--) {
    int u, v;
    cin >> u >> v;
    adj[u].push_back(v);
    adj[v].push_back(u);
  }

  int maxColor = 0, maxCount = 0;
  for (auto& color : vk) {
    unordered_map<int, int> counts;
    for (auto& node : color.second) {
      for (auto& neighbour : adj[node]) {
        if (a[neighbour] != color.first)
          counts[a[neighbour]]++;
      }
    }
    if (counts.size() > maxCount || (counts.size() == maxCount && color.first < maxColor)) {
      maxCount = counts.size();
      maxColor = color.first;
    }
  }
  cout << maxColor;
  return 0;
}