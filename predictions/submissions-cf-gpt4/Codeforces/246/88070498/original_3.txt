```c++
#include <iostream>
#include <unordered_map>
#include <vector>
#include <climits>

using namespace std;

typedef vector<int> vi;
typedef unordered_map<int, vi> uvii;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int n, m;
  cin >> n >> m;

  vi a(n + 1);
  uvii vk;
  for (int i = 1; i <= n; ++i) {
    cin >> a[i];
    vk[a[i]].push_back(i);
  }

  vector<vi> ad(n + 1);
  while (m--) {
    int u, v;
    cin >> u >> v;
    ad[u].push_back(v);
    ad[v].push_back(u);
  }

  int mx = 0, mxColor = INT_MAX;
  for (const auto& color : vk) {
    unordered_map<int, bool> mp;
    for (const auto& member : color.second) {
      for (const auto& neighbour : ad[member]) {
        if (a[neighbour] != a[member])
          mp[a[neighbour]] = true;
      }
    }
    if ((mp.size() == mx && color.first < mxColor) || (mp.size() > mx)) {
      mx = mp.size();
      mxColor = color.first;
    }
  }

  cout << mxColor;

  return 0;
}
```