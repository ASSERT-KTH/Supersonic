```
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int MAX_N = 4010;
ll u[MAX_N][MAX_N] = {}, W[MAX_N][MAX_N] = {};

ll f(int i, int j) {
    return W[i][j];
}

void solve() {
    int n, k;
    scanf("%d %d ", &n, &k);

    for(int i = 0; i < n; ++i) {
        for(int j = 0; j < n; ++j) {
            u[i][j] = getchar() - '0';
            getchar();
        }
    }

    for(int w = 1; w <= n; ++w) {
        for(int l = 0, r = l + w; r < n; ++l, ++r) {
            W[l][r] = u[l][r];
            if(w >= 2)
                W[l][r] += W[l + 1][r] + W[l][r - 1] - W[l + 1][r - 1];
        }
    }

    vector<vector<ll>> dp(k, vector<ll>(n, 0));
    dp[0].assign(W[0], W[0] + n);
    for(int i = 1; i < k; ++i) {
        for(int j = i; j < n; ++j) {
            dp[i][j] = dp[i - 1][j];
            for(int l = i - 1; l < j; ++l) {
                dp[i][j] = min(dp[i][j], dp[i - 1][l] + f(l + 1, j));
            }
        }
    }

    cout << dp[k - 1][n - 1] << endl;
}

int main() {
    solve();
    return 0;
}
```