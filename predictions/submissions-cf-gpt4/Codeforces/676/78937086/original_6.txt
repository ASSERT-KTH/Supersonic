```c++
#include <iostream>
#include <vector>
#include <string>
#define MOD 1000000007
#define mods 1000000009
#define mods1 37
#define mods2 715827883
using namespace std;
typedef long long ll;
int TestMillerRabin[12] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37};
ll fastexp(ll x, ll y, ll p) {
  ll ans = 1;
  x %= p;
  while (y > 0) {
    if (y & 1)
      ans = (ans * x) % p;
    y = y >> 1;
    if (y)
      x = (x * x) % p;
  }
  return ans;
}
ll invmod(ll x, ll p) { return fastexp(x, p - 2, p); }
bool check_composite(ll n, ll a, ll d, int s) {
  ll x = fastexp(a, d, n);
  if (x == 1 || x == n - 1)
    return false;
  for (int r = 1; r < s; r++) {
    x = (x * x) % n;
    if (x == n - 1)
      return false;
  }
  return true;
}
bool isPrime(ll p) {
  if (p <= 1)
    return false;
  int r = 0;
  ll d = p - 1;
  while (!(d & 1)) {
    d >>= 1;
    r++;
  }
  for (int i = 0; i < 12; i++) {
    int value = TestMillerRabin[i];
    if (p == value)
      return true;
    if (check_composite(p, value, d, r))
      return false;
  }
  return true;
}
int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  int n, k;
  cin >> n >> k;
  int played = 0;
  string p;
  vector<string> values(n + 1);
  for (int i = 0; i < n + 1; i++) {
    cin >> values[i];
    if (values[i] != "?")
      played++;
  }
  if (k == 0) {
    if (values[0] == "0" or (values[0] == "?" and played % 2 == 1))
      cout << "Yes";
    else
      cout << "No";
    return 0;
  }
  if (played == n + 1) {
    vector<ll> fv(n + 1);
    for (int i = 0; i < n + 1; i++)
      fv[i] = stoll(values[i]);
    vector<ll> mm1(n + 5, 1), mm2(n + 5, 1), mm3(n + 5, 1), mm4(n + 5, 1);
    for (int i = 1; i < n + 5; i++) {
      mm1[i] = (mm1[i - 1] * k) % MOD;
      mm2[i] = (mm2[i - 1] * k) % mods;
      mm3[i] = (mm3[i - 1] * k) % mods1;
      mm4[i] = (mm4[i - 1] * k) % mods2;
    }
    ll fv1 = 0, fv2 = 0, fv3 = 0, fv4 = 0;
    for (int i = 0; i < n + 1; i++) {
      fv1 = (fv1 + fv[i] * mm1[i] % MOD) % MOD;
      fv2 = (fv2 + fv[i] * mm2[i] % mods) % mods;
      fv3 = (fv3 + fv[i] * mm3[i] % mods1) % mods1;
      fv4 = (fv4 + fv[i] * mm4[i] % mods2) % mods2;
    }
    if (fv4 == 0 and fv1 == 0 and fv2 == 0 and fv3 == 0)
      cout << "Yes";
    else
      cout << "No";
    return 0;
  }
  if (played % 2 == (n + 1 - played) % 2)
    cout << "Yes";
  else
    cout << "No";
  return 0;
}
```