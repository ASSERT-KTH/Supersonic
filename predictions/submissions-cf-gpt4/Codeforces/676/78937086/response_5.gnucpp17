#include <iostream>
#include <vector>
#include <string>

constexpr int MOD = 1000000007;
constexpr int mods = 1000000009;
constexpr int mods1 = 37;
constexpr int mods2 = 715827883;

typedef long long ll;
typedef std::vector<ll> vl;

ll fastexp(ll x, ll y, ll p) {
  ll ans = 1;
  while (y) {
    if (y & 1) ans = (ans * x) % p;
    y >>= 1;
    x = (x * x) % p;
  }
  return ans;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);

  int n, k;
  std::cin >> n >> k;
  int played = 0;
  std::string p;
  std::vector<std::string> values(n + 1);
  for (auto& s : values) {
    std::cin >> s;
    if (!s.empty() && s != "?")
      ++played;
  }

  if (k == 0) {
    if (values[0] == "0" || (values[0] == "?" && played & 1))
      std::cout << "Yes";
    else
      std::cout << "No";
    return 0;
  }

  if (played == n + 1) {
    vl fv(n + 1);
    for (int i = 0; i <= n; ++i)
      fv[i] = std::stoi(values[i]);
    ll mm1 = 1, mm2 = 1, mm3 = 1, mm4 = 1;
    ll fv1 = 0, fv2 = 0, fv3 = 0, fv4 = 0;
    for (int i = 0; i <= n; ++i) {
      fv1 = (fv1 + fv[i] * mm1) % MOD;
      fv2 = (fv2 + fv[i] * mm2) % mods;
      fv3 = (fv3 + fv[i] * mm3) % mods1;
      fv4 = (fv4 + fv[i] * mm4) % mods2;
      mm1 = (mm1 * k) % MOD;
      mm2 = (mm2 * k) % mods;
      mm3 = (mm3 * k) % mods1;
      mm4 = (mm4 * k) % mods2;
    }
    if (!fv1 && !fv2 && !fv3 && !fv4)
      std::cout << "Yes";
    else
      std::cout << "No";
    return 0;
  }

  std::cout << ((played & 1) == ((n + 1 - played) & 1) ? "Yes" : "No");
  return 0;
}