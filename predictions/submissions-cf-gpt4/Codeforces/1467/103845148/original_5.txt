```c++
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> a;
int kitne(int ind) {
    int cnt = 0;
    for (int i = max(0, ind - 1); i <= min((int)a.size() - 1, ind + 1); ++i) {
        if (i > 0 && i < (int)a.size() - 1) {
            if ((a[i] > a[i - 1] && a[i] > a[i + 1]) ||
                (a[i] < a[i - 1] && a[i] < a[i + 1])) 
            {
                cnt++;
            }
        }
    }
    return cnt;
}

void hn_bhai() {
    int n;
    cin >> n;
    a.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> a[i];
    int tot = 0;
    for (int i = 1; i < n - 1; ++i) {
        if ((a[i] > a[i + 1] && a[i] > a[i - 1]) || 
            (a[i] < a[i - 1] && a[i] < a[i + 1])) 
        {
            tot++;
        }
    }
    int p = 0;
    for (int i = 1; i < n - 1; ++i) {
        int temp = kitne(i);
        int val = a[i];
        a[i] = a[i - 1];
        p = max(p, temp - kitne(i));
        a[i] = a[i + 1];
        p = max(p, temp - kitne(i));
        a[i] = val;
    }
    cout << tot - p << endl;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--)
        hn_bhai();
}
```