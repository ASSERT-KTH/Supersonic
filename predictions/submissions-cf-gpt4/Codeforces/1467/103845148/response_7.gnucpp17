#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> a;

int countValleys(int ind) {
    int cnt = 0;
    if ((a[ind] > a[ind + 1] && a[ind] > a[ind - 1]) ||
        (a[ind] < a[ind - 1] && a[ind] < a[ind + 1]))
        cnt++;
    return cnt;
}

void solve() {
    int n;
    cin >> n;
    a.resize(n);
    for (int i = 0; i < n; i++)
        cin >> a[i];

    int tot = 0;
    for (int i = 1; i < n - 1; i++) {
        tot += countValleys(i);
    }

    int res = tot;
    for (int i = 1; i < n - 1; i++) {
        int old = a[i];
        a[i] = a[i - 1];
        res = min(res, tot - countValleys(i - 1) - countValleys(i) - countValleys(i + 1) + countValleys(i + 1) + countValleys(i));
        a[i] = a[i + 1];
        res = min(res, tot - countValleys(i - 1) - countValleys(i) - countValleys(i + 1) + countValleys(i - 1) + countValleys(i));
        a[i] = old;
    }
    cout << res << endl;
}

int main() {
    int t;
    cin >> t;
    while (t--)
        solve();
}