#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

vector<int> a;

int countPeaksValleys(int ind) {
  int cnt = 0;
  for (int i = max(1, ind - 1); i <= min((int)a.size() - 2, ind + 1); i++) {
    if ((a[i] > a[i + 1] && a[i] > a[i - 1]) || (a[i] < a[i - 1] && a[i] < a[i + 1]))
        cnt++;
  }
  return cnt;
}

void process() {
  int n;
  cin >> n;
  a.resize(n);
  for (int i = 0; i < n; i++)
    cin >> a[i];

  int tot = countPeaksValleys(0);
  int maxDecrease = 0;
  for (int i = 1; i < n - 1; i++) {
    int original = a[i];
    int origCount = countPeaksValleys(i);

    a[i] = a[i - 1];
    maxDecrease = max(maxDecrease, origCount - countPeaksValleys(i));

    a[i] = a[i + 1];
    maxDecrease = max(maxDecrease, origCount - countPeaksValleys(i));

    a[i] = original;
  }
  cout << tot - maxDecrease << endl;
}

int main() {
  int t;
  cin >> t;
  while (t--)
    process();
}