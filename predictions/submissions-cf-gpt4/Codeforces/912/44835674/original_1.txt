```c++
#include <iostream>
#include <vector>
#include <algorithm>
#include <cassert>
#include <random>
#include <climits>

using namespace std;
using ll = long long;

const int maxN = 16;
const ll MAX = 1e18;
int p[maxN];
int n;

bool prime(int x) {
  for(int d = 2; d * d <= x; d++) {
    if(x % d == 0) {
      return false;
    }
  }
  return true;
}

void safe_mul(ll &a, int b) {
  if(a <= MAX / b)
    a *= b;
  else
    a = -1;
}

void gen_all(const vector<int> &src, vector<ll> &dest, ll cur = 1, int ind = 0) {
  if(ind == src.size()) {
    dest.push_back(cur);
    return;
  }
  while(cur != -1) {
    gen_all(src, dest, cur, ind + 1);
    safe_mul(cur, src[ind]);
  }
}

ll cnt(ll val, const vector<ll>& A, const vector<ll>& B) {
  ll res = 0;
  for(auto e : A) {
    if(e > val)
      break;
    res += upper_bound(B.begin(), B.end(), val / e) - B.begin();
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  cin >> n;
  for(int i = 0; i < n; ++i) {
    cin >> p[i];
  }

  vector<int> pA(p + n/2, p + n), pB(p, p + n/2);
  vector<ll> A, B;
  gen_all(pA, A);
  gen_all(pB, B);
  sort(A.begin(), A.end());
  sort(B.begin(), B.end());

  ll k;
  cin >> k;

  ll l = 0, r = 1e18;
  while(l + 1 < r) {
    ll m = (l + r) / 2;
    if(cnt(m, A, B) >= k) {
      r = m;
    } else {
      l = m;
    }
  }
  cout << r;

  return 0;
}
```