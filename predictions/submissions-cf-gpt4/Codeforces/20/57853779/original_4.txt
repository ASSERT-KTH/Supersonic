```c++
#include <bits/stdc++.h>
using namespace std;
#define int long long
const int INF = 1e18;
const int maxn = 100005;

int n, m;
vector<pair<int, int>> adj[maxn];
vector<bool> processed(maxn, false);
vector<int> distance(maxn, INF);
vector<int> p(maxn, -1);
priority_queue<pair<int, int>> q;

void dijkstra(int src) {
    distance[src] = 0;
    q.push({0, src});
    while (!q.empty()) {
        int a = q.top().second;
        q.pop();
        if (processed[a])
            continue;
        processed[a] = true;
        for (auto &u : adj[a]) {
            int b = u.first, w = u.second;
            if (distance[a] + w < distance[b]) {
                distance[b] = distance[a] + w;
                p[b] = a;
                q.push({-distance[b], b});
            }
        }
    }
}

int main() {
    ios::sync_with_stdio(false); cin.tie(NULL);
    cin >> n >> m;
    if (m == 0) {
        cout << "-1\n";
        return 0;
    }
    for (int i = 0; i < m; i++) {
        int a, b, w;
        cin >> a >> b >> w;
        adj[a].emplace_back(b, w);
        adj[b].emplace_back(a, w);
    }
    dijkstra(1);
    if (p[n] == -1) {
        cout << "-1\n";
        return 0;
    }
    vector<int> path;
    for (int v = n; v != 1; v = p[v]) {
        path.push_back(v);
    }
    path.push_back(1);
    reverse(path.begin(), path.end());
    for (auto i : path)
        cout << i << ' ';
    cout << '\n';
}
```