```cpp
#include <iostream>
#include <vector>
#include <queue>

using namespace std;

#define int long long
const int INF = 1e18;
const int maxn = 100005;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n, m;
  cin >> n >> m;
  if (m == 0) {
    cout << "-1\n";
    return 0;
  }

  vector<pair<int, int>> adj[maxn];
  for (int i = 0; i < m; i++) {
    int a, b, w;
    cin >> a >> b >> w;
    adj[a].emplace_back(b, w);
    adj[b].emplace_back(a, w);
  }

  vector<bool> processed(maxn, false);
  vector<int> distance(maxn, INF);
  vector<int> p(maxn, -1);
  distance[1] = 0;
  using pii = pair<int, int>;
  priority_queue<pii, vector<pii>, greater<pii>> q;
  q.push({0, 1});

  while (!q.empty()) {
    int a = q.top().second;
    q.pop();
    if (processed[a])
      continue;
    processed[a] = true;
    for (auto u : adj[a]) {
      int b = u.first, w = u.second;
      if (distance[a] + w < distance[b]) {
        distance[b] = distance[a] + w;
        p[b] = a;
        q.push({distance[b], b});
      }
    }
  }

  if (p[n] == -1) {
    cout << "-1\n";
    return 0;
  }

  vector<int> path;
  for (int v = n; v != 1; v = p[v]) {
    path.push_back(v);
  }
  path.push_back(1);
  for (auto it = path.rbegin(); it != path.rend(); ++it)
    cout << *it << ' ';
  cout << '\n';
}
```