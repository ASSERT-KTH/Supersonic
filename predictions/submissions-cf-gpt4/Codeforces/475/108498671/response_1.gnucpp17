#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
using namespace std;

vector<vector<int>> st(100100, vector<int>(20));
vector<int> get_log(200100);

inline int gcd(int a, int b) {
    while (b != 0) {
        a %= b;
        swap(a, b);
    }
    return a;
}

inline int get(int l, int r) {
  int sz = get_log[r - l];
  return gcd(st[l][sz], st[r - (1 << sz)][sz]);
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  get_log[1] = 0;
  for (int i = 2; i < 200000; i++) {
    get_log[i] = get_log[i / 2] + 1;
  }

  int n;
  cin >> n;
  vector<int> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }

  for (int i = 0; i < n; i++) st[i][0] = a[i];

  for (int j = 1; (1 << j) <= n; j++)
    for (int i = 0; i + (1 << j) <= n; i++)
      st[i][j] = gcd(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);

  map<int, long long> ans;
  for (int L = 0; L < n; L++) {
    int prev_ind = L;
    int now_ind = L;
    while (now_ind < n) {
      int now_gcd = get(L, now_ind + 1);
      int l = now_ind;
      int r = n;
      while (r - l > 1) {
        int m = (l + r) / 2;
        int x = get(L, m + 1);
        if (x < now_gcd)
          r = m;
        else
          l = m;
      }
      ans[now_gcd] += r - prev_ind;
      now_ind = r;
      prev_ind = r;
    }
  }

  int q;
  cin >> q;
  while (q--) {
    int x;
    cin >> x;
    cout << ans[x] << "\n";
  }

  return 0;
}