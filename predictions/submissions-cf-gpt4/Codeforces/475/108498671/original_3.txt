```c++
#include <iostream>
#include <vector>
#include <map>
using namespace std;

inline int gcd(int a, int b) {
  while(b) {
    a %= b;
    swap(a, b);
  }
  return a;
}

signed main() {
  ios_base::sync_with_stdio(false); 
  cin.tie(nullptr); 
  int n;
  cin >> n;
  vector<int> a(n);
  for(auto& e : a) {
    cin >> e;
  }
  vector<vector<int>> st(n, vector<int>(20));
  for (int i = 0; i < n; i++) {
    st[i][0] = a[i];
  }
  for (int j = 1; j < 20; j++) {
    for (int i = 0; i + (1 << j) <= n; i++) {
      st[i][j] = gcd(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);
    }
  }
  vector<int> log(n + 1);
  log[1] = 0;
  for (int i = 2; i <= n; i++) {
    log[i] = log[i / 2] + 1;
  }
  auto get = [&](int l, int r) {
    int j = log[r - l + 1];
    return gcd(st[l][j], st[r - (1 << j) + 1][j]);
  };
  map<int, long long> ans;
  for (int L = 0; L < n; L++) {
    int prev_ind = L;
    int now_ind = L;
    while (now_ind < n) {
      int now_gcd = get(L, now_ind);
      int l = now_ind;
      int r = n;
      while (r - l > 1) {
        int m = (l + r) >> 1;
        int x = get(L, m);
        if (x < now_gcd)
          r = m;
        else
          l = m;
      }
      ans[now_gcd] += r - prev_ind;
      now_ind = r;
      prev_ind = r;
    }
  }
  int q;
  cin >> q;
  while (q--) {
    int x;
    cin >> x;
    cout << ans[x] << "\n";
  }
  return 0;
}
```