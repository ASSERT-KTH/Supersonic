#include <cstdio>
#include <cstdlib>
#include <map>
using namespace std;
constexpr int MAX_N = 1e5+5, LOG_N = 20;

int gcd(int a, int b) {
    while(b) b ^= a ^= b ^= a %= b;
    return a;
}

int n, q, a[MAX_N], st[MAX_N][LOG_N], get_log[MAX_N << 1];
map<int, long long> ans;

inline int get(int l, int r) {
    int sz = get_log[r - l];
    return gcd(st[l][sz], st[r - (1 << sz)][sz]);
}

int main() {
    for (int i = 2; i < (MAX_N << 1); i++) {
        get_log[i] = get_log[i >> 1] + 1;
    }
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
        st[i][0] = a[i];
    }
    for (int nowP = 1; nowP < LOG_N; nowP++) {
        for (int i = 0; i + (1 << nowP) <= n; i++) {
            st[i][nowP] = gcd(st[i][nowP - 1], st[i + (1 << (nowP - 1))][nowP - 1]);
        }
    }
    for (int L = 0; L < n; L++) {
        int prev_ind = L;
        int now_ind = L;
        while (now_ind < n) {
            int now_gcd = get(L, now_ind + 1);
            int l = now_ind;
            int r = n;
            while (r - l > 1) {
                int m = (l + r) >> 1;
                int x = get(L, m + 1);
                if (x < now_gcd)
                    r = m;
                else
                    l = m;
            }
            ans[now_gcd] += r - prev_ind;
            now_ind = r;
            prev_ind = r;
        }
    }
    scanf("%d", &q);
    while (q--) {
        int x;
        scanf("%d", &x);
        printf("%lld\n", ans[x]);
    }
    return 0;
}