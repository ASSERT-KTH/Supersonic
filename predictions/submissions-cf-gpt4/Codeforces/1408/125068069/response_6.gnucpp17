#include <iostream>
#include <vector>
#include <cstdio>
using namespace std;

void optimizeProgram() {
  int n, ln;
  cin >> n >> ln;
  vector<int> flag(n);
  for (int i = 0; i < n; i++)
    cin >> flag[i];
  
  int v1 = 1, v2 = 1, l = 0, r = n - 1;
  long double p1 = 0, p2 = static_cast<long double>(ln), ans = 0;
  while (l < r) {
    long double left = (flag[l+1] - p1) / v1;
    long double right = (p2 - flag[r-1]) / v2;
    if (left < right) {
      ans += left;
      p1 += left * v1++;
      p2 -= left * v2;
    } else {
      ans += right;
      p2 -= right * v2++;
      p1 += right * v1;
    }
  }
  ans += (p2 - p1) / (v1 + v2);
  printf("%.14Lf\n", ans);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int t = 1;
  cin >> t;
  while (t--) {
    optimizeProgram();
  }
}
