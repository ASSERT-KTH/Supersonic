#include <bits/stdc++.h>
#define N 100005
using namespace std;

int n, t;
vector<int> tree[N];
int c[N], par[N], h[N], ve[N];
bool ans[N];

void built_h(int i, int k) {
    h[i] = k;
    for (const auto& j : tree[i]) {
        if (par[i] != j) {
            built_h(j, k + 1);
        }
    }
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n;
    for (int i = 1; i <= n; i++) {
        ve[i] = i;
        int x, y;
        cin >> x >> y;
        par[i] = x == -1 ? i : x;
        c[i] = y;
        if (x != -1) {
            tree[x].push_back(i);
        } else {
            t = i;
        }
    }
    built_h(t, 1);
    sort(ve + 1, ve + n + 1, [](int x, int y) { return h[x] > h[y]; });
    bool yes = false;
    for (int i = 1; i <= n; i++) {
        bool ok = c[ve[i]] == 0 || all_of(tree[ve[i]].begin(), tree[ve[i]].end(), [](int j) { return c[j] != 0; });
        if (!ok) {
            ans[ve[i]] = true;
            yes = true;
        }
    }
    if (!yes) {
        cout << -1;
    } else {
        for (int i = 1; i <= n; i++) {
            if (ans[i]) {
                cout << i << " ";
            }
        }
    }
}