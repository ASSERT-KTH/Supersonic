#include <iostream>
#include <algorithm>
#define MAX 524288

int A[MAX], dp[MAX][19];

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);

    int n, m;
    std::cin >> n >> m;

    for (int i = 0; i < MAX; ++i) A[i] = i;

    for (int i = 0; i < n; ++i) {
        int x, y;
        std::cin >> x >> y;
        A[x] = std::max(A[x], y);
    }

    dp[0][0] = A[0];
    for (int i = 1; i < MAX; ++i) {
        dp[i][0] = A[i] = std::max(A[i], A[i - 1]);
    }

    for (int j = 1; j < 19; ++j) {
        for (int i = 0; i < MAX; ++i) {
            dp[i][j] = dp[dp[i][j - 1]][j - 1];
        }
    }

    while (m--) {
        int l, r, nb = 0;
        std::cin >> l >> r;
        for (int j = 18; j >= 0; --j) {
            if (dp[l][j] < r) {
                nb += 1 << j;
                l = dp[l][j];
            }
        }
        if (dp[l][0] >= r)
            ++nb;
        else
            nb = -1;

        std::cout << nb << '\n';
    }

    return 0;
}