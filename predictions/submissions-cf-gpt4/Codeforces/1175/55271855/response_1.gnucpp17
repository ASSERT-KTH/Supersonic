#include <iostream>
#include <algorithm>
#define MAX 524288
int A[MAX];
int dp[MAX][20];
int main() {
    std::ios_base::sync_with_stdio(false); std::cin.tie(NULL);
    int n, m;
    std::cin >> n >> m;
    for (int i = 0; i < MAX; ++i) A[i] = i;
    for (int i = 0; i < n; ++i) {
        int x, y;
        std::cin >> x >> y;
        A[x] = std::max(A[x], y);
    }
    dp[0][0] = A[0];
    for (int i = 1; i < MAX; ++i) dp[i][0] = A[i] = std::max(A[i], A[i - 1]);
    for (int j = 1; j < 20; ++j) {
        for (int i = 0; i + (1 << j) <= MAX; ++i) {
            dp[i][j] = std::max(dp[i][j - 1], dp[i + (1 << (j - 1))][j - 1]);
        }
    }
    while (m--) {
        int l, r, nb = 0;
        std::cin >> l >> r;
        for (int j = 19; j >= 0; --j) {
            if (dp[l][j] < r) {
                nb += 1 << j;
                l += 1 << j;
            }
        }
        if (A[l] >= r) ++nb;
        else nb = -1;
        std::cout << nb << "\n";
    }
    return 0;
}