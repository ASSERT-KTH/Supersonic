#include <bits/stdc++.h>
using namespace std;
const int INF = 1000000007;
const int N = 81;
int n, m, p;
int c[N][N], f[N][2][N][N];
int main() {
  scanf("%d%d%d", &n, &p, &m);
  fill(&c[0][0], &c[0][0] + sizeof(c) / sizeof(int), INF);
  for (int i = 0, x, y, dis; i < m; ++i) {
    scanf("%d%d%d", &x, &y, &dis);
    c[x][y] = min(dis, c[x][y]);
  }
  fill(&f[0][0][0][0], &f[0][0][0][0] + sizeof(f) / sizeof(int), INF);
  for (int i = 1; i <= n; ++i) {
    f[1][0][i][i] = f[1][1][i][i] = 0;
  }
  for (int d = 1; d < n; ++d) {
    for (int i = 1; i + d <= n; ++i) {
      int j = i + d;
      for (int k = 2; k <= p; ++k) {
        for (int i2 = i + 1; i2 < j; ++i2) {
          f[k][0][i][j] = min({f[k][0][i][j], f[k-1][0][i2][j] + c[i][i2], f[k-1][1][i2][j] + c[i][j], f[k][0][i2][j] + c[i][i2], f[k][1][i2][j] + c[i][j]});
        }
        f[k][0][i][j] = min({f[k][0][i][j], f[k-1][0][j][j] + c[i][j], f[k][0][j][j] + c[i][j]});
        for (int j2 = j - 1; j2 > i; --j2) {
          f[k][1][i][j] = min({f[k][1][i][j], f[k-1][1][i][j2] + c[j][j2], f[k-1][0][i][j2] + c[j][i], f[k][1][i][j2] + c[j][j2], f[k][0][i][j2] + c[j][i]});
        }
        f[k][1][i][j] = min({f[k][1][i][j], f[k-1][1][i][i] + c[j][i], f[k][1][i][i] + c[j][i]});
      }
    }
  }
  int ans = *min_element(&f[p][0][0][0], &f[p][0][0][0] + sizeof(f[p][0]) / sizeof(int));
  printf("%d\n", ans == INF ? -1 : ans);
}