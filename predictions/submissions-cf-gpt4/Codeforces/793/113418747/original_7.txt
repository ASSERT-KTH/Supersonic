```C++
#include <bits/stdc++.h>
using namespace std;
const int INF = 1000000007;
const int N = 81;
int n, m, p;
int c[N][N], f[N][N][N][2];
int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cin >> n >> p >> m;
  fill(&c[0][0], &c[0][0] + sizeof(c) / sizeof(c[0][0]), INF);
  for (int i = 0, x, y, dis; i < m; ++i) {
    cin >> x >> y >> dis;
    c[x][y] = min(dis, c[x][y]);
  }
  fill(&f[0][0][0][0], &f[0][0][0][0] + sizeof(f) / sizeof(f[0][0][0][0]), INF);
  for (int i = 1; i <= n; ++i) {
    f[i][i][1][0] = f[i][i][1][1] = 0;
  }
  for (int d = 1; d < n; ++d) {
    for (int i = 1; i + d <= n; ++i) {
      int j = i + d;
      for (int k = 2; k <= p; ++k) {
        for (int i2 = i + 1; i2 < j; ++i2) {
          f[i][j][k][0] = min({f[i][j][k][0], f[i2][j][k - 1][0] + c[i][i2], f[i2][j][k - 1][1] + c[i][j], f[i2][j][k][0] + c[i][i2], f[i2][j][k][1] + c[i][j]});
        }
        f[i][j][k][0] = min({f[i][j][k][0], f[j][j][k - 1][0] + c[i][j], f[j][j][k][0] + c[i][j]});
        for (int j2 = j - 1; j2 > i; --j2) {
          f[i][j][k][1] = min({f[i][j][k][1], f[i][j2][k - 1][1] + c[j][j2], f[i][j2][k - 1][0] + c[j][i], f[i][j2][k][1] + c[j][j2], f[i][j2][k][0] + c[j][i]});
        }
        f[i][j][k][1] = min({f[i][j][k][1], f[i][i][k - 1][1] + c[j][i], f[i][i][k][1] + c[j][i]});
      }
    }
  }
  int ans = *min_element(&f[0][0][p][0], &f[0][0][p][0] + sizeof(f[0][0][p]) / sizeof(f[0][0][p][0]));
  cout << (ans == INF ? -1 : ans) << endl;
}
```