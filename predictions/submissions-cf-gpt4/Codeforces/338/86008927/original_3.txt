```cpp
#include <bits/stdc++.h>
using ll = long long;
constexpr int N = 10100;
constexpr ll LINF = (ll)2e18;

ll gcd(ll a, ll b) {
    return (b == 0) ? a : gcd(b, a % b);
}

ll lcm(ll a, ll b) {
    ll d = gcd(a, b);
    a /= d;
    if (a > LINF / b) return -1;
    return a * b;
}

ll gcdEx(ll a, ll b, ll &x, ll &y) {
    if (b == 0) {
        x = 1; y = 0;
        return a;
    }
    ll x1, y1;
    ll d = gcdEx(b, a % b, x1, y1);
    x = y1;
    y = x1 - y1 * (a / b);
    return d;
}

ll solve(ll r1, ll mod1, ll r2, ll mod2) {
    ll g = gcd(mod1, mod2);
    if (r1 % g != r2 % g) return -1;
    ll a = mod1 / g;
    ll b = (r2 - r1) / g;
    ll c = mod2 / g;
    ll x, y;
    gcdEx(a, c, x, y);
    x = (x % c + c) % c;
    ll k = (b * x) % c;
    ll ans = (r1 + k * mod1) % lcm(mod1, mod2);
    return ans;
}

ll a[N];

int main(void) {
    ll n, m;
    int k;
    scanf("%lld%lld%d", &n, &m, &k);
    for (int i = 0; i < k; ++i) scanf("%lld", &a[i]);
    ll l = a[0];
    for (int i = 1; i < k; ++i) {
        l = lcm(l, a[i]);
        if (l > n) {
            printf("NO\n");
            return 0;
        }
    }
    std::vector<std::pair<ll, ll>> eq(k);
    for (int i = 0; i < k; ++i) {
        eq[i].second = a[i];
        eq[i].first = ((-i) % a[i] + a[i]) % a[i];
    }
    ll r1 = eq[0].first;
    ll mod1 = eq[0].second;
    for (int i = 1; i < k; ++i) {
        ll curMod = lcm(mod1, eq[i].second);
        if (curMod == -1) {
            printf("NO\n");
            return 0;
        }
        ll curR = solve(r1, mod1, eq[i].first, eq[i].second);
        if (curR == -1) {
            printf("NO\n");
            return 0;
        }
        r1 = (curR % curMod + curMod) % curMod;
        mod1 = curMod;
    }
    if (r1 == 0) r1 += mod1;
    if (r1 + k - 1 > m) {
        printf("NO\n");
        return 0;
    }
    for (int i = 0; i < k; ++i) {
        if (gcd(l, r1 + i) != a[i]) {
            printf("NO\n");
            return 0;
        }
    }
    printf("YES\n");
    return 0;
}
```