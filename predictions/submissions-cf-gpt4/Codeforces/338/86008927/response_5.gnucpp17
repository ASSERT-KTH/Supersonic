#include <bits/stdc++.h>
#define fastIO std::ios_base::sync_with_stdio(false); std::cin.tie(0); std::cout.tie(0)
using ll = long long;
std::mt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());
const double PI = atan2(0.0, -1.0);
const ll LINF = (ll)2e18;
const int N = 10100;
inline ll gcd(ll a, ll b) {
  while(b) {
    a %= b;
    std::swap(a, b);
  }
  return a;
}
inline ll lcm(ll a, ll b) {
  return a / gcd(a, b) * b;
}
inline ll binmul(ll a, ll b, ll mod) {
  ll res = 0;
  while(b) {
    if(b & 1) {
      res = (res + a) % mod;
    }
    a = (a + a) % mod;
    b >>= 1;
  }
  return res;
}
ll solve(ll r1, ll mod1, ll r2, ll mod2) {
  ll g = gcd(mod1, mod2);
  if (r1 % g != r2 % g) {
    printf("NO\n");
    exit(0);
  }
  ll a = mod1 / g;
  ll b = (r2 - r1) / g;
  ll c = mod2 / g;
  ll x, y;
  ll d = gcdEx(a, c, x, y);
  x = (x % c + c) % c;
  ll k = binmul(b, x, c);
  ll ans = (r1 + k * mod1) % lcm(mod1, mod2);
  return ans;
}
ll a[N];
void run() {
  ll n, m;
  int k;
  scanf("%lld%lld%d", &n, &m, &k);
  for (int i = 0; i < k; ++i) {
    scanf("%lld", &a[i]);
  }
  ll l = a[0];
  for (int i = 1; i < k; ++i) {
    l = lcm(l, a[i]);
  }
  if (l > n) {
    printf("NO\n");
    return;
  }
  std::vector<std::pair<ll, ll>> eq(k);
  for (int i = 0; i < k; ++i) {
    eq[i].second = a[i];
    eq[i].first = ((-i) % a[i] + a[i]) % a[i];
  }
  ll r1 = eq[0].first;
  ll mod1 = eq[0].second;
  for (int i = 1; i < k; ++i) {
    ll curMod = lcm(mod1, eq[i].second);
    ll curR = solve(r1, mod1, eq[i].first, eq[i].second);
    r1 = (curR % curMod + curMod) % curMod;
    mod1 = curMod;
  }
  if (r1 == 0) {
    r1 += mod1;
  }
  if (r1 + k - 1 > m) {
    printf("NO\n");
    return;
  }
  for (int i = 0; i < k; ++i) {
    if (gcd(l, r1 + i) != a[i]) {
      printf("NO\n");
      return;
    }
  }
  printf("YES\n");
}
int main(void) {
  run();
  return 0;
}