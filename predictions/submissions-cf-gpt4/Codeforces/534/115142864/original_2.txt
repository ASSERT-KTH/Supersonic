```c++
#include <bits/stdc++.h>
using namespace std;
const int N = 1234;
long long dp[N][N];
int v1, v2, t, d;
long long f(int tt, int speed) {
  if (tt == t) {
    return speed == v2 ? v2 : -1e10;
  }
  if (dp[tt][speed] != -1) {
    return dp[tt][speed];
  }
  long long x = -1e9;
  int min_val = max(0, v2 - (t - tt - 1) * d); // minimum speed required
  int max_val = v1 + (tt - 1) * d; // maximum possible speed
  for (int i = min_val; i <= min(speed + d, max_val); ++i) {
    x = max(x, f(tt + 1, i));
  }
  return dp[tt][speed] = speed + x;
}
int main() {
  scanf("%d %d %d %d", &v1, &v2, &t, &d);
  memset(dp, -1, sizeof dp);
  printf("%lld\n", f(1, v1));
  return 0;
}
```