```cpp
#include <cstdio>
#include <algorithm>
const int N = 1234;
long long dp[N][N];
int v1, v2, t, d;

long long f(int tt, int speed) {
  if (tt == t) return speed == v2 ? v2 : -1e10;
  if (dp[tt][speed] != -1) return dp[tt][speed];

  long long x = -1e9;
  int start = std::max(0, speed - d);
  int end = speed + d;

  for (int i = start; i <= end; ++i) {
    if(i < N) x = std::max(x, f(tt + 1, i));
  }

  return dp[tt][speed] = speed + x;
}

int main() {
  std::scanf("%d %d %d %d", &v1, &v2, &t, &d);
  std::fill(&dp[0][0], &dp[0][0] + sizeof(dp) / sizeof(long long), -1);
  std::printf("%lld\n", f(1, v1));
  return 0;
}
```
