```c++
#include <cstdio>
#include <cstring>
#include <algorithm>

const int MAX = 1234;
long long dp[MAX][MAX];
int v1, v2, t, d;

long long compute(int tt, int speed) {
  if (tt == t) {
    return speed == v2 ? v2 : LLONG_MIN;
  }
  if (dp[tt][speed] != -1) {
    return dp[tt][speed];
  }
  long long x = LLONG_MIN;
  int minSpd = std::max(0, speed - d);
  int maxSpd = speed + d;
  for (int i = minSpd; i <= maxSpd; ++i) {
    x = std::max(x, compute(tt + 1, i));
  }
  return dp[tt][speed] = speed + x;
}

int main() {
  scanf("%d %d %d %d", &v1, &v2, &t, &d);
  std::fill(&dp[0][0], &dp[MAX - 1][MAX], -1);
  printf("%lld\n", compute(1, v1));
  return 0;
}
```