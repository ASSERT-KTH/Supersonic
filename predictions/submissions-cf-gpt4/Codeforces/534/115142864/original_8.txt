```cpp
#include <iostream>
#include <vector>
#include <algorithm>

const long long INF = 1e18;

int main() {
    int v1, v2, t, d;
    std::cin >> v1 >> v2 >> t >> d;

    std::vector<std::vector<long long>> dp(t+1, std::vector<long long>(t*d+1, -INF));
    dp[1][v1] = v1;

    for (int i = 2; i <= t; ++i) {
        for (int j = 0; j <= t*d; ++j) {
            for (int k = std::max(0, j-d); k <= j+d; ++k) {
                dp[i][j] = std::max(dp[i][j], dp[i-1][k] + j);
            }
        }
    }

    long long res = -INF;
    for (int i = v2-d*(t-1); i <= v2+d*(t-1); ++i) {
        res = std::max(res, dp[t][i]);
    }

    std::cout << res << std::endl;
    return 0;
}
```