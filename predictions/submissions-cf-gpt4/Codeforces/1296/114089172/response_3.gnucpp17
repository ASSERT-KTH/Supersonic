#include <iostream>
#include <unordered_map>
#include <vector>

using namespace std;
typedef long long ll;

void run_case() {
  int n;
  cin >> n;
  string s;
  cin >> s;
  unordered_map<ll, int> mp;
  ll sum = 0;
  mp[0] = -1;
  int l = -1, r = -1, ans = n + 1;
  for (int i = 0; i < n; i++) {
    switch(s[i]) {
      case 'L': sum -= 1; break;
      case 'R': sum += 1; break;
      case 'U': sum += 1e5; break;
      case 'D': sum -= 1e5; break;
    }
    if (mp.count(sum)) {
      int left = mp[sum] + 1;
      int right = i + 1;
      if ((right - left) < ans) {
        ans = right - left;
        l = left;
        r = right - 1;
      }
    }
    mp[sum] = i;
  }
  if (ans == n + 1) {
    cout << -1 << '\n';
  } else
    cout << l + 1 << " " << r + 1 << '\n';
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  int tc = 1;
  cin >> tc;
  while (tc--)
    run_case();
}