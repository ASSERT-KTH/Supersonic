```C++
#include <iostream>
#include <vector>
#include <limits>
#include <unordered_map>
using namespace std;

void solve() {
  int n;
  cin >> n;

  unordered_map<int, int> last_occurrence;
  int min_distance = numeric_limits<int>::max();

  for (int i = 0; i < n; ++i) {
    int val;
    cin >> val;

    if (last_occurrence.count(val)) {
      min_distance = min(min_distance, i - last_occurrence[val] + 1);
    }

    last_occurrence[val] = i;
  }

  cout << (min_distance == numeric_limits<int>::max() ? -1 : min_distance) << endl;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int t;
  cin >> t;

  while (t--) {
    solve();
  }

  return 0;
}
```