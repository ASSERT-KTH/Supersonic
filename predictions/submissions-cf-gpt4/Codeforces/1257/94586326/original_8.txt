```cpp
#include <vector>
#include <map>
#include <limits>
#include <iostream>

typedef long long ll;

void solve() {
  ll n;
  std::cin >> n;
  std::map<ll, std::vector<ll>> m;

  for (ll i = 0; i < n; ++i) {
    ll val;
    std::cin >> val;
    m[val].push_back(i + 1);
  }

  ll minres = std::numeric_limits<ll>::max();
  for (const auto& x : m) {
    const std::vector<ll>& v = x.second;
    if (v.size() > 1) {
      for (size_t i = 1; i < v.size(); ++i) {
        minres = std::min(minres, v[i] - v[i - 1] + 1);
      }
    }
  }

  std::cout << ((minres == std::numeric_limits<ll>::max()) ? -1 : minres) << '\n';
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);

  int t;
  std::cin >> t;
  while (t--) {
    solve();
  }
}
```