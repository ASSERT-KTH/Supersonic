#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pb push_back
#define ppb pop_back
#define mp make_pair
using pi = pair<int, int>;
using vi = vector<int>;
using vvi = vector<vector<int>>;
#define ff first
#define ss second
#define all(x) x.begin(), x.end()
#define sz(x) (int)(x).size()
const int NUM = 1000030;
const int N = 1000000;
vector<int> lp, sieve;
vector<int> pr;
void primefactor();
void test();
signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  primefactor();
  int t = 1;
  while (t--)
    test();
  return 0;
}
void primefactor() {
  lp.resize(N + 1, 0);
  for (int i = 2; i <= N; ++i) {
    if (lp[i] == 0) {
      lp[i] = i;
      pr.push_back(i);
    }
    for (int j = 0; j < (int)pr.size() && pr[j] <= lp[i] && i * pr[j] <= N; ++j)
      lp[i * pr[j]] = pr[j];
  }
}
void test() {
  int n, m;
  cin >> n >> m;
  if (n == 2) {
    cout << 2 << " " << 2 << "\n" << 1 << " " << 2 << " " << 2 << "\n";
    return;
  }
  int total_sum = *lower_bound(all(pr), n);
  cout << 2 << " " << total_sum << "\n";
  int sum = 2 + (n - 3) + max<int>(total_sum - n + 1, 2);
  for (int i = 2; i < n; i++) {
    cout << 1 << " " << i << " " << 1 << "\n";
  }
  cout << 1 << " " << n << " " << max<int>(total_sum - n + 1, 2) << "\n";
  for (int i = 2; m > n - 1 && i <= n; i++) {
    for (int j = i + 1; m > n - 1 && j <= n; j++) {
      cout << i << " " << j << " " << max<int>(total_sum - n + 1, 2) + 1 << "\n";
      m--;
    }
  }
}