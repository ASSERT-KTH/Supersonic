#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int n_sets;
  cin >> n_sets;
  vector<int> a;
  while (n_sets--) {
    int n, W;
    cin >> n >> W;
    a.resize(n);
    for (int i = 0; i < n; i++) cin >> a[i];
    sort(a.begin(), a.end(), greater<int>());
    multiset<int> weights;
    weights.insert(W);
    for (int i : a) {
      auto it = weights.lower_bound(i);
      if (it != weights.end()) {
        int left = *it - i;
        weights.erase(it);
        if (left > 0) weights.insert(left);
      } else {
        weights.insert(W - i);
      }
    }
    cout << weights.size() << '\n';
  }
  return 0;
}