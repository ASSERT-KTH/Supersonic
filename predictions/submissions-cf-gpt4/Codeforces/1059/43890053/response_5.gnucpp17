#include <cstdio>
#include <cmath>
#include <algorithm>
#define MAXN 100005
#define INF 1e18

double x[MAXN], y[MAXN];
int n;

inline bool isOk(long double k) {
  long double l = -INF, r = INF;
  for (int i = 0; i < n; ++i) {
    if (y[i] > k * 2) return false;
    double tmp = sqrt(k * k - (k - y[i]) * (k - y[i]));
    l = std::max(l, (long double)(x[i] - tmp));
    r = std::min(r, (long double)(x[i] + tmp));
  }
  return l < r;
}

int main() {
  scanf("%d", &n);
  for (int i = 0; i < n; ++i) {
    scanf("%lf %lf", &x[i], &y[i]);
    if (y[i] < 0) y[i] = -y[i];
  }
  for (int i = 0; i < n; ++i) {
    if (y[i] * y[n - 1] < 0) {
      printf("-1\n");
      return 0;
    }
  }
  long double l = 0, r = INF;
  for (int i = 0; i < 100; ++i) {
    long double mid = (l + r) / 2.0;
    if (isOk(mid)) r = mid;
    else l = mid;
  }
  printf("%.10Lf\n", l);
  return 0;
}