```cpp
#include <iostream>
#include <vector>
#include <queue>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> pl;

const int maxn = 100005;
vector<pl> adj[maxn];

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  ll n;
  cin >> n;
  ll sum = 0;
  for (ll i = 0; i < n - 1; i++) {
    ll x, y, w;
    cin >> x >> y >> w;
    adj[x - 1].emplace_back(y - 1, w);
    adj[y - 1].emplace_back(x - 1, w);
    sum += w;
  }
  queue<pl> q;
  vector<bool> seen(n+1, false);
  q.emplace(0, 0);
  seen[0] = true;
  ll big = -1;
  while (!q.empty()) {
    pl s = q.front();
    q.pop();
    big = max(big, s.second);
    for (auto &t : adj[s.first]) {
      if (!seen[t.first]) {
        seen[t.first] = true;
        q.emplace(t.first, s.second + t.second);
      }
    }
  }
  cout << (2 * sum) - big << endl;
  return 0;
}
```