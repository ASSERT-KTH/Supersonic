#include <iostream>
#include <vector>
#include <queue>
#define int long long
const int maxn = 100005;
std::vector<std::pair<int, int>> adj[maxn];
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(NULL);
  int n;
  std::cin >> n;
  int sum = 0;
  for (int i = 0; i < n - 1; i++) {
    int x, y, w;
    std::cin >> x >> y >> w;
    adj[x - 1].emplace_back(y - 1, w);
    adj[y - 1].emplace_back(x - 1, w);
    sum += w;
  }
  std::queue<std::pair<int, int>> q;
  std::vector<int> seen(n + 1, 0);
  q.emplace(0, 0);
  seen[0] = 1;
  int big = -1;
  while (!q.empty()) {
    std::pair<int, int> s = q.front();
    q.pop();
    big = std::max(big, s.second);
    for (const auto &t : adj[s.first]) {
      if (!seen[t.first]) {
        seen[t.first] = 1;
        q.emplace(t.first, s.second + t.second);
      }
    }
  }
  std::cout << (2 * sum) - big << std::endl;
  return 0;
}