```cpp
#include <iostream>
#include <vector>
#include <queue>
using namespace std;
typedef long long ll;
const int maxn = 100005;
vector<pair<int, ll>> adj[maxn];
int main() {
  ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
  int n;
  cin >> n;
  ll sum = 0;
  for (int i = 0; i < n - 1; i++) {
    int x, y;
    ll w;
    cin >> x >> y >> w;
    adj[x - 1].emplace_back(y - 1, w);
    adj[y - 1].emplace_back(x - 1, w);
    sum += w;
  }
  queue<pair<int, ll>> q;
  vector<bool> seen(n + 1, false);
  q.emplace(0, 0);
  seen[0] = true;
  ll big = -1;
  while (!q.empty()) {
    pair<int, ll> s = q.front();
    q.pop();
    big = max(big, s.second);
    for (const auto& t : adj[s.first]) {
      if (!seen[t.first]) {
        seen[t.first] = true;
        q.emplace(t.first, s.second + t.second);
      }
    }
  }
  cout << (2 * sum) - big << '\n';
}
```