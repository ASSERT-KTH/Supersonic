#include <vector>
#include <queue>
#include <algorithm>
#include <iostream>

const int MAXN = 100005;
std::vector<std::pair<int, int>> adj[MAXN];

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(0);

    int n;
    std::cin >> n;
    int sum = 0;
    for (int i = 0; i < n - 1; ++i) {
        int x, y, w;
        std::cin >> x >> y >> w;
        --x; --y;
        adj[x].emplace_back(y, w);
        adj[y].emplace_back(x, w);
        sum += w;
    }

    std::queue<std::pair<int, int>> q;
    std::vector<bool> seen(n, false);
    q.emplace(0, 0);
    seen[0] = true;
    int big = 0;
    while (!q.empty()) {
        auto [v, w] = q.front();
        q.pop();
        big = std::max(big, w);
        for (auto [u, wt] : adj[v]) {
            if (!seen[u]) {
                seen[u] = true;
                q.emplace(u, w + wt);
            }
        }
    }
    std::cout << (2 * sum) - big << '\n';
}