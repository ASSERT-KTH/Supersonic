#include <vector>
#include <queue>
#include <iostream>
using namespace std;
typedef long long ll;
const int maxn = 100005;
vector<pair<int, ll>> adj[maxn];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;
    ll sum = 0;
    for (int i = 0; i < n - 1; i++) {
        int x, y;
        ll w;
        cin >> x >> y >> w;
        --x; --y;
        adj[x].emplace_back(y, w);
        adj[y].emplace_back(x, w);
        sum += w;
    }
    queue<pair<int, ll>> q;
    vector<bool> seen(n + 1, false);
    q.emplace(0, 0);
    seen[0] = true;
    ll big = -1;
    while (!q.empty()) {
        pair<int, ll> s = q.front();
        q.pop();
        big = max(big, s.second);
        for (auto& t : adj[s.first]) {
            if (!seen[t.first]) {
                seen[t.first] = true;
                q.emplace(t.first, s.second + t.second);
            }
        }
    }
    cout << (2 * sum) - big << '\n';
}