#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define rep(i, n) for (long long(i) = 0; (i) < (n); ++(i))
#define ref(i, a, b) for (long long(i) = (a); (i) <= (b); ++(i))
#define endl '\n'
#define st first
#define nd second
#define pb push_back
#define mp make_pair
const int mx = 2e6 + 5;
int inf = 2e9;
int gcd(int a, int b) {
  while (b != 0) {
    int t = b;
    b = a % b;
    a = t;
  }
  return a;
}
int dp[200000][2];
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  ll n;
  cin >> n;
  vector<int> a(n + 24);
  rep(i, n) { cin >> a[i + 1]; }
  int faust = a[1];
  ref(i, 2, n) { faust = gcd(faust, a[i]); }
  a[n + 1] = 2;
  fill_n(&dp[0][0], 200000 * 2, inf);
  dp[0][0] = 0;
  if (faust > 1) {
    cout << "YES" << endl;
    cout << 0 << endl;
    return 0;
  }
  ref(i, 1, n) {
    bool ai = a[i] % 2;
    bool ai1 = a[i + 1] % 2;
    int dp_1[2] = {dp[i - 1][0], dp[i - 1][1]};
    if (ai && ai1) {
      dp[i][0] = dp_1[1];
      dp[i][1] = dp_1[0] + 1;
    } else if (ai && !ai1) {
      dp[i][0] = dp_1[1];
      dp[i][1] = dp_1[0] + 2;
    } else if (!ai && ai1) {
      dp[i][0] = min(dp_1[0], dp_1[1]);
      dp[i][1] = min(dp_1[1] + 2, dp_1[0] + 2);
    } else if (!ai && !ai1) {
      dp[i][0] = min(dp_1[0], dp_1[1]);
      dp[i][1] = dp[i][0];
    }
  }
  cout << "YES" << endl;
  cout << min(dp[n][0], dp[n][1]) << endl;
}