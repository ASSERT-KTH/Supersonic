```C++
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define rep(i, n) for (long long(i) = 0; (i) < (n); ++(i))
#define ref(i, a, b) for (long long(i) = (a); (i) <= (b); ++(i))
#define endl '\n'
#define st first
#define nd second
#define pb push_back
#define mp make_pair
const int mx = 2e6 + 5;
int inf = 2e9;
int gcd(int a, int b) {
  if (b == 0)
    return a;
  return gcd(b, a % b);
}
int dp[200000][2];
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  ll n;
  cin >> n;
  vector<int> a(n + 24);
  rep(i, n) { cin >> a[i + 1]; }
  int faust = a[1];
  ref(i, 2, n) { faust = gcd(faust, a[i]); }
  a[n + 1] = 2;
  dp[0][1] = inf;
  dp[0][0] = 0;
  for (int i = 1; i <= n + 2; ++i) {
    rep(j, 2) dp[i][j] = inf;
  }
  if (faust > 1) {
    cout << "YES" << endl;
    cout << 0 << endl;
    return 0;
  }
  ref(i, 1, n) {
    int oddPair = a[i] % 2 && a[i + 1] % 2;
    int oddEvenPair = a[i] % 2 && a[i + 1] % 2 == 0;
    int evenOddPair = a[i] % 2 == 0 && a[i + 1] % 2;
    int evenPair = a[i] % 2 == 0 && a[i + 1] % 2 == 0;
    dp[i][0] = min(dp[i - 1][0], dp[i - 1][1]);
    dp[i][1] = dp[i - 1][0] + 2;
    if (oddPair || oddEvenPair) {
      dp[i][1] = dp[i - 1][0] + 1;
    }
    if (evenPair) {
      dp[i][1] = dp[i][0];
    }
  }
  cout << "YES" << endl;
  cout << min(dp[n][0], dp[n][1]) << endl;
}
```