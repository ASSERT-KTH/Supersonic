#include <iostream>
#include <vector>
#include <algorithm>
#define ll long long
#define rep(i, n) for (long long(i) = 0; (i) < (n); ++(i))
#define ref(i, a, b) for (long long(i) = (a); (i) <= (b); ++(i))
#define endl '\n'
const int mx = 2e6 + 5;
int inf = 2e9;

int gcd(int a, int b) {
    while(b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

int dp[200000][2];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    ll n;
    cin >> n;
    vector<int> a(n + 24);
    rep(i, n) { cin >> a[i + 1]; }
    int faust = gcd(a[1], a[2]);
    ref(i, 3, n) { faust = gcd(faust, a[i]); }
    a[n + 1] = 2;
    dp[0][1] = inf;
    dp[0][0] = 0;
    fill(dp[1], dp[n+3], inf);
    if (faust > 1) {
        cout << "YES" << endl;
        cout << 0 << endl;
        return 0;
    }
    ref(i, 1, n) {
        if (a[i] % 2 and a[i + 1] % 2) {
            dp[i][0] = min(dp[i][0], dp[i - 1][1]);
            dp[i][1] = min(dp[i][1], dp[i - 1][0] + 1);
        } else if (a[i] % 2 and a[i + 1] % 2 == 0) {
            dp[i][0] = min(dp[i][0], dp[i - 1][1]);
            dp[i][1] = min(dp[i][1], dp[i - 1][0] + 2);
        } else if (a[i] % 2 == 0 and a[i + 1] % 2) {
            dp[i][0] = min({dp[i][0], dp[i - 1][0], dp[i - 1][1]});
            dp[i][1] = min({dp[i][1], dp[i - 1][1] + 2, dp[i - 1][0] + 2});
        } else if (a[i] % 2 == 0 and a[i + 1] % 2 == 0) {
            dp[i][0] = min({dp[i][0], dp[i - 1][0], dp[i - 1][1]});
            dp[i][1] = dp[i][0];
        }
    }
    cout << "YES" << endl;
    cout << min(dp[n][0], dp[n][1]) << endl;
}