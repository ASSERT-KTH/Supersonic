```cpp
#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define ref(i, a, b) for (ll i = (a); i <= (b); ++i)
#define st first
#define nd second
#define pb push_back
#define mp make_pair
const int mx = 2e6 + 5;
int inf = 2e9;

inline int gcd(int a, int b) {
  while(b) {
    a %= b;
    std::swap(a, b);
  }
  return a;
}

int dp[200000][2];

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(0);
  ll n;
  std::cin >> n;
  std::vector<int> a(n + 24);
  rep(i, n) { std::cin >> a[i + 1]; }
  int faust = gcd(a[1], a[2]);
  ref(i, 3, n) { faust = gcd(faust, a[i]); }
  a[n + 1] = 2;
  dp[0][1] = inf;
  dp[0][0] = 0;
  for (int i = 1; i <= n + 2; ++i) {
    rep(j, 2) dp[i][j] = inf;
  }
  if (faust > 1) {
    std::cout << "YES\n0\n";
    return 0;
  }
  ref(i, 1, n) {
    if (a[i] & 1 && a[i + 1] & 1) {
      dp[i][0] = std::min(dp[i][0], dp[i - 1][1]);
      dp[i][1] = std::min(dp[i][1], dp[i - 1][0] + 1);
    } else {
      dp[i][0] = std::min({dp[i][0], dp[i - 1][1], dp[i - 1][0]});
      dp[i][1] = std::min({dp[i][1], dp[i - 1][0] + 2, dp[i - 1][1] + 2});
    }
  }
  std::cout << "YES\n" << std::min(dp[n][0], dp[n][1]) << '\n';
}
```