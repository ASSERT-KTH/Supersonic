#include <bits/stdc++.h>
#define MAX 200005
#define INF 2e9
using namespace std;

int dp[MAX][2];

int gcd(int a, int b) {
  while (b != 0) {
    a %= b;
    swap(a, b);
  }
  return a;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);

  int n;
  cin >> n;
  vector<int> a(n + 2);
  for (int i = 1; i <= n; ++i) cin >> a[i];

  if (n == 1) {
    cout << "YES\n0\n";
    return 0;
  }

  int faust = gcd(a[1], a[2]);
  for (int i = 3; i <= n; ++i) faust = gcd(faust, a[i]);

  if (faust > 1) {
    cout << "YES\n0\n";
    return 0;
  }

  dp[0][0] = 0;
  dp[0][1] = INF;
  for (int i = 1; i <= n + 1; ++i) {
    dp[i][0] = dp[i][1] = INF;
    if (a[i] % 2 && a[i + 1] % 2) {
      dp[i][0] = min(dp[i][0], dp[i - 1][1]);
      dp[i][1] = min(dp[i][1], dp[i - 1][0] + 1);
    }
    if (a[i] % 2 && a[i + 1] % 2 == 0) {
      dp[i][0] = min(dp[i][0], dp[i - 1][1]);
      dp[i][1] = min(dp[i][1], dp[i - 1][0] + 2);
    }
    if (a[i] % 2 == 0 && a[i + 1] % 2) {
      dp[i][0] = min({dp[i][0], dp[i - 1][0], dp[i - 1][1]});
      dp[i][1] = min(dp[i][1], min(dp[i - 1][0], dp[i - 1][1]) + 2);
    }
    if (a[i] % 2 == 0 && a[i + 1] % 2 == 0) {
      dp[i][0] = min({dp[i][0], dp[i - 1][0], dp[i - 1][1]});
      dp[i][1] = dp[i][0];
    }
  }

  cout << "YES\n" << min(dp[n][0], dp[n][1]) << "\n";
  return 0;
}