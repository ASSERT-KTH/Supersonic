```
#include <unordered_map>
#include <string>
#include <iostream>
#include <vector>
using namespace std;
typedef long long ll;
const int base = 257;
const int mod = 1e9 + 7;
unordered_map<ll, bool> st;
ll f[1000001];
void init() {
  f[0] = 1;
  for (int i = 1; i < 1000001; i++)
    f[i] = (f[i - 1] * base) % mod;
}
ll get_hash(const string &s) {
  ll val = 0;
  for (char c : s) {
    val = (val * base + c) % mod;
  }
  return val;
}
bool check(const string &t) {
  ll val = get_hash(t);
  for (int i = 0; i < t.size(); i++) {
    ll temp_val = (val - f[t.size() - i - 1] * t[i] % mod + mod) % mod;
    for (int j = 'a'; j <= 'c'; j++) {
      if (j != t[i]) {
        if (st.find((temp_val + f[t.size() - i - 1] * j % mod) % mod) != st.end())
          return true;
      }
    }
  }
  return false;
}
int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  init();
  int n, m;
  cin >> n >> m;
  for (int i = 0; i < n; i++) {
    string s;
    cin >> s;
    st[get_hash(s)] = true;
  }
  for (int i = 0; i < m; i++) {
    string t;
    cin >> t;
    cout << (check(t) ? "YES" : "NO") << "\n";
  }
  return 0;
}
```