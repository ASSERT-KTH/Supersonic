```c++
#include <iostream>
#include <unordered_set>
#include <vector>
#include <string>

using namespace std;
typedef long long ll;
const int base = 257;
const int mod = 1e9 + 7;
const int N = 1e6;

unordered_set<ll> st;
vector<ll> f(N);

void init() {
    f[0] = 1;
    for (int i = 1; i < N; ++i)
        f[i] = f[i-1] * base % mod;
}

ll get_hash(const string& s) {
    ll val = 0;
    for (char c : s) {
        val = (val * base + c) % mod;
    }
    return val;
}

bool check(const string& t) {
    ll val = get_hash(t);
    int tSize = t.size();
    for (int i = 0; i < tSize; ++i) {
        for (char j = 'a'; j <= 'c'; ++j) {
            if (j != t[i]) {
                ll newVal = (((j - t[i]) * f[tSize - i - 1] + val) % mod + mod) % mod;
                if (st.find(newVal) != st.end()) {
                    return true;
                }
            }
        }
    }
    return false;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    init();
    int n, m;
    cin >> n >> m;
    st.reserve(n);
    for (int i = 0; i < n; ++i) {
        string s;
        cin >> s;
        st.insert(get_hash(s));
    }
    for (int i = 0; i < m; ++i) {
        string t;
        cin >> t;
        cout << (check(t) ? "YES\n" : "NO\n");
    }
    return 0;
}
```