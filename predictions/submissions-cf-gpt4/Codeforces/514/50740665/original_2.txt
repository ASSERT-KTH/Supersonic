```cpp
#include <vector>
#include <iostream>
#include <unordered_set>

typedef long long ll;
const int base = 257;
const int mod = 1e9 + 7;
const int N = 1e6;
std::unordered_set<ll> st;
std::vector<ll> power_base(N);

void init() {
  power_base[0] = 1;
  for (int i = 1; i < N; i++)
    power_base[i] = power_base[i - 1] * base % mod;
}

int get_hash(const std::string& s) {
  ll val = 0;
  for (char c : s) {
    val = (val * base + c) % mod;
  }
  return val;
}

bool check(const std::string& t) {
  ll val = get_hash(t);
  for (int i = 0; i < t.size(); i++) {
    for (int j = 'a'; j <= 'c'; j++) {
      if (j != t[i]) {
        ll new_val = ((j - t[i]) * power_base[t.size() - i - 1] + val) % mod;
        new_val = (new_val + mod) % mod;
        if (st.find(new_val) != st.end())
          return true;
      }
    }
  }
  return false;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  
  init();
  int n, m;
  std::cin >> n >> m;
  for (int i = 0; i < n; i++) {
    std::string s;
    std::cin >> s;
    st.insert(get_hash(s));
  }
  for (int i = 0; i < m; i++) {
    std::string t;
    std::cin >> t;
    std::cout << (check(t) ? "YES" : "NO") << "\n";
  }
  return 0;
}
```