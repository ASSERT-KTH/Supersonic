#include <iostream>
#include <unordered_set>
#include <vector>

using namespace std;
using ll = long long;

constexpr int base = 257;
constexpr ll mod = 1e9 + 7;
constexpr int N = 1e6;

vector<ll> f(N);
unordered_set<ll> st;

void init() {
  f[0] = 1;
  for (int i = 1; i < N; ++i)
    f[i] = f[i - 1] * base % mod;
}

ll get_hash(const string& s) {
  ll val = 0;
  for (char ch : s)
    val = (val * base + ch) % mod;
  return val;
}

bool check(const string& t) {
  ll val = get_hash(t);
  for (size_t i = 0; i < t.size(); ++i) {
    ll fi = f[t.size() - i - 1];
    for (int j = 'a'; j <= 'c'; ++j) {
      if (j != t[i] && st.count((((j - t[i]) * fi + val) % mod + mod) % mod))
        return true;
    }
  }
  return false;
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  init();

  int n, m;
  cin >> n >> m;

  for (int i = 0; i < n; ++i) {
    string s;
    cin >> s;
    st.insert(get_hash(s));
  }

  for (int i = 0; i < m; ++i) {
    string t;
    cin >> t;
    cout << (check(t) ? "YES\n" : "NO\n");
  }

  return 0;
}