#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;

    vector<long long> v(n + 1), prefixSum(n + 1, 0);
    unordered_map<long long, long long> lastIndex;
    lastIndex[0] = 0;

    long long ans = static_cast<long long>(n) * (n + 1) / 2;
    long long mx = 0;

    for (int i = 1; i <= n; i++) {
        cin >> v[i];
        prefixSum[i] = prefixSum[i - 1] + v[i];

        if (lastIndex.count(prefixSum[i])) {
            long long l = max(0LL, lastIndex[prefixSum[i]] - mx);
            long long r = n - i;

            if (lastIndex[prefixSum[i]] - mx >= 0) {
                ans -= l * (r + 1) + r;
                if (i - lastIndex[prefixSum[i]] != n || !mx)
                    ans--;
            }
            mx = max(lastIndex[prefixSum[i]] + 1, mx);
        }
        lastIndex[prefixSum[i]] = i;
    }

    cout << ans << '\n';

    return 0;
}