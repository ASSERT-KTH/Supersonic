```
#include <bits/stdc++.h>
using namespace std;

#define int long long

vector<vector<int>> g;
vector<int> visited;
vector<int> res;
bool cycle = false;

void dfs(int v, int p) {
    visited[v] = 1;
    for (auto to : g[v]) {
        if (to == p) continue;
        if (visited[to] == 0) {
            dfs(to, v);
        }
        else if (visited[to] == 1) {
            cycle = true;
        }
    }
    visited[v] = 2;
    res.push_back(v);
}

void solve() {
    int n, m;
    cin >> n >> m;
    g.resize(n + 1);
    visited.resize(n + 1);
    for (int i = 0; i < m; i++) {
        int t, x, y;
        cin >> t >> x >> y;
        g[x].push_back(y);
        if (t == 2) g[y].push_back(x);
    }
    for (int i = 1; i <= n; i++) {
        if (!visited[i]) dfs(i, -1);
    }
    if (cycle) {
        cout << "NO" << '\n';
    } 
    else {
        cout << "YES" << '\n';
        reverse(res.begin(), res.end());
        for (auto v : res) {
            cout << v << " ";
        }
        cout << '\n';
    }
    g.clear();
    visited.clear();
    res.clear();
    cycle = false;
}

signed main() {
    ios_base::sync_with_stdio(false);    
    cin.tie(NULL);                       
    cout.tie(NULL);
    int t = 1;
    cin >> t;
    while (t--) solve();
    return 0;
}
```