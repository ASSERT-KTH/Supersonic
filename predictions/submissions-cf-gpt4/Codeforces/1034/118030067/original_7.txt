```c++
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef map<int, int> mii;
typedef vector<int> vi;
typedef set<int> si;

const ll INF = LLONG_MAX;
const int MAXN = 15000007;
bitset<MAXN> primes;
int spf[MAXN];
mii countOfFactors;

void sieve() {
    primes.set();
    primes[0] = primes[1] = 0;
    for (int i = 2; i < MAXN; i++) spf[i] = i;
    for (int i = 4; i < MAXN; i += 2) {
        primes[i] = 0;
        spf[i] = 2;
    }
    for (int i = 3; i * i < MAXN; i++) {
        if (primes[i]) {
            for (int j = i * i; j < MAXN; j += i) {
                primes[j] = 0;
                spf[j] = i;
            }
        }
    }
}

void factorize(int n) {
    while (n != 1) {
        countOfFactors[spf[n]]++;
        n /= spf[n];
    }
}

void solve() {
    sieve();
    int n;
    cin >> n;
    vi v(n);
    int gcd = 0;
    for (int &i : v) {
        cin >> i;
        gcd = __gcd(gcd, i);
    }
    for (int &i : v) i /= gcd;
    for (int i : v) factorize(i);
    int maxCount = 0;
    for (auto i : countOfFactors) maxCount = max(maxCount, i.second);
    cout << (maxCount ? n - maxCount : -1);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    solve();
    return 0;
}
```