#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pi;
typedef vector<pi> vpi;

const int mod = 1e9 + 7;
const int maxN = 1.5e7 + 7;

bitset<maxN> primes;
int spf[maxN];
unordered_map<int, int> countOfFactors;
vi v;

ll gcd(ll x, ll y) { return y ? gcd(y, x % y) : x; }

void sieve() {
  primes.set();
  primes[0] = primes[1] = 0;
  for (int i = 2; i < maxN; i++)
    spf[i] = i;
  for (int i = 4; i < maxN; i += 2) {
    if (i != 2)
      primes[i] = 0;
    spf[i] = 2;
  }
  for (int i = 3; i < maxN; i++) {
    if (primes[i]) {
      for (ll j = ll(i) * i; j < maxN; j += i) {
        primes[j] = 0;
        spf[j] = i;
      }
    }
  }
}

void factorize(int n) {
  while (n != 1) {
    countOfFactors[spf[n]]++;
    n /= spf[n];
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  sieve();
  int n;
  cin >> n;
  v.resize(n);
  ll gcdIs = 0;
  for (int &i : v) {
    cin >> i;
    gcdIs = gcd(gcdIs, i);
  }
  for (int &i : v) {
    i /= gcdIs;
    factorize(i);
  }
  int keep = 0;
  for (auto &i : countOfFactors) {
    keep = max(keep, i.second);
  }
  cout << (keep ? n - keep : -1);

  return 0;
}