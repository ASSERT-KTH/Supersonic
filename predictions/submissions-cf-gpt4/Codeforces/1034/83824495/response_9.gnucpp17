#include <bits/stdc++.h>
using namespace std;
using ll = long long;

constexpr int N = 1'700'0005;
int lpf[N], cont[N];

void sieve() {
  for (int i = 2; i < N; i++) {
    if (lpf[i] == 0) {
      lpf[i] = i;
      for (ll j = 1LL * i * i; j < N; j += i) {
        if (lpf[j] == 0)
          lpf[j] = i;
      }
    }
  }
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  
  sieve();
  int n;
  cin >> n;
  
  vector<int> arr(n);
  int mcd = 0;
  for (auto& x : arr) {
    cin >> x;
    mcd = __gcd(mcd, x);
  }
  
  for (auto& x : arr) {
    x /= mcd;
    while (x > 1) {
      int f = lpf[x];
      cont[f]++;
      while (x % f == 0)
        x /= f;
    }
  }
  
  int maxi = *max_element(cont, cont + N);
  
  cout << ((maxi == 0) ? -1 : n - maxi) << '\n';
  
  return 0;
}