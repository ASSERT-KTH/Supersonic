#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define N 17000005

int lpf[N];
int cont[N];

inline void sieve() {
    for (int i = 2; i * i < N; ++i) {
        if (!lpf[i]) {
            for (int j = i * 2; j < N; j += i) {
                if (!lpf[j]) lpf[j] = i;
            }
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    sieve();
    int n;
    cin >> n;
    vector<int> arr(n);
    int mcd = 0;
    for (auto &i : arr) {
        cin >> i;
        mcd = __gcd(mcd, i);
    }
    for (auto &i : arr) i /= mcd;
    for (auto &i : arr) {
        while (i > 1) {
            int f = lpf[i];
            ++cont[f];
            while (i % f == 0) i /= f;
        }
    }
    cout << ((n -= *max_element(cont, cont + N)) ? n : -1) << '\n';
    return 0;
}