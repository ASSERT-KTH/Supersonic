```c++
#include <bits/stdc++.h>
#define all(c) c.begin(), c.end()
#define lli long long int
#define vi vector<int>

using namespace std;
constexpr double EPSILON = 1e-14;
constexpr int MAX_SIZE = 1005;

double getAns(int cntC, int cntM, double c, double m, double p, double v, vector<vector<double>>& dp) {
  if (c <= EPSILON && m <= EPSILON) {
    return (double)(cntC + cntM + 1);
  }
  if(dp[cntC][cntM] != -1) return dp[cntC][cntM];

  double temp = 0;

  if (c > EPSILON) {
      double nc = max(0.0, c - v);
      double distribute = (c - nc) / 2.0;
      temp += c * getAns(cntC + 1, cntM, nc, m + distribute, p + distribute, v, dp);
  }
  if (m > EPSILON) {
      double nm = max(0.0, m - v);
      double distribute = (m - nm) / 2.0;
      temp += m * getAns(cntC, cntM + 1, c + distribute, nm, p + distribute, v, dp);
  }

  temp += (cntC + cntM + 1) * p;

  return dp[cntC][cntM] = temp;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int t;
  cin >> t;

  vector<vector<double> > dp(MAX_SIZE, vector<double>(MAX_SIZE, -1));

  while (t--) {
    double c, m, p, v;
    cin >> c >> m >> p >> v;
    cout << setprecision(15) << getAns(0, 0, c, m, p, v, dp) << '\n';
  }

  return 0;
}
```