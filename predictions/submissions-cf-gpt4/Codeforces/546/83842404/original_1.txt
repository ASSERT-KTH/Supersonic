```c++
#include <iostream>
#include <math.h>

#define MAX 5000000

int spf[MAX+1]; // smallest prime factor
long long prefixSum[MAX+1]; // prefix sum

void sieve() {
    spf[1] = 1;
    for (int i = 2; i <= MAX; i++) spf[i] = i;
    for (int i = 4; i <= MAX; i += 2) spf[i] = 2;
    int limit = sqrt(MAX);
    for (int i = 3; i <= limit; i++) {
        if (spf[i] == i) {
            for (int j = i * i; j <= MAX; j += i) if (spf[j] == j) spf[j] = i;
        }
    }
}

long long countPrimeFactors(int n) {
    long long total = 0;
    while (n != 1) {
        total++;
        int p = spf[n];
        while (n % p == 0) n /= p;
    }
    return total;
}

void precalculate() {
    sieve();
    prefixSum[0] = 0;
    for (int i = 1; i <= MAX; i++) prefixSum[i] = prefixSum[i - 1] + countPrimeFactors(i);
}

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(0);
    std::cout.tie(0);
    precalculate();
    int t;
    std::cin >> t;
    while (t--) {
        int a, b;
        std::cin >> a >> b;
        std::cout << prefixSum[a] - prefixSum[b] << '\n';
    }
}
```