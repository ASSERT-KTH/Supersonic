#include <iostream>
#include <cmath>
#include <vector>

const int N = 5e6 + 3;
const int TO = sqrt(N) + 1;

std::vector<bool> is(N, false);
std::vector<int> val(N);
std::vector<int> cnt(N, 0);
std::vector<long long> pref(N, 0);

void precalc() {
	for (int i = 0; i < N; i++) {
		val[i] = i;
	}
	for (int i = 2; i < TO; i++) {
		if (is[i])
			continue;
		for (int j = 2 * i; j < N; j += i) {
			is[j] = true;
			while (val[j] % i == 0) {
				val[j] /= i;
				cnt[j]++;
			}
		}
	}
	for (int i = 0; i < N; i++) {
		if (val[i] != 1) {
			cnt[i]++;
		}
	}
	for (int i = 1; i < N; i++) {
		pref[i] = pref[i - 1] + cnt[i];
	}
}

int main() {
	std::ios_base::sync_with_stdio(false);
	std::cin.tie(nullptr);
	std::cout.tie(nullptr);
	
	precalc();

	int t;
	std::cin >> t;
	while (t--) {
		int a, b;
		std::cin >> a >> b;
		std::cout << pref[a] - pref[b] << '\n';
	}
	return 0;
}