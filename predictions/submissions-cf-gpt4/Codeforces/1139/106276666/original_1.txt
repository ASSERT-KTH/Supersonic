```cpp
#include <bits/stdc++.h>
#define len 1000005
#define mod 1000000007
#define MP make_pair

typedef long long ll;
typedef unsigned long long ul;
using namespace std;

bool prm[len];
ul modpow(ul x, ul n, ul m) {
  if (n == 0)
    return 1UL % m;
  ul u = modpow(x, n / 2, m);
  u = (u * u) % m;
  if (n % 2 == 1)
    u = (u * x) % m;
  return u;
}

ul mod_(ll x, ll m) {
  if (x >= 0)
    return x % m;
  else
    return (m - ((-x) % m)) % m;
}

void make_prm() {
  memset(prm, false, sizeof(prm));
  prm[0] = prm[1] = true;
  for (int first = 2; first*first <= len; first++) {
    if (!prm[first]) {
      for (int second = first*first; second <= len; second += first)
        prm[second] = true;
    }
  }
}

ul n, k;
ul sm, ans;
bool vis[len];
vector<int> adj[len];

ll dfs(int n, int p) {
  if (vis[n])
    return 0;
  vis[n] = true;
  ll x = 0;
  for (auto u : adj[n]) {
    if (u != p)
      x += dfs(u, n);
  }
  return x + 1;
}

int main() {
  cin.tie(0);
  ios::sync_with_stdio(0);
  cin >> n >> k;
  for (int i = 1; i < n; i++) {
    ll u, v, x;
    cin >> u >> v >> x;
    if (x == 0)
      adj[u].push_back(v), adj[v].push_back(u);
  }
  for (int i = 1; i <= n; i++) {
    if (!vis[i]) {
      sm += modpow(dfs(i, -1), k, mod);
      sm = mod_(sm, mod);
    }
  }
  ans = modpow(n, k, mod);
  cout << mod_(ans - sm, mod);
  return 0;
}
```