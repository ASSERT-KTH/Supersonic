```c++
#include <iostream>
#include <vector>
#include <cstring>
#define len 1000005
#define mod 1000000007
typedef long long ll;
typedef unsigned long long ul;

ul modpow(ul x, ul n, ul m) {
  ul u = 1;
  while(n > 0) {
    if(n & 1) u = (u * x) % m;
    x = (x * x) % m;
    n >>= 1;
  }
  return u;
}

ul mod_(ll x, ll m) {
  return ((x %= m) < 0) ? x+m : x;
}

std::vector<ll> adj[len];
bool vis[len];

ll dfs(ll n, ll p) {
  vis[n] = true;
  ll x = 1;
  for(ll u : adj[n]) {
    if(u != p && !vis[u])
      x += dfs(u, n);
  }
  return x;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  ul n, k, sm = 0, ans;
  std::cin >> n >> k;
  for(int i = 1; i < n; ++i) {
    ll u, v, x;
    std::cin >> u >> v >> x;
    if(x == 0) {
      adj[u].push_back(v);
      adj[v].push_back(u);
    }
  }
  memset(vis, false, sizeof(vis));
  for(int i = 1; i <= n; ++i) {
    if (!vis[i]) {
      sm += modpow(dfs(i, -1), k, mod);
      sm = mod_(sm, mod);
    }
  }
  ans = modpow(n, k, mod);
  std::cout << mod_(ans - sm, mod);
  return 0;
}
```