```cpp
#include <vector>
#include <cstdio>
#include <cstring>
using namespace std;
typedef long long ll;
typedef unsigned long long ul;
const int len = 1e6 + 5;
const ul mod = 1e9 + 7;
ul modpow(ul x, ul n, ul m) {
  ul u = 1;
  while(n > 0) {
    if(n % 2 == 1)
      u = (u * x) % m;
    x = (x * x) % m;
    n /= 2;
  }
  return u % m;
}
ul mod_(ll x, ll m) {
  return ((x % m) + m) % m;
}
bool prm[len];
void make_prm() {
  memset(prm, false, sizeof(prm));
  for (int first = 2; first*first <= len; ++first)
    if (!prm[first])
      for (int second = first*first; second <= len; second += first)
        prm[second] = true;
}
ul n, k;
ul sm, ans;
bool vis[len];
vector<ll> adj[len];
ll dfs(ll n, ll p) {
  if (vis[n])
    return 0;
  vis[n] = true;
  ll x = 0;
  for (auto u : adj[n])
    if (u != p)
      x += dfs(u, n);
  return x + 1;
}
int main() {
  scanf("%llu %llu", &n, &k);
  for (ul i = 1, u, v, x; i < n; ++i) {
    scanf("%llu %llu %llu", &u, &v, &x);
    if (x == 0)
      adj[u].push_back(v), adj[v].push_back(u);
  }
  for (ul i = 1; i <= n; ++i)
    if (!vis[i]) {
      sm += modpow(dfs(i, -1), k, mod);
      sm = mod_(sm, mod);
    }
  ans = modpow(n, k, mod);
  printf("%llu", mod_(ans - sm, mod));
  return 0;
}
```