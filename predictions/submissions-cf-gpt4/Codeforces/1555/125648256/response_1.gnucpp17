#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

typedef long long ll;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int test = 1;
  cin >> test;

  while (test--) {
    int m;
    cin >> m;
    vector<vector<int>> matrix(2, vector<int>(m));
    for (int i = 0; i < 2; i++)
      for (int j = 0; j < m; j++)
        cin >> matrix[i][j];

    vector<ll> prefix(m), suffix(m);
    prefix[0] = matrix[1][0];
    suffix[m - 1] = matrix[0][m - 1];

    for (int j = 1; j < m; j++)
      prefix[j] = prefix[j - 1] + matrix[1][j];

    for (int j = m - 2; j >= 0; j--)
      suffix[j] = suffix[j + 1] + matrix[0][j];

    ll ans = min(*max_element(prefix.begin(), prefix.end() - 1),
                 *max_element(suffix.begin() + 1, suffix.end()));

    cout << ans << "\n";
  }
  return 0;
}