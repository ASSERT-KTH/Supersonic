```c++
#include <iostream>
#include <vector>
#include <algorithm>

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int test;
  std::cin >> test;
  while (test--) {
    int m;
    std::cin >> m;
    std::vector<int> matrix[2];
    matrix[0].reserve(m);
    matrix[1].reserve(m);
    for (int i = 0; i < 2; i++) {
      for (int j = 0; j < m; j++) {
        int val;
        std::cin >> val;
        matrix[i].push_back(val);
      }
    }
    std::vector<long long> prefix(m), suffix(m);
    prefix[0] = matrix[1][0];
    suffix[m - 1] = matrix[0][m - 1];
    for (int j = 1; j < m; j++) {
      prefix[j] = prefix[j - 1] + matrix[1][j];
      suffix[m - j - 1] = suffix[m - j] + matrix[0][m - j - 1];
    }

    long long ans = *std::max_element(prefix.begin(), prefix.end());
    for (int j = 0; j < m; j++) {
      ans = std::min(ans, std::max(prefix[j], suffix[j + 1]));
    }
    std::cout << ans << '\n';
  }
  return 0;
}
```