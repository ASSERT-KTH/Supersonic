```cpp
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
typedef long long ll;
void solve();
int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    int test = 1;
    cin >> test;
    while (test--) {
        solve();
    }
    return 0;
}
void solve() {
    int m;
    cin >> m;
    vector<vector<ll>> matrix(2, vector<ll>(m));
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < m; j++) {
            cin >> matrix[i][j];
        }
    }
    vector<ll> suffix(m), prefix(m);
    suffix[0] = matrix[0][0];
    for (int j = 1; j < m; j++) {
        suffix[j] = suffix[j-1] + matrix[0][j];
    }
    prefix[m-1] = matrix[1][m-1];
    for (int j = m-2; j >= 0; j--) {
        prefix[j] = prefix[j+1] + matrix[1][j];
    }
    ll ans = max(prefix[0], suffix[m-1]);
    for (int j = 1; j < m; j++) {
        ans = min(ans, max(suffix[j-1], prefix[j]));
    }
    cout << ans << "\n";
}
```