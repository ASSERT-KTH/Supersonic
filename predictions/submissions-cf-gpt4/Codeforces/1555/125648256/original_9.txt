```cpp
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
using ll = long long;
void solve();
int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  int test;
  cin >> test;
  while (test--) {
    solve();
  }
  return 0;
}
void solve() {
  int m;
  cin >> m;
  vector<vector<int>> matrix(2, vector<int>(m));
  for (auto& row : matrix) {
    for (auto& val : row) {
      cin >> val;
    }
  }
  ll suffix = accumulate(matrix[0].begin() + 1, matrix[0].end(), 0LL);
  ll prefix = 0;
  ll ans = suffix;
  for (int j = 1; j < m; j++) {
    suffix -= matrix[0][j];
    prefix += matrix[1][j - 1];
    ans = min(ans, max(prefix, suffix));
  }
  cout << ans << '\n';
  return;
}
```