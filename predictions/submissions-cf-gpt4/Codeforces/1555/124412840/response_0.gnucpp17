#include <iostream>
#include <string>
#include <algorithm>

#define ll long long

const std::string patterns[6] = {"abc", "acb", "bac", "bca", "cab", "cba"};
int prefixSums[6][1000001] = {0};

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);
    int n, m;
    std::cin >> n >> m;
    std::string s;
    std::cin >> s;
    for (int i = 0; i < 6; ++i) {
        for (int j = 0; j < n; ++j) {
            prefixSums[i][j + 1] = prefixSums[i][j] + (patterns[i][j % 3] != s[j]);
        }
    }
    while (m--) {
        int l, r;
        std::cin >> l >> r;
        --l;
        int ans = *std::min_element(prefixSums[0] + l, prefixSums[0] + r);
        for (int i = 1; i < 6; ++i) {
            ans = std::min(ans, *std::min_element(prefixSums[i] + l, prefixSums[i] + r));
        }
        std::cout << ans << '\n';
    }
    return 0;
}