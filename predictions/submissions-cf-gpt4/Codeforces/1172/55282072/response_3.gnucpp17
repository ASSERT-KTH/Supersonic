#include <iostream>
#include <vector>
using namespace std;

const int MOD = 998244353;
typedef long long ll;
ll inv[410000],fac[410000],ifac[410000];
int a[200100],b[200100];
ll dp[2][810000],pref[2][810000];
int n,m;

ll binom(int x, int y)
{
    if(y>x) return 0;
    return fac[x]*ifac[y]%MOD*ifac[x-y]%MOD;
}

ll solve(int f, int k)
{
    int i;
    ll s = 0;
    int x = (m+k)%2;
    if(f==1)
    {
        for(i=0;i<=m;++i)
        {
            s += (dp[x][m+i]*binom(m,i)%MOD*binom(m,k-i))%MOD;
            s %= MOD;
        }
    }
    else
    {
        for(i=0;i<=m;++i)
        {
            s += (dp[x^1][m+i]*binom(m,i)%MOD*binom(m,k-i))%MOD;
            s %= MOD;
        }
    }
    return s;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    
    int i,j;
    fac[0] = ifac[0] = 1;
    inv[1] = 1;
    for(i=1;i<=400000;++i)
    {
        fac[i] = (fac[i-1]*i)%MOD;
        if(i!=1) inv[i] = MOD - (MOD/i)*inv[MOD%i]%MOD;
        ifac[i] = (ifac[i-1]*inv[i])%MOD;
    }
    cin >> n >> m;
    for(i=1;i<=n;++i)
    {
        cin >> a[i];
    }
    for(i=1;i<=n;++i)
    {
        cin >> b[i];
    }
    dp[0][m] = 1;
    ll sum1 = 0, sum2 = 0;
    for(i=1;i<=2*m;++i)
    {
        dp[0][m+i] = (dp[0][m+i-1]*sum1)%MOD*inv[i]%MOD;
        dp[1][m-i] = (dp[1][m-i+1]*sum2)%MOD*inv[i]%MOD;
        if(i<=m)
        {
            sum1 += inv[i];
            sum1 %= MOD;
            sum2 += inv[i];
            sum2 %= MOD;
        }
        if(i>=m)
        {
            sum1 -= inv[i-m+1];
            sum1 %= MOD;
            if(sum1<0) sum1 += MOD;
        }
    }
    pref[0][2*m+1] = 0;
    for(i=2*m;i>=0;--i)
    {
        pref[0][i] = (pref[0][i+1]+dp[0][i])%MOD;
        pref[1][i] = (pref[1][i+1]+dp[1][i])%MOD;
    }
    ll ans;
    for(i=1;i<=n;++i)
    {
        ans = solve(a[i],b[i])*fac[m]%MOD;
        cout << ans << "\n";
    }
    return 0;
}