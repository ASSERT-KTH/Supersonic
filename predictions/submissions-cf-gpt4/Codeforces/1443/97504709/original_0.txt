```c++
#include <iostream>
#include <vector>
#include <algorithm>

template <typename T>
std::istream &operator>>(std::istream &input, std::vector<T> &v) {
  for (T &a : v)
    input >> a;
  return input;
}

void answer(bool v) {
  constexpr const char *s[2] = {"NO", "YES"};
  std::cout << s[v] << '\n';
}

void solve(std::vector<unsigned> &a) {
  std::vector<unsigned> b(a.size());
  
  std::partial_sum(a.begin(), a.end(), b.begin());
  
  auto min_element_it = std::min_element(b.begin(), b.end());
  
  answer(*min_element_it >= 0);
}

void test_case() {
  size_t n;
  std::cin >> n;
  std::vector<unsigned> a(n);
  std::cin >> a;
  solve(a);
}

int main() {
  size_t t;
  std::cin >> t;
  while (t-- > 0)
    test_case();
  return 0;
}
```