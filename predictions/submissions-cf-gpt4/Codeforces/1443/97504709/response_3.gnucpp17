#include <iostream>
#include <vector>

template <typename T>
std::istream &operator>>(std::istream &input, std::vector<T> &v) {
  for (T &a : v)
    input >> a;
  return input;
}

void answer(bool v) {
  constexpr const char *s[2] = {"NO", "YES"};
  std::cout << s[v] << '\n';
}

void solve(std::vector<unsigned> &a) {
  const size_t n = a.size();
  unsigned minVal = a[0];

  for (size_t i = 1; i < n; ++i) {
    if (a[i] < minVal) {
      answer(false);
      return;
    }
    minVal = std::min(minVal, a[i] - a[i - 1]);
  }
  
  for (size_t i = 0; i < n; ++i) {
    if (a[i] % minVal != a[0] % minVal) {
      answer(false);
      return;
    }
  }

  answer(true);
}

void test_case() {
  size_t n;
  std::cin >> n;
  std::vector<unsigned> a(n);
  std::cin >> a;
  solve(a);
}

int main() {
  size_t t;
  std::cin >> t;
  while (t-- > 0)
    test_case();
  return 0;
}