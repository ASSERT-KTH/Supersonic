#include <iostream>
#include <vector>
using namespace std;

template <typename T>
istream &operator>>(istream &input, vector<T> &v) {
  for (T &a : v)
    input >> a;
  return input;
}

void solve(vector<unsigned> &a) {
  const size_t n = a.size();
  unsigned d = 0;
  for (size_t i = 1; i < n; ++i) {
    if (a[i] < a[i - 1])
      d = max(d, a[i - 1] - a[i]);
  }
  for (size_t i = 0; i < n; ++i) {
    if (d < a[i])
      d = (d / a[i]) * a[i];
    if (d < a[i]) {
      cout << "NO\n";
      return;
    }
    d -= a[i];
  }
  cout << "YES\n";
}

void test_case() {
  size_t n;
  cin >> n;
  vector<unsigned> a(n);
  cin >> a;
  solve(a);
}

int main() {
  ios::sync_with_stdio(false); 
  cin.tie(0); 
  size_t t;
  cin >> t;
  while (t-- > 0)
    test_case();
  return 0;
}