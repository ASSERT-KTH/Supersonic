```cpp
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int getN(int n, int x) {
  int cnt = 0;
  while (n % x == 0) {
    ++cnt;
    n /= x;
  }
  return cnt;
}

void solve() {
  int n, x;
  cin >> n >> x;
  vector<int> a(n), b(n);
  for (int &c : a)
    cin >> c;
  long long sum = 0;
  for (int i = 0; i < n; ++i) {
    b[i] = getN(a[i], x);
  }
  int tok = b[0];
  for (int i = 1; i < n; ++i) {
    b[i] = min(b[i], tok);
    tok = b[i];
  }
  tok = b[n - 1];
  for (int i = n - 1; i >= 0; --i) {
    if (i != n - 1)
      b[i] = min(b[i], 1 + tok);
    tok = b[i];
    sum += static_cast<long long>(b[i]) * a[i] + a[i];
  }
  cout << sum;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    solve();
    cout << "\n";
  }
  return 0;
}
```