#include <iostream>
#include <vector>
#include <stack>
#include <bitset>

#define MAX_NODES 500001

using namespace std;

vector<int> graph[MAX_NODES];
int ans[MAX_NODES]{0};

int answer(int i) {
    if (ans[i] > 0)
        return ans[i];
    stack<int> s;
    s.push(i);
    vector<int> list;
    bitset<MAX_NODES> bs;
    bs.set(i);
    while (!s.empty()) {
        int now = s.top();
        s.pop();
        list.push_back(now);
        for (int next : graph[now])
            if (!bs[next]) {
                bs.set(next);
                s.push(next);
            }
    }
    int res = list.size();
    for (int next : list)
        ans[next] = res;
    return res;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < m; i++) {
        int l;
        cin >> l;
        if (l < 1)
            continue;
        int a;
        cin >> a;
        while (--l > 0) {
            int b;
            cin >> b;
            graph[a].push_back(b);
            graph[b].push_back(a);
            a = b;
        }
    }
    for (int i = 1; i <= n; i++)
        cout << answer(i) << " ";
    cout << endl;
    return 0;
}