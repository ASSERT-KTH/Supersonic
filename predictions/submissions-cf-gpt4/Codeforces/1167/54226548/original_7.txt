```
#include <iostream>
#include <vector>
#include <bitset>
#include <stack>
#define MAX_NODES 500001

using namespace std;

int n, m;
vector<int> graph[MAX_NODES];
int ans[MAX_NODES];

int num() {
    int res;
    cin >> res;
    return res;
}

int answer(int i, bitset<MAX_NODES>& visited) {
    if (ans[i] > 0)
        return ans[i];

    stack<int> s;
    s.push(i);
    vector<int> list;
    visited.set(i);

    while (!s.empty()) {
        int now = s.top();
        s.pop();
        list.push_back(now);

        for (int next : graph[now]) {
            if (!visited[next]) {
                visited.set(next);
                s.push(next);
            }
        }
    }

    int res = list.size();
    for (int next : list)
        ans[next] = res;
    return res;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    n = num();
    m = num();
    bitset<MAX_NODES> visited;

    for (int i = 0; i < m; i++) {
        int l = num() - 1;
        if (l < 0)
            continue;

        int a = num();
        while (l-- > 0) {
            int b = num();
            graph[a].push_back(b);
            graph[b].push_back(a);
            a = b;
        }
    }

    for (int i = 1; i <= n; i++)
        cout << answer(i, visited) << " ";
    cout << endl;

    return 0;
}
```