```C++
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long ll;

void solve() {
    ll a, b, n;
    cin >> a >> b >> n;

    vector<ll> attack(n), health(n);
    ll maxAttack = 0, totalDamage = 0;
    int maxAttackIndex = 0;

    for (int i = 0; i < n; i++) {
        cin >> attack[i];
        if (attack[i] > maxAttack) {
            maxAttack = attack[i];
            maxAttackIndex = i;
        }
    }

    for (int i = 0; i < n; i++) {
        cin >> health[i];
        if (i != maxAttackIndex) {
            totalDamage += ((health[i] + a - 1) / a) * attack[i];
        }
    }

    if (totalDamage >= b) {
        cout << "NO\n";
        return;
    }

    b -= totalDamage;
    ll maxMonsterAttacks = (b + maxAttack - 1) / maxAttack;
    ll maxMonsterHealth = (health[maxAttackIndex] + a - 1) / a;

    cout << ((maxMonsterAttacks >= maxMonsterHealth) ? "YES\n" : "NO\n");
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int tt;
    cin >> tt;
    while (tt--) {
        solve();
    }

    return 0;
}
```