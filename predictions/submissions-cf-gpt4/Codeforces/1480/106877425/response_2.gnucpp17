#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long

void solve() {
    ll a, b, n;
    std::cin >> a >> b >> n;
    
    std::vector<ll> attack(n);
    std::vector<ll> health(n);
    
    for (ll& atk : attack)
        std::cin >> atk;
        
    ll max_attack = *std::max_element(attack.begin(), attack.end());
    
    for (ll& hth : health)
        std::cin >> hth;
    
    for (int i = 0; i < n; i++) {
        if (attack[i] != max_attack) {
            ll times = (health[i] + a - 1) / a;
            b -= times * attack[i];
        }
    }
    
    if (b <= 0) {
        std::cout << "NO\n";
        return;
    }
    
    ll max_times = (health[std::max_element(attack.begin(), attack.end()) - attack.begin()] + a - 1) / a;
    
    if (b > max_times * max_attack)
        std::cout << "YES\n";
    else
        std::cout << "NO\n";
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    
    int tt;
    std::cin >> tt;
    
    while (tt--)
        solve();
        
    return 0;
}