#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

#define ll long long

void solve() {
  ll a, b, n;
  ll res = 0;
  cin >> a >> b >> n;
  vector<pair<ll,ll>> monster(n);
  ll max_attack = 0;
  for (int i = 0; i < n; i++) {
    cin >> monster[i].first;
    max_attack = max(max_attack, monster[i].first);
  }
  for (int i = 0; i < n; i++)
    cin >> monster[i].second;
  
  sort(monster.begin(), monster.end());

  for (int i = 0; i < n; i++) {
    if (monster[i].first == max_attack)
      continue;
    ll d = (monster[i].second + a - 1) / a;
    res += d * monster[i].first;
  }
  if (res >= b) {
    cout << "NO\n";
    return;
  }
  b = b - res;
  ll d = (monster[n-1].second + a - 1) / a;
  b -= d * max_attack;
  if (b <= 0)
    cout << "YES\n";
  else
    cout << "NO\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int tt;
  cin >> tt;
  while (tt--)
    solve();
}