```cpp
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
typedef long long ll;

struct Monster {
    ll attack, health;
};

void solve() {
    ll a, b, n;
    cin >> a >> b >> n;
    vector<Monster> monsters(n);
    for (int i = 0; i < n; ++i)
        cin >> monsters[i].attack;
    for (int i = 0; i < n; ++i)
        cin >> monsters[i].health;

    sort(monsters.begin(), monsters.end(), [](const Monster &m1, const Monster &m2) {
        return m1.attack > m2.attack;
    });

    for (int i = 1; i < n; ++i) {
        ll hits = (monsters[i].health + a - 1) / a;
        b -= hits * monsters[i].attack;
    }

    ll finalHits = (monsters[0].health + a - 1) / a;
    ll finalAttack = (b + monsters[0].attack - 1) / monsters[0].attack;

    cout << (finalAttack >= finalHits ? "YES\n" : "NO\n");
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int tt;
    cin >> tt;
    while (tt--)
        solve();
}
```