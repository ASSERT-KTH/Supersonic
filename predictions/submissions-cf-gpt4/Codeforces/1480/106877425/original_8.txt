```cpp
#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long

struct Monster {
    ll attack;
    ll health;
};

bool compareMonsters(const Monster& a, const Monster& b) {
    return a.attack < b.attack;
}

void solve() {
    ll a, b, n;
    ll res = 0;
    std::cin >> a >> b >> n;
    std::vector<Monster> monsters(n);
    
    for (int i = 0; i < n; i++) {
        std::cin >> monsters[i].attack;
    }
    for (int i = 0; i < n; i++) {
        std::cin >> monsters[i].health;
    }
    
    std::sort(monsters.begin(), monsters.end(), compareMonsters);
    
    for (int i = 0; i < n - 1; i++) {
        ll hits = (monsters[i].health + a - 1) / a;
        res += hits * monsters[i].attack;
    }
    
    if (res >= b) {
        std::cout << "NO\n";
        return;
    }
    
    b -= res;
    ll lastMonsterHits = (monsters[n-1].health + a - 1) / a;
    ll lastMonsterDamage = (b + monsters[n-1].attack - 1) / monsters[n-1].attack;
    
    if (lastMonsterDamage >= lastMonsterHits)
        std::cout << "YES\n";
    else
        std::cout << "NO\n";
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0);
    int tt;
    std::cin >> tt;
    
    while (tt--)
        solve();
}
```