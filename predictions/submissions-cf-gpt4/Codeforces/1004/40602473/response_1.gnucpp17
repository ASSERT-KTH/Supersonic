#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>

#define rrep(i, N) for (i = (N - 1); i >= 0; i--)
#define rep(i, N) for (i = 0; i < (N); i++)
#define sqr(x) (x) * (x)
#define pb push_back

const int64_t inf = 1e18 + 7;
const int64_t mod = 1e9 + 7;
const int MAXN = 1000000;
int freq[MAXN];
int cfreq[MAXN];

inline bool isvalid(int, int, int, int);

int main() {
  std::fill(freq, freq + MAXN, 0);
  int T, b = -1, x;
  std::cin >> T;
  for (int t = 0; t < T; ++t) {
    int k;
    std::cin >> k;
    freq[k]++;
    b = std::max(b, k);
  }

  int t = 0;
  while(t < T && (freq[t] == (t << 2))) ++t;
  x = t;
  
  for (int n = 1; n * n <= T; n++)
    if (T % n == 0) {
      int m = T / n;
      int y = n + m - b - x;
      if (isvalid(n, m, x, y)) {
        std::cout << n << " " << m << "\n" << x << " " << y << std::endl;
        return 0;
      } else if (isvalid(m, n, x, y)) {
        std::cout << m << " " << n << "\n" << x << " " << y << std::endl;
        return 0;
      }
    }
  std::cout << -1 << std::endl;
  return 0;
}

bool isvalid(int n, int m, int x, int y) {
  if (x < 1 || x > n || y < 1 || y > m)
    return false;
  std::fill(cfreq, cfreq + MAXN, 0);
  
  for(int i = 0; i < n; ++i) 
    for(int j = 0; j < m; ++j) 
      cfreq[(std::abs(x - 1 - i) + std::abs(y - 1 - j))]++;
      
  for(int i = 0; i < n * m; ++i) 
    if (cfreq[i] != freq[i]) 
      return false;

  return true;
}