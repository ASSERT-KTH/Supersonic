```cpp
#include <iostream>
#include <vector>
#include <algorithm>
typedef long long ll;
using namespace std;
const int MAXN = 1000000;
int freq[MAXN], cfreq[MAXN], dx[2500], dy[2500], qx[2500], qy[2500];
inline bool isvalid(int n, int m, int x, int y, int T) {
    fill(cfreq, cfreq + MAXN, 0);
    int l = 0, r = 0;
    qx[0] = x; qy[0] = y; cfreq[0] = 1;
    while(l <= r) {
        for(int i = 0; i < 4; i++) {
            int nx = qx[l] + dx[i], ny = qy[l] + dy[i];
            if(nx >= 1 && nx <= n && ny >= 1 && ny <= m && cfreq[abs(nx - x) + abs(ny - y)] == 0) {
                cfreq[abs(nx - x) + abs(ny - y)] = 1;
                qx[++r] = nx; qy[r] = ny;
            }
        }
        l++;
    }
    for(int i = 0; i < T; i++) if (cfreq[i] != freq[i]) return false;
    return true;
}
int main() {
    fill(freq, freq + MAXN, 0);
    dx[0] = 1; dx[1] = -1; dx[2] = 0; dx[3] = 0;
    dy[0] = 0; dy[1] = 0; dy[2] = 1; dy[3] = -1;
    int T, x = 0;
    cin >> T;
    for(int i = 0, k; i < T; i++) {
        cin >> k;
        freq[k]++;
        x = max(x, k);
    }
    for(int n = 1, m, y; n * n <= T; n++) {
        if(T % n == 0) {
            m = T / n;
            y = n + m - x;
            if(y > 0 && (isvalid(n, m, x, y, T) || isvalid(m, n, x, y, T))) {
                cout << n << " " << m << "\n" << x << " " << y;
                return 0;
            }
        }
    }
    cout << -1;
    return 0;
}
```