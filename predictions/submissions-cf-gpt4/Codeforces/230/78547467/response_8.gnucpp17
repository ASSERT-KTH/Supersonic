#include <vector>
#include <iostream>
#include <cmath>

constexpr int MAXN = 1000001;
constexpr int MAXANS = 100000;

std::vector<int> spf(MAXN);

void sieve() {
    for (int i = 2; i < MAXN; ++i)
        spf[i] = (i % 2 == 0) ? 2 : i;

    for (int i = 3; i * i < MAXN; i += 2) {
        if (spf[i] == i) {
            for (int j = i * i; j < MAXN; j += i)
                if (spf[j] == j)
                    spf[j] = i;
        }
    }
}

int main() {
    sieve();
    int n;
    std::cin >> n;
    std::vector<bool> ans(n);
    for (int t = 0; t < n; ++t) {
        long long a;
        std::cin >> a;
        long long root = static_cast<long long>(std::sqrt(a));
        ans[t] = (a != 1 && root * root == a && spf[root] == root);
    }
    for (bool answer : ans)
        std::cout << (answer ? "YES\n" : "NO\n");

    return 0;
}