#include <iostream>
#include <cmath>

static const int MAX_NUM = 1000001;
int spf[MAX_NUM];

void SPF() {
    spf[0] = spf[1] = -1;
    for (int i = 2; i < MAX_NUM; ++i)
        spf[i] = i;
    for (int i = 2; i * i < MAX_NUM; ++i) {
        if (spf[i] == i) {
            for (int j = i; j * i < MAX_NUM; ++j)
                spf[i * j] = i;
        }
    }
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    SPF();
    int n;
    std::cin >> n;
    int ans[n] = {0};
    for (int t = 0; t < n; ++t) {
        long long a;
        std::cin >> a;
        long long root = static_cast<long long>(std::sqrt(a));
        if (a != 1 && root * root == a && spf[root] == root)
            ans[t] = 1;
    }
    for (int t = 0; t < n; ++t) {
        std::cout << (ans[t] == 1 ? "YES" : "NO") << "\n";
    }
    return 0;
}