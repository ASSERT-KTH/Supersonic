#include <iostream>
#include <math.h>
#include <vector>
using namespace std;

vector<bool> isPrime(1000001, true);

void SieveOfEratosthenes() {
    isPrime[0] = isPrime[1] = false;
    for (int i = 2; i * i <= 1000000; i++) {
        if (isPrime[i]) {
            for (int j = i * i; j <= 1000000; j += i)
                isPrime[j] = false;
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    SieveOfEratosthenes();
    int n;
    cin >> n;
    vector<long long> a(n);
    vector<bool> ans(n);

    for (int t = 0; t < n; ++t) {
        cin >> a[t];
        long long root = sqrt(a[t]);
        if (a[t] != 1 && root * root == a[t] && isPrime[root])
            ans[t] = true;
    }
    for (int t = 0; t < n; ++t) {
        if (ans[t])
            cout << "YES\n";
        else
            cout << "NO\n";
    }
    return 0;
}