```c++
#include <bits/stdc++.h>
using namespace std;
constexpr int mod = 1e9 + 7;
constexpr int inf = 0x3f3f3f3f;
constexpr int maxn = 1e5 + 10;
using ll = long long;
#define rep(i, a, b) for (int i = int(a); i <= (int)(b); i++)
mt19937 rng((unsigned int)chrono::steady_clock::now().time_since_epoch().count());

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  int n, m, p;
  cin >> n >> m >> p;
  vector<ll> a(n + 1);
  rep(i, 1, n) {
    rep(j, 0, m - 1) {
      char c;
      cin >> c;
      if (c == '1')
        a[i] += (1ll << j);
    }
  }
  vector<int> id(n + 1);
  iota(id.begin(), id.end(), 0);
  shuffle(id.begin() + 1, id.end(), rng);
  long long ans = 0;
  int num = 0;
  rep(i, 1, min(200, n)) {
    vector<int> one;
    rep(j, 0, m - 1) {
      if ((a[id[i]] >> j) & 1)
        one.push_back(j);
    }
    vector<int> dp(1 << one.size());
    rep(j, 1, n) {
      int tmp = 0;
      rep(k, 0, one.size() - 1) {
        if ((a[j] >> one[k]) & 1)
          tmp += (1 << k);
      }
      dp[tmp]++;
    }
    rep(j, 0, one.size() - 1) {
      rep(k, 0, (1 << one.size()) - 1) {
        if (k & (1 << j))
          dp[k ^ (1 << j)] += dp[k];
      }
    }
    rep(k, 0, (1 << one.size()) - 1) {
      if (dp[k] >= (n + 1) / 2 && __builtin_popcount(k) > num) {
        num = __builtin_popcount(k);
        ans = 0;
        rep(j, 0, one.size() - 1) {
          if (k & (1 << j))
            ans += (1ll << one[j]);
        }
      }
    }
  }
  rep(i, 0, m - 1) { cout << ((ans >> i) & 1); }
  cout << '\n';
  return 0;
}
```