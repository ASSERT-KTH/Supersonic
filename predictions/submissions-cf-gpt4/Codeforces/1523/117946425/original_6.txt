```cpp
#include <bits/stdc++.h>

using ll = long long;
#define pb push_back
#define rep(i, a, b) for (int i = int(a); i <= (int)(b); i++)

const int maxn = 1e5 + 10;
mt19937 rng((unsigned int)chrono::steady_clock::now().time_since_epoch().count());

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int n, m;
  std::cin >> n >> m;
  std::vector<ll> a(n + 1);
  rep(i, 1, n) {
    std::string s;
    std::cin >> s;
    for (int j = 0; j < m; j++) {
      if (s[j] == '1')
        a[i] += (1ll << (m - j - 1));
    }
  }
  std::vector<int> id(n + 1);
  std::iota(id.begin(), id.end(), 0);
  std::shuffle(id.begin() + 1, id.end(), rng);
  ll ans = 0;
  int num = 0;
  rep(i, 1, std::min(200, n)) {
    std::vector<int> one;
    for (int j = 0; j < m; j++) {
      if ((a[id[i]] >> (m - j - 1)) & 1)
        one.pb(j);
    }
    std::vector<int> dp(1 << one.size());
    rep(j, 1, n) {
      int tmp = 0;
      for (unsigned int k = 0; k < one.size(); k++) {
        if ((a[j] >> (m - one[k] - 1)) & 1)
          tmp |= (1 << k);
      }
      dp[tmp]++;
    }
    for (unsigned int j = 0; j < one.size(); j++) {
      for (int k = 0; k < (1 << one.size()); k++) {
        if (k & (1 << j))
          dp[k ^ (1 << j)] += dp[k];
      }
    }
    rep(k, 0, (1 << one.size()) - 1) {
      if (dp[k] >= (n + 1) / 2 && __builtin_popcount(k) > num) {
        num = __builtin_popcount(k);
        ans = 0;
        for (unsigned int j = 0; j < one.size(); j++) {
          if (k & (1 << j))
            ans |= (1ll << (m - one[j] - 1));
        }
      }
    }
  }
  for (int i = m - 1; i >= 0; i--) {
    std::cout << ((ans >> i) & 1);
  }
  std::cout << '\n';
  return 0;
}
```