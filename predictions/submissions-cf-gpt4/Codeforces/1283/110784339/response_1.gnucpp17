#include <iostream>
#include <vector>
#include <queue>
#include <unordered_set>
#include <algorithm>
#define ll long long

int main() {
    std::ios_base::sync_with_stdio(false), std::cin.tie(nullptr), std::cout.tie(nullptr);
    int n, m;
    std::cin >> n >> m;
    std::vector<ll> v(n);
    for (auto &x : v)
        std::cin >> x;
    std::unordered_set<ll> s(v.begin(), v.end());
    std::priority_queue<ll, std::vector<ll>, std::greater<ll>> q(s.begin(), s.end());
    std::vector<ll> res;
    ll mini_sum = 0LL;
    while (res.size() < m) {
        ll cur = q.top();
        q.pop();
        if (s.insert(cur - 1).second) {
            q.push(cur - 1);
        }
        if (s.insert(cur + 1).second) {
            q.push(cur + 1);
        }
        res.push_back(cur);
        mini_sum += abs(cur - v[0]);
    }
    std::cout << mini_sum << "\n";
    for (auto x : res)
        std::cout << x << " ";
    std::cout << "\n";
    return 0;
}