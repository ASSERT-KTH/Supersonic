```C++
#include <iostream>
#include <vector>
#include <iomanip>
#include <algorithm>
using namespace std;

typedef long long ll;

void solve() {
  ll n;
  cin >> n;
  vector<vector<double>> m(n, vector<double>(n, 0));
  for (ll i = 0; i < n; ++i)
    for (ll j = 0; j < n; ++j)
      cin >> m[i][j];

  vector<double> dp(1 << n, 0);
  dp[(1 << n) - 1] = 1;

  for (ll i = (1 << n) - 1; i >= 0; --i) {
    ll ruby = __builtin_popcount(i);
    if (ruby <= 1) continue;
    double factor = 2.0 / (ruby * (ruby - 1));
    for (ll j = 0; j < n; ++j) {
      if (!(i & (1 << j))) continue;
      for (ll k = j + 1; k < n; ++k) {
        if (!(i & (1 << k))) continue;
        dp[i ^ (1 << j)] += factor * dp[i] * m[k][j];
        dp[i ^ (1 << k)] += factor * dp[i] * m[j][k];
      }
    }
  }

  cout << fixed << setprecision(20);
  for (ll i = 0; i < n; ++i)
    cout << dp[1 << i] << ' ';
  cout << '\n';
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  solve();
}
```