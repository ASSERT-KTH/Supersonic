```C++
#include <iostream>
#include <vector>
#include <algorithm>

#define int long long
typedef unsigned long long ull;
typedef long double ld;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define PI 3.14159265
const int MOD = 1e9 + 7;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(a) (a).begin(), (a).end()

const int N = 400;
int parent[N], size[N], counter[N], value[N];
std::vector<int> v_i[N], v_e[N];

void initialize() {
    for (int i = 1; i <= N - 1; i++) {
        parent[i] = i;
        size[i] = 1;
    }
}

int find(int i) {
    if (parent[i] != i) {
        parent[i] = find(parent[i]);
    }
    return parent[i];
}

void merge(int x, int y) {
    int rootX = find(x);
    int rootY = find(y);
    if (size[rootX] < size[rootY]) {
        std::swap(rootX, rootY);
    }
    parent[rootY] = rootX;
    size[rootX] += size[rootY];
}

int32_t main() {
    IOS;
    int n;
    std::cin >> n;
    initialize();

    for (int i = 1; i <= n; i++) {
        std::cin >> value[i];
    }

    std::vector<std::string> s(n);
    for (int i = 0; i < n; i++) {
        std::cin >> s[i];
        for (int j = 0; j < n; j++) {
            if (s[i][j] == '1') {
                merge(i + 1, j + 1);
            }
        }
    }

    for (int i = 1; i <= n; i++) {
        v_e[find(i)].pb(value[i]);
    }
    for (int i = 1; i <= n; i++) {
        std::sort(all(v_e[i]));
    }
    for (int i = 1; i <= n; i++) {
        int x = find(i);
        std::cout << v_e[x][counter[x]++] << " ";
    }
    std::cout << '\n';
}
```