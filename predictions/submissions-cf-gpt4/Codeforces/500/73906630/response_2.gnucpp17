#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
#define PI 3.14159265
const ll MOD = 1e9 + 7;
const int N = 400;
int parent[N], sizes[N], v[N], cnt[N];
vector<int> group[N];

inline void initialize() {
  iota(parent, parent + N, 0);
  fill(sizes, sizes + N, 1);
}

inline int root(int i) {
  while (i != parent[i]) {
    parent[i] = parent[parent[i]];
    i = parent[i];
  }
  return i;
}

inline void merge(int x, int y) {
  int u = root(x);
  int v = root(y);
  if (sizes[u] < sizes[v]) {
    swap(u, v);
  }
  parent[v] = u;
  sizes[u] += sizes[v];
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int n;
  cin >> n;
  initialize();
  for (int i = 1; i <= n; i++) {
    cin >> v[i];
  }
  string s;
  for (int i = 0; i < n; i++) {
    cin >> s;
    for (int j = 0; j < n; j++) {
      if (s[j] == '1' && root(i + 1) != root(j + 1)) {
        merge(i + 1, j + 1);
      }
    }
  }
  for (int i = 1; i <= n; i++) {
    group[root(i)].push_back(v[i]);
  }
  for (int i = 1; i <= n; i++) {
    sort(group[i].begin(), group[i].end());
  }
  for (int i = 1; i <= n; i++) {
    int x = root(i);
    cout << group[x][cnt[x]++] << " ";
  }
  cout << '\n';
  return 0;
}