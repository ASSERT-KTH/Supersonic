```cpp
#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include <algorithm>
#define N 400

int sz[N], a[N];
std::vector<int> v_e[N];
int v[N + 1], cnt[N];
int n;

int root(int i) {
  while (a[i] != i) {
    a[i] = a[a[i]];
    i = a[i];
  }
  return i;
}

void merge(int x, int y) {
  int u = root(x);
  int v = root(y);
  if (sz[u] < sz[v]) {
    std::swap(u, v);
  }
  a[v] = a[u];
  sz[u] += sz[v];
}

int main() {
  scanf("%d", &n);
  for (int i = 1; i <= n; i++) {
    a[i] = i;
    sz[i] = 1;
    scanf("%d", &v[i]);
  }
  for (int i = 1; i <= n; i++) {
    char s[N];
    scanf("%s", s);
    for (int j = 0; j < n; j++) {
      if (s[j] == '1' && root(i) != root(j + 1)) {
        merge(i, j + 1);
      }
    }
  }
  for (int i = 1; i <= n; i++) {
    v_e[root(i)].push_back(v[i]);
  }
  for (int i = 1; i <= n; i++) {
    std::sort(v_e[i].begin(), v_e[i].end());
  }
  for (int i = 1; i <= n; i++) {
    printf("%d ", v_e[root(i)][cnt[root(i)]++]);
  }
  printf("\n");
  return 0;
}
```