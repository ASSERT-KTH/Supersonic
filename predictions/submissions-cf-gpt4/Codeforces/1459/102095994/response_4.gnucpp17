#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>
#define int long long int
using namespace std;
const int N = 2e2 + 10;
const int inf = 1e18 + 10;
const double Pi = 3.14159265;
int n, a[N], b[N];
void solve() {
  cin >> n;
  for (int i = 1; i <= n; i++) cin >> a[i] >> b[i];
  double total = accumulate(b + 1, b + 1 + n, 0);
  vector<vector<double>> dp(N * N, vector<double>(N, -inf));
  dp[0][0] = 0;
  double ans = -inf;
  int cap = 0;
  for (int i = 1; i <= n; i++) {
    cap += a[i];
    for (int c = cap; c >= 1; c--) {
      for (int k = min(i, n); k >= 1; k--) {
        if (c >= a[i]) {
          dp[c][k] = max(dp[c - a[i]][k - 1] + (double)b[i], dp[c][k]);
        }
      }
    }
  }
  for (int k = 1; k <= n; k++) {
    ans = -inf;
    for (int c = 1; c <= cap; c++) ans =
        max(min(dp[c][k] + (total - dp[c][k]) / (double)2.0, (double)c), ans);
    cout << fixed << setprecision(20) << ans << " ";
  }
}
int32_t main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  solve();
  return 0;
}