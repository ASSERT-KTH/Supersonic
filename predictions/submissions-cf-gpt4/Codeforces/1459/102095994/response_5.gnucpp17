#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>
#define ll long long
#define ld long double
#define vi std::vector<ld>
using namespace std;

const int N = 2e2 + 10;
const ld inf = 1e18 + 10;

int n;
ll a[N], b[N];

void solve() {
  cin >> n;
  for (int i = 1; i <= n; i++) cin >> a[i] >> b[i];
  ld total = accumulate(b + 1, b + 1 + n, 0LL);
  vi dp(N * N, -inf);
  dp[0] = 0;
  ll cap = 0;
  for (int i = 1; i <= n; i++) {
    cap += a[i];
    for (ll c = cap; c >= a[i]; c--) {
      dp[c] = max(dp[c - a[i]] + (ld)b[i], dp[c]);
    }
  }
  ld ans = -inf;
  for (int k = 1; k <= n; k++) {
    ans = -inf;
    for (ll c = 1; c <= cap; c++) {
      ans = max(min(dp[c] + (total - dp[c]) / 2.0, (ld)c), ans);
    }
    cout << fixed << setprecision(20) << ans << " ";
  }
}
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  solve();
  return 0;
}