#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
#include <numeric>
#define int long long int
#define double long double
#define rep(i, a, b) for (int i = a; i <= b; i++)
#define per(i, b, a) for (int i = b; i >= a; i--)

using namespace std;

const int N = 2e2 + 10;
const double inf = 1e18 + 10;
int n, a[N], b[N];

void solve() {
  cin >> n;
  rep(i, 1, n) cin >> a[i] >> b[i];
  double total = accumulate(b + 1, b + 1 + n, 0);
  vector<vector<double>> dp(N * N, vector<double>(N, -inf));
  dp[0][0] = 0;
  double ans = -inf;
  int cap = 0;
  rep(i, 1, n) {
    cap += a[i];
    per(c, cap, a[i]) per(k, n, 1)
      dp[c][k] = max(dp[c - a[i]][k - 1] + (double)b[i], dp[c][k]);
  }
  rep(k, 1, n) {
    ans = -inf;
    rep(c, 1, cap) ans = max(min(dp[c][k] + (total - dp[c][k]) / 2.0, (double)c), ans);
    cout << fixed << setprecision(20) << ans << " ";
  }
}

int32_t main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  solve();
  return 0;
}