```c++
#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 100;
vector<int> g[N], val(N), d(N), primes;
unordered_map<int, int> dp[N];
int ans = 0;

vector<int> get(int x) {
    vector<int> ret;
    for (int i = 2; i * i <= x; i++) {
        if (x % i == 0) {
            ret.push_back(i);
            while (x % i == 0)
                x /= i;
        }
    }
    if (x != 1)
        ret.push_back(x);
    return ret;
}

void dfs(int v, int p) {
    vector<int> cur = get(val[v]);
    vector<pair<int, int>> t(cur.size(), {0, 0});
    for (auto u : g[v]) {
        if (u == p)
            continue;
        dfs(u, v);
        for (size_t i = 0; i < cur.size(); i++) {
            int x = cur[i];
            auto it = dp[u].find(x);
            if (it != dp[u].end()) {
                if (it->second >= t[i].first) {
                    t[i].second = t[i].first;
                    t[i].first = it->second;
                } else if (it->second > t[i].second) {
                    t[i].second = it->second;
                }
            }
        }
    }
    for (size_t i = 0; i < cur.size(); i++) {
        int x = cur[i];
        ans = max(ans, t[i].first + t[i].second + 1);
        dp[v][x] = t[i].first + 1;
    }
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    for (int i = 2; i < N; i++) {
        if (d[i] == 0) {
            d[i] = i;
            primes.push_back(i);
        }
        for (auto x : primes) {
            if (x > d[i] || x * i >= N)
                break;
            d[x * i] = x;
        }
    }
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> val[i];
    for (int i = 0, a, b; i < n - 1; i++) {
        cin >> a >> b;
        a--, b--;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    dfs(0, -1);
    cout << ans << '\n';
}
```