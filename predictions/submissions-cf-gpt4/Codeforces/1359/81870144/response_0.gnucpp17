#include <iostream>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

const int N = 1e5 + 5;
const int inf = 1e9 + 7;
long long dp[N][61];

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int n;
    cin >> n;
    vector<int> a(n + 1);
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
    }

    for (int i = 0; i <= n; i++) {
        for (int j = 0; j <= 60; j++) {
            dp[i][j] = -1e18;
        }
    }

    dp[0][30] = 0;
    for (int i = 1; i <= n; i++) {
        for (int j = 0; j <= 60; j++) {
            if (j >= a[i]) {
                dp[i][j] = max(dp[i][j], dp[i - 1][j - a[i]] + a[i]);
            }
            dp[i][j] = max(dp[i][j], dp[i - 1][j]);
        }
    }

    long long ans = 0;
    for (int i = 0; i <= 60; i++) {
        ans = max(ans, dp[n][i] - i + 30);
    }
    cout << ans << '\n';

    return 0;
}