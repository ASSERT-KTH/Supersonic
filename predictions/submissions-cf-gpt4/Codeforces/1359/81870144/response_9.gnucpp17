#include <iostream>
#include <vector>
#include <algorithm>
#define ll long long

using namespace std;

const ll N = 1e5 + 1;
const ll INF = 1e18;
ll dp[N][61];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); 
    cout.tie(0);

    ll n;
    cin >> n;
    vector<ll> a(n);
    for (auto &z : a)
        cin >> z;

    for (ll i = 0; i < N; i++) 
        for (ll j = 0; j < 61; j++) 
            dp[i][j] = -INF;
        
    dp[0][30] = 0;
    for (ll i = 0; i < n; i++) {
        for (ll j = 0; j < 61; j++) {
            if (dp[i][j] != -INF) {
                ll to = max(a[i], j - 30) + 30;
                dp[i + 1][to] = max(dp[i + 1][to], dp[i][j] + a[i]);
            }
        }
    }

    ll ans = 0;
    for (ll i = 0; i <= n; i++) 
        for (ll j = 0; j < 61; j++) 
            if (dp[i][j] != -INF)
                ans = max(ans, dp[i][j] - j + 30);
        
    cout << ans;
    return 0;
}