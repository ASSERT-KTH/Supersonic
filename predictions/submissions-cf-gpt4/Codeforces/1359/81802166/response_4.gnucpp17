#include <bits/stdc++.h>
using namespace std;
typedef long long int lli;
#define maxn 2010
#define mod 1000000007
#define F first
#define S second
#define high __builtin_popcountll
#define ctz __builtin_ctzll
#define parity __builtin_parityll
#define gcd __gcd
#define IOS ios::sync_with_stdio(0), cin.tie(0), cout.tie(0)
#define forz(i, n) for (lli i = 0; i < n; i++)
#define fore(i, m, n) for (lli i = m; i <= n; i++)
#define rforz(i, n) for (lli i = n - 1; i >= 0; i--)
#define rfore(i, m, n) for (lli i = n; i >= m; i--)
#define all(v) v.begin(), v.end()
#define pb push_back
#define mp make_pair
#define mt make_tuple
#define lb lower_bound
#define ub upper_bound
#define maxe *max_element
#define mine *min_element
#define acc(v) accumulate(all(v), 0)

lli n;
vector<lli> a;
lli dp[maxn][61];

lli maxSum(lli idx, lli val) {
  if (idx >= n) return 0;
  if (dp[idx][val + 30] != -1) return dp[idx][val + 30];
  lli take = maxSum(idx + 1, val);
  lli sum = 0;
  lli maxEle = a[idx];
  for (lli i = idx; i < n; i++) {
    sum += a[i];
    maxEle = max(maxEle, a[i]);
    if (maxEle > val) break;
    if (maxEle - sum + val <= 0) continue;
    take = max(take, sum - val + maxSum(i + 1, val));
  }
  return dp[idx][val + 30] = take;
}

int main() {
  IOS;
  cin >> n;
  a.resize(n);
  forz(i, n) cin >> a[i];
  memset(dp, -1, sizeof dp);
  lli ans = 0;
  for (lli i = -30; i <= 30; i++) ans = max(ans, maxSum(0, i));
  cout << ans;
  return 0;
}