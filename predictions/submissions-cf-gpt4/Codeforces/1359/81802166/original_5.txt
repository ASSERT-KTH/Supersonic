```cpp
#include <iostream>
#include <vector>
#include <algorithm>

#define INF 1e9+7

typedef long long int lli;

using namespace std;

lli maxSubArraySum(vector<lli>& a, lli F, lli n) {
  lli max_so_far = INT_MIN, max_ending_here = 0;
  lli M = -31;
  for (lli i = 0; i < n; i++) {
    M = max(M, a[i]);
    max_ending_here = max_ending_here + a[i];
    if (max_so_far < max_ending_here && M == F)
      max_so_far = max_ending_here;
    if (max_ending_here < 0 || M > F)
      max_ending_here = 0, M = -31;
  }
  return max_so_far;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  lli n;
  cin >> n;
  vector<lli> a(n);
  for(lli i = 0; i < n; i++) cin >> a[i];
  
  lli R = 0;
  for (lli i = -30; i < 31; i++) {
    R = max(R, (maxSubArraySum(a, i, n) - i));
  }
  cout << R << endl;
  
  return 0;
}
```
