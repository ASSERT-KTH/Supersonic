```cpp
#include <vector>
#include <queue>
#include <cstdio>

const int MAX_N = 200010;
std::vector<int> v[MAX_N];
bool vis[MAX_N];
int nn, ne;

void bfs(int u) {
  nn = 0, ne = 0;
  std::queue<int> q;
  q.push(u);
  
  while (!q.empty()) {
    u = q.front();
    q.pop();
    nn++;
    if (v[u].size() == 2)
      ne++;
    for (const auto &p : v[u]) {
      if (!vis[p]) {
        vis[p] = 1;
        q.push(p);
      }
    }
  }
}

int main() {
  int n, m, a, b, c = 0;
  std::scanf("%d %d", &n, &m);
  while (m--) {
    std::scanf("%d %d", &a, &b);
    v[a].push_back(b);
    v[b].push_back(a);
  }
  for (int i = 1; i <= n; i++) {
    if (!vis[i]) {
      bfs(i);
      if (nn == ne)
        c++;
    }
  }
  std::printf("%d\n", c);
  return 0;
}
```