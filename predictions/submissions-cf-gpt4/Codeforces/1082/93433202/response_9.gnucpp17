#include <iostream>
#include <vector>
#include <queue>

using namespace std;

using ll = long long;
const int md = 1e9 + 7;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  int n;
  cin >> n;
  vector<int> t(n);
  int sum = 0;
  for (int &el : t) {
    cin >> el;
    sum += el;
  }

  if (sum > 2 * n * (n - 1) || sum < 2 * n - 2) {
    cout << "NO";
    return 0;
  }

  vector<int> one, two;
  for (int i = 0; i < n; ++i) {
    if (t[i] == 1)
      one.push_back(i);
    else
      two.push_back(i);
  }
  vector<pair<int, int>> ans;
  for (size_t i = 1; i < two.size(); ++i) {
    ans.push_back({two[i - 1], two[i]});
    --t[two[i - 1]];
    --t[two[i]];
  }
  size_t f2 = min(size_t(2), one.size());
  for (size_t i = 0; i < f2; ++i) {
    if (i == 0)
      ans.push_back({one[i], two[0]}), --t[two[0]];
    else
      ans.push_back({one[i], two.back()}), --t[two.back()];
  }
  priority_queue<pair<int, int>> q;
  for (int x : two) {
    q.push({t[x], x});
  }
  for (size_t i = f2; i < one.size(); ++i) {
    int x = q.top().second;
    q.pop();
    if (t[x] == 0) {
      cout << "NO";
      return 0;
    }
    ans.push_back({one[i], x});
    --t[x];
    q.push({t[x], x});
  }
  cout << "YES"
       << " " << two.size() + f2 - 1 << '\n';
  cout << ans.size() << '\n';
  for (const auto &x : ans)
    cout << x.first + 1 << " " << x.second + 1 << " " << '\n';
}