```c++
#include <bits/stdc++.h>
#pragma GCC optimize("O2")
#define F first
#define S second
#define PB push_back
#define sz(x) ((int)x.size())
#define L(x) (2 * (x))
#define R(x) (2 * (x) + 1)
#define M(x, y) (((x) + (y)) / 2)
using namespace std;
typedef long long ll;
const int md = 1e9 + 7;
int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  int n;
  cin >> n;
  vector<int> t(n);
  int sum = 0;
  for (int &i : t) {
    cin >> i;
    sum += i;
  }
  if (sum > 2 * n * (n - 1) || sum < 2 * n - 2) {
    cout << "NO";
    return 0;
  }
  vector<int> one, two;
  for (int i = 0; i < n; i++) {
    if (t[i] == 1)
      one.PB(i);
    else
      two.PB(i);
  }
  vector<pair<int, int>> ans;
  for (int i = 1; i < sz(two); i++) {
    ans.PB({two[i - 1], two[i]});
    t[two[i - 1]]--, t[two[i]]--;
  }
  int f2 = min(2, sz(one));
  for (int i = 0; i < f2; i++) {
    if (i == 0)
      ans.PB({one[i], two[0]}), t[two[0]]--;
    else
      ans.PB({one[i], two[sz(two) - 1]}), t[two[sz(two) - 1]]--;
  }
  priority_queue<pair<int, int>> q;
  for (auto x : two) {
    if(t[x] > 0)
      q.push({t[x], x});
  }
  for (int i = f2; i < sz(one); i++) {
    if (q.empty()) {
      cout << "NO";
      return 0;
    }
    int x = q.top().S;
    q.pop();
    ans.PB({one[i], x});
    if (--t[x] > 0)
      q.push({t[x], x});
  }
  cout << "YES"
       << " " << sz(two) + f2 - 1 << endl;
  cout << sz(ans) << endl;
  for (auto x : ans)
    cout << x.F + 1 << " " << x.S + 1 << " " << endl;
}
```