```cpp
#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vpii;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
  
    int n;
    cin >> n;
    vi t(n);
    int sum = 0;
    for (int i = 0; i < n; i++) {
        cin >> t[i];
        sum += t[i];
    }
    if (sum < 2 * n - 2 || sum > 2 * n * (n - 1)) {
        cout << "NO";
        return 0;
    }
    vi one, two;
    for (int i = 0; i < n; i++) {
        if (t[i] == 1)
            one.push_back(i);
        else
            two.push_back(i);
    }

    vpii ans;
    for (int i = 1; i < two.size(); i++) {
        ans.emplace_back(two[i - 1], two[i]);
        t[two[i - 1]]--;
        t[two[i]]--;
    }

    int f2 = min(2, (int)one.size());
    for (int i = 0; i < f2; i++) {
        ans.emplace_back(one[i], two[i == 0 ? 0 : two.size() - 1]);
        t[two[i == 0 ? 0 : two.size() - 1]]--;
    }

    priority_queue<pii, vpii, greater<pii>> q;
    for (auto x : two) {
        if(t[x] > 0)
            q.push({t[x], x});
    }

    for (int i = f2; i < one.size(); i++) {
        if(q.empty()) {
            cout << "NO";
            return 0;
        }
        int x = q.top().second;
        q.pop();
        ans.emplace_back(one[i], x);
        t[x]--;
        if(t[x] > 0)
            q.push({t[x], x});
    }
    cout << "YES " << two.size() + f2 - 1 << "\n" << ans.size() << "\n";
    for (auto x : ans)
        cout << x.first + 1 << " " << x.second + 1 << "\n";
}
```