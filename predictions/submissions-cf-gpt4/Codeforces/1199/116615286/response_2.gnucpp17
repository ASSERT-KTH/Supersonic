#include <iostream>
#include <vector>
using namespace std;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<bool> vb;
int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  int t;
  cin >> t;
  while (t--) {
    int n, m;
    cin >> n >> m;
    vvi edges(3*n+1);
    vi match;
    vb used(3*n+1, false);
    for (int i = 0; i < m; i++) {
      int x, y;
      cin >> x >> y;
      edges[x].push_back(i+1);
      edges[y].push_back(i+1);
      if (!used[x] && !used[y]) {
        used[x] = used[y] = true;
        match.push_back(i+1);
      }
    }
    if (match.size() >= n) {
      cout << "Matching\n";
      for (int i = 0; i < n; i++) {
        cout << match[i] << " ";
      }
      cout << '\n';
    } else {
      vi ind_set;
      for (int i = 1; i <= 3 * n; i++) {
        if (!used[i]) ind_set.push_back(i);
      }
      if (ind_set.size() >= n) {
        cout << "IndSet\n";
        for (int i = 0; i < n; i++) {
          cout << ind_set[i] << " ";
        }
        cout << '\n';
      } else {
        cout << "Impossible\n";
      }
    }
  }
  return 0;
}