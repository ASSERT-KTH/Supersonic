```C++
#include <iostream>
#include <vector>
#include <cstring>

using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int t, n, m;
  cin >> t;
  while (t--) {
    cin >> n >> m;
    vector<int> adj[300005];
    bool match[300005] = {false};
    vector<int> matching, indSet;

    for (int i = 1; i <= m; i++) {
      int x, y;
      cin >> x >> y;
      adj[x].push_back(y);
      adj[y].push_back(x);
    }

    for (int i = 1; i <= 3 * n; i++) {
      if (!match[i] && !adj[i].empty()) {
        match[i] = true;
        match[adj[i].back()] = true;
        matching.push_back(i);
        matching.push_back(adj[i].back());
        adj[i].pop_back();
      }
    }

    for (int i = 1; i <= 3 * n; i++) {
      if (!match[i]) {
        indSet.push_back(i);
      }
    }

    if (matching.size() >= n) {
      cout << "Matching\n";
      for (int i = 0; i < n; i++) {
        cout << matching[i] << " ";
      }
      cout << '\n';
    } else if (indSet.size() >= n) {
      cout << "IndSet\n";
      for (int i = 0; i < n; i++) {
        cout << indSet[i] << " ";
      }
      cout << '\n';
    } else {
      cout << "Impossible\n";
    }
  }

  return 0;
}
```