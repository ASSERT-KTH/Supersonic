#include <iostream>
#include <vector>
#include <cstring>
typedef unsigned long long ull;
typedef long long ll;
#define pb push_back
#define FAST ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#define pi pair<int, int>
#define MAX_SIZE 300005
using namespace std;
int t, n, m;
vector<pi> adj[MAX_SIZE];
bool match[MAX_SIZE];
vector<int> matching;

int main() {
    FAST;
    cin >> t;
    while (t--) {
        cin >> n >> m;
        matching.clear();
        for (int i = 1; i <= 3 * n; i++) {
            adj[i].clear();
        }
        memset(match, 0, sizeof(match));
        for (int i = 1; i <= m; i++) {
            int x, y;
            cin >> x >> y;
            adj[x].pb(make_pair(y, i));
        }
        for (int i = 1; i <= 3 * n; i++) {
            if (match[i] == true)
                continue;
            for (auto &it : adj[i]) {
                int nd = it.first;
                int ed = it.second;
                if (match[nd] == false) {
                    matching.pb(ed);
                    match[nd] = true;
                    match[i] = true;
                    break;
                }
            }
        }
        if (matching.size() >= n) {
            cout << "Matching" << '\n';
            for (int i = 0; i < n; i++) {
                cout << matching[i] << " ";
            }
            cout << '\n';
            continue;
        }
        vector<int> v;
        for (int i = 1; i <= 3 * n; i++) {
            if (match[i] == false)
                v.pb(i);
        }
        if (v.size() >= n) {
            cout << "IndSet" << '\n';
            for (int i = 0; i < n; i++) {
                cout << v[i] << " ";
            }
        } else
            cout << "Impossible";
        cout << '\n';
    }
}