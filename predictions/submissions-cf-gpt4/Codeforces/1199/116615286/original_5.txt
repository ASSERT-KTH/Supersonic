```cpp
#include <iostream>
#include <vector>
#include <cstring>

using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int t, n, m;
  cin >> t;
  while (t--) {
    cin >> n >> m;
    vector<pair<int, int>> adj[3 * n + 1];
    bool match[3 * n + 1];
    vector<int> matching, v;
    memset(match, 0, sizeof(match));

    for (int i = 0; i < m; i++) {
      int x, y;
      cin >> x >> y;
      adj[x].push_back({y, i+1});
    }

    for (int i = 1; i <= 3 * n; i++) {
      if (match[i]) continue;
      for (auto& it : adj[i]) {
        int nd = it.first;
        if (!match[nd]) {
          matching.push_back(it.second);
          match[nd] = match[i] = true;
          break;
        }
      }
    }
    
    for (int i = 1; i <= 3 * n; i++) {
      if (!match[i]) v.push_back(i);
    }

    if (matching.size() >= n) {
      cout << "Matching\n";
      for (int i = 0; i < n; i++) {
        cout << matching[i] << " ";
      }
      cout << '\n';
    } else if (v.size() >= n) {
      cout << "IndSet\n";
      for (int i = 0; i < n; i++) {
        cout << v[i] << " ";
      }
      cout << '\n';
    } else {
      cout << "Impossible\n";
    }
  }
}
```