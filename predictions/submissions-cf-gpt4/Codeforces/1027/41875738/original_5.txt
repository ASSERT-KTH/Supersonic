```cpp
#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define mp make_pair
using namespace std;
const int MAXN = 200010;
array<vector<int>, MAXN> v1, v2;
array<int, MAXN> cost;
array<int, MAXN> par;
array<bool, MAXN> vis;
stack<int> st;
ll temp;
inline void dfs(int source) {
  vis[source] = true;
  for (auto &i : v1[source]) {
    if (!vis[i]) {
      dfs(i);
    }
  }
  st.push(source);
}
inline void dfs2(int source, int val) {
  temp = min(temp, (ll)cost[source]);
  vis[source] = false;
  par[source] = val;
  for (auto &i : v2[source]) {
    if (vis[i]) {
      dfs2(i, val);
    }
  }
}
int main() {
  ios_base::sync_with_stdio(false); //Turn off synchronisation with C's stdio for faster input-output
  cin.tie(NULL); //Untie cin and cout for faster input-output
  int n;
  cin >> n;
  par.fill(0);
  for (int i = 1; i <= n; i++)
    cin >> cost[i];
  for (int i = 1; i <= n; i++) {
    int x;
    cin >> x;
    v1[i].pb(x);
    v2[x].pb(i);
  }
  ll ans = 0;
  for (int i = 1; i <= n; i++) {
    if (!vis[i])
      dfs(i);
  }
  while (!st.empty()) {
    int top = st.top();
    st.pop();
    if (vis[top]) {
      temp = 10000000000;
      dfs2(top, top);
      cost[top] = temp;
      ans += temp;
    }
  }
  for (int i = 1; i <= n; i++) {
    for (auto &child : v1[i]) {
      if (par[i] != par[child]) {
        ans -= cost[par[i]];
        cost[par[i]] = 0;
      }
    }
  }
  cout << ans << endl;
  return 0;
}
```