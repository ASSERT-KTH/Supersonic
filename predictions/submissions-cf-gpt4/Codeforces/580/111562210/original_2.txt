```c++
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

vector<int> g[100005], cat(100005), vis(100005);

int n, m, ans;

void dfs(int u, int cnt) {
  vis[u] = 1;
  if (cat[u] == 0) cnt = 0;
  else cnt++;
  if (cnt > m) return;
  bool leaf = 1;
  for (auto v : g[u]) {
    if (vis[v]) continue;
    leaf = 0;
    dfs(v, cnt);
  }
  ans += leaf;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  cin >> n >> m;
  for (int i = 1; i <= n; i++) cin >> cat[i];
  for (int i = 1; i < n; i++) {
    int u, v;
    cin >> u >> v;
    g[u].push_back(v);
    g[v].push_back(u);
  }
  dfs(1, 0);
  cout << ans << "\n";
  return 0;
}
```