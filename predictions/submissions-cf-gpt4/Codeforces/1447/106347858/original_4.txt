```cpp
#include <iostream>
#include <climits>
#define int long long
using namespace std;

inline int FastPower(int base, int exponent, int modulus)
{
    base %= modulus;
    int result = 1;
    while (exponent > 0)
    {
        if (exponent & 1)
            result = (result * base) % modulus;
        base = (base * base) % modulus;
        exponent >>= 1;
    }
    return result;
}

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int testCases;
    cin >> testCases;
    while (testCases--)
    {
        int rows, columns;
        cin >> rows >> columns;

        int negativeCount = 0, totalSum = 0, minValue = LONG_MAX, zeroCount = 0;

        for (int i = 0; i < rows; ++i)
        {
            for (int j = 0; j < columns; ++j)
            {
                int element;
                cin >> element;
                if (element < 0)
                {
                    element *= -1;
                    negativeCount++;
                }
                if (element == 0)
                {
                    zeroCount++;
                }
                minValue = min(minValue, element);
                totalSum += element;
            }
        }
        if ((negativeCount & 1) and !zeroCount)
            totalSum -= 2 * minValue;
        cout << totalSum << '\n';
    }
}
```