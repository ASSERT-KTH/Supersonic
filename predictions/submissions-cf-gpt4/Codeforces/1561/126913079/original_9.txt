```cpp
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

struct Interval {
    long long start, end;
};

inline long long max(long long a, long long b) { return (a > b) ? a : b; }

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    long long T;
    cin >> T;
    while (T--) {
        long long N;
        cin >> N;
        vector<Interval> v(N);
        for (long long i = 0; i < N; i++) {
            long long M;
            cin >> M;
            long long start = 0;
            for (long long j = 0; j < M; j++) {
                long long x;
                cin >> x;
                start = max(start, x - j + 1);
            }
            v[i].start = start;
            v[i].end = M + start;
        }
        sort(v.begin(), v.end(), [](const Interval &a, const Interval &b) {
            return a.start < b.start;
        });
        long long start = 0;
        long long end = 0;
        for (long long i = 0; i < N; i++) {
            if (v[i].start >= end) {
                start += v[i].start - end;
                end = v[i].end;
            } else {
                end = max(end, v[i].end);
            }
        }
        cout << start << "\n";
    }
}
```