```c++
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#include <bits/stdc++.h>
#define F first
#define S second
#define vec std::vector
#define ms std::multiset
#define pb push_back
#define pll std::pair<ll, ll>
#define pdd std::pair<ld, ld>
#define pq std::priority_queue
#define umap std::unordered_map
#define uset std::unordered_set
#define pii std::pair<int, int>
#define uid std::uniform_int_distribution
#define FILE                                                                   \
  std::ifstream in("sumsqr.in");                                                    \
  std::ofstream out("sumsqr.out");
#define fast                                                                   \
  std::cin.tie(0);                                                                  \
  std::cout.tie(0);                                                                 \
  std::cin.sync_with_stdio(0);                                                      \
  std::cout.sync_with_stdio(0);
using namespace std;
typedef std::string str;
typedef long long ll;
typedef long double ld;
std::mt19937 rnd(std::chrono::steady_clock::now().time_since_epoch().count());
int getChar() {
  static char buf[1 << 16];
  static int pos = 0, size = 0;
  if (pos == size) {
    pos = 0;
    size = (int)fread(buf, sizeof(buf[0]), sizeof(buf) / sizeof(buf[0]), stdin);
  }
  return buf[pos++];
}
inline int ni() {
  char c = getChar();
  for (; c == '\n' || c == ' ';)
    c = getChar();
  int o = 0;
  for (; c != ' ' && c != '\n'; c = getChar())
    o = o * 10 + c - '0';
  return o;
}
inline void putChar(int c) {
  static char buf[1 << 16];
  static int pos = 0;
  if (c == EOF || pos == 1 << 16) {
    fwrite(buf, sizeof(buf[0]), pos, stdout);
    pos = 0;
  }
  if (c == EOF)
    return;
  buf[pos++] = c;
}
void printInt(int val) {
  char buf[7];
  int pos = 0;
  if (val == 0)
    buf[pos++] = 48;
  for (; val; val /= 10)
    buf[pos++] = 48 + val % 10;
  for (pos--; pos >= 0;)
    putChar(buf[pos--]);
  putChar('\n');
}
int main() {
  fast;
  int a;
  std::cin >> a;
  std::vector<int> skok(a + 1, 0), o(a + 1, -1);
  for (int q = 1; q <= a; q++)
    skok[a / q]++;
  for (int &i : skok)
    i /= 2;
  std::vector<std::vector<int>> l(a);
  std::vector<int> mxd(a, 0), mxp(a, 0), sz(a, 0), dp(a, 0);
  std::vector<bool> good(a, false);
  for (int q = 0; q < a - 1; q++) {
    int x, y;
    std::cin >> x >> y;
    x--, y--;
    l[x].pb(y);
    l[y].pb(x);
  }
  int diam = 0;
  for (int &i : mxp)
    diam = std::max(i, diam);
  o[diam] = 1;
  for (int q = diam + 1; q <= a; q++)
    o[q] = 0;
  int H = std::min(a - 1, (int)(sqrt(a * log2(a)) / 2)), I = 2;
  for (; I <= H; I++) {
    o[I] = a / I;
  }
  for (int q = 1; q <= a; q++) {
    printInt(std::max(0, o[q]));
  }
  putChar(EOF);
}
```