```
#include <iostream>
#include <vector>
#include <algorithm>

#define mod 1000000007
#define N 1000005

using namespace std;

using ll = long long;
vector<ll> dp(N);

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    ll n;
    cin >> n;

    dp[0] = 1;
    for (ll i = 1; i <= n; i++) {
        ll x;
        cin >> x;
        vector<ll> divs;
        for (ll j = 1; j * j <= x; j++) {
            if (x % j == 0) {
                divs.push_back(j);
                if (j * j != x)
                    divs.push_back(x / j);
            }
        }
        sort(divs.begin(), divs.end());
        for (auto it = divs.rbegin(); it != divs.rend(); ++it) {
            dp[*it] = (dp[*it] + dp[*it - 1]) % mod;
        }
    }
    ll ans = accumulate(dp.begin() + 1, dp.begin() + n + 1, 0LL) % mod;

    cout << ans;

    return 0;
}
```