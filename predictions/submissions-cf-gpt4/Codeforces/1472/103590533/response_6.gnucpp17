#include <iostream>
#include <tuple>
#include <set>
#include <vector>

using namespace std;

typedef tuple<int, int, int> tii;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);

  int t, n, x, y;
  cin >> t;
  while (t--) {
    cin >> n;
    multiset<tii> a;
    for(int i = 0; i < n; i++) {
      cin >> x >> y;
      a.insert(make_tuple(max(x, y), min(x, y), i));
    }
    
    auto prev = (*a.begin());
    auto best = prev;
    vector<int> res(n, -1);
    
    for (const auto &person : a) {
      int h, w, i;
      tie(h, w, i) = person;
      if (get<0>(prev) == h) {
        if (get<1>(best) < w && get<0>(best) < h)
          res[i] = get<2>(best) + 1;
      } else {
        if (get<1>(best) > get<1>(prev))
          best = prev;
        if (get<1>(best) < w && get<0>(best) < h)
          res[i] = get<2>(best) + 1;
        prev = person;
      }
    }
    
    for (const auto &p : res)
      cout << p << " ";
    cout << "\n";
  }
  return 0;
}