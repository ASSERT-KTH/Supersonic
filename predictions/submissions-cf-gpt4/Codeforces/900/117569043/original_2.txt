```cpp
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <map>

#define mod 1000000007
#define int long long

using namespace std;

int power(int x, int y) {
    int res = 1;
    x %= mod;
    if (x == 0) return 0;
    while (y > 0) {
        if (y & 1) res = (res * x) % mod;
        y >>= 1;
        x = (x * x) % mod;
    }
    return res;
}

vector<int> divisors(int n) {
    vector<int> v;
    for (int i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) {
            v.push_back(i);
            if (n / i != i) v.push_back(n / i);
        }
    }
    return v;
}

void solve() {
    int x, y;
    cin >> x >> y;
    if (y % x != 0) {
        cout << 0 << "\n";
        return;
    }
    if (y / x == 1) {
        cout << 1 << "\n";
        return;
    }
    int sum = y / x;
    int ans = power(2, sum - 1);
    ans = (ans - 1 + mod) % mod;
    vector<int> div = divisors(sum);
    sort(div.begin(), div.end());
    map<int, int> mp;
    for (int i : div) {
        int cur = power(2, i - 1);
        vector<int> div1 = divisors(i);
        for (int p : div1) {
            cur = (cur - mp[p] + mod) % mod;
        }
        mp[i] = (cur - 1 + mod) % mod;
        ans = (ans - (cur - 1) + mod) % mod;
    }
    cout << ans << "\n";
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    solve();
    return 0;
}
```