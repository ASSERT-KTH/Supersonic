#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL);
#define int long long

int dx[] = {1, 0, -1, 0};
int dy[] = {0, 1, 0, -1};

int power(int x, int y) {
  int res = 1;
  x = x % mod;
  while (y > 0) {
    if (y & 1)
      res = (res * x) % mod;
    y = y >> 1;
    x = (x * x) % mod;
  }
  return res;
}

vector<int> divisors(int n) {
  vector<int> v;
  int i = 1;
  for (; i * i < n; i++) {
    if (n % i == 0) {
      v.push_back(i);
      v.push_back(n / i);
    }
  }
  if (i * i == n) v.push_back(i);
  return v;
}

void solve() {
  int x, y;
  cin >> x >> y;
  if (y % x != 0) {
    cout << 0 << '\n';
    return;
  }
  y /= x;
  vector<int> div = divisors(y);
  int dp[y + 1] = {0};
  dp[1] = 1;
  for (int i = 2; i <= y; ++i) {
    dp[i] = power(2, i - 1);
    for (int j : divisors(i)) {
      dp[i] = (dp[i] - dp[j] + mod) % mod;
    }
  }
  cout << dp[y] << '\n';
}

signed main() {
  fastio
  solve();
  return 0;
}