```cpp
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <map>
#define mod 1000000007
typedef long long ll;

ll power(ll x, ll y) {
  ll res = 1;
  x = x % mod;
  if (x == 0)
    return 0;
  while (y > 0) {
    if (y & 1)
      res = (res * x) % mod;
    y = y >> 1;
    x = (x * x) % mod;
  }
  return res;
}

std::vector<ll> divisors(ll n) {
  std::vector<ll> v;
  ll i;
  for (i = 1; i * i < n; i++) {
    if (n % i == 0) {
      v.push_back(i);
      v.push_back(n / i);
    }
  }
  if(i * i == n) v.push_back(i);
  return v;
}

int main() {
  std::ios_base::sync_with_stdio(false); 
  std::cin.tie(NULL);
  ll x, y;
  std::cin >> x >> y;
  if (y % x != 0) {
    std::cout << 0 << "\n";
    return 0;
  }
  if (y / x == 1) {
    std::cout << 1 << "\n";
    return 0;
  }
  ll sum = y / x;
  ll ans = power(2, sum - 1);
  ans = (ans - 1 + mod) % mod;
  std::vector<ll> div = divisors(sum);
  std::sort(div.begin(), div.end());
  std::map<ll, ll> mp;
  for (ll i = 0; i < div.size(); i++) {
    ll cur = power(2, div[i] - 1);
    std::vector<ll> div1 = divisors(div[i]);
    for (ll p : div1) {
      cur = (cur - mp[p] + mod) % mod;
    }
    mp[div[i]] = (cur - 1 + mod) % mod;
    ans = (ans - (cur - 1) + mod) % mod;
  }
  std::cout << ans << "\n";
  return 0;
}
```