```c++
#include <vector>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <map>
#define mod 1000000007
#define all(v) ((v).begin()), ((v).end())
#define int long long
#define fastio                                                                 \
  ios_base::sync_with_stdio(false);                                            \
  cin.tie(NULL);
typedef long long ll;
int power(int x, int y, int p) {
  int res = 1;
  x = x % p;
  while (y > 0) {
    if (y & 1)
      res = (res * x) % p;
    y = y >> 1;
    x = (x * x) % p;
  }
  return res;
}
std::vector<int> divisors(int n) {
  std::vector<int> v;
  for (int i = 2; i <= std::sqrt(n); i++) {
    if (n % i == 0) {
      v.push_back(i);
      if(n / i != i)
        v.push_back(n / i);
    }
  }
  return v;
}
void solve() {
  int x, y;
  std::cin >> x >> y;
  if (y % x != 0) {
    std::cout << 0 << '\n';
    return;
  }
  if (y / x == 1) {
    std::cout << 1 << '\n';
    return;
  }
  int sum = y / x;
  int ans = power(2, sum - 1, mod);
  ans = (ans - 1 + mod) % mod;
  std::vector<int> div = divisors(sum);
  std::sort(all(div));
  std::map<int, int> mp;
  for (int i = 0; i < div.size(); i++) {
    int cur = power(2, div[i] - 1, mod);
    std::vector<int> div1 = divisors(div[i]);
    for (int p : div1) {
      cur = (cur - mp[p] + mod) % mod;
    }
    mp[div[i]] = (cur - 1 + mod) % mod;
    ans = (ans - (cur - 1) + mod) % mod;
  }
  std::cout << ans << '\n';
}
signed main() {
  fastio solve();
  return 0;
}
```