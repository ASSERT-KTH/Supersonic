```cpp
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

static const ll mod = 1000000007;
static constexpr double PI = 3.14159265358979323846;

inline ll power(ll x, ll y) {
    ll res = 1;
    x = x % mod;
    while (y > 0) {
        if (y & 1)
            res = (res * x) % mod;
        y = y >> 1;
        x = (x * x) % mod;
    }
    return res;
}

vector<ll> divisors(ll n) {
    vector<ll> v;
    for (ll i = 2; i * i <= n; ++i) {
        if (n % i == 0) {
            v.push_back(i);
            if (n / i != i)
                v.push_back(n / i);
        }
    }
    return v;
}

void solve() {
    ll x, y;
    cin >> x >> y;
    if (y % x != 0) {
        cout << 0 << '\n';
        return;
    }
    ll sum = y / x;
    if (sum == 1) {
        cout << 1 << '\n';
        return;
    }
    ll ans = power(2, sum - 1);
    ans = (ans - 1 + mod) % mod;
    vector<ll> div = divisors(sum);
    sort(div.begin(), div.end());
    map<ll, ll> mp;
    for (ll i : div) {
        ll cur = power(2, i - 1);
        vector<ll> div1 = divisors(i);
        for (ll p : div1) {
            cur = (cur - mp[p] + mod) % mod;
        }
        mp[i] = (cur - 1 + mod) % mod;
        ans = (ans - (cur - 1) + mod) % mod;
    }
    cout << ans << '\n';
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    solve();
    return 0;
}
```