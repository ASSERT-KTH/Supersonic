```c++
#include <vector>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <map>

#define mod 1000000007
#define int long long

int power(int x, int y) {
  int res = 1;
  x = x % mod;
  while (y > 0) {
    if (y & 1)
      res = (res * x) % mod;
    y = y >> 1;
    x = (x * x) % mod;
  }
  return res;
}

std::vector<int> divisors(int n) {
  std::vector<int> v;
  for (int i = 2; i <= sqrt(n); i++) {
    if (n % i == 0) {
      v.push_back(i);
      if (n / i != i)
        v.push_back(n / i);
    }
  }
  return v;
}

void solve() {
  int x, y;
  std::cin >> x >> y;
  if (y % x != 0) {
    std::cout << 0 << std::endl;
    return;
  }
  int sum = y / x;
  if (sum == 1) {
    std::cout << 1 << std::endl;
    return;
  }
  
  std::vector<int> div = divisors(sum);
  std::map<int, int> mp;
  int ans = (power(2, sum - 1) - 1 + mod) % mod;
  for (auto& d : div) {
    int cur = power(2, d - 1);
    for (auto& p : divisors(d)) {
      cur = (cur - mp[p] + mod) % mod;
    }
    mp[d] = (cur - 1 + mod) % mod;
    ans = (ans - mp[d] + mod) % mod;
  }
  std::cout << ans << std::endl;
}

signed main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  solve();
  return 0;
}
```