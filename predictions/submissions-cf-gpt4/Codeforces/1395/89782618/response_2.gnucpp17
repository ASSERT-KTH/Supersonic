#include <algorithm>
#include <vector>
#include <iostream>
using namespace std;
constexpr int MAX_VAL = 512;
int dp[MAX_VAL][MAX_VAL];
int a[MAX_VAL], b[MAX_VAL];

int recurse(int n, int m, int index, int OR) {
  if (index == n) {
    return OR;
  }
  if (dp[index][OR] != -1)
    return dp[index][OR];
  int answer = INT_MAX;
  for (int i = 0; i < m; ++i) {
    int ret = recurse(n, m, index + 1, OR | (a[index] & b[i]));
    answer = min(answer, ret);
  }
  return dp[index][OR] = answer;
}

int main() {
  int n, m;
  cin >> n >> m;
  for (int i = 0; i < n; ++i)
    cin >> a[i];
  for (int i = 0; i < m; ++i)
    cin >> b[i];
  memset(dp, -1, sizeof(dp));
  cout << recurse(n, m, 0, 0) << '\n';
  return 0;
}