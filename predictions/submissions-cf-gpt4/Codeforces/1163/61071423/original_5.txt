```cpp
#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> ip;
typedef pair<ip, ip> iip;

#define X first
#define Y second

inline int gcd(int a, int b) { return b ? gcd(b, a % b) : a; }

ip slope(int x1, int y1, int x2, int y2) {
    int dx = x2 - x1, dy = y2 - y1;
    int g = gcd(abs(dx), abs(dy));
    dx /= g;
    dy /= g;
    if (dx < 0) {
        dx *= -1;
        dy *= -1;
    }
    return {dy, dx};
}

ip cept(int x1, int y1, int x2, int y2) {
  int cx = y2 * x1 - x2 * y1, cy = x2 - x1;
  int g = gcd(abs(cx), abs(cy));
  cx /= g;
  cy /= g;
  if (cx < 0) {
    cx *= -1;
    cy *= -1;
  }
  return {cx, cy};
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  int n;
  cin >> n;
  ip a[n];
  for(int i = 0; i < n; i++) {
    cin >> a[i].X >> a[i].Y;
  }
  unordered_map<ip, unordered_set<ip>> mp;
  for(int i = 0; i < n; i++) {
    for(int j = i+1; j < n; j++) {
      ip s1 = slope(a[i].X, a[i].Y, a[j].X, a[j].Y);
      ip c = cept(a[i].X, a[i].Y, a[j].X, a[j].Y);
      mp[s1].insert(c);
    }
  }
  long long x = 0;
  for(auto &i : mp) {
    int si = i.second.size();
    x += 1LL * si * (si - 1) / 2;
  }
  long long si = mp.size();
  cout << si * (si - 1) / 2 - x;
}
```