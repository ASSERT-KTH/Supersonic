```cpp
#include <iostream>
#include <vector>
#include <map>
#include <set>

using namespace std;

typedef pair<int,int> ip;

pair<int,int> slope(int x1, int y1, int x2, int y2) {
    int dx = x2 - x1;
    int dy = y2 - y1;
    int g = __gcd(abs(dx), abs(dy));
    dx /= g; dy /= g;
    if (dx < 0) {
        dx *= -1; dy *= -1;
    }
    return {dx, dy};
}

pair<int,int> intercept(int x1, int y1, int x2, int y2) {
    int c = y2 * x1 - x2 * y1;
    int dx = x2 - x1;
    int g = __gcd(abs(c), abs(dx));
    c /= g; dx /= g;
    if (c < 0) {
        c *= -1; dx *= -1;
    }
    return {c, dx};
}

int main() {
    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    int n;
    cin >> n;
    vector<ip> points(n);
    for(auto& p : points) cin >> p.first >> p.second;

    map<ip, set<pair<int, int>>> lines;
    for (int i = 0; i < n; ++i) {
        for (int j = i+1; j < n; ++j) {
            ip s = slope(points[i].first, points[i].second, points[j].first, points[j].second);
            pair<int,int> c = intercept(points[i].first, points[i].second, points[j].first, points[j].second);
            lines[s].insert(c);
        }
    }

    long long total = 0;
    long long x = 0;
    for(auto& line : lines) {
        long long size = line.second.size();
        total += size;
        x += size * (size - 1) / 2;
    }

    cout << total * (total - 1) / 2 - x;
    return 0;
}
```