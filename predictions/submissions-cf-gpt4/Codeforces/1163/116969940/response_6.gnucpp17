#include <iostream>
#include <vector>
#include <set>
#include <unordered_map>

using namespace std;

const int mxN = 1e5;

void solve() {
  int n;
  cin >> n;
  vector<int> mp(mxN, 0);
  int ans = 0;
  unordered_map<int, int> freq;
  set<int> st;
  for (int i = 0; i < n; ++i) {
    int x;
    cin >> x;
    if (mp[x]) {
      freq[mp[x]]--;
      if(freq[mp[x]] == 0) freq.erase(mp[x]);
    }
    mp[x]++;
    freq[mp[x]]++;
    st.insert(x);
    int min1 = freq.begin()->first;
    int min2 = freq.rbegin()->first;
    if (min1 > min2) swap(min1, min2);
    int w = freq[min1], y = freq[min2];
    if (st.size() == 1 || (max(w, y) == i + 1 && min1 == 1) || (min1 * w + min2 * y == i + 1 && ((min2 == 1 || min2 - 1 == min1) && y == 1 || (min1 == 1 || min1 - 1 == min2) && w == 1 || min1 == 1 && min2 == 1)))
      ans = i;
  }
  cout << ans + 1 << endl;
}

int main() {
  ios_base ::sync_with_stdio(false);
  cin.tie(NULL);
  solve();
  return 0;
}