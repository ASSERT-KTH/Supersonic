```cpp
#include <iostream>
#include <vector>
#include <unordered_set>
#define int long long
const int N = 1e9 + 7;
int t, n, cnt;
int a[400005];
std::unordered_set<int> e[400005];
void dfs(int u, std::vector<bool>& vis) {
  vis[u] = true;
  for (const auto& v : e[u]) {
    if (!vis[v])
      dfs(v, vis);
  }
}
int qmi(int cnt) {
  int x = 2, s = 1;
  while (cnt) {
    if (cnt & 1)
      s = s * x % N;
    x = x * x % N;
    cnt >>= 1;
  }
  return s % N;
}
signed main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);
  std::cin >> t;
  while (t--) {
    std::cin >> n;
    cnt = 0;
    std::vector<bool> vis(n + 1, false);
    for (int i = 1; i <= n; i++) {
      std::cin >> a[i];
      e[i].clear();
    }
    for (int v, i = 1; i <= n; i++) {
      std::cin >> v;
      e[a[i]].insert(v);
    }
    for (int i = 1; i <= n; i++)
      if (!vis[a[i]])
        cnt++, dfs(a[i], vis);
    std::cout << qmi(cnt) << "\n";
  }
  return 0;
}
```