#include <iostream>
#include <vector>
#include <algorithm>
#define int long long
using namespace std;
const int MAX = 2e5;
int n, m, u, v, w, q;
vector<int> par(MAX), sz(MAX, 1), e(MAX), PS(MAX);
int root(int x) { return par[x] = (par[x] == x ? x : root(par[x])); }
int mrg(int x, int y) {
  x = root(x), y = root(y);
  if (x == y)
    return 0;
  if (sz[x] < sz[y])
    swap(x, y);
  int tmp = sz[x] * sz[y];
  par[y] = x;
  sz[x] += sz[y];
  return tmp;
}
void dsu() {
  for (int i = 1; i <= n; i++)
    par[i] = i;
  for (int i = 0; i < n - 1; i++)
    PS[e[i]] += mrg(u, v);
  for (int i = 1; i <= MAX; i++)
    PS[i] += PS[i - 1];
}
main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cin >> n >> m;
  for (int i = 0; i < n - 1; i++) {
    cin >> u >> v >> w;
    e[w] = {w};
  }
  dsu();
  while (m--) {
    cin >> q;
    cout << PS[q] << ' ';
  }
}