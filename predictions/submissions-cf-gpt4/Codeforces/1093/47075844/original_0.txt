```cpp
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
const int mod = 998244353;

class graph {
public:
    int n;
    vector<vi> adj;
    vector<bool> visited;
    vi col;
    graph(int nodeNumber) : n(nodeNumber), adj(nodeNumber + 1), visited(nodeNumber + 1), col(nodeNumber + 1) {}
    void addEdge(int a, int b) {
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    ll findans() {
        ll res = 1;
        for (int c = 1; c <= n; ++c) {
            if (!visited[c]) {
                visited[c] = true;
                if (!bfs(c)) {
                    return 0;
                } else {
                    res = (2 * res) % mod;
                }
            }
        }
        return res;
    }
    bool bfs(int p) {
        queue<int> q;
        q.push(p);
        col[p] = 1;
        while (!q.empty()) {
            int u = q.front();
            q.pop();
            for (auto v : adj[u]) {
                if (!visited[v]) {
                    visited[v] = true;
                    col[v] = 3 - col[u];
                    q.push(v);
                } else if (col[v] == col[u]) {
                    return false;
                }
            }
        }
        return true;
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    int t;
    cin >> t;
    while (t--) {
        int n, m;
        cin >> n >> m;
        graph g(n);
        for (int i = 0; i < m; ++i) {
            int a, b;
            cin >> a >> b;
            g.addEdge(a, b);
        }
        cout << g.findans() << '\n';
    }
    return 0;
}
```