```cpp
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using vi = vector<int>;
constexpr ll MOD = 998244353;
constexpr int MAXN = 3e5 + 5;
vector<int> powr(MAXN);
vector<vi> adj(MAXN);
vi col(MAXN);
ll ans = 1;
int grp[3];

bool bfs(int src) {
    queue<int> q;
    q.push(src);
    col[src] = 1;
    grp[1] = 1;
    grp[2] = 0;
    while (!q.empty()) {
        int node = q.front();
        q.pop();
        for (auto &i : adj[node]) {
            if (!col[i]) {
                col[i] = 3 - col[node];
                grp[col[i]]++;
                q.push(i);
            } else if (col[i] == col[node]) {
                return false;
            }
        }
    }
    ans = (ans * (powr[grp[1]] + powr[grp[2]])) % MOD;
    return true;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    powr[0] = 1;
    for (int i = 1; i < MAXN; i++) {
        powr[i] = (powr[i - 1] * 2) % MOD;
    }
    int t;
    cin >> t;
    while (t--) {
        int n, m;
        cin >> n >> m;
        for (int i = 1; i <= n; i++) {
            adj[i].clear();
            col[i] = 0;
        }
        ans = 1;
        for (int i = 0; i < m; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        bool ok = true;
        for (int i = 1; i <= n; i++) {
            if (!col[i] && !bfs(i)) {
                ok = false;
                break;
            }
        }
        cout << (ok ? ans : 0) << "\n";
    }
    return 0;
}
```