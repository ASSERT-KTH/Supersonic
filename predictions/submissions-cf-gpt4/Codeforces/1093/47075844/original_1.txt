```cpp
#include <bits/stdc++.h>
#define F first
#define S second
#define pb push_back
#define sz(k) k.size()
#define MAX 300005
#define mod 998244353

using namespace std;
typedef long long ll;

ll power[MAX];
vector<int> color(MAX), visited(MAX);
vector<vector<int>> adj(MAX);

bool bfs(int src) {
    queue<int> q;
    q.push(src);
    visited[src] = true;
    color[src] = 1;
    while(!q.empty()) {
        int u = q.front();
        q.pop();
        for(auto v : adj[u]) {
            if(color[v] == color[u]) return false;
            if(color[v] == -1) color[v] = color[u]^1;
            if(!visited[v]) {
                visited[v] = true;
                q.push(v);
            }
        }
    }
    return true;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    power[0] = 1;
    for(int i = 1; i < MAX; i++) power[i] = (2 * power[i-1]) % mod;

    int t;
    cin >> t;
    while(t--) {
        int n, m;
        cin >> n >> m;
        for(int i = 1; i <= n; i++) {
            adj[i].clear();
            visited[i] = false;
            color[i] = -1;
        }

        while(m--) {
            int u, v;
            cin >> u >> v;
            adj[u].pb(v);
            adj[v].pb(u);
        }

        ll res = 1;
        for(int i = 1; i <= n; i++) {
            if(!visited[i]) {
                if(!bfs(i)) {
                    res = 0;
                    break;
                } else {
                    res = (res * 2) % mod;
                }
            }
        }
        cout << res << endl;
    }
}
```