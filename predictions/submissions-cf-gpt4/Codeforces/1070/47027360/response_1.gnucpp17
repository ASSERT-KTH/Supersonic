#include <iostream>
#include <queue>
#include <cstring>
using namespace std;

typedef pair<int, int> pii;

int vis[6000][600];
pii dp[6000][600];
int s, d;

bool bfs() {
  queue<pii> q;
  q.push({s, 0});
  vis[s][0] = 1;
  int f = 1, mul, sum;
  while (!q.empty()) {
    pii p = q.front();
    q.pop();
    for (int i = f; i < 10; i++) {
      sum = p.first - i;
      mul = (p.second * 10 + i) % d;
      if (sum == 0 && mul == 0) {
        dp[sum][mul] = p;
        return true;
      }
      if (sum >= 0 && !vis[sum][mul]) {
        vis[sum][mul] = 1;
        q.push({sum, mul});
        dp[sum][mul] = p;
      }
    }
    f = 0;
  }
  return false;
}

void print(int sum, int mul) {
  if (sum == s && mul == 0)
    return;
  print(dp[sum][mul].first, dp[sum][mul].second);
  cout << dp[sum][mul].first - sum;
}

int main() {
  cin >> d >> s;
  memset(vis, 0, sizeof(vis));
  if (bfs()) {
    print(0, 0);
  } else
    cout << -1 << endl;
  return 0;
}