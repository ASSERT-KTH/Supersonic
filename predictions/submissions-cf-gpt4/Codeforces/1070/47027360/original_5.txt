```cpp
#include <iostream>
#include <vector>
#include <queue>

using namespace std;

vector<vector<int>> dp(6000, vector<int>(600, -1));
vector<vector<bool>> vis(6000, vector<bool>(600, false));

void print(int sum, int mod) {
  if (sum == 0 && mod == 0)
    return;
  print(sum - dp[sum][mod], dp[sum][mod]);
  cout << sum - dp[sum][mod];
}

bool bfs(int s, int d) {
  queue<pair<int, int>> q;
  q.push({s, 0});
  vis[s][0] = true;

  while (!q.empty()) {
    int sum = q.front().first;
    int mod = q.front().second;
    q.pop();

    if (sum == 0 && mod == 0) {
      return true;
    }

    for (int i = 0; i <= 9; ++i) {
      if (sum - i >= 0) {
        int next_mod = (mod * 10 + i) % d;
        if (!vis[sum - i][next_mod]) {
          vis[sum - i][next_mod] = true;
          dp[sum - i][next_mod] = i;
          q.push({sum - i, next_mod});
        }
      }
    }
  }
  return false;
}

int main() {
  int s, d;
  cin >> s >> d;

  if (bfs(s, d)) {
    print(s, 0);
  } else {
    cout << -1 << endl;
  }

  return 0;
}
```
