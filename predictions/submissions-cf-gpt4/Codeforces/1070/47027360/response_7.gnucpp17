#include <bits/stdc++.h>
using namespace std;
#define READ freopen("in.txt", "r", stdin)
#define WRITE freopen("out.txt", "w", stdout);
#define pb push_back
#define mem(arr, val) memset(arr, val, sizeof(arr))
#define sf(x) scanf("%d", &x)
#define sf2(x, y) scanf("%d %d", &x, &y)
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sl(x) scanf("%lld", &x)
#define sl2(x, y) scanf("%lld %lld", &x, &y)
#define sl3(x, y, z) scanf("%lld %lld %lld", &x, &y, &z)
#define pii pair<int, int>
#define pLL pair<long long, long long>
#define ff first
#define sn second
#define mx 100005
typedef long long ll;
typedef long long int lln;
ll INF = 1 << 28;
const double pi = acos(-1.0);
int fx[] = {1, -1, 0, 0};
int fy[] = {0, 0, 1, -1};
int dir[4][2] = {1, 0, -1, 0, 0, -1, 0, 1};
const long double EPS = 1e-7;
bool cmp(int a, int b) { return a < b; }
struct compare {
  bool operator()(const int &l, const int &r) { return l > r; }
};
bool cmp1(int a, int b) { return a > b; }
int vis[6000][600];
pii dp[6000][600];
int s, d;
int bfs() {
  queue<pii> q;
  q.push(make_pair(s, 0));
  vis[s][0] = 1;
  pii p;
  int f = 1, mul, sum;
  while (!q.empty()) {
    p = q.front();
    q.pop();
    for (int i = f; i < 10; i++) {
      sum = p.ff - i;
      mul = (p.sn * 10 + i) % d;
      if (sum == 0 && mul == 0) {
        dp[sum][mul] = make_pair(p.ff, p.sn);
        return 1;
      }
      if (sum >= 0 && !vis[sum][mul]) {
        vis[sum][mul] = 1;
        q.push(make_pair(sum, mul));
        dp[sum][mul] = make_pair(p.ff, p.sn);
      }
    }
    f = 0;
  }
  return 0;
}
void print(int sum, int mul) {
  if (!(sum == s && mul == 0))
    print(dp[sum][mul].ff, dp[sum][mul].sn);
  cout << dp[sum][mul].ff - sum;
}
int main() {
  sf2(d, s);
  if (bfs() == 1)
    print(0, 0);
  else
    cout << -1 << '\n';
  return 0;
}