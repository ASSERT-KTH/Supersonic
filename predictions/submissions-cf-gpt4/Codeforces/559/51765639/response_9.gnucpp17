#include <iostream>
#include <cmath>

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);

  const double PI = std::acos(-1);
  const double ang = PI / 3.0; // 120 degrees in radians
  double a[6];

  for (int i = 0; i < 6; ++i) {
    std::cin >> a[i];
  }

  double A1 = 0.5 * a[0] * a[1] * std::sin(ang);
  double A2 = 0.5 * a[2] * a[3] * std::sin(ang);
  double A3 = 0.5 * a[4] * a[5] * std::sin(ang);
  double x1 = std::sqrt(a[0] * a[0] + a[1] * a[1] - 2.0 * a[0] * a[1] * std::cos(ang));
  double x2 = std::sqrt(a[2] * a[2] + a[3] * a[3] - 2.0 * a[2] * a[3] * std::cos(ang));
  double x3 = std::sqrt(a[4] * a[4] + a[5] * a[5] - 2.0 * a[4] * a[5] * std::cos(ang));
  double s = (x1 + x2 + x3) / 2.0;
  double A4 = std::sqrt(s * (s - x1) * (s - x2) * (s - x3));

  int tottri = static_cast<int>((A1 + A2 + A3 + A4) / std::sqrt(3) / 4 + 0.5); // Area of equilateral triangle with side 1
  std::cout << tottri << '\n';
}