#include <iostream>
#include <cmath>

const double PI = acos(-1);

inline double TriangleAreaWithSide(double a, double b, double c) {
  double s = (a + b + c) / 2;
  double area = sqrt(s * (s - a) * (s - b) * (s - c));
  return area;
}

inline double sqr(double a) { return a * a; }

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);

  double a[6];
  for (int i = 0; i < 6; i++) {
    std::cin >> a[i];
  }
  double ang = PI / 3; // 120 degrees converted to radians
  double a1 = 0.5 * a[0] * a[1] * sin(ang);
  double a2 = 0.5 * a[2] * a[3] * sin(ang);
  double a3 = 0.5 * a[4] * a[5] * sin(ang);
  double x1 = sqrt(sqr(a[0]) + sqr(a[1]) - 2.0 * a[0] * a[1] * cos(ang));
  double x2 = sqrt(sqr(a[2]) + sqr(a[3]) - 2.0 * a[2] * a[3] * cos(ang));
  double x3 = sqrt(sqr(a[4]) + sqr(a[5]) - 2.0 * a[4] * a[5] * cos(ang));
  double a4 = TriangleAreaWithSide(x1, x2, x3);
  double ar = TriangleAreaWithSide(1, 1, 1);
  int tottri = static_cast<int>((a1 + a2 + a3 + a4) / ar);
  std::cout << tottri << '\n';

  return 0;
}