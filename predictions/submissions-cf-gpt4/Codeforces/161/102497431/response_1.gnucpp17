#include <iostream>
#include <vector>

#define MAX_NODES 50005
#define MAX_K 505

using namespace std;
using ll = long long;

vector<int> g[MAX_NODES];
ll dp[MAX_NODES][MAX_K];
ll ans;
int n, k;

void dfs(int node, int par) {
    for (auto &u : g[node]) {
        if (u == par)
            continue;
        dfs(u, node);
        for (int i = 1; i <= k; i++) {
            dp[node][i] += dp[u][i - 1];
        }
    }
    ans += dp[node][k];
    ll tot = 0;
    for (int i = 1, j = k - 1; i < k; i++, j--) {
        for (auto &u : g[node]) {
            if (u == par)
                continue;
            tot += (dp[u][i - 1]) * (dp[node][j] - dp[u][j - 1]);
        }
    }
    ans += tot / 2;
    dp[node][0] = 1;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cin >> n >> k;
    for (int i = 0; i < n - 1; i++) {
        int u, v;
        cin >> u >> v;
        --u, --v;
        g[u].push_back(v), g[v].push_back(u);
    }
    dfs(0, -1);
    cout << ans << "\n";
    return 0;
}