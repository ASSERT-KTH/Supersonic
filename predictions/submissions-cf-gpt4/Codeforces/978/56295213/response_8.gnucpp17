#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct node {
    int l, r, s, id;
};

bool cmp(node a, node b) {
    if (a.r != b.r) return a.r < b.r;
    return a.s > b.s;
}

const int MAXN = 1e5 + 5;
node a[MAXN];
int ans[MAXN], vis[MAXN];

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    int n, m;
    cin >> n >> m;
    for (int i = 1; i <= m; ++i) {
        cin >> a[i].l >> a[i].r >> a[i].s;
        a[i].id = i;
    }
    sort(a + 1, a + m + 1, cmp);
    for (int i = 1; i <= m; ++i) {
        int cnt = a[i].s;
        for (int j = a[i].l; !vis[j] && j < a[i].r; ++j) {
            cnt--;
            vis[j] = a[i].id;
        }
        if (cnt) {
            cout << -1;
            return 0;
        }
    }
    for (int i = 1; i <= n; i++)
        cout << vis[i] << " ";
}