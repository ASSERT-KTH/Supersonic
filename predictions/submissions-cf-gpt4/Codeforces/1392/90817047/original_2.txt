```
#include <algorithm>
#include <iostream>
#include <vector>

template <typename T>
std::istream &operator>>(std::istream &input, std::vector<T> &v) {
  for (T &a : v)
    input >> a;
  return input;
}

void answer(const std::vector<int> &v) {
  for (size_t i = 0; i < v.size(); i++) {
    if (i > 0) std::cout << ' ';
    std::cout << v[i];
  }
  std::cout << '\n';
}

void solve(std::vector<int> &a, unsigned long long k) {
  const auto b = std::minmax_element(a.cbegin(), a.cend());
  const int min = *b.first;
  const int max = *b.second;
  if (k % 2 == 0) {
    std::transform(a.begin(), a.end(), a.begin(), [min, max](int x) { return max - min - x; });
  } else {
    std::transform(a.begin(), a.end(), a.begin(), [max](int x) { return max - x; });
  }
  answer(a);
}

int main() {
  size_t t;
  std::cin >> t;
  while (t-- > 0){
    size_t n;
    std::cin >> n;
    unsigned long long k;
    std::cin >> k;
    std::vector<int> a(n);
    std::cin >> a;
    solve(a, k);
  }
  return 0;
}
```