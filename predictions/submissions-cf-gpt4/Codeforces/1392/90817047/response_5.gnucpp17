#include <iostream>
#include <vector>
#include <algorithm>

template <typename T>
std::istream &operator>>(std::istream &input, std::vector<T> &v) {
  for (T &a : v)
    input >> a;
  return input;
}

void solve(std::vector<int> &a, unsigned long long k) {
  const auto [min, max] = std::minmax_element(a.begin(), a.end());
  if (k % 2) {
    std::for_each(a.begin(), a.end(), [max](int &x) { x = *max - x; });
  } else {
    std::for_each(a.begin(), a.end(), [min, max](int &x) { x = *max - *min - x; });
  }
}

void print(const std::vector<int> &v) {
  for (const int x : v) {
    std::cout << x << " ";
  }
  std::cout << '\n';
}

void test_case() {
  size_t n;
  std::cin >> n;
  unsigned long long k;
  std::cin >> k;
  std::vector<int> a(n);
  std::cin >> a;
  solve(a, k);
  print(a);
}

int main() {
  size_t t;
  std::cin >> t;
  while (t-- > 0)
    test_case();
  return 0;
}