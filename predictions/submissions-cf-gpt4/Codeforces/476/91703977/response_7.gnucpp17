#include <iostream>
#include <vector>
#include <cmath>
#include <iomanip>

using namespace std;

const int MAX = 1001;
double dp[MAX][MAX];

void init_dp() {
    dp[0][0] = 1.0;
    for (int i = 1; i < MAX; ++i) {
        dp[i][0] = dp[i - 1][0] / 2.0;
        for (int j = 1; j <= i; ++j) {
            dp[i][j] = (dp[i - 1][j - 1] + dp[i - 1][j]) / 2.0;
        }
    }
}

int main() {
    init_dp();
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    string a, b;
    cin >> a >> b;
    int apos = 0, bpos = 0, amb = 0;
    for (char c : a) apos += (c == '+') ? 1 : -1;
    for (char c : b) {
        if (c == '+') bpos++;
        else if (c == '-') bpos--;
        else amb++;
    }
    int diff = apos - bpos;
    if (abs(diff) > amb) {
        cout << std::fixed << setprecision(9) << 0.0 << "\n";
        return 0;
    }
    cout << std::fixed << setprecision(9) << dp[amb][(amb + diff) / 2] << "\n";
    return 0;
}