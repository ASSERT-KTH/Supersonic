```cpp
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ld long double
#define endl "\n"
int l[1001][1001] = {};
void initialize() {
  l[0][0] = 1;
  for (int i = 1; i < 1001; i++) {
    l[i][0] = 1;
    for (int j = 1; j <= i; j++) {
      l[i][j] = (l[i - 1][j - 1] + l[i - 1][j]);
    }
  }
}
int nCr(int n, int r) { return l[n][r]; }
void solve() {
  string a, b;
  cin >> a >> b;
  ld prob;
  int apos = count(a.begin(), a.end(), '+') - count(a.begin(), a.end(), '-');
  int bpos = count(b.begin(), b.end(), '+') - count(b.begin(), b.end(), '-');
  int amb = count(b.begin(), b.end(), '?');
  int diff = apos - bpos;
  if (amb == 0 and diff == 0) {
    prob = 1;
    cout << prob << endl;
    return;
  } else if (amb == 0 and diff != 0) {
    prob = 0;
    cout << prob << endl;
    return;
  }
  int u = (amb + diff) / 2;
  int v = amb - u;
  if ((amb + diff) & 1 or (u < 0 or v < 0)) {
    prob = 0;
    cout << prob << endl;
    return;
  }
  ld q = pow(2, amb);
  ld p = nCr(amb, u);
  prob = p / q;
  cout << prob << endl;
}
int32_t main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  initialize();
  cout << setprecision(15) << fixed;
  int t = 1;
  for (int i = 1; i <= t; i++) {
    solve();
  }
  return 0;
}
```