```c++
#include <iostream>
#include <vector>
#include <deque>
#include <utility>
#include <algorithm>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false); 
  cin.tie(NULL);

  int n, q;
  cin >> n >> q;

  deque<int> deq(n);
  vector<pair<int, int>> v;
  int mx = -1;
  int temp;

  for(int i = 0; i < n; ++i) {
    cin >> temp;
    deq[i] = temp;
    if (temp > mx) {
      mx = temp;
    }
  }

  vector<int> finalarray;
  int a, b;
  while (true) {
    a = deq.front(); deq.pop_front();
    if (a == mx) {
      finalarray.push_back(a);
      while (!deq.empty()) {
        finalarray.push_back(deq.front());
        deq.pop_front();
      }
      break;
    }
    b = deq.front(); deq.pop_front();
    v.push_back(make_pair(a, b));
    if (a > b) {
      deq.push_front(a);
      deq.push_back(b);
    } else {
      deq.push_front(b);
      deq.push_back(a);
    }
  }

  long long query;
  int cnt = v.size();
  for(int i = 0; i < q; ++i) {
    cin >> query;
    if (query <= cnt) {
      cout << v[query - 1].first << " " << v[query - 1].second << "\n";
    } else {
      query -= cnt;
      query %= n - 1;
      cout << mx << " " << finalarray[query + 1] << "\n";
    }
  }

  return 0;
}
```