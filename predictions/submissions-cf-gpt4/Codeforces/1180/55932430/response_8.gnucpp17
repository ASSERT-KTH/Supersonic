#include <vector>
#include <deque>

int main() {
    int n, q;
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cin >> n >> q;
    std::deque<int> deq;
    std::vector<std::pair<int, int>> v;
    int mx = -1;
    for (int i = 0; i < n; ++i) {
        int temp;
        std::cin >> temp;
        deq.push_back(temp);
        if (temp > mx) {
            mx = temp;
        }
    }
    std::vector<int> finalarray;
    while (true) {
        int a = deq.front();
        deq.pop_front();
        if (a == mx) {
            while (!deq.empty()) {
                finalarray.push_back(deq.front());
                deq.pop_front();
            }
            break;
        }
        int b = deq.front();
        deq.pop_front();
        if (a > b) {
            deq.push_front(a);
            deq.push_back(b);
        } else {
            deq.push_front(b);
            deq.push_back(a);
        }
        v.push_back(std::make_pair(a, b));
    }
    for(int i = 0; i < q; ++i) {
        long long query;
        std::cin >> query;
        if (query <= v.size()) {
            std::cout << v[query - 1].first << " " << v[query - 1].second << "\n";
        } else {
            query = (query - v.size() - 1) % (n - 1);
            std::cout << mx << " " << finalarray[query] << "\n";
        }
    }
    return 0;
}