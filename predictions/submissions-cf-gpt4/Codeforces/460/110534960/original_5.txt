```
#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>

using namespace std;

typedef long long ll;
typedef vector<ll> vl;

const int N = 1e5 + 70;

ll n, m, w, h[N];

bool check(ll x) {
  vl s(n, 0ll);
  ll cur = 0, mm = 0;
  for (int i = 0; i < n; ++i) {
    if (i >= w)
      cur -= s[i - w];
    if (h[i] >= x)
      continue;
    if (h[i] + cur < x) {
      s[i] = x - h[i] - cur;
      cur += s[i];
      mm += s[i];
      if (mm > m)
        return false;
    }
  }
  return true;
}

void solve() {
  cin >> n >> m >> w;
  ll mn = LLONG_MAX;
  for (int i = 0; i < n; ++i) {
    cin >> h[i];
    mn = min(mn, h[i]);
  }
  ll l = 0, r = mn + m, ans = 0;
  while (l <= r) {
    ll md = l + ((r - l) >> 1);
    if (check(md)) {
      ans = max(ans, md);
      l = md + 1;
    } else {
      r = md - 1;
    }
  }
  cout << ans << '\n';
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int t = 1;
  while (t--) {
    solve();
  }
  return 0;
}
```