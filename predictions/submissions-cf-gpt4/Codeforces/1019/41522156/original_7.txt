```cpp
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <iostream>
#include <vector>
#include <utility>
typedef long long int64;
typedef std::pair<int64, int64> Point;
int64 S;
std::vector<Point> points;
bool check(int64 x1, int64 y1, int64 x2, int64 y2, int64 x3, int64 y3) {
    return (x2 - x1) * (y3 - y1) == (x3 - x1) * (y2 - y1) && (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) == S;
}
int main() {
    int n;
    std::cin >> n >> S;
    S *= 2L;
    points.resize(n);
    for (int i = 0; i < n; ++i) {
        std::cin >> points[i].first >> points[i].second;
    }
    for (int i = 0; i < n; ++i) {
        for (int j = i + 1; j < n; ++j) {
            for (int k = j + 1; k < n; ++k) {
                if (check(points[i].first, points[i].second, points[j].first, points[j].second, points[k].first, points[k].second)) {
                    std::cout << "Yes\n";
                    std::cout << points[i].first << " " << points[i].second << "\n";
                    std::cout << points[j].first << " " << points[j].second << "\n";
                    std::cout << points[k].first << " " << points[k].second << "\n";
                    return 0;
                }
            }
        }
    }
    std::cout << "No\n";
    return 0;
}
```