```
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define vi vector
#define pb push_back
#define all(v) (v).begin(), (v).end()
#define sz(x) (int)(x).size()

struct digraph {
  int n;
  vi<vi<int>> adj;
  digraph(int _n, vi<array<int, 2>> &e) {
    n = _n;
    adj = vi<vi<int>>(n);
    for(auto &a : e) adj[a[0]].pb(a[1]);
  }
  vi<int> toposort() {
    vi<int> d(n);
    queue<int> qu;
    for(int i = 0; i < n; i++) {
      d[i] = sz(adj[i]);
      if (!d[i]) qu.push(i);
    }
    vi<int> ans;
    while (qu.size()) {
      int u = qu.front();
      qu.pop();
      for(auto &v : adj[u]) {
        --d[v];
        if (!d[v]) qu.push(v);
      }
      ans.pb(u);
    }
    if (sz(ans) < n) ans.clear();
    return ans;
  }
};

void solve() {
  int n;
  cin >> n;
  vi<int> a(n), b(n);
  for(auto &i : a) cin >> i;
  for(auto &i : b) cin >> i;
  vi<array<int, 2>> e;
  for(int i = 0; i < n; i++)
    if (b[i] >= 0) e.pb({i, b[i] - 1});
  digraph g(n, e);
  ll ans = 0;
  vi<int> t = g.toposort(), ans1, d;
  for(auto &x : t) {
    if (a[x] > 0) {
      ans1.pb(x);
      ans += a[x];
      if (b[x] >= 0) a[b[x] - 1] += a[x];
    } else d.pb(x);
  }
  reverse(all(d));
  for(auto &x : d) {
    ans += a[x];
    ans1.pb(x);
  }
  cout << ans << "\n";
  for(auto &i : ans1) cout << i+1 << " ";
  cout << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  solve();
  return 0;
}
```