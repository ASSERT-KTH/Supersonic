#include <iostream>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;
typedef long long ll;
typedef pair<ll, ll> pll;

const int MAX_N = 2005;

pll ans[2];
ll sum[2];
ll a[MAX_N][MAX_N], diag1[2 * MAX_N], diag2[2 * MAX_N];

void update(int c, int i, int j, ll val) {
  if (val > sum[c]) {
    sum[c] = val;
    ans[c].first = i;
    ans[c].second = j;
  }
}

void solve() {
  ll n;
  cin >> n;
  fill(diag1, diag1 + 2*n, 0);
  fill(diag2, diag2 + 2*n, 0);
  sum[0] = sum[1] = -1;
  for (ll i = 1; i <= n; i++) {
    for (ll j = 1; j <= n; j++) {
      cin >> a[i][j];
      diag1[i + j] += a[i][j];
      diag2[i - j + n] += a[i][j];
    }
  }
  for (ll i = 1; i <= n; i++) {
    for (ll j = 1; j <= n; j++) {
      ll val = diag1[i + j] + diag2[i - j + n] - a[i][j];
      update((i + j) % 2, i, j, val);
    }
  }
  cout << sum[0] + sum[1] << "\n";
  for (auto it : ans) {
    cout << it.first << " " << it.second << "\n";
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  solve();
  return 0;
}