```C++
#include <bits/stdc++.h>
using namespace std;
#define int long long
const int MOD = 1e9+7;
const int N = 1e6 + 5;
struct mod_int {
  int val;
  mod_int(long long v = 0) {
    if (v < 0)
      v = v % MOD + MOD;
    if (v >= MOD)
      v %= MOD;
    val = v;
  }
  mod_int &operator+=(const mod_int &other) {
    val += other.val;
    if (val >= MOD)
      val -= MOD;
    return *this;
  }
  mod_int &operator*=(const mod_int &other) {
    val = val * other.val % MOD;
    return *this;
  }
  mod_int &operator/=(const mod_int &other) {
    return *this *= mod_int(other).inv();
  }
  mod_int inv() const {
    int a = val, b = MOD, u = 1, v = 0;
    while (b) {
      int t = a / b;
      a -= t * b;
      swap(a, b);
      u -= t * v;
      swap(u, v);
    }
    return mod_int(u);
  }
};
mod_int P[N];
mod_int ele[N];
void solve() {
  int n, k;
  cin >> n >> k;
  for (int i = 1; i <= k + 3; i++) {
    mod_int j = i;
    P[i] = P[i - 1] += j;
  }
  if (n <= k + 2) {
    cout << P[n].val;
    return;
  }
  ele[1] = 1;
  for (int i = 1; i <= k + 2; i++) {
    ele[1] *= (n - i);
    ele[1] /= (i);
  }
  mod_int ans = 0;
  ans += ele[1] * P[1];
  for (int i = 2; i <= k + 3; i++) {
    ele[i] = ele[i - 1] * (k - i + 3);
    ele[i] /= (i - 1);
    ele[i] /= (n - i + 1);
    ele[i] *= (n - i + 2);
    ans += ele[i] * P[i];
  }
  cout << ans.val;
}
signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  int t = 1;
  while (t--)
    solve();
  return 0;
}
```