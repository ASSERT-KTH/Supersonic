```
#include <iostream>
#include <algorithm>
#include <vector>
#include <unordered_map>
#include <unordered_set>

const int MOD = 998244353;
int t;
int n, l, r, aux;
std::unordered_map<int, int> a;
std::unordered_map<int, int> b;
std::unordered_set<int> color;

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);

  std::cin >> t;
  while (t--) {
    std::cin >> n >> l >> r;
    std::vector<int> inputs(n);
    for (int i = 0; i < n; ++i) {
      std::cin >> inputs[i];
      if (i < l) {
        ++a[inputs[i]];
      } else {
        ++b[inputs[i]];
      }
      color.insert(inputs[i]);
    }
    for (int x : color) {
      int elim = std::min(a[x], b[x]);
      a[x] -= elim;
      l -= elim;
      b[x] -= elim;
      r -= elim;
    }
    if (l < r) {
      std::swap(l, r);
      std::swap(a, b);
    }
    int ans = 0;
    for (int x : color) {
      int change = std::min(a[x] / 2 * 2, l - r);
      ans += change / 2;
      l -= change;
    }
    ans += (l - r) / 2 + (l + r) / 2;
    std::cout << ans << '\n';
    a.clear();
    b.clear();
    color.clear();
  }
  return 0;
}
```