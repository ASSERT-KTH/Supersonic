```cpp
#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>

using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);
    int t, n, l, r, aux;
    cin >> t;
    while (t--) {
        cin >> n >> l >> r;
        vector<int> sock(n+1), count(n+1, 0);
        for (int i = 1; i <= n; ++i) {
            cin >> sock[i];
            if (i <= l) ++count[sock[i]];
        }
        int excess = abs(l - r) / 2;
        int ans = 0;
        for (int i = 1; i <= n && excess; ++i) {
            int take = min(excess, count[sock[i]]);
            ans += take;
            excess -= take;
            count[sock[i]] -= take;
        }
        if (l > r) {
            for (int i = 1; i <= n && excess; ++i) {
                int take = min(excess, count[sock[i]]);
                ans += take;
                excess -= take;
            }
        }
        unordered_map<int, int> remain;
        for (int i = 1; i <= n; ++i)
            if (count[sock[i]]) ++remain[sock[i]];
        for (auto &it : remain)
            ans += it.second / 2;
        cout << ans << '\n';
    }
    return 0;
}
```