```cpp
#include <bits/stdc++.h>
#define MAX_SIZE 100005
#define MAX_DEPTH 6
using namespace std;
typedef long long int ll;

ll dp[MAX_SIZE][MAX_DEPTH];

ll calc_max_score(int i, int moves_left, int max_left_moves, int arr[], bool went_left=false) {
  if (moves_left == 0 || i < 0)
    return 0;
  if (dp[i][max_left_moves])
    return dp[i][max_left_moves];
  
  ll left_score = 0;
  ll right_score = calc_max_score(i + 1, moves_left - 1, max_left_moves, arr);
  
  if (max_left_moves > 0 && !went_left) {
    left_score = calc_max_score(i - 1, moves_left - 1, max_left_moves - 1, arr, true);
  }
  dp[i][max_left_moves] = arr[i] + max(left_score, right_score);
  return dp[i][max_left_moves];
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  int num_tests;
  cin >> num_tests;
  while (num_tests--) {
    int array_size, allowed_moves, max_left_moves;
    cin >> array_size >> allowed_moves >> max_left_moves;
    
    int arr[array_size];
    for(int i = 0; i < array_size; i++) { 
        cin >> arr[i];
    }
    ll max_score = arr[0] + calc_max_score(1, allowed_moves, max_left_moves, arr);
    cout << max_score << endl;
    memset(dp, 0, sizeof(dp));
  }
  return 0;
}
```