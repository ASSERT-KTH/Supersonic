#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
#define ll long long
#define N 100005
#define mod 1000000007
#define dd double
#define rep(i, n) for (int i = 0; i < n; i++)
#define REP(i, a, b) for (int i = a; i < b; i++)
#define rep1(i, b) for (int i = 1; i <= b; i++)
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define MAX_Z 5
ll dp[N][MAX_Z+1];

ll f(vector<int>& arr, int i, int k, int z) {
    if (k < 0 || i >= arr.size() || i < 0)
        return 0;
    if (dp[i][z] != -1)
        return dp[i][z];
    ll option1 = arr[i] + f(arr, i + 1, k - 1, z);
    ll option2 = (z > 0) ? arr[i] + f(arr, i - 1, k - 1, z - 1) : 0;
    dp[i][z] = max(option1, option2);
    return dp[i][z];
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;
    while (t--) {
        int n, k, z;
        cin >> n >> k >> z;
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        for(int i = 0; i <= n; i++) {
            for(int j = 0; j <= z; j++) {
                dp[i][j] = -1;
            }
        }
        cout << arr[0] + f(arr, 1, k, z) << "\n";
    }
    return 0;
}