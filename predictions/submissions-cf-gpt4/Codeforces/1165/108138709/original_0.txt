```c++
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
#define ms(__x__, __val__) memset(__x__, __val__, sizeof(__x__))
#define repp(i, sta, en) for (int i = sta; i >= en; --i)
typedef long long ll;
const int N = 2e5 + 7;
int n, m;
int k[N], t[N], sum;
vector<int> p, s[N];
bool check(int x) {
  ms(t, 0);
  int now = x, ned = sum, cnt = 0;
  int i = lower_bound(p.begin(), p.end(), x) - p.begin();
  repp(i, min(N - 1, x), 1) {
    now = min(now, i);
    if (now == 0 || ned == 0)
      break;
    for (auto &it : s[i]) {
      int buy = min(now, k[it] - t[it]);
      t[it] += buy;
      ned -= buy;
      now -= buy;
      cnt += buy;
    }
  }
  return x - cnt >= ned * 2;
}
void solve() {
  cin >> n >> m;
  for (int i = 1; i <= n; ++i) {
    cin >> k[i];
    sum += k[i];
  }
  for (int i = 1; i <= m; ++i) {
    int d, t;
    cin >> d >> t;
    p.push_back(d);
    s[d].push_back(t);
  }
  sort(p.begin(), p.end());
  int l = 1, r = sum * 2, ans = 1;
  while (l <= r) {
    int mid = (l + r) / 2;
    if (check(mid))
      ans = mid, r = mid - 1;
    else
      l = mid + 1;
  }
  cout << ans;
}
int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  solve();
  return 0;
}
```