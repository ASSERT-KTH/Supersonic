```cpp
#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ll;

ll gcd(ll a, ll b) {
  a = abs(a), b = abs(b);
  if (a < b)
    swap(a, b);
  return b ? gcd(b, a % b) : a;
}

ll lcm(ll a, ll b) {
  return a / gcd(a, b) * b;
}

ll pow(ll n, ll k) {
  ll ret = 1, now = n;
  while (k > 0) {
    if (k & 1)
      ret *= now;
    now *= now;
    k /= 2;
  }
  return ret;
}

ll modexp(ll n, ll k, ll md) {
  ll ret = 1, now = n % md;
  while (k > 0) {
    if (k % 2 == 1) {
      ret = (ret * now) % md;
    }
    now = (now * now) % md;
    k /= 2;
  }
  return ret;
}

ll popcount(ll n) {
  return __builtin_popcountll(n);
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(nullptr);
  ll n, t;
  cin >> n >> t;
  ll a[n], b[n + 1] = {0};
  for (ll i = 0, sum = 0; i < n; i++) {
    cin >> a[i];
    sum += a[i];
    b[i + 1] = sum;
  }
  int maxlen = 0;
  for(ll i = 1; i<=n; i++) {
    auto it = upper_bound(b, b + n + 1, b[i - 1] + t);
    maxlen = max(maxlen, static_cast<int>(it - b - i));
  }
  cout << maxlen << " ";
}
```