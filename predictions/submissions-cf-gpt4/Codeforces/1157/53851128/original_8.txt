```cpp
#include <algorithm>
#include <iostream>
#include <set>
#include <vector>
typedef long long int ll;

// Define a macro for modular addition
#define MOD_ADD(x, y, mod) ((x % mod + y % mod) % mod)

int main() {
  ll n, t;
  std::cin >> n;
  std::vector<ll> va(n), vb(n);

  for (ll i = 0; i < n; ++i) {
    std::cin >> va[i];
  }

  std::multiset<ll> stb;
  for (ll i = 0; i < n; ++i) {
    std::cin >> t;
    stb.insert(t % n);
  }

  std::vector<ll> vc(n);
  for (auto i : va) {
    auto it = stb.lower_bound((n - i) % n);
    if (it != stb.end() && MOD_ADD(*it, i, n) < MOD_ADD(*stb.begin(), i, n)) {
      vc.push_back(MOD_ADD(*it, i, n));
      stb.erase(it);
    } else {
      vc.push_back(MOD_ADD(*stb.begin(), i, n));
      stb.erase(stb.begin());
    }
  }

  for (auto i : vc) {
    std::cout << i << " ";
  }
  std::cout << std::endl;

  return 0;
}
```