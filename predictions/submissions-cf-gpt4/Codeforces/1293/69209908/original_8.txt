```cpp
#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <climits>

using namespace std;

typedef long long ll;
typedef pair<ll, ll> pll;

ll distance(pll a, pll b) {
  return abs(a.first - b.first) + abs(a.second - b.second);
}

pll next(pll temp, ll ax, ll bx, ll ay, ll by) {
  return make_pair(ax * temp.first + bx, ay * temp.second + by);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);

  ll xx, yy, ax, ay, bx, by, xs, ys, t;
  cin >> xx >> yy >> ax >> ay >> bx >> by >> xs >> ys >> t;

  vector<pll> arr;
  arr.reserve(100);
  arr.push_back({xx, yy});
  while (true) {
    pll temp = next(arr.back(), ax, bx, ay, by);
    if (temp.first > 2e18 / ax || temp.second > 2e18 / ay)
      break;
    arr.push_back(temp);
  }

  ll ans = 0;
  for (int i = 0; i < arr.size(); i++)
    for (int j = i; j < arr.size(); j++) {
      ll d = distance(arr[i], arr[j]) + min(distance({xs, ys}, arr[i]), distance({xs, ys}, arr[j]));
      if (d <= t)
        ans = max(ans, j - i + 1LL);
    }

  cout << ans;

  return 0;
}
```