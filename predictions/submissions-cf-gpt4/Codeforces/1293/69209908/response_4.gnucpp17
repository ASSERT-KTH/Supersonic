#include <iostream>
#include <vector>
#define ll long long

using namespace std;

ll xx, yy, ax, bx, ay, by, xs, ys, t;

ll dist(pair<ll, ll> a, pair<ll, ll> b) {
  return abs(a.first - b.first) + abs(a.second - b.second);
}

pair<ll, ll> next(pair<ll, ll> temp) {
  return make_pair(ax * temp.first + bx, ay * temp.second + by);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);

  cin >> xx >> yy >> ax >> ay >> bx >> by >> xs >> ys >> t;
  pair<ll, ll> temp, tx;
  vector<pair<ll, ll>> arr;
  ll vs = 0;
  temp = make_pair(xx, yy);
  tx = make_pair(xs, ys);
  ll dea = dist(temp, tx);
  if (dea <= t)
    arr.push_back(temp);
  temp = next(temp);
  if (dist(tx, temp) > dea)
    vs = 2;
  else
    vs = 1;
  
  while (vs == 1 || (vs == 2 && dist(tx, temp) <= t)) {
    dea = dist(tx, temp);
    arr.push_back(temp);
    temp = next(temp);
    if (vs == 1 && dea < dist(tx, temp))
      vs = 2;
  }
  
  ll ans = 0;
  for (size_t i = 0; i < arr.size(); ++i) {
    size_t j = i;
    ll dus = dist(tx, arr[i]);
    ll tempTx = dus;
    if (dus <= t) {
      while (j < arr.size() - 1 && dus <= t) {
        ++j;
        dus += dist(arr[j], arr[j - 1]);
      }
      ans = max(ans, dus <= t ? j - i + 1 : j - i);
      dus = tempTx;
      while (j > 0 && dus <= t) {
        --j;
        dus += dist(arr[j], arr[j + 1]);
      }
      ans = max(ans, dus <= t ? i - j + 1 : i - j);
    }
  }
  cout << ans;
}