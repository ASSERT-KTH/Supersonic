#include <iostream>
#include <vector>
#include <set>
#include <algorithm>

#define MAX 200005

using namespace std;

vector<set<int>> se(26);
char s[MAX];

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> (s + 1);
    int q;
    cin >> q;
    int len = strlen(s + 1);
    for (int i = 1; i <= len; i++) {
        se[s[i] - 'a'].insert(i);
    }
    while (q--) {
        int x;
        cin >> x;
        if (x == 1) {
            int p;
            char c;
            cin >> p >> c;
            se[s[p] - 'a'].erase(p);
            se[c - 'a'].insert(p);
            s[p] = c;
        } else if (x == 2) {
            int l, r, sum = 0;
            cin >> l >> r;
            for (int i = 0; i < 26; i++) {
                auto p = se[i].lower_bound(l);
                if (p != se[i].end() && *p <= r)
                    sum++;
            }
            cout << sum << "\n";
        }
    }
    return 0;
}