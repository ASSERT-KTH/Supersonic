```c++
#include <vector>
#include <iostream>
using namespace std;
#define ll long long int
#define mod 1000000007
#define ve vector
const ll inf = 9e18;
ll tes, n, m;
ve<string> arr(2e3 + 1);
ve<ve<ve<ll>>> cum(2e3 + 1, ve<ve<ll>>(2e3 + 1, ve<ll>(2, 0)));
ve<ve<ve<ve<ll>>>> dp(2e3 + 1,
                      ve<ve<ve<ll>>>(2e3 + 1, ve<ve<ll>>(2, ve<ll>(2, 0))));
void solve() {
  cin >> n >> m;
  for (int i=0; i<n; ++i) cin >> arr[i];
  for (int i=n-1; i>=0; --i) {
    for (int j=0; j<m; ++j) {
      cum[i][j][0] = cum[i + 1][j][0];
      if (arr[i][j] == 'R')
        cum[i][j][0]++;
    }
  }
  for (int j=m-1; j>=0; --j) {
    for (int i=0; i<n; ++i) {
      cum[i][j][1] = cum[i][j + 1][1];
      if (arr[i][j] == 'R')
        cum[i][j][1]++;
    }
  }
  for (int i=n-1; i>=0; --i) {
    for (int j=m-1; j>=0; --j) {
      if (arr[i][j] != 'R')
        dp[i][j][0][0] = dp[i][j][0][1] =
            (dp[i + 1][j][0][0] + dp[i][j + 1][0][1]) % mod;
      else if (i==n-1 && j==m-1)
        dp[i][j][0][0] = dp[i][j][0][1] = 1;
      else {
        dp[i][j][0][0] =
            (dp[i + 1][j + 1][1][0] -
             dp[n - cum[i][j][0] + 1][j + 1][1][0] +
             dp[i + 1][j + 1][1][1] - dp[i + 1][m - cum[i][j][1]][1][1] +
             (2ll * mod)) %
            mod;
        dp[i][j][0][1] =
            (dp[i + 1][j + 1][1][0] - dp[n - cum[i][j][0]][j + 1][1][0] +
             dp[i + 1][j + 1][1][1] -
             dp[i + 1][m - cum[i][j][1] + 1][1][1] +
             (2ll * mod)) %
            mod;
      }
      dp[i][j][1][0] = (dp[i + 1][j][1][0] + dp[i][j][0][0]) % mod;
      dp[i][j][1][1] = (dp[i][j + 1][1][1] + dp[i][j][0][1]) % mod;
    }
  }
  cout << dp[0][0][0][1] << endl;
}
int main(void) {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  tes = 1;
  while (tes--) {
    solve();
  }
}

```