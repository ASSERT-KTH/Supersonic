```cpp
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> pl;
typedef vector<ll> vl;
typedef vector<pl> vpl;

ll M;
vl g[200005], vis(200005);
map<pl, ll> u;

void dfs(ll node, ll pv) {
  vis[node] = 1;
  for (ll child : g[node]) {
    if (vis[child] == 0) {
      u[{node, child}] = pv;
      u[{child, node}] = pv ^ 1;
      dfs(child, pv ^ 1);
    } else {
      if (u.find({node, child}) != u.end()) {
        if (u[{node, child}] != pv) {
          M = 1;
        }
      } else {
        u[{node, child}] = pv;
        u[{child, node}] = pv ^ 1;
      }
    }
  }
}

int main() {
  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);

  ll n = 0, m = 0, j = 0, k = 0;
  cin >> n >> m;
  vpl v;
  for(ll i = 0; i < m; i++) {
    cin >> j >> k;
    g[j].push_back(k);
    g[k].push_back(j);
    v.push_back({j, k});
  }
  dfs(1, 0);
  if (M) {
    cout << "NO" << endl;
  } else {
    cout << "YES" << endl;
    for(ll i = 0; i < m; i++) { 
      cout << u[v[i]]; 
    }
  }
  return 0;
}
```