#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define fo(i, n) for (i = 0; i < n; i++)
#define pb push_back
#define mp make_pair
typedef pair<ll, ll> pl;
typedef vector<ll> vl;
typedef vector<pl> vpl;
typedef vector<vl> vvl;
const ll cons = 200005;
vl g[cons], vis(cons);
map<pl, ll> u;
bool M = 0;

void dfs(ll node, ll pv) {
  vis[node] = 1;
  for (ll child : g[node]) {
    if (!vis[child]) {
      u[mp(node, child)] = pv;
      u[mp(child, node)] = pv ^ 1;
      dfs(child, pv ^ 1);
    } else if (u.count(mp(node, child))) {
      if (u[mp(node, child)] != pv) {
        M = 1;
      }
    } else {
      u[mp(node, child)] = pv;
      u[mp(child, node)] = pv ^ 1;
    }
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  ll n = 0, m = 0, i = 0, j = 0, k = 0;
  cin >> n >> m;
  vpl v;
  fo(i, m) {
    cin >> j >> k;
    g[j].pb(k);
    g[k].pb(j);
    v.pb(mp(j, k));
  }
  dfs(1, 0);
  if (M) {
    cout << "NO" << endl;
  } else {
    cout << "YES" << endl;
    fo(i, m) { cout << u[v[i]]; }
  }
  return 0;
}