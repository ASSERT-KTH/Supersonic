#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <cmath>
#include <ctime>

using namespace std;

const int MAX = 2e5 + 5;
long long arr[MAX];
map<long long, int> factors_map;

void get_factors(long long num) {
    for (long long i = 2; i * i <= num; ++i) {
        if (num % i == 0) {
            factors_map[i] = 1;
            while (num % i == 0) {
                num /= i;
            }
        }
    }
    if (num > 1) {
        factors_map[num] = 1;
    }
}

long long check(long long num, int n) {
    long long sum = 0;
    for (int i = 0; i < n; ++i) {
        if (arr[i] >= num) {
            long long temp = arr[i] % num;
            sum += min(temp, num - temp);
        } else {
            sum += num - arr[i];
        }
    }
    return sum;
}

int main() {
    srand(time(0) + clock());
    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> arr[i];
    }
    random_shuffle(arr, arr + n);
    for (int i = 0; i < min(n, 1000); ++i) {
        for (int j = -1; j <= 1; ++j) {
            long long temp = arr[i] + j;
            if (temp > 1) {
                get_factors(temp);
            }
        }
    }
    long long ans = 1e18;
    for (auto it = factors_map.begin(); it != factors_map.end(); ++it) {
        ans = min(ans, check(it->first, n));
    }
    cout << ans << '\n';
    return 0;
}