```cpp
#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <cmath>

#define ll long long

const int M = 1e6 + 105;
bool bz[M];
std::vector<int> p;
void sieve(int n) {
    p.push_back(2);
    for (int i = 3; i <= n; i += 2) {
        if (!bz[i])
            p.push_back(i);
        for (int j = 0; i * p[j] <= n; j++) {
            int k = i * p[j];
            bz[k] = 1;
            if (i % p[j] == 0)
                break;
        }
    }
}

const int N = 2e5 + 5;
int n;
ll a[N];
std::vector<ll> u;

void factorize(ll n) {
    u.clear();
    for (size_t i = 0; i < p.size() && (ll)p[i] * p[i] <= n; i++)
        if (n % p[i] == 0) {
            u.push_back(p[i]);
            while (n % p[i] == 0)
                n /= p[i];
        }
    if (n > 1)
        u.push_back(n);
}

std::map<ll, int> w;
ll ans;

void check(ll x) {
    ll s = 0;
    for(int i = 0; i < n; i++) {
        if (a[i] >= x) {
            ll y = a[i] % x;
            s += std::min(y, x - y);
        } else
            s += x - a[i];
        if (s > ans)
            return;
    }
    ans = s;
}

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);

    sieve(1e6);
    std::cin >> n;
    for(int i = 0; i < n; i++) std::cin >> a[i];
    std::random_shuffle(a, a + n);
    for(int i = 0; i < std::min(n, 1000); i++) {
        for(int j = -1; j <= 1; j++) {
            ll x = a[i] + j;
            if (x > 1) {
                factorize(x);
                for(auto k : u) w[k] = 1;
            }
        }
    }
    ans = n;
    for(auto it : w)
        check(it.first);
    std::cout << ans << "\n";
    return 0;
}
```