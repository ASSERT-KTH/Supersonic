#include <algorithm>
#include <iostream>
#include <vector>
#define LSOne(S) ((S) & -(S))
const long long P = 1e9 + 7;
const double EPS = 1e-11;
using namespace std;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<int> v(n);
    vector<int> dp(2e5 + 1, 0);
    for (int i = 0; i < n; i++) {
      cin >> v[i];
      dp[v[i]]++;
    }
    for(int i = 1; i < dp.size(); i++) {
        for(int j = 2 * i; j < dp.size(); j += i) {
            dp[j] = max(dp[j], dp[i]);
        }
    }
    int best = *max_element(dp.begin(), dp.end());
    cout << n - best << '\n';
  }
}