```cpp
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MX = 1e5+5;
int N, Q, a[MX], b[MX], bit[MX], ans[MX], t[MX], x[MX], y[MX];
vector<int> adj[MX];
pair<int,int> queries[MX];
map<int,int> m;

void upd(int x, int v) {
    for (; x <= N; x += x&-x) bit[x] += v;
}

int query(int x) {
    int ret = 0;
    for (; x > 0; x -= x&-x) ret += bit[x];
    return ret;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin >> N;
    for (int i = 1; i <= N; i++) cin >> a[i], b[i] = a[i];
    sort(b+1,b+1+N);
    for (int i = 1; i <= N; i++) m[b[i]] = i;
    for (int i = 1; i <= N; i++) a[i] = m[a[i]];
    cin >> Q;
    for (int i = 1; i <= Q; i++) {
        cin >> t[i] >> x[i];
        if (t[i] == 1) cin >> y[i];
        else queries[x[i]].second++;
        adj[x[i]].push_back(i);
    }
    for (int i = 1; i <= N; i++) {
        for (int j: adj[i]) {
            if (t[j] == 1) ans[j] = query(a[i])-query(a[i]-1);
            else ans[j] = query(N)-query(queries[i].first-1), queries[i].first += queries[i].second, queries[i].second = 0;
        }
        upd(a[i],1);
    }
    for (int i = 1; i <= Q; i++) if (t[i] != 1) cout << ans[i] << "\n";
    return 0;
}
```