```C++
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef vector<pii> vpii;
typedef vector<vpii> vvpii;
#define sz(x) (int((x).size()))
#define all(x) (x).begin(), (x).end()
#define F0R(i, a) for (int i = 0; i < (a); i++)
#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define mp make_pair
#define pb push_back
#define f first
#define s second

const int MAXV = 61;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout << fixed << setprecision(15);

    int N;
    cin >> N;
    vi a(N);
    F0R(i, N) cin >> a[i];

    vi pri;
    FOR(v, 2, MAXV) {
        bool ok = true;
        F0R(i, sz(pri)) if (v % pri[i] == 0) ok = false;
        if (ok) pri.pb(v);
    }

    vi mask(MAXV);
    FOR(v, 1, MAXV) { F0R(i, sz(pri)) if (v % pri[i] == 0) mask[v] |= 1 << i; }

    vvpii dp(N + 1, vpii(1 << sz(pri), {INT_MAX, -1}));
    dp[0][0].f = -1;
    F0R(i, N) F0R(m, 1 << sz(pri)) if (dp[i][m].f < INT_MAX) {
        FOR(v, 1, MAXV) if (!(mask[v] & m)) {
            dp[i + 1][m ^ mask[v]] = min(dp[i + 1][m ^ mask[v]], mp(dp[i][m].f + abs(v - a[i]), v));
        }
    }

    vi b(N);
    int m = min_element(all(dp.back())) - dp.back().begin();
    F0Rd(i, N) {
        b[i] = dp[i + 1][m].s;
        m ^= mask[b[i]];
    }

    F0R(i, sz(b)) { cout << b[i] << " "; }
    cout << "\n";
    return 0;
}
```