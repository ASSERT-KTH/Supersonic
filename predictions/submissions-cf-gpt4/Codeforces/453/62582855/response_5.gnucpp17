#include <bits/stdc++.h>
#define sz(x) int((x).size())
#define all(x) (x).begin(), (x).end()
#define F0R(i, a) for (int i = 0; i < (a); i++)
#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define F0Rd(i, a) for (int i = (a)-1; i >= 0; i--)
using namespace std;
using vi = vector<int>;
using vvi = vector<vi>;
using vvpii = vector<vector<pair<int, int>>>;
int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout << fixed << setprecision(15);
  const int MAXV = 61;
  int N;
  cin >> N;
  vi a(N);
  F0R(i, N) cin >> a[i];
  vi pri;
  FOR(v, 2, MAXV) {
    bool ok = true;
    for(auto &p : pri) if (v % p == 0) ok = false;
    if (ok)
      pri.push_back(v);
  }
  vi mask(MAXV);
  FOR(v, 1, MAXV) { F0R(i, sz(pri)) if (v % pri[i] == 0) mask[v] |= 1 << i; }
  vvpii dp(N + 1, vector<pair<int, int>>(1 << sz(pri), {INT_MAX, -1}));
  dp[0][0].first = -1;
  F0R(i, N) F0R(m, 1 << sz(pri)) if (dp[i][m].first < INT_MAX) {
    FOR(v, 1, MAXV) if (!(mask[v] & m)) {
      dp[i + 1][m ^ mask[v]] = min(dp[i + 1][m ^ mask[v]], make_pair(dp[i][m].first + abs(v - a[i]), v));
    }
  }
  vi b(N);
  int m = min_element(all(dp[N])) - dp[N].begin();
  F0Rd(i, N) {
    b[i] = dp[i + 1][m].second;
    m ^= mask[b[i]];
  }
  F0R(i, N) cout << b[i] << " ";
  return 0;
}