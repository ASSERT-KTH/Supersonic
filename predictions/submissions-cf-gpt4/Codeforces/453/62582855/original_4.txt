```cpp
#include <bits/stdc++.h>
using namespace std;
#define sz(x) ((int)(x).size())
#define F0R(i, a) for (int i = 0; i < (a); i++)
#define FOR(v, a, b) for (int v = (a); v < (b); v++)
#define F0Rd(i, a) for (int i = (a)-1; i >= 0; i--)
#define mp make_pair
#define pb push_back
#define ckmin(T, a, b) a = min(a, b)

using vi = vector<int>;
using vvi = vector<vi>;
using vvpii = vector<vector<pair<int, int>>>;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  const int MAXV = 61;
  int N;
  cin >> N;
  vi a(N);
  for(int &ai : a) cin >> ai;
  vi pri;
  FOR(v, 2, MAXV) {
    bool ok = true;
    for(int p : pri) if (v % p == 0) ok = false;
    if (ok)
      pri.pb(v);
  }
  vi mask(MAXV);
  FOR(v, 1, MAXV) F0R(i, sz(pri)) if (v % pri[i] == 0) mask[v] |= 1 << i;
  vvpii dp(N + 1, vector<pair<int, int>>(1 << sz(pri), {INT_MAX, -1}));
  dp[0][0].first = -1;
  F0R(i, N) F0R(m, 1 << sz(pri)) if (dp[i][m].first < INT_MAX) {
    FOR(v, 1, MAXV) if (!(mask[v] & m)) {
      ckmin(pair<int, int>, dp[i + 1][m ^ mask[v]], mp(dp[i][m].first + abs(v - a[i]), v));
    }
  }
  vi b(N);
  int m = min_element(dp.back().begin(), dp.back().end()) - dp.back().begin();
  F0Rd(i, N) {
    b[i] = dp[i + 1][m].second;
    m ^= mask[b[i]];
  }
  for(int bi : b) cout << bi << ' ';
  cout << '\n';
  return 0;
}
```