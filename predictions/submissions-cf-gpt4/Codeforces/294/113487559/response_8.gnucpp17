#include <iostream>
#include <algorithm>
#define ll long long
#define MOD 1000000007
#define M 1001

ll a[M], pows[M], c[M][M];

ll power(ll x, ll y) {
  ll res = 1;
  x = x % MOD;
  while (y > 0) {
    if (y & 1) {
      res = (res * x) % MOD;
    }
    y >>= 1;
    x = (x * x) % MOD;
  }
  return res;
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(NULL);

  pows[0] = pows[1] = 1;
  for (ll i = 2; i < M; i++) {
    pows[i] = (pows[i - 1] * 2) % MOD;
  }

  c[0][0] = 1;
  for (int i = 1; i < M; i++) {
    c[i][0] = 1;
    for (int j = 1; j <= i; j++) {
      c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;
    }
  }

  ll m, n;
  std::cin >> n >> m;
  for (ll i = 1; i <= n; i++) {
    std::cin >> a[i];
  }
  std::sort(a + 1, a + n + 1);
  ll sum = 1;
  ll d = n - m;
  for (int i = 1; i <= m; i++) {
    sum = (sum * c[d][a[i] - a[i - 1] - 1]) % MOD;
    d -= a[i] - a[i - 1] - 1;
  }
  for (int i = 2; i <= m; i++) {
    sum = (sum * pows[a[i] - a[i - 1] - 1]) % MOD;
  }
  std::cout << sum << "\n";

  return 0;
}