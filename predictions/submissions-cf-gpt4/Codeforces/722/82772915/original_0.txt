```C++
#include <iostream>
#include <algorithm>
#include <vector>

#define N 500007
#define ll long long

using namespace std;

ll ans, a[N], vis[N], sum[N], res[N], q[N], par[N];

int root(int v) { return par[v] < 0 ? v : (par[v] = root(par[v])); }

void merge(int x, int y) {
  if ((x = root(x)) == (y = root(y)))
    return;
  ans = max(ans, sum[x] + sum[y]);
  if (par[y] < par[x])
    swap(x, y);
  par[x] += par[y];
  par[y] = x;
  sum[x] += sum[y];
}

void run() {
  int n;
  cin >> n;
  fill(a, a+n+1, 0);
  for(int i=1; i<=n; i++) cin >> a[i], sum[i] = a[i];
  fill(par, par+n+1, -1);
  fill(q, q+n+1, 0);
  for(int i=1; i<=n; i++) cin >> q[i];
  for (int i = n; i >= 1; --i) {
    res[i] = ans;
    vis[q[i]] = 1;
    ans = max(ans, a[q[i]]);
    if (vis[q[i] - 1])
      merge(q[i], q[i] - 1);
    if (vis[q[i] + 1])
      merge(q[i], q[i] + 1);
  }
  for(int i=1; i<=n; i++) cout << res[i] << "\n";
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  run();
  return 0;
}
```