```cpp
#include <iostream>
#include <algorithm>
#include <vector>
#define ll long long
using namespace std;

const int N = 5e5 + 7;
ll a[N], sum[N], par[N];
bool vis[N];
ll res[N];

int root(int v) { 
    return par[v] < 0 ? v : (par[v] = root(par[v])); 
}

void merge(int x, int y) {
    if ((x = root(x)) == (y = root(y))) 
        return;
    if (par[y] < par[x]) 
        swap(x, y);
    par[x] += par[y];
    par[y] = x;
    sum[x] += sum[y];
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin >> n;

    fill(a, a + n + 1, 0);
    fill(par, par + n + 1, -1);
    
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
        sum[i] = a[i];
    }
    vector<int> q(n+1);
    for (int i = 1; i <= n; ++i) {
        cin >> q[i];
    }
    ll ans = 0;
    for (int i = n; i >= 1; --i) {
        res[i] = ans;
        vis[q[i]] = true;
        ans = max(ans, a[q[i]]);
        if (q[i] - 1 >= 1 && vis[q[i] - 1])
            merge(q[i], q[i] - 1);
        if (q[i] + 1 <= n && vis[q[i] + 1])
            merge(q[i], q[i] + 1);
        ans = max(ans, sum[root(q[i])]);
    }
    for (int i = 1; i <= n; ++i) 
        cout << res[i] << "\n";
    
    return 0;
}
```