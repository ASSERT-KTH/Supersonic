#include <algorithm>
#include <vector>
#include <iostream>
using namespace std;
#define int long long
vector<int> x, ans;
vector<pair<int, int>> v;
int n;
inline void readInt(int &a) {
  cin >> a;
}
inline void writeInt(int a) {
  cout << a << '\n';
  cout.flush();
}
bool query(int index1, int index2) {
  cout << "AND " << index1 + 1 << " " << index2 + 1 << "\n";
  cout.flush();
  int a;
  readInt(a);
  return a;
}
signed main() {
  ios::ios_base::sync_with_stdio(false);
  readInt(n);
  x.resize(n);
  ans.resize(n);
  v.resize(n);
  for (int i = 2; i <= n; i++) {
    cout << "XOR " << 1 << " " << i << "\n";
    cout.flush();
    readInt(x[i - 1]);
    v[i - 1] = {x[i - 1], i - 1};
  }
  sort(v.begin(), v.end());
  bool b = false;
  int index1, index2;
  for (int i = 0; i < n - 1; i++)
    if (v[i].first == v[i + 1].first) {
      b = true;
      index1 = v[i].second;
      index2 = v[i + 1].second;
      break;
    }
  if (b) {
    ans[0] = query(index1, index2) ^ x[index1];
    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }
    cout << "! ";
    for (int i = 0; i < n; i++) {
      writeInt(ans[i]);
    }
  } else {
    ans[0] = query(1, v[1].second + 1);
    ans[0] |= query(1, v[n - 2].second + 1);
    for (int i = 1; i < n; i++) {
      ans[i] = ans[0] ^ x[i];
    }
    cout << "! ";
    for (int i = 0; i < n; i++) {
      writeInt(ans[i]);
    }
  }
}