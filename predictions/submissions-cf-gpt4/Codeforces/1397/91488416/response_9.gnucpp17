#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <limits>

using namespace std;
using ll = long long;

void testcase() {
  int n;
  cin >> n;
  vector<ll> vec(n);
  ll sum = 0;
  for (int i = 0; i < n; i++) {
    cin >> vec[i];
    sum += vec[i];
  }
  sort(vec.begin(), vec.end());

  ll min_count = numeric_limits<ll>::max();
  for (ll x = 1;; x++) {
    ll current_count = 0;
    ll power = 1;
    for (int i = 0; i < n; i++) {
      current_count += abs(power - vec[i]);
      if (current_count > min_count) {
        break;
      }
      if (i + 1 < n) {
        if (log(pow(10,18)) / (i+1) < log(x)) {
          return;
        }
        power *= x;
      }
    }
    min_count = min(min_count, current_count);
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  testcase();
  return 0;
}