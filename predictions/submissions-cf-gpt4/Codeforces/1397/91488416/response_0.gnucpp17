#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;
using ll = long long;
const ll INF = 1e18;

void testcase();

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  testcase();
  return 0;
}

void testcase() {
  int n;
  cin >> n;
  vector<ll> vec(n);
  ll sum = 0;
  for (int i = 0; i < n; i++) {
    cin >> vec[i];
    sum += vec[i];
  }
  sort(vec.begin(), vec.end());
  ll min_diff = INF;
  for (ll c = 1; ; c++) {
    ll newcount = 0;
    ll xx = 1;
    for (int i = 0; i < n; i++) {
      newcount += abs(xx - vec[i]);
      if (newcount >= min_diff) break;
      xx *= c;
    }
    if (newcount < min_diff)
      min_diff = newcount;
    else 
      break;
  }
  min_diff = min({min_diff, sum - n, sum});
  cout << min_diff << endl;
}