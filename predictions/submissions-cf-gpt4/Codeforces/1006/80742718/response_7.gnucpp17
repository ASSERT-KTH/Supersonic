#include <iostream>
#include <unordered_map>
typedef long long ll;
typedef std::unordered_map<ll, int> map;
const int N = 29;
ll k, grid[N][N];
map mp[N][N];
int n, m;
int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cin >> n >> m >> k;
  for (int i = 1; i <= n; i++)
    for (int j = 1; j <= m; j++)
      std::cin >> grid[i][j];
  ll ans = 0;
  int num = (n + m - 2) >> 1;
  for (int i = 0; i < (1 << num); i++) {
    int row = 1, col = 1;
    ll x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j))
        row++;
      else
        col++;
      x ^= grid[row][col];
    }
    mp[row][col][x]++;
  }
  num = n + m - 2 - num;
  for (int i = 0; i < (1 << num); i++) {
    int row = n, col = m;
    ll x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j))
        row--;
      else
        col--;
      if (row < 1 || col < 1)
        break;
      x ^= grid[row][col];
    }
    if (row >= 1 && col >= 1) {
      x ^= grid[row][col];
      ans += mp[row][col][x ^ k];
    }
  }
  std::cout << ans << std::endl;
  return 0;
}