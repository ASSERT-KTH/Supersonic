```c++
#include <iostream>
#include <vector>
#include <map>
using namespace std;
typedef long long ll;
const int N = 29;
ll k, grid[N][N];
map<ll, int> mp[N][N];
int n, m;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cin >> n >> m >> k;
  for (int i = 1; i <= n; i++)
    for (int j = 1; j <= m; j++)
      cin >> grid[i][j];
  ll ans = 0;
  int num = (n + m - 2 + 1) / 2;
  for (int i = 0; i < (1 << num); i++) {
    int row = 1, col = 1;
    ll x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j))
        row++;
      else
        col++;
      x ^= grid[row][col];
    }
    mp[row][col][x]++;
  }
  num = n + m - 2 - num;
  for (int i = 0; i < (1 << num); i++) {
    int row = n, col = m;
    ll x = grid[row][col];
    for (int j = 0; j < num; j++) {
      if (i & (1 << j))
        row--;
      else
        col--;
      if (row < 1 || col < 1)
        break;
      x ^= grid[row][col];
    }
    if (row >= 1 && col >= 1) {
      x ^= grid[row][col];
      ans += mp[row][col][x ^ k];
    }
  }
  cout << ans << endl;
  return 0;
}
```