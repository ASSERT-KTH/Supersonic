#include <bits/stdc++.h>
#define int long long
using namespace std;
const int mx = 3e5 + 10;
vector<int> del[mx];

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int tc = 1, i, j, k;
  while (tc--) {
    int a, b;
    cin >> a >> b;
    vector<pair<int, int>> dif, v;
    vector<int> pre(a), suf(a);
    int x, y;
    for (i = 0; i < a; i++) {
      cin >> x >> y;
      v.emplace_back(x, y);
      dif.emplace_back(y - x, i);
    }
    sort(dif.begin(), dif.end());
    for (i = 0; i < a; i++) {
      k = dif[i].second;
      suf[i] = v[k].second;
      if (i) suf[i] += suf[i - 1];
    }
    for (i = a - 1; i >= 0; i--) {
      k = dif[i].second;
      pre[i] = v[k].first;
      if (i != a - 1) pre[i] += pre[i + 1];
    }
    for (i = 0; i < b; i++) {
      cin >> x >> y;
      k = v[x - 1].second - v[x - 1].first;
      int m = v[y - 1].second - v[y - 1].first;
      int value = k <= m ? v[x - 1].first + v[y - 1].second : v[x - 1].second + v[y - 1].first;
      del[x].push_back(value);
      del[y].push_back(value);
      k = del[x].size();
      if (k > 1) del[x][k - 1] += del[x][k - 2];
      k = del[y].size();
      if (k > 1) del[y][k - 1] += del[y][k - 2];
    }
    for (i = 0; i < a; i++) {
      int ans = 0;
      k = v[i].second - v[i].first;
      k = upper_bound(dif.begin(), dif.end(), make_pair(k, LLONG_MAX)) - dif.begin();
      if (k - 1 >= 0) ans = suf[k - 1] + ((k - 1) * v[i].first) - v[i].second;
      if (k < a) ans += pre[k] + (a - k) * v[i].second;
      if (!del[i + 1].empty()) ans -= del[i + 1].back();
      cout << ans << "\n";
    }
  }
  return 0;
}