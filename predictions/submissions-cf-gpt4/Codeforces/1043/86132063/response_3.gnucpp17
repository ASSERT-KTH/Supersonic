#include <bits/stdc++.h>

#define int long long
#define endl '\n'
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define ff first
#define ss second

using namespace std;

const int mx = 3e5 + 10;
vector<int> del[mx];

int main() {
    fast
    int tc = 1, i, j, k;
    while (tc--) {
        int a, b;
        cin >> a >> b;
        vector<pair<int, int>> dif(a);
        vector<int> pre(a), suf(a);
        vector<pair<int, int>> v(a);
        int x, y;
        for (i = 0; i < a; i++) {
            cin >> x >> y;
            v[i] = {x, y};
            dif[i] = {y - x, i};
        }
        sort(dif.begin(), dif.end());
        for (i = 0; i < a; i++) {
            k = dif[i].ss;
            suf[i] = v[k].ss;
            if (i)
                suf[i] += suf[i - 1];
        }
        for (i = a - 1; i >= 0; i--) {
            k = dif[i].ss;
            pre[i] = v[k].ff;
            if (i != a - 1)
                pre[i] += pre[i + 1];
        }
        for (i = 0; i < b; i++) {
            cin >> x >> y;
            --x; --y;
            k = v[x].ss - v[x].ff;
            int m = v[y].ss - v[y].ff;
            if (m <= k) {
                del[x].push_back(v[x].ff + v[y].ss);
                del[y].push_back(v[x].ff + v[y].ss);
            } else {
                del[x].push_back(v[x].ss + v[y].ff);
                del[y].push_back(v[x].ss + v[y].ff);
            }
            if (del[x].size() > 1)
                del[x].back() += del[x][del[x].size() - 2];
            if (del[y].size() > 1)
                del[y].back() += del[y][del[y].size() - 2];
        }
        for (i = 0; i < a; i++) {
            int ans = 0;
            k = v[i].ss - v[i].ff;
            k = upper_bound(dif.begin(), dif.end(), make_pair(k, INT_MAX)) - dif.begin();
            if (k > 0)
                ans = suf[k - 1] + ((k - 1) * v[i].ff) - v[i].ss;
            if (k < a) {
                ans += pre[k] + (a - k) * v[i].ss;
            }
            if (!del[i].empty())
                ans -= del[i].back();
            cout << ans << endl;
        }
    }
    return 0;
}