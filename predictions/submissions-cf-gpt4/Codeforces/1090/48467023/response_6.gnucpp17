#include <iostream>
#include <vector>
#include <algorithm>
#include <cassert>
using namespace std;

typedef long long ll;
typedef pair<int, ll> pil;
typedef pair<ll, ll> pll;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);

    int n; cin >> n;
    vector<pil> a(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i].first;
        if (a[i].first > 1)
            cin >> a[i].second;
    }

    vector<pll> res(n+1, { -1, -1 });
    res[0] = { 0, 0 };
    for (int i = 0; i < n; ++i) {
        if (a[i].first == 1) {
            res[i+1] = { 1, res[i].second + 1 };
        } else if (a[i].first == 2) {
            res[i+1] = res[a[i].second-1];
            res[i+1].second = max(res[i+1].second, res[i].second);
        } else if (a[i].first == 3) {
            if (res[i].first > res[a[i].second-1].first)
                res[i+1] = res[i];
            else
                res[i+1] = res[a[i].second-1];
            res[i+1].second = max(res[i+1].second, res[i].second);
        }
    }

    cout << res[n].second << '\n';
    for (int i = 0; i < n; ++i)
        if (res[i+1].second != res[i].second)
            cout << i+1 << ' ';
    cout << '\n';

    return 0;
}