#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    int n;
    cin >> n;

    vector<int> qs(n);
    for (int i = 0; i < n; ++i) {
        cin >> qs[i];
        if (qs[i] > 1)
            cin >> qs[i];
        if (qs[i] == 5)
            cin >> qs[i];
    }

    vector<int> dead(n, -2);
    vector<int> ps(n, 0);
    for (int i = 0; i < n; ++i) {
        int tp = qs[i];
        int a = qs[i], b = qs[i];
        a--, b--;
        if (tp == 1) {
            dead[i] = -2;
            ps[i] = 0;
        } else if (tp == 2) {
            if (dead[a] < 0)
                ps[a]++;
        } else if (tp == 3) {
            if (dead[a] < 0) 
                ps[a]++;
        } else if (tp == 4) {
            dead[i] = -2;
            ps[i] = ps[a];
            if (dead[a] >= 0)
                dead[i] = i;
        } else {
            if (dead[a] < 0 && dead[b] < 0) {
                if (ps[a] > ps[b])
                    dead[a] = i;
                if (ps[b] > ps[a])
                    dead[b] = i;
            }
        }
    }

    cout << count(dead.begin(), dead.end(), -2) << endl;
    for (int i = 0; i < n; i++)
        if (dead[i] >= 0)
            cout << dead[i] + 1 << " ";
    cout << endl;

    return 0;
}