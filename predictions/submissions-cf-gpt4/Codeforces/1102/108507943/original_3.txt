```c++
#include <iostream>
#include <vector>
#include <string>

#define int long long

void optimize(string &s, int x, int n, int dir, vector<int> &count) {
  if(dir == 1) {
    for (int i = 0; i < n; i++) {
      if (count[x] < n / 3 && s[i] - '0' > x && count[s[i] - '0'] > n / 3) {
        count[x]++;
        count[s[i] - '0']--;
        s[i] = x + '0';
      }
    }
  } else {
    for (int i = n - 1; i >= 0; i--) {
      if (count[x] < n / 3 && s[i] - '0' < x && count[s[i] - '0'] > n / 3) {
        count[x]++;
        count[s[i] - '0']--;
        s[i] = x + '0';
      }
    }
  }
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  std::cout.tie(nullptr);

  int n;
  std::vector<int> count(3, 0);
  std::string s;

  std::cin >> n;
  std::cin >> s;

  for (int i = 0; i < n; i++) {
    count[s[i] - '0']++;
  }

  optimize(s, 0, n, 1, count);
  optimize(s, 1, n, 1, count);
  optimize(s, 2, n, -1, count);
  optimize(s, 1, n, -1, count);

  std::cout << s;
  return 0;
}
```