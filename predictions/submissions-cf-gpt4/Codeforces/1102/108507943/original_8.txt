```cpp
#include <array>
#include <iostream>
#include <string>

constexpr int Mod = 10000007;

void balance(std::string& s, int target_digit, int n, std::array<int, 3>& count) {
    int start = (target_digit == 0 || target_digit == 2) ? 0 : n - 1;
    int end = (target_digit == 0 || target_digit == 2) ? n : -1;
    int step = (target_digit == 0 || target_digit == 2) ? 1 : -1;

    for (int i = start; i != end; i += step) {
        int current_digit = s[i] - '0';
        if (count[target_digit] < n / 3 && current_digit != target_digit && count[current_digit] > n / 3) {
            count[target_digit]++;
            count[current_digit]--;
            s[i] = target_digit + '0';
        }
    }
}

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);

    int n;
    std::cin >> n;

    std::string s;
    std::cin >> s;

    std::array<int, 3> count{};
    for (char c : s) {
        count[c - '0']++;
    }

    balance(s, 0, n, count);
    balance(s, 1, n, count);
    balance(s, 2, n, count);

    std::cout << s;
}
```