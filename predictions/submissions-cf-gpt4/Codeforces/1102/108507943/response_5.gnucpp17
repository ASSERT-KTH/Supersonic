#include <vector>
#include <string>
#include <iostream>

constexpr int Mod = 10000007;
using namespace std;

void forward(string& s, int x, int n, vector<int>& count) {
  int limit = n / 3;
  for (int i = 0; i < n && count[x] < limit; ++i) {
    int s_val = s[i] - '0';
    if (s_val > x && count[s_val] > limit) {
      ++count[x];
      --count[s_val];
      s[i] = x + '0';
    }
  }
}

void backward(string& s, int x, int n, vector<int>& count) {
  int limit = n / 3;
  for (int i = n - 1; i >= 0 && count[x] < limit; --i) {
    int s_val = s[i] - '0';
    if (s_val < x && count[s_val] > limit) {
      ++count[x];
      --count[s_val];
      s[i] = x + '0';
    }
  }
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.tie(nullptr);

  int n;
  vector<int> count(3, 0);
  string s;
  cin >> n;
  cin >> s;
  for (char c : s) {
    ++count[c - '0'];
  }
  forward(s, 0, n, count);
  forward(s, 1, n, count);
  backward(s, 2, n, count);
  backward(s, 1, n, count);
  cout << s;
  return 0;
}