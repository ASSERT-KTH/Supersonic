#include <vector>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <iostream>
#define MAX 18000000

bool pr[MAX + 100];
std::vector<int> pint, f;

void fac(int x) {
  f.clear();
  for (auto i : pint) {
    if (x % i != 0) continue;
    if (i * i > x) break;
    while (x % i == 0) x /= i;
    f.push_back(i);
  }
  if (x != 1) f.push_back(x);
}

int solve(int val) {
  int ret = 0, lim = 1 << f.size();
  for (int j = 1; j < lim; ++j) {
    int tp = 1, ct = 0;
    for (int i = 0; i < (int)f.size(); ++i) {
      if ((j >> i) & 1) {
        tp *= f[i];
        ++ct;
      }
    }
    ret += (ct & 1 ? 1 : -1) * val / tp;
  }
  return val - ret;
}

int main() {
  int cas, x, p, k;
  std::fill(pr, pr + MAX, true);
  pr[0] = pr[1] = false;
  for (int i = 2; i * i <= MAX; ++i)
    if (pr[i])
      for (int j = i * i; j <= MAX; j += i)
        pr[j] = false;
  for (int i = 2; i <= MAX; ++i)
    if (pr[i]) pint.push_back(i);
  std::cin >> cas;
  while (cas--) {
    scanf("%d%d%d", &x, &p, &k);
    fac(p);
    int a1 = solve(x), L = x + 1, R = MAX, ans = 0;
    while (L <= R) {
      int mid = (L + R) >> 1;
      if (solve(mid) - a1 >= k)
        R = mid - 1, ans = mid;
      else
        L = mid + 1;
    }
    printf("%d\n", ans);
  }
  return 0;
}