```c++
#include <bits/stdc++.h>
#define fi first
#define se second
using namespace std;
typedef long long lll;
const lll NR = 5e5 + 10;
vector<lll> v[NR];
lll n, sz[NR], big[NR];
lll ans[NR], c[NR];
unordered_map<lll, lll> mapp;

void dfs1(lll nod, lll prt) {
  sz[nod] = 1;
  for (auto it : v[nod]) {
    if (it == prt)
      continue;
    dfs1(it, nod);
    sz[nod] += sz[it];
    big[nod] = max(big[nod], sz[it]);
  }
}

void dfs2(lll nod, lll prt, lll &l_max) {
  lll nod_boss = -1, l = 0, max_ = 0, sum = 0;
  for (auto it : v[nod]) {
    if (it == prt)
      continue;
    if (big[nod] == sz[it]) {
      nod_boss = it;
      dfs2(it, nod, l);
      sum = ans[it];
      max_ = l;
      break;
    }
  }
  mapp[c[nod]] += 1;
  if (mapp[c[nod]] == max_) {
    sum += c[nod];
  }
  if (mapp[c[nod]] > max_) {
    max_ = mapp[c[nod]];
    sum = c[nod];
  }
  for (auto it : v[nod]) {
    if (it == prt || it == nod_boss)
      continue;
    dfs2(it, nod, l);
    for (auto &it2 : mapp) {
      if (mapp[it2.first] == max_) {
        sum += it2.first;
      }
      if (mapp[it2.first] > max_) {
        max_ = mapp[it2.first];
        sum = it2.first;
      }
    }
  }
  l_max = max_;
  ans[nod] = sum;
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  lll i, x, y;
  cin >> n;
  for (i = 1; i <= n; ++i) {
    cin >> c[i];
  }
  for (i = 1; i < n; ++i) {
    cin >> x >> y;
    v[x].push_back(y);
    v[y].push_back(x);
  }
  dfs1(1, 0);
  dfs2(1, 0, x);
  for (i = 1; i <= n; ++i)
    cout << ans[i] << ' ';
  cout << '\n';
  return 0;
}
```