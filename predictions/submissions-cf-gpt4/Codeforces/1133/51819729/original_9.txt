```C++
#include <bits/stdc++.h>

using namespace std;

typedef pair<int, int> ii;

vector<int> adjList[200010];
vector<ii> edgeList;
set<ii> MST;
int deg[200010], par[200010];
bool vis[200010], deleted[200010];

bool cmp(const int &a, const int &b) {
    if (deg[a] != deg[b]) return deg[a] < deg[b];
    return a < b;
}

void DFS(int u) {
    vis[u] = true;
    for (int v : adjList[u]) {
        if (!vis[v]) {
            par[v] = u;
            DFS(v);
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n, m, k;
    cin >> n >> m >> k;
    for (int i = 0; i < m; i++) {
        int u, v;
        cin >> u >> v;
        deg[u]++;
        deg[v]++;
        adjList[u].push_back(v);
        adjList[v].push_back(u);
        edgeList.emplace_back(u, v);
    }

    sort(adjList[1].begin(), adjList[1].end(), cmp);
    for (int v : adjList[1]) {
        if (par[v]) continue;
        par[v] = 1;
        if (deg[v] > 1) DFS(v);
        if (--k == 0) break;
    }

    if (k > 0) {
        cout << "NO\n";
        return 0;
    }

    for (int i = 1; i <= n; i++) {
        if (!par[i]) continue;
        for (int v : adjList[i]) {
            if (!par[v]) {
                par[v] = i;
                DFS(v);
            }
        }
    }

    for (int i = 2; i <= n; i++) {
        if (!par[i]) {
            cout << "NO\n";
            return 0;
        }
    }

    cout << "YES\n";
    for (int i = 2; i <= n; i++) {
        int u = min(i, par[i]), v = max(i, par[i]);
        cout << u << " " << v << "\n";
    }

    return 0;
}
```