```c++
#include <iostream>
#include <unordered_map>
#include <vector>
#include <cmath>
using namespace std;

bool isPrime(int n) {
  if (n <= 1)
    return false;
  int sqrtN = static_cast<int>(sqrt(n));
  for (int i = 2; i <= sqrtN; i++) {
    if (n % i == 0)
      return false;
  }
  return true;
}

void solve() {
  int n;
  cin >> n;
  vector<int> a(n);
  unordered_map<int, pair<int, int>> m;
  for (int i = 0; i < n; i++) {
    cin >> a[i];
    if (m.find(a[i]) == m.end()) {
      m[a[i]] = make_pair(i, 1);
    } else {
      m[a[i]].second++;
    }
  }
  for (const auto& kv : m) {
    if (kv.second.second == 1) {
      cout << kv.second.first + 1 << endl;
      return;
    }
  }
  cout << -1 << endl;
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  int t;
  cin >> t;
  while (t--)
    solve();
}
```