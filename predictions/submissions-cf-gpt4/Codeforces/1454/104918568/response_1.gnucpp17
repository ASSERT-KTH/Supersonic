#include <iostream>
#include <unordered_map>
#include <cmath>
using namespace std;

bool isPrime(int n) {
    if (n <= 1)
        return false;
    int sqrtN = static_cast<int>(sqrt(n));
    for (int i = 2; i <= sqrtN; ++i) {
        if (n % i == 0)
            return false;
    }
    return true;
}

void solve() {
    int n;
    cin >> n;
    unordered_map<int, pair<int, int>> m;
    int x;
    for (int i = 0; i < n; ++i) {
        cin >> x;
        if (m.find(x) == m.end())
            m[x] = {i, 1};
        else
            m[x].second++;
    }
    for (auto& it : m) {
        if (it.second.second == 1) {
            cout << it.second.first + 1 << endl;
            return;
        }
    }
    cout << -1 << endl;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int t;
    cin >> t;
    while (t--)
        solve();
}